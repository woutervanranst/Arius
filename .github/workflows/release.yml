name: Arius Release

on:
  # Runs when main gets a tag
  push:
    # paths:
    #   - 'src/Arius.Core/**'
    # branches:
    #     - main
    tags:
      - 'v*'

jobs:
  test:
    name: Run Test Suite on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 15
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
    defaults:
      run:
        working-directory: ./src

    steps:
    - name: Check out code
      uses: actions/checkout@v3
      with:
        submodules: true # Check out WouterVanRanst.Utils

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x

    - name: Cache .NET packages
      uses: actions/cache@v3
      with:
        path: |
          ~/.nuget/packages
          !~/.nuget/packages/**/project.assets.json
          !~/.nuget/packages/**/project.nuget.cache
        key: ${{ runner.os }}-dotnet-${{ hashFiles('**/Arius.Core.csproj') }}
        restore-keys: |
          ${{ runner.os }}-dotnet-

    - name: Test
      run: |
        # dotnet test Arius.Core.BehaviorTests /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
        # dotnet test Arius.Core.Tests /p:CollectCoverage=true /p:CoverletOutputFormat=opencover
      env:
        ARIUS_ACCOUNT_NAME: ariusci
        ARIUS_ACCOUNT_KEY: ${{ secrets.ARIUS_ACCOUNT_KEY }}


  publish_nuget:
    name: Arius.Core - Publish NuGet package
    needs: test
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      with:
        submodules: true # Check out WouterVanRanst.Utils

    - name: Setup .NET Core
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: 7.x

    - name: Get version from tag
      id: get_version
      run: echo "VERSION=${GITHUB_REF/refs\/tags\/v/}" >> $GITHUB_OUTPUT

    - name: Build NuGet Package
      run: dotnet pack Arius.Core --configuration Release /p:Version=${{ steps.get_version.outputs.VERSION }}

    - name: Publish NuGet Package
      run: dotnet nuget push ./src/Arius.Core/bin/Release/Arius.Core.*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

    - name: Wait for NuGet package to be available
      run: |
        sudo apt-get update
        sudo apt-get install -y jq

        PACKAGE_NAME=WouterVanRanst.Arius.Core
        VERSION=${{ github.ref }}
        end=$((SECONDS+900))
        while [ $SECONDS -lt $end ]; do
          RESPONSE=$(curl -s "https://api.nuget.org/v3-flatcontainer/${PACKAGE_NAME}/index.json")
          if echo "$RESPONSE" | jq -e --arg version "$VERSION" '.versions[] | select(. == $version)' > /dev/null; then
            echo "Package $PACKAGE_NAME version $VERSION is available!"
            break
          fi
          sleep 10
        done


  build_windows_ui:
    name: Arius.UI - Publish ClickOnce
    needs: publish_nuget
    runs-on: windows-latest
    timeout-minutes: 15

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        # with:
        #   submodules: true # Check out WouterVanRanst.Utils

      - name: Setup Git
        run: |
          git config --global url."https://user:${{ secrets.GITHUB_TOKEN }}@github".insteadOf https://github
          git config --global user.name github-actions
          git config --global user.email github-actions@github.com          

      - name: Run release script
        shell: pwsh
        run: ./.github/workflows/release.ps1