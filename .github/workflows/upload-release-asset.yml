on:
  push:
    # Sequence of patterns matched against refs/tags
    tags:
    - 'v*' # Push events to matching v*, i.e. v1.0, v20.15.10
  workflow_dispatch:
    inputs:
      #logLevel:
      #  description: 'Log level'     
      #  required: true
      #  default: 'warning'
      tags:
        description: 'Test scenario tags' 

name: Upload Release Asset

jobs:
  build:
    defaults:
      run:
        working-directory: ./Arius
        
    name: Upload Release Asset
    runs-on: ubuntu-latest
    steps:
    - name: Check out code
      uses: actions/checkout@v2
          
#    - name: Setup .NET Core
#      uses: actions/setup-dotnet@v1
#      with:
#        dotnet-version: 3.1.301
  
#    - name: Install dependencies
#      run: dotnet restore

#    - name: Build
#      run: dotnet build --configuration Release --no-restore
   
#    - name: Test
#      run: dotnet test --no-restore --verbosity normal
      
#    - name: Publish
#      run: dotnet publish
      
      # - name: Build project # This would actually build your project, using zip for an example artifact
      #  run: dotnet publish
      #    # |
      #    #zip --junk-paths my-artifact README.md
 
    - name: Publish with dotnet
      run: dotnet publish -c Release -o ./artifacts
      
    - name: Zip artifacts
      run: |
        zip -r ./release.zip /home/runner/work/Arius/Arius/Arius/artifacts/
        
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
        
    - name: Setup tmate session
      uses: mxschmitt/action-tmate@v3
    
    - name: Upload Release Asset
      id: upload-release-asset 
      uses: actions/upload-release-asset@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ steps.create_release.outputs.upload_url }} # This pulls from the CREATE RELEASE step above, referencing it's ID to get its outputs object, which include a `upload_url`. See this blog post for more info: https://jasonet.co/posts/new-features-of-github-actions/#passing-data-to-future-steps 
        asset_path: ./release.zip
        asset_name: release.zip
        asset_content_type: application/zip
