name: Arius.Tests

on:
  push:
    paths: 
      - 'Arius/**'
      - '.github/**'
    # branches: [ master ]
  pull_request:
    paths:       
      - 'Arius/**'
    branches: [ master ]
  workflow_dispatch:
    inputs:
      #logLevel:
      #  description: 'Log level'     
      #  required: true
      #  default: 'warning'
      tags:
        description: 'Test scenario tags'  
        
        # TODO ON BRANCH MERGE

jobs:
  Build:
    defaults:
      run:
        working-directory: ./Arius

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1
      
      - name: Setup .NET Core
        uses: actions/setup-dotnet@v1
        with:
          dotnet-version: 5.0.x

      - name: Setup Prereqs
        run: |
          apt-get update && apt-get install -y \
          wget \
          tar \
          p7zip-full
          wget https://aka.ms/downloadazcopy-v10-linux
          tar -xvf downloadazcopy-v10-linux
          sudo cp ./azcopy_linux_amd64_*/azcopy /usr/bin/

      - name: Test
        run: dotnet test -l "console;verbosity=detailed" # -v normal
        env:
          ARIUS_ACCOUNT_NAME: ariusci
          ARIUS_ACCOUNT_KEY: ${{ secrets.ARIUS_ACCOUNT_KEY }}
          

      # - name: Publish with dotnet
      #   run: dotnet publish -c Release Arius -o ./artifacts

      #   # For SSH / debug        
      # - name: Setup tmate session
      #   uses: mxschmitt/action-tmate@v3

      # - name: Zip artifacts
      #   run: |
      #     zip -r ./release.zip /home/runner/work/Arius/Arius/Arius/artifacts/
      
      # - name: Create release
      #   id: create_release
      #   uses: actions/create-release@v1.0.0
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     tag_name: ${{ github.ref }}
      #     release_name: Release ${{ github.ref }}
      #     draft: false
      #     prerelease: false
    
      # - name: Upload Release Asset
      #   id: upload-release-asset
      #   uses: actions/upload-release-asset@v1.0.1
      #   env:
      #     GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      #   with:
      #     upload_url: ${{ steps.create_release.outputs.upload_url }}
      #     asset_path: ./release.zip
      #     asset_name: release.zip
      #     asset_content_type: application/zip