@startuml

class Facade {
 + ForStorageAccount(name, key)
}

class StorageAccountFacade {
 + GetContainerNames()
 + ForRepositoryAsync(container, passphrase)
}

class RepositoryFacade {
 + GetVersions()
 + ExecuteArchiveCommand()
}

class Repository {

}

Facade --> StorageAccountFacade : "creates a"
StorageAccountFacade --> RepositoryFacade : "creates a"
RepositoryFacade --o Repository : "has a"

class StorageAccountOptions {
 - AccountName
 - AccountKey
}

class RepositoryOptions {
 - ContainerName
 - Passphrase
}

class ArchiveCommandOptions {
 - FastHash
 - RemoveLocal
 - Tier
 - Dedup
 - Path
 - VersionUtc
 + init(Repository)
}

RepositoryOptions -u-|> StorageAccountOptions
ArchiveCommandOptions -u-|> RepositoryOptions 
ArchiveCommandOptions --> Repository : "initialized using a"

class ArchiveCommand {
 + Execute(ArchiveCommandOptions)
}

ArchiveCommand -- ArchiveCommandOptions

object ChunkList
object Chunk
object State
object PointerFileEntry
object BinaryHash
object ChunkHash
object FileBase
object PointerFile
object BinaryFile

Repository --o ChunkList : "has many"
Repository --o Chunk : "has many"
Repository --o State : "has many"

ChunkList --o ChunkHash : "contains multiple"
ChunkHash -- Chunk : "refers to"

State --o PointerFileEntry : "contains multiple"

PointerFileEntry --o BinaryHash : "refers to a"

ChunkList --o BinaryHash : "has a"

PointerFile -u-* FileBase : "is a"
BinaryFile -u-* FileBase : "is a"

FileBase -u-o BinaryHash : "has a"

BinaryFile --o ChunkHash : "has a"

BinaryHash --* ChunkHash : "is a"


@enduml