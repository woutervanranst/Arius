@startuml

' --- MODELS

rectangle "use FileService" as FileService{
    abstract class FileBase{
        +BinaryHash: Hash
    }
    class PointerFile
    class BinaryFile
}

interface IChunk{
    +ChunkHash: ChunkHash
}
class MemoryChunk

class Hash {
 -Value: string
 +ToString()
 +ToShortString()
}
class ChunkHash
class BinaryHash

abstract class BlobBase {
 - ChunkHash : ChunkHash
}
abstract class ChunkBlobBase
class ChunkBlobItem
class ChunkBlobBaseClient

rectangle "use FileSystemService" as FileSystemService {
    abstract class FileInfoBase
    class PointerFileInfo {
        BinaryFileFullName : string
        {static} GetBinaryFileName(pointerFileName) : string
    }
    class BinaryFileInfo
}

' --- OPERATIONS 
class Facade {
 + ForStorageAccount(name, key)
}

class StorageAccountFacade {
 + GetContainerNames()
 + ForRepositoryAsync(container, passphrase)
}

class RepositoryFacade {
 + GetVersions()
 + ExecuteArchiveCommand()
}

class Repository

class StorageAccountOptions {
 - AccountName
 - AccountKey
}

class RepositoryOptions {
 - ContainerName
 - Passphrase
}

class ArchiveCommandOptions {
 - FastHash
 - RemoveLocal
 - Tier
 - Dedup
 - Path
 - VersionUtc
 + ctor(Repository, ...)
}

class ArchiveCommand {
 + Execute(ArchiveCommandOptions)
}


' --- MODELS RELATIONSHIPS
Repository --o ChunkList : "has many"
Repository --o Chunk : "has many"
Repository --o State : "has many"

ChunkList --o ChunkHash : "contains multiple"
ChunkHash -- Chunk : "refers to"

State --o PointerFileEntry : "contains multiple"

PointerFileEntry --o BinaryHash : "refers to a"

ChunkList --o BinaryHash : "has a"

FileBase -u-o BinaryHash : "has a"

BinaryFile --o ChunkHash : "has a"


FileBase <|-- PointerFile

FileBase <|-- BinaryFile
BinaryFile..u|>IChunk

IChunk <|.. MemoryChunk

ChunkBlobBase -u-|> BlobBase
ChunkBlobBase .u.|> IChunk
ChunkBlobItem -u-* ChunkBlobBase : "is a"
ChunkBlobBaseClient -u-* ChunkBlobBase : "is a"

ChunkHash -r-|> Hash
BinaryHash -r-|> ChunkHash : "is a"

IChunk -u-o ChunkHash : "has a"
BlobBase -u-o ChunkHash : "has a"


FileInfoBase<|-- PointerFileInfo
FileInfoBase<|-- BinaryFileInfo

' --- OPERATIONS RELATIONSHIPS
Facade --> StorageAccountFacade : "creates a"
StorageAccountFacade --> RepositoryFacade : "creates a"
RepositoryFacade --o Repository : "has a"

RepositoryOptions -u-|> StorageAccountOptions
ArchiveCommandOptions -u-|> RepositoryOptions 
ArchiveCommandOptions --> Repository : "initialized using a"

ArchiveCommand -- ArchiveCommandOptions

FileSystemService -u- FileService : "built with"
@enduml