@startuml archive_flow

' skinparam maxMessageSize 150

Actor User
User -> CLI: archive
' CLI -> CLI: parse arguments
CLI -> LocalFileSystem: Get all (Archivable) files
CLI -> RemoteRepository: Put all files

activate CLI

group Ensure ALL LocalContentFiles (ie. all non-.arius files) are on the remote WITH a Manifest
    CLI -> LocalFileSystem: Calculate hashes for all files
    CLI -> RemoteRepository: Get all manifests & hashes of archived files
    CLI -> CLI: Establish list of files to archive\n(ie difference between the two) (#1)
    CLI -> LocalFileSystem: Chunk (dedup) the files to archive
    CLI -> RemoteRepository: Get hashes of all chunks in the archive
    CLI -> CLI: Establish list of chunks to upload\n(ie difference between the two)
    CLI -> LocalFileSystem: Encrypt chunks (using 7z)
    CLI -> RemoteRepository: Upload encrypted chunks
    CLI -> LocalFileSystem: Delete encrypted chunks (locally)

    CLI -> LocalFileSystem: Create new manifests for #1
end

CLI -> LocalFileSystem: Ensure pointers exist/are created\nfor all archived files

group Synchronize all manifests with the local pointers
    CLI -> LocalFileSystem: Get all pointers

    CLI -> CLI: Update Manifests

    CLI -> RemoteRepository: Upload modified manifests
end

CLI -> LocalFileSystem: Delete local copies of archived files\n(unless flag '--keep-local')


' participant T1
' participant T2
' participant Main

' par
'     T1 -> Main ++ #red: start
'     Main --> T1 -- #red : done

'     else

'     T2 -> Main ++ #yellow: start
'     Main --> T2 -- #yellow : done
' end


deactivate CLI

@enduml