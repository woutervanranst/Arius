// <auto-generated />
using System;
using Arius.Core.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Arius.Core.Repositories.StateDbMigrations
{
    [DbContext(typeof(Repository.StateDbContext))]
    [Migration("20230816132043_ChangeHashToBlob")]
    partial class ChangeHashToBlob
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("Arius.Core.Models.BinaryProperties", b =>
                {
                    b.Property<string>("Hash")
                        .HasColumnType("TEXT")
                        .HasColumnName("BinaryHash");

                    b.Property<long>("ArchivedLength")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ChunkCount")
                        .HasColumnType("INTEGER");

                    b.Property<long>("IncrementalLength")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OriginalLength")
                        .HasColumnType("INTEGER");

                    b.HasKey("Hash");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("BinaryProperties");
                });

            modelBuilder.Entity("Arius.Core.Models.PointerFileEntry", b =>
                {
                    b.Property<string>("BinaryHash")
                        .HasColumnType("TEXT")
                        .HasColumnName("BinaryHash");

                    b.Property<string>("RelativeName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("VersionUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("LastWriteTimeUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("BinaryHash", "RelativeName", "VersionUtc");

                    b.HasIndex("RelativeName");

                    b.HasIndex("VersionUtc");

                    b.ToTable("PointerFileEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
