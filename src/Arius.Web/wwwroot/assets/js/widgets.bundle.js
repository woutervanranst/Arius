/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "../src/js/widgets/cards/widget-1.js":
/*!*******************************************!*\
  !*** ../src/js/widgets/cards/widget-1.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget1 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_card_widget_1_chart\");\n        \n        if (!element) {\n            return;\n        }\n\n        var color = element.getAttribute('data-kt-chart-color');\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');         \n        var baseColor = KTUtil.isHexColor(color) ? color : KTUtil.getCssVariableValue('--bs-' + color);\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');        \n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [30, 75, 55, 45, 30, 60, 75, 50],\n                margin: {\n\t\t\t\t\tleft: 5,\n\t\t\t\t\tright: 5\n\t\t\t\t}   \n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['35%'],\n                    borderRadius: 6\n                }\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                show: true,\n                width: 4,\n                colors: ['transparent']\n            },\n            xaxis: {                \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },               \n                crosshairs: {\n                    show: false\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            fill: {\n                type: 'solid'\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Feb: \" + val\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + \"%\"  \n                    }\n                }\n            },\n            colors: [baseColor, secondaryColor],\n            grid: {\n                borderColor: false,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                },\n                padding: {\n                    top: 10,\n\t\t\t\t\tleft: 25,\n\t\t\t\t\tright: 25     \n\t\t\t\t}               \n            }\n        };\n\n        // Set timeout to properly get the parent elements width\n        var chart = new ApexCharts(element, options);\n        \n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 300);  \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardsWidget1 = module.exports = KTCardsWidget1;\n}\n   \n        \n        \n        \n           \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-1.js?");

/***/ }),

/***/ "../src/js/widgets/cards/widget-10.js":
/*!********************************************!*\
  !*** ../src/js/widgets/cards/widget-10.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget10 = function () {\n    // Private methods\n    var initChart = function() {\n        var el = document.getElementById('kt_card_widget_10_chart'); \n\n        if (!el) {\n            return;\n        }\n\n        var options = {\n            size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\n            lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\n            rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145,            \n            //percent:  el.getAttribute('data-kt-percent') ,\n        }\n\n        var canvas = document.createElement('canvas');\n        var span = document.createElement('span'); \n            \n        if (typeof(G_vmlCanvasManager) !== 'undefined') {\n            G_vmlCanvasManager.initElement(canvas);\n        }\n\n        var ctx = canvas.getContext('2d');\n        canvas.width = canvas.height = options.size;\n\n        el.appendChild(span);\n        el.appendChild(canvas);\n\n        ctx.translate(options.size / 2, options.size / 2); // change center\n        ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n        //imd = ctx.getImageData(0, 0, 240, 240);\n        var radius = (options.size - options.lineWidth) / 2;\n\n        var drawCircle = function(color, lineWidth, percent) {\n            percent = Math.min(Math.max(0, percent || 1), 1);\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n            ctx.strokeStyle = color;\n            ctx.lineCap = 'round'; // butt, round or square\n            ctx.lineWidth = lineWidth\n            ctx.stroke();\n        };\n\n        // Init \n        drawCircle('#E4E6EF', options.lineWidth, 100 / 100); \n        drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 150);\n        drawCircle(KTUtil.getCssVariableValue('--bs-success'), options.lineWidth, 100 / 250);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardsWidget10 = module.exports = KTCardsWidget10;\n}\n   \n        \n        \n        \n           \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-10.js?");

/***/ }),

/***/ "../src/js/widgets/cards/widget-12.js":
/*!********************************************!*\
  !*** ../src/js/widgets/cards/widget-12.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardWidget12 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_card_widget_12_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));       \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var lightColor = KTUtil.getCssVariableValue('--bs-success');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [3.5, 5.7, 2.8, 5.9, 4.2, 5.6, 4.3, 4.5, 5.9, 4.5, 5.7, 4.8, 5.7]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },             \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 0\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                 \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Feb \" + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return val * \"10\" + \"K\"\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: { \n                borderColor: borderColor,                 \n                strokeDashArray: 4,\n                padding: {\n                    top: 0,\n                    right: -20,\n                    bottom: -20,\n                    left: -20\n                },\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {               \n                strokeColor: baseColor,\n                strokeWidth: 2\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }     \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardWidget12 = module.exports = KTCardWidget12;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-12.js?");

/***/ }),

/***/ "../src/js/widgets/cards/widget-13.js":
/*!********************************************!*\
  !*** ../src/js/widgets/cards/widget-13.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardWidget13 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_card_widget_13_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));       \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var lightColor = KTUtil.getCssVariableValue('--bs-success');\n\n        var options = {\n            series: [{\n                name: 'Shipments',\n                data: [1.5, 4.5, 2, 3, 2, 4, 2.5, 2, 2.5, 4, 3.5, 4.5, 2.5]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },             \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 0\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                 \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Feb \" + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return val * \"10\" + \"K\"\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {  \n                borderColor: borderColor,                \n                strokeDashArray: 4,\n                padding: {\n                    top: 0,\n                    right: -20,\n                    bottom: -20,\n                    left: -20\n                },\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 2\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }     \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardWidget13 = module.exports = KTCardWidget13;\n}\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-13.js?");

/***/ }),

/***/ "../src/js/widgets/cards/widget-17.js":
/*!********************************************!*\
  !*** ../src/js/widgets/cards/widget-17.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget17 = function () {\n    // Private methods\n    var initChart = function() {\n        var el = document.getElementById('kt_card_widget_17_chart'); \n\n        if (!el) {\n            return;\n        }\n\n        var options = {\n            size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\n            lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\n            rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145,            \n            //percent:  el.getAttribute('data-kt-percent') ,\n        }\n\n        var canvas = document.createElement('canvas');\n        var span = document.createElement('span'); \n            \n        if (typeof(G_vmlCanvasManager) !== 'undefined') {\n            G_vmlCanvasManager.initElement(canvas);\n        }\n\n        var ctx = canvas.getContext('2d');\n        canvas.width = canvas.height = options.size;\n\n        el.appendChild(span);\n        el.appendChild(canvas);\n\n        ctx.translate(options.size / 2, options.size / 2); // change center\n        ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n        //imd = ctx.getImageData(0, 0, 240, 240);\n        var radius = (options.size - options.lineWidth) / 2;\n\n        var drawCircle = function(color, lineWidth, percent) {\n            percent = Math.min(Math.max(0, percent || 1), 1);\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n            ctx.strokeStyle = color;\n            ctx.lineCap = 'round'; // butt, round or square\n            ctx.lineWidth = lineWidth\n            ctx.stroke();\n        };\n\n        // Init \n        drawCircle('#E4E6EF', options.lineWidth, 100 / 100); \n        drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 150);\n        drawCircle(KTUtil.getCssVariableValue('--bs-success'), options.lineWidth, 100 / 250);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardsWidget17 = module.exports = KTCardsWidget17;\n}\n   \n        \n        \n        \n           \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-17.js?");

/***/ }),

/***/ "../src/js/widgets/cards/widget-19.js":
/*!********************************************!*\
  !*** ../src/js/widgets/cards/widget-19.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget19 = function () {\n    // Private methods\n    var initChart = function() {\n        var el = document.getElementById('kt_card_widget_19_chart'); \n\n        if (!el) {\n            return;\n        }\n\n        var options = {\n            size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\n            lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\n            rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145,            \n            //percent:  el.getAttribute('data-kt-percent') ,\n        }\n\n        var canvas = document.createElement('canvas');\n        var span = document.createElement('span'); \n            \n        if (typeof(G_vmlCanvasManager) !== 'undefined') {\n            G_vmlCanvasManager.initElement(canvas);\n        }\n\n        var ctx = canvas.getContext('2d');\n        canvas.width = canvas.height = options.size;\n\n        el.appendChild(span);\n        el.appendChild(canvas);\n\n        ctx.translate(options.size / 2, options.size / 2); // change center\n        ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n        //imd = ctx.getImageData(0, 0, 240, 240);\n        var radius = (options.size - options.lineWidth) / 2;\n\n        var drawCircle = function(color, lineWidth, percent) {\n            percent = Math.min(Math.max(0, percent || 1), 1);\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n            ctx.strokeStyle = color;\n            ctx.lineCap = 'round'; // butt, round or square\n            ctx.lineWidth = lineWidth\n            ctx.stroke();\n        };\n\n        // Init \n        drawCircle('#E4E6EF', options.lineWidth, 100 / 100); \n        drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 150);\n        drawCircle(KTUtil.getCssVariableValue('--bs-success'), options.lineWidth, 100 / 250);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardsWidget19 = module.exports = KTCardsWidget19;\n}\n   \n        \n        \n        \n           \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-19.js?");

/***/ }),

/***/ "../src/js/widgets/cards/widget-4.js":
/*!*******************************************!*\
  !*** ../src/js/widgets/cards/widget-4.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget4 = function () {\n    // Private methods\n    var initChart = function() {\n        var el = document.getElementById('kt_card_widget_4_chart'); \n\n        if (!el) {\n            return;\n        }\n\n        var options = {\n            size: el.getAttribute('data-kt-size') ? parseInt(el.getAttribute('data-kt-size')) : 70,\n            lineWidth: el.getAttribute('data-kt-line') ? parseInt(el.getAttribute('data-kt-line')) : 11,\n            rotate: el.getAttribute('data-kt-rotate') ? parseInt(el.getAttribute('data-kt-rotate')) : 145,            \n            //percent:  el.getAttribute('data-kt-percent') ,\n        }\n\n        var canvas = document.createElement('canvas');\n        var span = document.createElement('span'); \n            \n        if (typeof(G_vmlCanvasManager) !== 'undefined') {\n            G_vmlCanvasManager.initElement(canvas);\n        }\n\n        var ctx = canvas.getContext('2d');\n        canvas.width = canvas.height = options.size;\n\n        el.appendChild(span);\n        el.appendChild(canvas);\n\n        ctx.translate(options.size / 2, options.size / 2); // change center\n        ctx.rotate((-1 / 2 + options.rotate / 180) * Math.PI); // rotate -90 deg\n\n        //imd = ctx.getImageData(0, 0, 240, 240);\n        var radius = (options.size - options.lineWidth) / 2;\n\n        var drawCircle = function(color, lineWidth, percent) {\n            percent = Math.min(Math.max(0, percent || 1), 1);\n            ctx.beginPath();\n            ctx.arc(0, 0, radius, 0, Math.PI * 2 * percent, false);\n            ctx.strokeStyle = color;\n            ctx.lineCap = 'round'; // butt, round or square\n            ctx.lineWidth = lineWidth\n            ctx.stroke();\n        };\n\n        // Init \n        drawCircle('#E4E6EF', options.lineWidth, 100 / 100); \n        drawCircle(KTUtil.getCssVariableValue('--bs-danger'), options.lineWidth, 100 / 150);\n        drawCircle(KTUtil.getCssVariableValue('--bs-primary'), options.lineWidth, 100 / 250);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardsWidget4 = module.exports = KTCardsWidget4;\n}\n   \n        \n        \n        \n           \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-4.js?");

/***/ }),

/***/ "../src/js/widgets/cards/widget-6.js":
/*!*******************************************!*\
  !*** ../src/js/widgets/cards/widget-6.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardsWidget6 = function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_card_widget_6_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-gray-300');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [30, 60, 53, 45, 60, 75, 53]\n            }, ],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['55%'],\n                    borderRadius: 6\n                }\n            },\n            legend: {\n                show: false,\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                show: true,\n                width: 9,\n                colors: ['transparent']\n            },\n            xaxis: {                \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false,\n                    tickPlacement: 'between'\n                },\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            fill: {\n                type: 'solid'\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return 'Feb: ' + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + \"%\" \n                    }\n                }\n            },\n            colors: [baseColor, secondaryColor],\n            grid: {\n                padding: {\n                    left: 10,\n                    right: 10\n                },\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }             \n            }\n        }; \n\n        var chart = new ApexCharts(element, options);\n        \n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();   \n        }, 300);     \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardsWidget6 = module.exports = KTCardsWidget6;\n}\n   \n        \n        \n        \n           \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-6.js?");

/***/ }),

/***/ "../src/js/widgets/cards/widget-8.js":
/*!*******************************************!*\
  !*** ../src/js/widgets/cards/widget-8.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardWidget8 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_card_widget_8_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));       \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var lightColor = KTUtil.getCssVariableValue('--bs-success');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [4.5, 5.7, 2.8, 5.9, 4.2, 5.6, 5.2, 4.5, 5.9, 4.5, 5.7, 4.8, 5.7]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },             \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 0\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                 \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Feb \" + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \"K\"\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {  \n                borderColor: borderColor,               \n                strokeDashArray: 4,\n                padding: {\n                    top: 0,\n                    right: -20,\n                    bottom: -20,\n                    left: -20\n                },\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 2\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardWidget8 = module.exports = KTCardWidget8;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-8.js?");

/***/ }),

/***/ "../src/js/widgets/cards/widget-9.js":
/*!*******************************************!*\
  !*** ../src/js/widgets/cards/widget-9.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTCardWidget9 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n    \n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_card_widget_9_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));       \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var lightColor = KTUtil.getCssVariableValue('--bs-success');\n\n        var options = {\n            series: [{\n                name: 'Visitors',\n                data: [1.5, 2.5, 2, 3, 2, 4, 2.5, 2, 2.5, 4, 2.5, 4.5, 2.5]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },             \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 0\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                 \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Feb \" + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + \"K\"\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {  \n                borderColor: borderColor,               \n                strokeDashArray: 4,\n                padding: {\n                    top: 0,\n                    right: -20,\n                    bottom: -20,\n                    left: -20\n                },\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 2\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTCardWidget9 = module.exports = KTCardWidget9;\n}\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/cards/widget-9.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-1.js":
/*!********************************************!*\
  !*** ../src/js/widgets/charts/widget-1.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget1 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_1\");\n\n        if (!element) {\n            return;\n        }\n\n        var negativeColor = element.hasAttribute('data-kt-negative-color') ? element.getAttribute('data-kt-negative-color') : KTUtil.getCssVariableValue('--bs-success');\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n\n        var options = {\n            series: [{\n                name: 'Subscribed',\n                data: [20, 30, 20, 40, 60, 75, 65, 18, 10, 5, 15, 40, 60, 18, 35, 55, 20]\n            }, {\n                name: 'Unsubscribed',\n                data: [-20, -15, -5, -20, -30, -15, -10, -8, -5, -5, -10, -25, -15, -5, -10, -5, -15]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                stacked: true,\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n                bar: {\n                    //horizontal: false,\n                    columnWidth: \"35%\",\n                    barHeight: \"70%\",\n                    borderRadius: [6, 6]\n                }\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            xaxis: {\n                categories: ['Jan 5', 'Jan 7', 'Jan 9', 'Jan 11', 'Jan 13', 'Jan 15', 'Jan 17', 'Jan 19', 'Jan 20', 'Jan 21', 'Jan 23', 'Jan 24', 'Jan 25', 'Jan 26', 'Jan 24', 'Jan 28', 'Jan 29'],\n                axisBorder: {\n                    show: false\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 10,\n                labels: {\n                    //rotate: -45,\n                    //rotateAlways: true,\n                    style: {\n                        colors: [labelColor],\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false\n                }\n            },\n            yaxis: {\n                min: -50,\n                max: 80,\n                tickAmount: 6,\n                labels: {\n                    style: {\n                        colors: [labelColor],\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return parseInt(val) + \"K\"\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px',\n                    borderRadius: 4\n                },\n                y: {\n                    formatter: function (val) {\n                        if (val > 0) {\n                            return val + 'K';\n                        } else {\n                            return Math.abs(val) + 'K';\n                        }\n                    }\n                }\n            },\n            colors: [baseColor, negativeColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,               \n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget1 = module.exports = KTChartsWidget1;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-1.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-10.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-10.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget10 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart4 = {\n        self: null,\n        rendered: false\n    };   \n\n    // Private methods\n    var initChart = function(chart, toggle, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [{\n                name: 'Achieved Target',\n                data: data\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }              \n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['22%'],\n                    borderRadius: 5,                     \n                    dataLabels: {\n                        position: \"top\" // top, center, bottom\n                    },\n                    startingShape: 'flat'\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: true, \n                offsetY: -30,                                             \n                style: {\n                    fontSize: '13px',\n                    colors: [labelColor]\n                },\n                formatter: function(val) {\n                    return val + \"K\";\n                }          \n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['Metals', 'Energy', 'Agro', 'Machines', 'Transport', 'Textile', 'Wood'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }                    \n                },\n                crosshairs: {\n                    fill: {         \n                        gradient: {         \n                            opacityFrom: 0,\n                            opacityTo: 0\n                        }\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    },\n                    formatter: function (val) {\n                        return parseInt(val) + \"K\"\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return + val + \"K\"\n                    }\n                }\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-primary-light')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {  \n            var chart1Data = [30, 18, 43, 70, 13, 37, 23];\n            initChart(chart1, '#kt_charts_widget_10_tab_1', '#kt_charts_widget_10_chart_1', chart1Data, true);\n\n            var chart2Data = [25, 55, 35, 50, 45, 20, 31];\n            initChart(chart2, '#kt_charts_widget_10_tab_2', '#kt_charts_widget_10_chart_2', chart2Data, false);\n\n            var chart3Data = [45, 15, 35, 70, 45, 50, 21];\n            initChart(chart3, '#kt_charts_widget_10_tab_3', '#kt_charts_widget_10_chart_3', chart3Data, false);\n\n            var chart4Data = [15, 55, 25, 50, 25, 60, 31];\n            initChart(chart4, '#kt_charts_widget_10_tab_4', '#kt_charts_widget_10_chart_4', chart4Data, false);\n\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                }\n\n                if (chart4.rendered) {\n                    chart4.self.destroy();\n                }\n                \n                initChart(chart1, '#kt_charts_widget_10_tab_1', '#kt_charts_widget_10_chart_1', chart1Data, chart1.rendered);\n                initChart(chart2, '#kt_charts_widget_10_tab_2', '#kt_charts_widget_10_chart_2', chart2Data, chart2.rendered);  \n                initChart(chart3, '#kt_charts_widget_10_tab_3', '#kt_charts_widget_10_chart_3', chart3Data, chart3.rendered);\n                initChart(chart4, '#kt_charts_widget_10_tab_4', '#kt_charts_widget_10_chart_4', chart4Data, chart4.rendered);                  \n            });      \n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget10 = module.exports = KTChartsWidget10;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-10.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-11.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-11.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget11 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, toggle, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);  \n        var height = parseInt(KTUtil.css(element, 'height'));\n\n        if (!element) {\n            return;\n        }        \n        \n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-success');         \n\n        var options = {\n            series: [{\n                name: 'Deliveries',\n                data: data\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },             \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 02', 'Apr 06', 'Apr 06', 'Apr 05', 'Apr 06', 'Apr 10', 'Apr 08', 'Apr 09', 'Apr 14', 'Apr 10', 'Apr 12', 'Apr 18', 'Apr 14', \n                    'Apr 15', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 02', 'Apr 06', 'Apr 18', 'Apr 05', 'Apr 06', 'Apr 10', 'Apr 08', 'Apr 22', 'Apr 14', 'Apr 11', 'Apr 12', ''\n                ],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 5,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '13px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '13px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 24,\n                min: 10,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '13px'\n                    }                     \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return + val  \n                    }\n                }\n            },\n            colors: [baseColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 3,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () { \n            var chart1Data = [16, 19, 19, 16, 16, 14, 15, 15, 17, 17, 19, 19, 18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 20, 20, 22];\n            initChart(chart1, '#kt_charts_widget_11_tab_1', '#kt_charts_widget_11_chart_1', chart1Data, false);\n\n            var chart2Data = [18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22, 15, 18, 18, 17, 17, 15, 15, 17, 17, 19, 17];\n            initChart(chart2, '#kt_charts_widget_11_tab_2', '#kt_charts_widget_11_chart_2', chart2Data, false);\n\n            var chart3Data = [17, 20, 20, 19, 19, 17, 17, 19, 19, 21, 21, 19, 19, 21, 21, 18, 18, 16, 17, 17, 19, 19, 21, 21, 19, 19, 17, 17, 18, 18];\n            initChart(chart3, '#kt_charts_widget_11_tab_3', '#kt_charts_widget_11_chart_3', chart3Data, true);\n           \n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                } \n                \n                initChart(chart1, '#kt_charts_widget_11_tab_1', '#kt_charts_widget_11_chart_1', chart1Data, chart1.rendered);\n                initChart(chart2, '#kt_charts_widget_11_tab_2', '#kt_charts_widget_11_chart_2', chart2Data, chart2.rendered);  \n                initChart(chart3, '#kt_charts_widget_11_tab_3', '#kt_charts_widget_11_chart_3', chart3Data, chart3.rendered);                                           \n            });             \n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget11 = module.exports = KTChartsWidget11;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-11.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-12.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-12.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget12 = function () {\n    // Private methods\n    var initChart = function(tabSelector, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [{\n                name: 'Deliveries',\n                data: data\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }              \n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['22%'],\n                    borderRadius: 5,                     \n                    dataLabels: {\n                        position: \"top\" // top, center, bottom\n                    },\n                    startingShape: 'flat'\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: true, \n                offsetY: -28,                                             \n                style: {\n                    fontSize: '13px',\n                    colors: labelColor\n                }, \n                \n                formatter: function(val) {\n                    return val + \"K\";\n                } \n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['Grossey', 'Pet Food', 'Flowers', 'Restaurant', 'Kids Toys', 'Clothing', 'Still Water'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }                    \n                },\n                crosshairs: {\n                    fill: {         \n                        gradient: {         \n                            opacityFrom: 0,\n                            opacityTo: 0\n                        }\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    },\n                    \n                    formatter: function(val) {\n                        return val + \"K\";\n                    } \n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return  + val + 'K' \n                    }\n                }\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-primary-light')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n\n        var init = false;\n        var tab = document.querySelector(tabSelector);\n        \n        if (initByDefault === true) {\n            chart.render();\n            init = true;\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (init == false) {\n                chart.render();\n                init = true;\n            }\n        })\n    }\n\n    // Public methods\n    return {\n        init: function () {   \n            initChart('#kt_charts_widget_12_tab_1', '#kt_charts_widget_12_chart_1', [54, 42, 75, 110, 23, 87, 50], true);\n            initChart('#kt_charts_widget_12_tab_2', '#kt_charts_widget_12_chart_2', [25, 55, 35, 50, 45, 20, 31], false); \n            initChart('#kt_charts_widget_12_tab_3', '#kt_charts_widget_12_chart_3', [45, 15, 35, 70, 45, 50, 21], false); \n        }        \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget12 = module.exports = KTChartsWidget12;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-12.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-13.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-13.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget13 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_13_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var root;\n\n        var init = function() {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/\n            var chart = root.container.children.push(\n                am5xy.XYChart.new(root, {\n                    panX: true,\n                    panY: true,\n                    wheelX: \"panX\",\n                    wheelY: \"zoomX\",\n                })\n            );\n\n            // Add cursor\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/cursor/\n            var cursor = chart.set(\n                \"cursor\",\n                am5xy.XYCursor.new(root, {\n                    behavior: \"none\"\n                })\n            );\n\n            cursor.lineY.set(\"visible\", false);\n\n            // The data\n            var data = [\n                {\n                    year: \"2003\",\n                    cars: 1587,\n                    motorcycles: 650,\n                    bicycles: 121,\n                },\n                {\n                    year: \"2004\",\n                    cars: 1567,\n                    motorcycles: 683,\n                    bicycles: 146,\n                },\n                {\n                    year: \"2005\",\n                    cars: 1617,\n                    motorcycles: 691,\n                    bicycles: 138,\n                },\n                {\n                    year: \"2006\",\n                    cars: 1630,\n                    motorcycles: 642,\n                    bicycles: 127,\n                },\n                {\n                    year: \"2007\",\n                    cars: 1660,\n                    motorcycles: 699,\n                    bicycles: 105,\n                },\n                {\n                    year: \"2008\",\n                    cars: 1683,\n                    motorcycles: 721,\n                    bicycles: 109,\n                },\n                {\n                    year: \"2009\",\n                    cars: 1691,\n                    motorcycles: 737,\n                    bicycles: 112,\n                },\n                {\n                    year: \"2010\",\n                    cars: 1298,\n                    motorcycles: 680,\n                    bicycles: 101,\n                },\n                {\n                    year: \"2011\",\n                    cars: 1275,\n                    motorcycles: 664,\n                    bicycles: 97,\n                },\n                {\n                    year: \"2012\",\n                    cars: 1246,\n                    motorcycles: 648,\n                    bicycles: 93,\n                },\n                {\n                    year: \"2013\",\n                    cars: 1318,\n                    motorcycles: 697,\n                    bicycles: 111,\n                },\n                {\n                    year: \"2014\",\n                    cars: 1213,\n                    motorcycles: 633,\n                    bicycles: 87,\n                },\n                {\n                    year: \"2015\",\n                    cars: 1199,\n                    motorcycles: 621,\n                    bicycles: 79,\n                },\n                {\n                    year: \"2016\",\n                    cars: 1110,\n                    motorcycles: 210,\n                    bicycles: 81,\n                },\n                {\n                    year: \"2017\",\n                    cars: 1165,\n                    motorcycles: 232,\n                    bicycles: 75,\n                },\n                {\n                    year: \"2018\",\n                    cars: 1145,\n                    motorcycles: 219,\n                    bicycles: 88,\n                },\n                {\n                    year: \"2019\",\n                    cars: 1163,\n                    motorcycles: 201,\n                    bicycles: 82,\n                },\n                {\n                    year: \"2020\",\n                    cars: 1180,\n                    motorcycles: 285,\n                    bicycles: 87,\n                },\n                {\n                    year: \"2021\",\n                    cars: 1159,\n                    motorcycles: 277,\n                    bicycles: 71,\n                },\n            ];\n\n            // Create axes\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n            var xAxis = chart.xAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"year\",\n                    startLocation: 0.5,\n                    endLocation: 0.5,\n                    renderer: am5xy.AxisRendererX.new(root, {}),\n                    tooltip: am5.Tooltip.new(root, {}),\n                })\n            );\n\n            xAxis.get(\"renderer\").grid.template.setAll({\n                disabled: true,\n                strokeOpacity: 0\n            });\n\n            xAxis.get(\"renderer\").labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            xAxis.data.setAll(data);\n\n            var yAxis = chart.yAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: am5xy.AxisRendererY.new(root, {}),\n                })\n            );\n\n            yAxis.get(\"renderer\").grid.template.setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                strokeDasharray: [3]\n            });\n\n            yAxis.get(\"renderer\").labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            // Add series\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n\n            function createSeries(name, field, color) {\n                var series = chart.series.push(\n                    am5xy.LineSeries.new(root, {\n                        name: name,\n                        xAxis: xAxis,\n                        yAxis: yAxis,\n                        stacked: true,\n                        valueYField: field,\n                        categoryXField: \"year\",\n                        fill: am5.color(color),\n                        tooltip: am5.Tooltip.new(root, {\n                            pointerOrientation: \"horizontal\",\n                            labelText: \"[bold]{name}[/]\\n{categoryX}: {valueY}\",\n                        }),\n                    })\n                );\n\n                \n\n                series.fills.template.setAll({\n                    fillOpacity: 0.5,\n                    visible: true,\n                });\n\n                series.data.setAll(data);\n                series.appear(1000);\n            }\n\n            createSeries(\"Cars\", \"cars\", KTUtil.getCssVariableValue('--bs-primary'));\n            createSeries(\"Motorcycles\", \"motorcycles\", KTUtil.getCssVariableValue('--bs-success'));\n            createSeries(\"Bicycles\", \"bicycles\", KTUtil.getCssVariableValue('--bs-warning'));\n\n            // Add scrollbar\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/scrollbars/\n            var scrollbarX = chart.set(\n                \"scrollbarX\",\n                am5.Scrollbar.new(root, {\n                    orientation: \"horizontal\",\n                    marginBottom: 25,\n                    height: 8\n                })\n            );\n\n            // Create axis ranges\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/axis-ranges/\n            var rangeDataItem = xAxis.makeDataItem({\n                category: \"2016\",\n                endCategory: \"2021\",\n            });\n\n            var range = xAxis.createAxisRange(rangeDataItem);\n\n            rangeDataItem.get(\"grid\").setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-200')),\n                strokeOpacity: 0.5,\n                strokeDasharray: [3],\n            });\n\n            rangeDataItem.get(\"axisFill\").setAll({\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-200')),\n                fillOpacity: 0.1,\n            });\n\n            rangeDataItem.get(\"label\").setAll({\n                inside: true,\n                text: \"Fines increased\",\n                rotation: 90,\n                centerX: am5.p100,\n                centerY: am5.p100,\n                location: 0,\n                paddingBottom: 10,\n                paddingRight: 15,\n            });\n\n            var rangeDataItem2 = xAxis.makeDataItem({\n                category: \"2021\",\n            });\n\n            var range2 = xAxis.createAxisRange(rangeDataItem2);\n\n            rangeDataItem2.get(\"grid\").setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-danger')),\n                strokeOpacity: 1,\n                strokeDasharray: [3],\n            });\n\n            rangeDataItem2.get(\"label\").setAll({\n                inside: true,\n                text: \"Fee introduced\",\n                rotation: 90,\n                centerX: am5.p100,\n                centerY: am5.p100,\n                location: 0,\n                paddingBottom: 10,\n                paddingRight: 15,\n            });\n\n            // Make stuff animate on load\n            // https://www.amcharts.com/docs/v5/concepts/animations/\n            chart.appear(1000, 100);\n        }\n\n        am5.ready(function () {\n            init();\n        }); // end am5.ready()\n\n        // Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget13 = module.exports = KTChartsWidget13;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-13.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-14.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-14.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget14 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_14_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        am5.ready(function () {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            var root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/\n            var chart = root.container.children.push(\n                am5radar.RadarChart.new(root, {\n                    panX: false,\n                    panY: false,\n                    wheelX: \"panX\",\n                    wheelY: \"zoomX\",\n                    innerRadius: am5.percent(20),\n                    startAngle: -90,\n                    endAngle: 180,\n                })\n            );\n\n            // Data\n            var data = [\n                {\n                    category: \"Research\",\n                    value: 80,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-info')),\n                    },\n                },\n                {\n                    category: \"Marketing\",\n                    value: 35,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-danger')),\n                    },\n                },\n                {\n                    category: \"Distribution\",\n                    value: 92,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),\n                    },\n                },\n                {\n                    category: \"Human Resources\",\n                    value: 68,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n                    },\n                },\n            ];\n\n            // Add cursor\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor\n            var cursor = chart.set(\n                \"cursor\",\n                am5radar.RadarCursor.new(root, {\n                    behavior: \"zoomX\",\n                })\n            );\n\n            cursor.lineY.set(\"visible\", false);\n\n            // Create axes and their renderers\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n            var xRenderer = am5radar.AxisRendererCircular.new(root, {\n                //minGridDistance: 50\n            });\n\n            xRenderer.labels.template.setAll({\n                radius: 10\n            });\n\n            xRenderer.grid.template.setAll({\n                forceHidden: true,\n            });\n\n            var xAxis = chart.xAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: xRenderer,\n                    min: 0,\n                    max: 100,\n                    strictMinMax: true,\n                    numberFormat: \"#'%'\",\n                    tooltip: am5.Tooltip.new(root, {})\n                })\n            );\n\n            xAxis.get(\"renderer\").labels.template.setAll({\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\n                fontWeight: \"500\",\n                fontSize: 16,\n            });\n\n            var yRenderer = am5radar.AxisRendererRadial.new(root, {\n                minGridDistance: 20,\n            });\n\n            yRenderer.labels.template.setAll({\n                centerX: am5.p100,\n                fontWeight: \"500\",\n                fontSize: 18,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\n                templateField: \"columnSettings\",\n            });\n\n            yRenderer.grid.template.setAll({\n                forceHidden: true,\n            });\n\n            var yAxis = chart.yAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"category\",\n                    renderer: yRenderer,\n                })\n            );\n\n            yAxis.data.setAll(data);\n\n            // Create series\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n            var series1 = chart.series.push(\n                am5radar.RadarColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    clustered: false,\n                    valueXField: \"full\",\n                    categoryYField: \"category\",\n                    fill: root.interfaceColors.get(\"alternativeBackground\"),\n                })\n            );\n\n            series1.columns.template.setAll({\n                width: am5.p100,\n                fillOpacity: 0.08,\n                strokeOpacity: 0,\n                cornerRadius: 20,\n            });\n\n            series1.data.setAll(data);\n\n            var series2 = chart.series.push(\n                am5radar.RadarColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    clustered: false,\n                    valueXField: \"value\",\n                    categoryYField: \"category\",\n                })\n            );\n\n            series2.columns.template.setAll({\n                width: am5.p100,\n                strokeOpacity: 0,\n                tooltipText: \"{category}: {valueX}%\",\n                cornerRadius: 20,\n                templateField: \"columnSettings\",\n            });\n\n            series2.data.setAll(data);\n\n            // Animate chart and series in\n            // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n            series1.appear(1000);\n            series2.appear(1000);\n            chart.appear(1000, 100);\n        });\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget14 = module.exports = KTChartsWidget14;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-14.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-15.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-15.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget15 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_15_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var root;\n\n        var init = function() {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/\n            var chart = root.container.children.push(\n                am5xy.XYChart.new(root, {\n                    panX: false,\n                    panY: false,\n                    //wheelX: \"panX\",\n                    //wheelY: \"zoomX\",\n                    layout: root.verticalLayout,\n                })\n            );\n\n            // Data\n            var colors = chart.get(\"colors\");\n\n            var data = [\n                {\n                    country: \"US\",\n                    visits: 725,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-states.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"UK\",\n                    visits: 625,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/united-kingdom.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"China\",\n                    visits: 602,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/china.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Japan\",\n                    visits: 509,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/japan.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Germany\",\n                    visits: 322,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/germany.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"France\",\n                    visits: 214,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/france.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"India\",\n                    visits: 204,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/india.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),        \n                    }\n                },\n                {\n                    country: \"Spain\",\n                    visits: 200,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/spain.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Italy\",\n                    visits: 165,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/italy.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Russia\",\n                    visits: 152,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/russia.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Norway\",\n                    visits: 125,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/norway.svg\",\n                    columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n                {\n                    country: \"Canada\",\n                    visits: 99,\n                    icon: \"https://www.amcharts.com/wp-content/uploads/flags/canada.svg\",\n                   columnSettings: { \n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary'))        \n                    }\n                },\n            ];\n\n            // Create axes\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n            var xAxis = chart.xAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"country\",\n                    renderer: am5xy.AxisRendererX.new(root, {\n                        minGridDistance: 30,\n                    }),\n                    bullet: function (root, axis, dataItem) {\n                        return am5xy.AxisBullet.new(root, {\n                            location: 0.5,\n                            sprite: am5.Picture.new(root, {\n                                width: 24,\n                                height: 24,\n                                centerY: am5.p50,\n                                centerX: am5.p50,\n                                src: dataItem.dataContext.icon,\n                            }),\n                        });\n                    },\n                })\n            );\n\n            xAxis.get(\"renderer\").labels.template.setAll({\n                paddingTop: 20,                \n                fontWeight: \"400\",\n                fontSize: 10,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n            \n            xAxis.get(\"renderer\").grid.template.setAll({\n                disabled: true,\n                strokeOpacity: 0\n            });\n\n            xAxis.data.setAll(data);\n\n            var yAxis = chart.yAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: am5xy.AxisRendererY.new(root, {}),\n                })\n            );\n\n            yAxis.get(\"renderer\").grid.template.setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                strokeDasharray: [3]\n            });\n\n            yAxis.get(\"renderer\").labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 10,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            // Add series\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n            var series = chart.series.push(\n                am5xy.ColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    valueYField: \"visits\",\n                    categoryXField: \"country\"\n                })\n            );\n\n            series.columns.template.setAll({\n                tooltipText: \"{categoryX}: {valueY}\",\n                tooltipY: 0,\n                strokeOpacity: 0,\n                templateField: \"columnSettings\",\n            });\n\n            series.columns.template.setAll({\n                strokeOpacity: 0,\n                cornerRadiusBR: 0,\n                cornerRadiusTR: 6,\n                cornerRadiusBL: 0,\n                cornerRadiusTL: 6,\n            });\n\n            series.data.setAll(data);\n\n            // Make stuff animate on load\n            // https://www.amcharts.com/docs/v5/concepts/animations/\n            series.appear();\n            chart.appear(1000, 100);\n        }\n\n        am5.ready(function () {\n            init();\n        });\n\n        // Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget15 = module.exports = KTChartsWidget15;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-15.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-16.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-16.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget16 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_16_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var root;\n\n        var init = function() {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/\n            var chart = root.container.children.push(\n                am5xy.XYChart.new(root, {\n                    panX: false,\n                    panY: false,\n                    wheelX: \"panX\",\n                    wheelY: \"zoomX\",\n                    layout: root.verticalLayout,\n                })\n            );\n\n            var colors = chart.get(\"colors\");\n\n            var data = [\n                {\n                    country: \"US\",\n                    visits: 725,\n                },\n                {\n                    country: \"UK\",\n                    visits: 625,\n                },\n                {\n                    country: \"China\",\n                    visits: 602,\n                },\n                {\n                    country: \"Japan\",\n                    visits: 509,\n                },\n                {\n                    country: \"Germany\",\n                    visits: 322,\n                },\n                {\n                    country: \"France\",\n                    visits: 214,\n                },\n                {\n                    country: \"India\",\n                    visits: 204,\n                },\n                {\n                    country: \"Spain\",\n                    visits: 198,\n                },\n                {\n                    country: \"Italy\",\n                    visits: 165,\n                },\n                {\n                    country: \"Russia\",\n                    visits: 130,\n                },\n                {\n                    country: \"Norway\",\n                    visits: 93,\n                },\n                {\n                    country: \"Canada\",\n                    visits: 41,\n                },\n            ];\n\n            prepareParetoData();\n\n            function prepareParetoData() {\n                var total = 0;\n\n                for (var i = 0; i < data.length; i++) {\n                    var value = data[i].visits;\n                    total += value;\n                }\n\n                var sum = 0;\n                for (var i = 0; i < data.length; i++) {\n                    var value = data[i].visits;\n                    sum += value;\n                    data[i].pareto = (sum / total) * 100;\n                }\n            }\n\n            // Create axes\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n            var xAxis = chart.xAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"country\",\n                    renderer: am5xy.AxisRendererX.new(root, {\n                        minGridDistance: 30,\n                    }),\n                })\n            );\n\n            xAxis.get(\"renderer\").labels.template.setAll({\n                paddingTop: 10,\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            xAxis.get(\"renderer\").grid.template.setAll({\n                disabled: true,\n                strokeOpacity: 0\n            });\n\n            xAxis.data.setAll(data);\n\n            var yAxis = chart.yAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: am5xy.AxisRendererY.new(root, {}),\n                })\n            );\n\n            yAxis.get(\"renderer\").labels.template.setAll({\n                paddingLeft: 10,\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            yAxis.get(\"renderer\").grid.template.setAll({\n                stroke: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n                strokeWidth: 1,\n                strokeOpacity: 1,\n                strokeDasharray: [3]\n            });\n\n            var paretoAxisRenderer = am5xy.AxisRendererY.new(root, {\n                opposite: true,\n            });\n\n            var paretoAxis = chart.yAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: paretoAxisRenderer,\n                    min: 0,\n                    max: 100,\n                    strictMinMax: true,\n                })\n            );\n            \n            paretoAxis.get(\"renderer\").labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            paretoAxisRenderer.grid.template.set(\"forceHidden\", true);\n            paretoAxis.set(\"numberFormat\", \"#'%\");\n\n            // Add series\n            // https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n            var series = chart.series.push(\n                am5xy.ColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    valueYField: \"visits\",\n                    categoryXField: \"country\",\n                })\n            );\n\n            series.columns.template.setAll({\n                tooltipText: \"{categoryX}: {valueY}\",\n                tooltipY: 0,\n                strokeOpacity: 0,\n                cornerRadiusTL: 6,\n                cornerRadiusTR: 6,\n            });\n\n            series.columns.template.adapters.add(\n                \"fill\",\n                function (fill, target) {\n                    return chart\n                        .get(\"colors\")\n                        .getIndex(series.dataItems.indexOf(target.dataItem));\n                }\n            );\n\n            // pareto series\n            var paretoSeries = chart.series.push(\n                am5xy.LineSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: paretoAxis,\n                    valueYField: \"pareto\",\n                    categoryXField: \"country\",\n                    stroke: am5.color(KTUtil.getCssVariableValue('--bs-dark')),\n                    maskBullets: false,\n                })\n            );\n\n            paretoSeries.bullets.push(function () {\n                return am5.Bullet.new(root, {\n                    locationY: 1,\n                    sprite: am5.Circle.new(root, {\n                        radius: 5,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),\n                        stroke: am5.color(KTUtil.getCssVariableValue('--bs-dark'))\n                    }),\n                });\n            });\n\n            series.data.setAll(data);\n            paretoSeries.data.setAll(data);\n\n            // Make stuff animate on load\n            // https://www.amcharts.com/docs/v5/concepts/animations/\n            series.appear();\n            chart.appear(1000, 100);\n        }\n\n        am5.ready(function () {\n            init();\n        });\n\n        // Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget16 = module.exports = KTChartsWidget16;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-16.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-17.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-17.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget17 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_17_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var root;\n\n        var init = function() {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\n            // start and end angle must be set both for chart and series\n            var chart = root.container.children.push(\n                am5percent.PieChart.new(root, {\n                    startAngle: 180,\n                    endAngle: 360,\n                    layout: root.verticalLayout,\n                    innerRadius: am5.percent(50),\n                })\n            );\n\n            // Create series\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\n            // start and end angle must be set both for chart and series\n            var series = chart.series.push(\n                am5percent.PieSeries.new(root, {\n                    startAngle: 180,\n                    endAngle: 360,\n                    valueField: \"value\",\n                    categoryField: \"category\",\n                    alignLabels: false,\n                })\n            );\n\n            series.labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            series.states.create(\"hidden\", {\n                startAngle: 180,\n                endAngle: 180,\n            });\n\n            series.slices.template.setAll({\n                cornerRadius: 5,\n            });\n\n            series.ticks.template.setAll({\n                forceHidden: true,\n            });\n\n            // Set data\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\n            series.data.setAll([\n                { value: 10, category: \"One\", fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')) },\n                { value: 9, category: \"Two\", fill: am5.color(KTUtil.getCssVariableValue('--bs-success')) },\n                { value: 6, category: \"Three\", fill: am5.color(KTUtil.getCssVariableValue('--bs-danger')) },\n                { value: 5, category: \"Four\", fill: am5.color(KTUtil.getCssVariableValue('--bs-warning')) },\n                { value: 4, category: \"Five\", fill: am5.color(KTUtil.getCssVariableValue('--bs-info')) },\n                { value: 3, category: \"Six\", fill: am5.color(KTUtil.getCssVariableValue('--bs-secondary')) }\n            ]);\n\n            series.appear(1000, 100);\n        }\n\n        am5.ready(function () {\n            init();\n        });\n\n        // Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget17 = module.exports = KTChartsWidget17;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-17.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-18.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-18.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget18 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_18_chart\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [{\n                name: 'Spent time',\n                data: [54, 42, 75, 110, 23, 87, 50]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }              \n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['28%'],\n                    borderRadius: 5,                     \n                    dataLabels: {\n                        position: \"top\" // top, center, bottom\n                    },\n                    startingShape: 'flat'\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: true, \n                offsetY: -28,                                             \n                style: {\n                    fontSize: '13px',\n                    colors: [labelColor]\n                },\n                    formatter: function(val) {\n                        return val;// + \"H\";\n                    }                           \n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['QA Analysis', 'Marketing', 'Web Dev', 'Maths', 'Front-end Dev', 'Physics', 'Phylosophy'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }                  \n                },\n                crosshairs: {\n                    fill: {         \n                        gradient: {         \n                            opacityFrom: 0,\n                            opacityTo: 0\n                        }\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    },\n                    formatter: function(val) {\n                        return val + \"H\";\n                    } \n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return  + val + ' hours' \n                    }\n                } \n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-primary-light')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);           \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }         \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget18 = module.exports = KTChartsWidget18;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-18.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-19.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-19.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget19 = (function () {\n    // Private methods\n    var initChart1 = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_19_chart_1\");\n\n        if (!element) {\n            return;\n        }\n\n        var root;\n\n        var init = function() {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/\n            var chart = root.container.children.push(\n                am5radar.RadarChart.new(root, {\n                    panX: false,\n                    panY: false,\n                    wheelX: \"panX\",\n                    wheelY: \"zoomX\",\n                    innerRadius: am5.percent(20),\n                    startAngle: -90,\n                    endAngle: 180,\n                })\n            );\n\n            // Data\n            var data = [\n                {\n                    category: \"Research\",\n                    value: 80,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-info')),\n                    },\n                },\n                {\n                    category: \"Marketing\",\n                    value: 35,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-danger')),\n                    },\n                },\n                {\n                    category: \"Distribution\",\n                    value: 92,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),\n                    },\n                },\n                {\n                    category: \"Human Resources\",\n                    value: 68,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n                    },\n                },\n            ];\n\n            // Add cursor\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor\n            var cursor = chart.set(\n                \"cursor\",\n                am5radar.RadarCursor.new(root, {\n                    behavior: \"zoomX\",\n                })\n            );\n\n            cursor.lineY.set(\"visible\", false);\n\n            // Create axes and their renderers\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n            var xRenderer = am5radar.AxisRendererCircular.new(root, {\n                //minGridDistance: 50\n            });\n\n            xRenderer.labels.template.setAll({\n                radius: 10\n            });\n\n            xRenderer.grid.template.setAll({\n                forceHidden: true,\n            });\n\n            var xAxis = chart.xAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: xRenderer,\n                    min: 0,\n                    max: 100,\n                    strictMinMax: true,\n                    numberFormat: \"#'%'\",\n                    tooltip: am5.Tooltip.new(root, {}),\n                })\n            );\n\n            xAxis.get(\"renderer\").labels.template.setAll({\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\n                fontWeight: \"500\",\n                fontSize: 16,\n            });\n\n            var yRenderer = am5radar.AxisRendererRadial.new(root, {\n                minGridDistance: 20,\n            });\n\n            yRenderer.labels.template.setAll({\n                centerX: am5.p100,\n                fontWeight: \"500\",\n                fontSize: 18,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\n                templateField: \"columnSettings\",\n            });\n\n            yRenderer.grid.template.setAll({\n                forceHidden: true,\n            });\n\n            var yAxis = chart.yAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"category\",\n                    renderer: yRenderer,\n                })\n            );\n\n            yAxis.data.setAll(data);\n\n            // Create series\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n            var series1 = chart.series.push(\n                am5radar.RadarColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    clustered: false,\n                    valueXField: \"full\",\n                    categoryYField: \"category\",\n                    fill: root.interfaceColors.get(\"alternativeBackground\"),\n                })\n            );\n\n            series1.columns.template.setAll({\n                width: am5.p100,\n                fillOpacity: 0.08,\n                strokeOpacity: 0,\n                cornerRadius: 20,\n            });\n\n            series1.data.setAll(data);\n\n            var series2 = chart.series.push(\n                am5radar.RadarColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    clustered: false,\n                    valueXField: \"value\",\n                    categoryYField: \"category\",\n                })\n            );\n\n            series2.columns.template.setAll({\n                width: am5.p100,\n                strokeOpacity: 0,\n                tooltipText: \"{category}: {valueX}%\",\n                cornerRadius: 20,\n                templateField: \"columnSettings\",\n            });\n\n            series2.data.setAll(data);\n\n            // Animate chart and series in\n            // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n            series1.appear(1000);\n            series2.appear(1000);\n            chart.appear(1000, 100);\n        }\n\n        am5.ready(function () {\n            init();\n        });\n\n        // Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n    };\n\n    var initChart2 = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_19_chart_2\");\n\n        var root;\n\n        if (!element) {\n            return;\n        }\n\n        var init = function() {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/\n            var chart = root.container.children.push(\n                am5radar.RadarChart.new(root, {\n                    panX: false,\n                    panY: false,\n                    wheelX: \"panX\",\n                    wheelY: \"zoomX\",\n                    innerRadius: am5.percent(20),\n                    startAngle: -90,\n                    endAngle: 180,\n                })\n            );\n\n            // Data\n            var data = [\n                {\n                    category: \"Research\",\n                    value: 40,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-info')),\n                    },\n                },\n                {\n                    category: \"Marketing\",\n                    value: 50,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-danger')),\n                    },\n                },\n                {\n                    category: \"Distribution\",\n                    value: 80,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')),\n                    },\n                },\n                {\n                    category: \"Human Resources\",\n                    value: 70,\n                    full: 100,\n                    columnSettings: {\n                        fillOpacity: 1,\n                        fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n                    },\n                },\n            ];\n\n            // Add cursor\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Cursor\n            var cursor = chart.set(\n                \"cursor\",\n                am5radar.RadarCursor.new(root, {\n                    behavior: \"zoomX\",\n                })\n            );\n\n            cursor.lineY.set(\"visible\", false);\n\n            // Create axes and their renderers\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n            var xRenderer = am5radar.AxisRendererCircular.new(root, {\n                //minGridDistance: 50\n            });\n\n            xRenderer.labels.template.setAll({\n                radius: 10\n            });\n\n            xRenderer.grid.template.setAll({\n                forceHidden: true,\n            });\n\n            var xAxis = chart.xAxes.push(\n                am5xy.ValueAxis.new(root, {\n                    renderer: xRenderer,\n                    min: 0,\n                    max: 100,\n                    strictMinMax: true,\n                    numberFormat: \"#'%'\",\n                    tooltip: am5.Tooltip.new(root, {}),\n                })\n            );\n\n            var yRenderer = am5radar.AxisRendererRadial.new(root, {\n                minGridDistance: 20,\n            });\n\n            yRenderer.labels.template.setAll({\n                centerX: am5.p100,\n                fontWeight: \"500\",\n                fontSize: 18,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500')),\n                templateField: \"columnSettings\",\n            });\n\n            yRenderer.grid.template.setAll({\n                forceHidden: true,\n            });\n\n            var yAxis = chart.yAxes.push(\n                am5xy.CategoryAxis.new(root, {\n                    categoryField: \"category\",\n                    renderer: yRenderer,\n                })\n            );\n\n            yAxis.data.setAll(data);\n\n            // Create series\n            // https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n            var series1 = chart.series.push(\n                am5radar.RadarColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    clustered: false,\n                    valueXField: \"full\",\n                    categoryYField: \"category\",\n                    fill: root.interfaceColors.get(\"alternativeBackground\"),\n                })\n            );\n\n            series1.columns.template.setAll({\n                width: am5.p100,\n                fillOpacity: 0.08,\n                strokeOpacity: 0,\n                cornerRadius: 20,\n            });\n\n            series1.data.setAll(data);\n\n            var series2 = chart.series.push(\n                am5radar.RadarColumnSeries.new(root, {\n                    xAxis: xAxis,\n                    yAxis: yAxis,\n                    clustered: false,\n                    valueXField: \"value\",\n                    categoryYField: \"category\",\n                })\n            );\n\n            series2.columns.template.setAll({\n                width: am5.p100,\n                strokeOpacity: 0,\n                tooltipText: \"{category}: {valueX}%\",\n                cornerRadius: 20,\n                templateField: \"columnSettings\",\n            });\n\n            series2.data.setAll(data);\n\n            // Animate chart and series in\n            // https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n            series1.appear(1000);\n            series2.appear(1000);\n            chart.appear(1000, 100);\n        }\n\n        am5.ready(function () {\n            init();\n        });\n\n        // Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart1();\n            initChart2();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget19 = module.exports = KTChartsWidget19;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-19.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-2.js":
/*!********************************************!*\
  !*** ../src/js/widgets/charts/widget-2.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget2 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_2\");\n\n        if (!element) {\n            return;\n        }\n\n        var color = element.getAttribute('data-kt-chart-color');\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var strokeColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n        var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light');\n\n        var options = {\n            series: [{\n                name: 'Overview',\n                data: [15, 15, 45, 45, 25, 25, 55, 55, 20, 20, 37]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                zoom: {\n                    enabled: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false,\n                    position: 'front',\n                    stroke: {\n                        color: strokeColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 60,\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val\n                    }\n                }\n            },\n            colors: [lightColor],\n            markers: {\n                colors: lightColor,\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart();\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget2 = module.exports = KTChartsWidget2;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-2.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-20.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-20.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget20 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n    \n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_20\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-danger');\n        var lightColor = KTUtil.getCssVariableValue('--bs-danger');\n        var chartInfo = element.getAttribute('data-kt-chart-info');\n\n        var options = {\n            series: [{\n                name: chartInfo,\n                data: [34.5,34.5,35,35,35.5,35.5,35,35,35.5,35.5,35,35,34.5,34.5,35,35,35.4,35.4,35]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 19', 'Apr 21', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                max: 36.3,\n                min: 33,\n                tickAmount: 6,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return '$' + parseInt(10 * val)\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return '$' + parseInt(10 * val)\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);           \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget20 = module.exports = KTChartsWidget20;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-20.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-21.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-21.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget21 = (function () {\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_21\");\n\n        if (!element) {\n            return;\n        }\n\n        var options = {\n            \"type\": \"serial\",\n            \"theme\": \"light\",\n            \"legend\": {\n                \"equalWidths\": false,\n                \"useGraphSettings\": true,\n                \"valueAlign\": \"left\",\n                \"valueWidth\": 120\n            },\n            \"dataProvider\": [{\n                \"date\": \"2012-01-01\",\n                \"distance\": 227,\n                \"townName\": \"New York\",\n                \"townName2\": \"New York\",\n                \"townSize\": 25,\n                \"latitude\": 40.71,\n                \"duration\": 408\n            }, {\n                \"date\": \"2012-01-02\",\n                \"distance\": 371,\n                \"townName\": \"Washington\",\n                \"townSize\": 14,\n                \"latitude\": 38.89,\n                \"duration\": 482\n            }, {\n                \"date\": \"2012-01-03\",\n                \"distance\": 433,\n                \"townName\": \"Wilmington\",\n                \"townSize\": 6,\n                \"latitude\": 34.22,\n                \"duration\": 562\n            }, {\n                \"date\": \"2012-01-04\",\n                \"distance\": 345,\n                \"townName\": \"Jacksonville\",\n                \"townSize\": 7,\n                \"latitude\": 30.35,\n                \"duration\": 379\n            }, {\n                \"date\": \"2012-01-05\",\n                \"distance\": 480,\n                \"townName\": \"Miami\",\n                \"townName2\": \"Miami\",\n                \"townSize\": 10,\n                \"latitude\": 25.83,\n                \"duration\": 501\n            }, {\n                \"date\": \"2012-01-06\",\n                \"distance\": 386,\n                \"townName\": \"Tallahassee\",\n                \"townSize\": 7,\n                \"latitude\": 30.46,\n                \"duration\": 443\n            }, {\n                \"date\": \"2012-01-07\",\n                \"distance\": 348,\n                \"townName\": \"New Orleans\",\n                \"townSize\": 10,\n                \"latitude\": 29.94,\n                \"duration\": 405\n            }, {\n                \"date\": \"2012-01-08\",\n                \"distance\": 238,\n                \"townName\": \"Houston\",\n                \"townName2\": \"Houston\",\n                \"townSize\": 16,\n                \"latitude\": 29.76,\n                \"duration\": 309\n            }, {\n                \"date\": \"2012-01-09\",\n                \"distance\": 218,\n                \"townName\": \"Dalas\",\n                \"townSize\": 17,\n                \"latitude\": 32.8,\n                \"duration\": 287\n            }, {\n                \"date\": \"2012-01-10\",\n                \"distance\": 349,\n                \"townName\": \"Oklahoma City\",\n                \"townSize\": 11,\n                \"latitude\": 35.49,\n                \"duration\": 485\n            }, {\n                \"date\": \"2012-01-11\",\n                \"distance\": 603,\n                \"townName\": \"Kansas City\",\n                \"townSize\": 10,\n                \"latitude\": 39.1,\n                \"duration\": 890\n            }, {\n                \"date\": \"2012-01-12\",\n                \"distance\": 534,\n                \"townName\": \"Denver\",\n                \"townName2\": \"Denver\",\n                \"townSize\": 18,\n                \"latitude\": 39.74,\n                \"duration\": 810\n            }, {\n                \"date\": \"2012-01-13\",\n                \"townName\": \"Salt Lake City\",\n                \"townSize\": 12,\n                \"distance\": 425,\n                \"duration\": 670,\n                \"latitude\": 40.75,\n                \"dashLength\": 8,\n                \"alpha\": 0.4\n            }, {\n                \"date\": \"2012-01-14\",\n                \"latitude\": 36.1,\n                \"duration\": 470,\n                \"townName\": \"Las Vegas\",\n                \"townName2\": \"Las Vegas\"\n            }, {\n                \"date\": \"2012-01-15\"\n            }, {\n                \"date\": \"2012-01-16\"\n            }, {\n                \"date\": \"2012-01-17\"\n            }, {\n                \"date\": \"2012-01-18\"\n            }, {\n                \"date\": \"2012-01-19\"\n            }],\n            \"valueAxes\": [{\n                \"id\": \"distanceAxis\",\n                \"axisAlpha\": 0,\n                \"gridAlpha\": 0,\n                \"position\": \"left\",\n                \"title\": \"distance\"\n            }, {\n                \"id\": \"latitudeAxis\",\n                \"axisAlpha\": 0,\n                \"gridAlpha\": 0,\n                \"labelsEnabled\": false,\n                \"position\": \"right\"\n            }, {\n                \"id\": \"durationAxis\",\n                \"duration\": \"mm\",\n                \"durationUnits\": {\n                    \"hh\": \"h \",\n                    \"mm\": \"min\"\n                },\n                \"axisAlpha\": 0,\n                \"gridAlpha\": 0,\n                \"inside\": true,\n                \"position\": \"right\",\n                \"title\": \"duration\"\n            }],\n            \"graphs\": [{\n                \"alphaField\": \"alpha\",\n                \"balloonText\": \"[[value]] miles\",\n                \"dashLengthField\": \"dashLength\",\n                \"fillAlphas\": 0.7,\n                \"legendPeriodValueText\": \"total: [[value.sum]] mi\",\n                \"legendValueText\": \"[[value]] mi\",\n                \"title\": \"distance\",\n                \"type\": \"column\",\n                \"valueField\": \"distance\",\n                \"valueAxis\": \"distanceAxis\"\n            }, {\n                \"balloonText\": \"latitude:[[value]]\",\n                \"bullet\": \"round\",\n                \"bulletBorderAlpha\": 1,\n                \"useLineColorForBulletBorder\": true,\n                \"bulletColor\": \"#FFFFFF\",\n                \"bulletSizeField\": \"townSize\",\n                \"dashLengthField\": \"dashLength\",\n                \"descriptionField\": \"townName\",\n                \"labelPosition\": \"right\",\n                \"labelText\": \"[[townName2]]\",\n                \"legendValueText\": \"[[value]]/[[description]]\",\n                \"title\": \"latitude/city\",\n                \"fillAlphas\": 0,\n                \"valueField\": \"latitude\",\n                \"valueAxis\": \"latitudeAxis\"\n            }, {\n                \"bullet\": \"square\",\n                \"bulletBorderAlpha\": 1,\n                \"bulletBorderThickness\": 1,\n                \"dashLengthField\": \"dashLength\",\n                \"legendValueText\": \"[[value]]\",\n                \"title\": \"duration\",\n                \"fillAlphas\": 0,\n                \"valueField\": \"duration\",\n                \"valueAxis\": \"durationAxis\"\n            }],\n            \"chartCursor\": {\n                \"categoryBalloonDateFormat\": \"DD\",\n                \"cursorAlpha\": 0.1,\n                \"cursorColor\": \"#000000\",\n                \"fullWidth\": true,\n                \"valueBalloonsEnabled\": false,\n                \"zoomable\": false\n            },\n            \"dataDateFormat\": \"YYYY-MM-DD\",\n            \"categoryField\": \"date\",\n            \"categoryAxis\": {\n                \"dateFormats\": [{\n                    \"period\": \"DD\",\n                    \"format\": \"DD\"\n                }, {\n                    \"period\": \"WW\",\n                    \"format\": \"MMM DD\"\n                }, {\n                    \"period\": \"MM\",\n                    \"format\": \"MMM\"\n                }, {\n                    \"period\": \"YYYY\",\n                    \"format\": \"YYYY\"\n                }],\n                \"parseDates\": true,\n                \"autoGridCount\": false,\n                \"axisColor\": \"#555555\",\n                \"gridAlpha\": 0.1,\n                \"gridColor\": \"#FFFFFF\",\n                \"gridCount\": 50\n            },\n            \"export\": {\n                \"enabled\": true\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.render();\n        }, 200);  \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget21 = module.exports = KTChartsWidget21;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-21.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-22.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-22.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget22 = function () {\n    // Private methods\n    var initChart = function(tabSelector, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);        \n\n        if (!element) {\n            return;\n        }  \n          \n        var height = parseInt(KTUtil.css(element, 'height'));\n        \n        var options = {\n            series: data,                 \n            chart: {           \n                fontFamily: 'inherit', \n                type: 'donut',\n                width: 250,\n            },\n            plotOptions: {\n                pie: {\n                    donut: {\n                        size: '50%',\n                        labels: {\n                            value: {\n                                fontSize: '10px'\n                            }\n                        }                        \n                    }\n                }\n            },\n            colors: [\n                KTUtil.getCssVariableValue('--bs-info'), \n                KTUtil.getCssVariableValue('--bs-success'), \n                KTUtil.getCssVariableValue('--bs-primary'), \n                KTUtil.getCssVariableValue('--bs-danger') \n            ],           \n            stroke: {\n              width: 0\n            },\n            labels: ['Sales', 'Sales', 'Sales', 'Sales'],\n            legend: {\n                show: false,\n            },\n            fill: {\n                type: 'false',          \n            }     \n        };                     \n\n        var chart = new ApexCharts(element, options);\n\n        var init = false;\n\n        var tab = document.querySelector(tabSelector);\n        \n        if (initByDefault === true) {\n            chart.render();\n            init = true;\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (init == false) {\n                chart.render();\n                init = true;\n            }\n        })\n    }\n\n    // Public methods\n    return {\n        init: function () {           \n            initChart('#kt_chart_widgets_22_tab_1', '#kt_chart_widgets_22_chart_1', [20, 100, 15, 25], true);\n            initChart('#kt_chart_widgets_22_tab_2', '#kt_chart_widgets_22_chart_2', [70, 13, 11, 2], false);              \n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget22 = module.exports = KTChartsWidget22;\n}\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-22.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-23.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-23.js ***!
  \*********************************************/
/***/ ((module) => {

eval("// Class definition\nvar KTChartsWidget23 = (function () {\n\t// Private methods\n\tvar initChart = function () {\n\t\t// Check if amchart library is included\n\t\tif (typeof am5 === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element = document.getElementById(\"kt_charts_widget_23\");\n\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar root;\n\n\t\tvar init = function() {\n\t\t\t// Create root element\n\t\t\t// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n\t\t\troot = am5.Root.new(element);\n\n\t\t\t// Set themes\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/themes/\n\t\t\troot.setThemes([am5themes_Animated.new(root)]);\n\n\t\t\t// Create chart\n\t\t\t// https://www.amcharts.com/docs/v5/charts/xy-chart/\n\t\t\tvar chart = root.container.children.push(\n\t\t\t\tam5xy.XYChart.new(root, {\n\t\t\t\t\tpanX: false,\n\t\t\t\t\tpanY: false,\n\t\t\t\t\tlayout: root.verticalLayout,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tvar data = [\n\t\t\t\t{\n\t\t\t\t\tyear: \"2016\",\n\t\t\t\t\tincome: 23.5,\n\t\t\t\t\texpenses: 21.1,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tyear: \"2017\",\n\t\t\t\t\tincome: 26.2,\n\t\t\t\t\texpenses: 30.5,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tyear: \"2018\",\n\t\t\t\t\tincome: 30.1,\n\t\t\t\t\texpenses: 34.9,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tyear: \"2019\",\n\t\t\t\t\tincome: 29.5,\n\t\t\t\t\texpenses: 31.1,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tyear: \"2020\",\n\t\t\t\t\tincome: 30.6,\n\t\t\t\t\texpenses: 28.2,\n\t\t\t\t\tstrokeSettings: {\n\t\t\t\t\t\tstrokeWidth: 3,\n\t\t\t\t\t\tstrokeDasharray: [5, 5],\n\t\t\t\t\t},\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tyear: \"2021\",\n\t\t\t\t\tincome: 40.6,\n\t\t\t\t\texpenses: 28.2,\n\t\t\t\t\tstrokeSettings: {\n\t\t\t\t\t\tstrokeWidth: 3,\n\t\t\t\t\t\tstrokeDasharray: [5, 5],\n\t\t\t\t\t},\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tyear: \"2022\",\n\t\t\t\t\tincome: 34.1,\n\t\t\t\t\texpenses: 32.9,\n\t\t\t\t\tstrokeSettings: {\n\t\t\t\t\t\tstrokeWidth: 3,\n\t\t\t\t\t\tstrokeDasharray: [5, 5],\n\t\t\t\t\t},\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t];\n\n\t\t\t// Create axes\n\t\t\t// https://www.amcharts.com/docs/v5/charts/xy-chart/axes/\n\t\t\tvar xAxis = chart.xAxes.push(\n\t\t\t\tam5xy.CategoryAxis.new(root, {\n\t\t\t\t\tcategoryField: \"year\",\n\t\t\t\t\trenderer: am5xy.AxisRendererX.new(root, {}),\n\t\t\t\t\t//tooltip: am5.Tooltip.new(root, {}),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\txAxis.data.setAll(data);\n\n\t\t\txAxis.get(\"renderer\").labels.template.setAll({\n\t\t\t\tpaddingTop: 20,\n\t\t\t\tfontWeight: \"400\",\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\")),\n\t\t\t});\n\n\t\t\txAxis.get(\"renderer\").grid.template.setAll({\n\t\t\t\tdisabled: true,\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t});\n\n\t\t\tvar yAxis = chart.yAxes.push(\n\t\t\t\tam5xy.ValueAxis.new(root, {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\textraMax: 0.1,\n\t\t\t\t\trenderer: am5xy.AxisRendererY.new(root, {}),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tyAxis.get(\"renderer\").labels.template.setAll({\n\t\t\t\tpaddingTop: 0,\n\t\t\t\tfontWeight: \"400\",\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\")),\n\t\t\t});\n\n\t\t\tyAxis.get(\"renderer\").grid.template.setAll({\n\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-300\")),\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tstrokeOpacity: 1,\n\t\t\t\tstrokeDasharray: [3],\n\t\t\t});\n\n\t\t\t// Add series\n\t\t\t// https://www.amcharts.com/docs/v5/charts/xy-chart/series/\n\t\t\tvar series1 = chart.series.push(\n\t\t\t\tam5xy.ColumnSeries.new(root, {\n\t\t\t\t\tname: \"Income\",\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"income\",\n\t\t\t\t\tcategoryXField: \"year\",\n\t\t\t\t\ttooltip: am5.Tooltip.new(root, {\n\t\t\t\t\t\tpointerOrientation: \"horizontal\",\n\t\t\t\t\t\tlabelText: \"{name} in {categoryX}: {valueY} {info}\",\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries1.columns.template.setAll({\n\t\t\t\ttooltipY: am5.percent(10),\n\t\t\t\ttemplateField: \"columnSettings\",\n\t\t\t});\n\n\t\t\tseries1.data.setAll(data);\n\n\t\t\tvar series2 = chart.series.push(\n\t\t\t\tam5xy.LineSeries.new(root, {\n\t\t\t\t\tname: \"Expenses\",\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"expenses\",\n\t\t\t\t\tcategoryXField: \"year\",\n\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n\t\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n\t\t\t\t\ttooltip: am5.Tooltip.new(root, {\n\t\t\t\t\t\tpointerOrientation: \"horizontal\",\n\t\t\t\t\t\tlabelText: \"{name} in {categoryX}: {valueY} {info}\",\n\t\t\t\t\t}),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries2.strokes.template.setAll({\n\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n\t\t\t});\n\n\t\t\tseries2.strokes.template.setAll({\n\t\t\t\tstrokeWidth: 3,\n\t\t\t\ttemplateField: \"strokeSettings\",\n\t\t\t});\n\n\t\t\tseries2.data.setAll(data);\n\n\t\t\tseries2.bullets.push(function () {\n\t\t\t\treturn am5.Bullet.new(root, {\n\t\t\t\t\tsprite: am5.Circle.new(root, {\n\t\t\t\t\t\tstrokeWidth: 3,\n\t\t\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n\t\t\t\t\t\tradius: 5,\n\t\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-success-light\")),\n\t\t\t\t\t}),\n\t\t\t\t});\n\t\t\t});\n\n\t\t\tseries1.columns.template.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\tcornerRadiusBR: 0,\n\t\t\t\tcornerRadiusTR: 6,\n\t\t\t\tcornerRadiusBL: 0,\n\t\t\t\tcornerRadiusTL: 6,\n\t\t\t});\n\n\t\t\tchart.set(\"cursor\", am5xy.XYCursor.new(root, {}));\n\n\t\t\tchart.get(\"cursor\").lineX.setAll({ visible: false });\n\t\t\tchart.get(\"cursor\").lineY.setAll({ visible: false });\n\n\t\t\t// Add legend\n\t\t\t// https://www.amcharts.com/docs/v5/charts/xy-chart/legend-xy-series/\n\t\t\tvar legend = chart.children.push(\n\t\t\t\tam5.Legend.new(root, {\n\t\t\t\t\tcenterX: am5.p50,\n\t\t\t\t\tx: am5.p50,\n\t\t\t\t})\n\t\t\t);\n\t\t\tlegend.data.setAll(chart.series.values);\n\n\t\t\tlegend.labels.template.setAll({\n\t\t\t\tfontWeight: \"600\",\n\t\t\t\tfontSize: 14,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\")),\n\t\t\t});\n\n\t\t\t// Make stuff animate on load\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/animations/\n\t\t\tchart.appear(1000, 100);\n\t\t\tseries1.appear();\n\t\t}\n\n\t\tam5.ready(function () {\n\t\t\tinit();\n\t\t}); // end am5.ready()\n\n\t\t// Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n\t};\n\n\t// Public methods\n\treturn {\n\t\tinit: function () {\n\t\t\tinitChart();\n\t\t},\n\t};\n})();\n\n// Webpack support\nif (true) {\n\twindow.KTChartsWidget23 = module.exports = KTChartsWidget23;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-23.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-24.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-24.js ***!
  \*********************************************/
/***/ ((module) => {

eval("// Class definition\nvar KTChartsWidget24 = (function () {\n\t// Private methods\n\tvar initChart = function () {\n\t\t// Check if amchart library is included\n\t\tif (typeof am5 === 'undefined') {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element = document.getElementById(\"kt_charts_widget_24\");\n\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar root;\n\n\t\tvar init = function() {\n\t\t\tvar usData = [{\n\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\"male\": 10175713,\n\t\t\t\t\"female\": 9736305\n\t\t\t}, {\n\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\"male\": 10470147,\n\t\t\t\t\"female\": 10031835\n\t\t\t}, {\n\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\"male\": 10561873,\n\t\t\t\t\"female\": 10117913\n\t\t\t}, {\n\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\"male\": 6447043,\n\t\t\t\t\"female\": 6142996\n\t\t\t}, {\n\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\"male\": 9349745,\n\t\t\t\t\"female\": 8874664\n\t\t\t}, {\n\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\"male\": 6722248,\n\t\t\t\t\"female\": 6422017\n\t\t\t}, {\n\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\"male\": 10989596,\n\t\t\t\t\"female\": 10708414\n\t\t\t}, {\n\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\"male\": 10625791,\n\t\t\t\t\"female\": 10557848\n\t\t\t}, {\n\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\"male\": 9899569,\n\t\t\t\t\"female\": 9956213\n\t\t\t}, {\n\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\"male\": 10330986,\n\t\t\t\t\"female\": 10465142\n\t\t\t}, {\n\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\"male\": 10571984,\n\t\t\t\t\"female\": 10798384\n\t\t\t}, {\n\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\"male\": 11051409,\n\t\t\t\t\"female\": 11474081\n\t\t\t}, {\n\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\"male\": 10173646,\n\t\t\t\t\"female\": 10828301\n\t\t\t}, {\n\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\"male\": 8824852,\n\t\t\t\t\"female\": 9590829\n\t\t\t}, {\n\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\"male\": 6876271,\n\t\t\t\t\"female\": 7671175\n\t\t\t}, {\n\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\"male\": 4867513,\n\t\t\t\t\"female\": 5720208\n\t\t\t}, {\n\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\"male\": 3416432,\n\t\t\t\t\"female\": 4313697\n\t\t\t}, {\n\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\"male\": 2378691,\n\t\t\t\t\"female\": 3432738\n\t\t\t}, {\n\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\"male\": 2000771,\n\t\t\t\t\"female\": 3937981\n\t\t\t}];            \n\t\t\t\n\t\t\tvar stateData = {\n\t\t\t\"AK\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 28346,\n\t\t\t\t\t\"female\": 26607\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 26350,\n\t\t\t\t\t\"female\": 24821\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 15929,\n\t\t\t\t\t\"female\": 14735\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 25360,\n\t\t\t\t\t\"female\": 19030\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 20755,\n\t\t\t\t\t\"female\": 15663\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 32415,\n\t\t\t\t\t\"female\": 28259\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 28232,\n\t\t\t\t\t\"female\": 25272\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 24217,\n\t\t\t\t\t\"female\": 22002\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 23429,\n\t\t\t\t\t\"female\": 21968\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 24764,\n\t\t\t\t\t\"female\": 22784\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 26276,\n\t\t\t\t\t\"female\": 25063\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 27623,\n\t\t\t\t\t\"female\": 25503\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 26300,\n\t\t\t\t\t\"female\": 25198\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 21798,\n\t\t\t\t\t\"female\": 18970\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 13758,\n\t\t\t\t\t\"female\": 12899\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 8877,\n\t\t\t\t\t\"female\": 8269\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 4834,\n\t\t\t\t\t\"female\": 4894\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 3015,\n\t\t\t\t\t\"female\": 3758\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 1882,\n\t\t\t\t\t\"female\": 3520\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"AL\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 150860,\n\t\t\t\t\t\"female\": 144194\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 161596,\n\t\t\t\t\t\"female\": 156841\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 98307,\n\t\t\t\t\t\"female\": 94462\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 142173,\n\t\t\t\t\t\"female\": 136514\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 99164,\n\t\t\t\t\t\"female\": 101444\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 154977,\n\t\t\t\t\t\"female\": 159815\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 150036,\n\t\t\t\t\t\"female\": 156764\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 141667,\n\t\t\t\t\t\"female\": 152220\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 155693,\n\t\t\t\t\t\"female\": 159835\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 156413,\n\t\t\t\t\t\"female\": 163909\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 156380,\n\t\t\t\t\t\"female\": 149334\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 166863,\n\t\t\t\t\t\"female\": 178187\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 156994,\n\t\t\t\t\t\"female\": 169355\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 140659,\n\t\t\t\t\t\"female\": 156638\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 112724,\n\t\t\t\t\t\"female\": 128494\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 79258,\n\t\t\t\t\t\"female\": 96507\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 55122,\n\t\t\t\t\t\"female\": 75371\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 36252,\n\t\t\t\t\t\"female\": 53976\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 25955,\n\t\t\t\t\t\"female\": 55667\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"AR\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 98246,\n\t\t\t\t\t\"female\": 93534\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 99707,\n\t\t\t\t\t\"female\": 96862\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 60521,\n\t\t\t\t\t\"female\": 57735\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 87209,\n\t\t\t\t\t\"female\": 81936\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 59114,\n\t\t\t\t\t\"female\": 59387\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 96190,\n\t\t\t\t\t\"female\": 96573\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 96273,\n\t\t\t\t\t\"female\": 95632\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 90371,\n\t\t\t\t\t\"female\": 90620\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 91881,\n\t\t\t\t\t\"female\": 93777\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 93238,\n\t\t\t\t\t\"female\": 95476\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 103613,\n\t\t\t\t\t\"female\": 97603\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 98960,\n\t\t\t\t\t\"female\": 102953\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 92133,\n\t\t\t\t\t\"female\": 100676\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 84082,\n\t\t\t\t\t\"female\": 90243\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 70121,\n\t\t\t\t\t\"female\": 76669\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 52154,\n\t\t\t\t\t\"female\": 61686\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 36856,\n\t\t\t\t\t\"female\": 44371\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 23098,\n\t\t\t\t\t\"female\": 35328\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 18146,\n\t\t\t\t\t\"female\": 35234\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"AZ\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 221511,\n\t\t\t\t\t\"female\": 212324\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 233530,\n\t\t\t\t\t\"female\": 222965\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 138926,\n\t\t\t\t\t\"female\": 132399\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 200240,\n\t\t\t\t\t\"female\": 187786\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 142852,\n\t\t\t\t\t\"female\": 132457\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 231488,\n\t\t\t\t\t\"female\": 215985\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 223754,\n\t\t\t\t\t\"female\": 214946\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 206718,\n\t\t\t\t\t\"female\": 202482\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 213591,\n\t\t\t\t\t\"female\": 210621\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 205830,\n\t\t\t\t\t\"female\": 206081\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 231249,\n\t\t\t\t\t\"female\": 224385\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 210386,\n\t\t\t\t\t\"female\": 218328\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 192614,\n\t\t\t\t\t\"female\": 209767\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 178325,\n\t\t\t\t\t\"female\": 200313\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 155852,\n\t\t\t\t\t\"female\": 174407\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 121878,\n\t\t\t\t\t\"female\": 136840\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 87470,\n\t\t\t\t\t\"female\": 96953\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 58553,\n\t\t\t\t\t\"female\": 69559\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 44321,\n\t\t\t\t\t\"female\": 74242\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"CA\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 1283763,\n\t\t\t\t\t\"female\": 1228013\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 1297819,\n\t\t\t\t\t\"female\": 1245016\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 811114,\n\t\t\t\t\t\"female\": 773387\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 1179739,\n\t\t\t\t\t\"female\": 1100368\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 883323,\n\t\t\t\t\t\"female\": 825833\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 1478557,\n\t\t\t\t\t\"female\": 1387516\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 1399835,\n\t\t\t\t\t\"female\": 1348430\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 1287803,\n\t\t\t\t\t\"female\": 1271908\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 1308311,\n\t\t\t\t\t\"female\": 1309907\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 1306719,\n\t\t\t\t\t\"female\": 1303528\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 1295030,\n\t\t\t\t\t\"female\": 1240201\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 1305323,\n\t\t\t\t\t\"female\": 1330645\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 1161821,\n\t\t\t\t\t\"female\": 1223440\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 975874,\n\t\t\t\t\t\"female\": 1060921\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 734814,\n\t\t\t\t\t\"female\": 833926\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 515115,\n\t\t\t\t\t\"female\": 604615\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 363282,\n\t\t\t\t\t\"female\": 455568\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 264126,\n\t\t\t\t\t\"female\": 363937\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 234767,\n\t\t\t\t\t\"female\": 427170\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"CO\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 173245,\n\t\t\t\t\t\"female\": 163629\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 179579,\n\t\t\t\t\t\"female\": 170930\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 102577,\n\t\t\t\t\t\"female\": 98569\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 152713,\n\t\t\t\t\t\"female\": 139268\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 116654,\n\t\t\t\t\t\"female\": 108238\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 204625,\n\t\t\t\t\t\"female\": 188680\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 200624,\n\t\t\t\t\t\"female\": 188616\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 183386,\n\t\t\t\t\t\"female\": 175326\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 184422,\n\t\t\t\t\t\"female\": 173654\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 174730,\n\t\t\t\t\t\"female\": 172981\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 179803,\n\t\t\t\t\t\"female\": 173524\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 183543,\n\t\t\t\t\t\"female\": 187757\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 170717,\n\t\t\t\t\t\"female\": 179537\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 150815,\n\t\t\t\t\t\"female\": 155924\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 111094,\n\t\t\t\t\t\"female\": 119530\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 72252,\n\t\t\t\t\t\"female\": 80168\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 49142,\n\t\t\t\t\t\"female\": 59393\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 31894,\n\t\t\t\t\t\"female\": 43881\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 26852,\n\t\t\t\t\t\"female\": 50634\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"CT\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 97647,\n\t\t\t\t\t\"female\": 93798\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 118032,\n\t\t\t\t\t\"female\": 113043\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 75546,\n\t\t\t\t\t\"female\": 71687\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 106966,\n\t\t\t\t\t\"female\": 102763\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 71125,\n\t\t\t\t\t\"female\": 64777\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 112189,\n\t\t\t\t\t\"female\": 108170\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 107223,\n\t\t\t\t\t\"female\": 109096\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 102424,\n\t\t\t\t\t\"female\": 106008\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 116664,\n\t\t\t\t\t\"female\": 123744\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 131872,\n\t\t\t\t\t\"female\": 139406\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 110043,\n\t\t\t\t\t\"female\": 104940\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 138644,\n\t\t\t\t\t\"female\": 146532\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 126670,\n\t\t\t\t\t\"female\": 132895\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 104701,\n\t\t\t\t\t\"female\": 114339\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 80178,\n\t\t\t\t\t\"female\": 91052\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 55237,\n\t\t\t\t\t\"female\": 65488\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 38844,\n\t\t\t\t\t\"female\": 51544\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 28908,\n\t\t\t\t\t\"female\": 43036\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 28694,\n\t\t\t\t\t\"female\": 59297\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"DC\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 20585,\n\t\t\t\t\t\"female\": 19848\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 12723,\n\t\t\t\t\t\"female\": 11991\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 7740,\n\t\t\t\t\t\"female\": 7901\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 22350,\n\t\t\t\t\t\"female\": 25467\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 15325,\n\t\t\t\t\t\"female\": 19085\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 35295,\n\t\t\t\t\t\"female\": 41913\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 32716,\n\t\t\t\t\t\"female\": 35553\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 23748,\n\t\t\t\t\t\"female\": 24922\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 21158,\n\t\t\t\t\t\"female\": 20113\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 19279,\n\t\t\t\t\t\"female\": 18956\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 14999,\n\t\t\t\t\t\"female\": 15518\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 19249,\n\t\t\t\t\t\"female\": 19279\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 17592,\n\t\t\t\t\t\"female\": 18716\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 14272,\n\t\t\t\t\t\"female\": 17892\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 9740,\n\t\t\t\t\t\"female\": 13375\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 8221,\n\t\t\t\t\t\"female\": 9761\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 5071,\n\t\t\t\t\t\"female\": 7601\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 3399,\n\t\t\t\t\t\"female\": 5619\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 3212,\n\t\t\t\t\t\"female\": 7300\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"DE\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 28382,\n\t\t\t\t\t\"female\": 27430\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 29482,\n\t\t\t\t\t\"female\": 27484\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 17589,\n\t\t\t\t\t\"female\": 16828\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 26852,\n\t\t\t\t\t\"female\": 26911\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 19006,\n\t\t\t\t\t\"female\": 18413\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 30933,\n\t\t\t\t\t\"female\": 31146\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 28602,\n\t\t\t\t\t\"female\": 29431\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 26498,\n\t\t\t\t\t\"female\": 28738\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 27674,\n\t\t\t\t\t\"female\": 28519\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 30582,\n\t\t\t\t\t\"female\": 32924\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 28224,\n\t\t\t\t\t\"female\": 28735\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 32444,\n\t\t\t\t\t\"female\": 35052\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 29048,\n\t\t\t\t\t\"female\": 34377\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 27925,\n\t\t\t\t\t\"female\": 30017\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 22767,\n\t\t\t\t\t\"female\": 26707\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 17121,\n\t\t\t\t\t\"female\": 19327\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 11479,\n\t\t\t\t\t\"female\": 14264\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 7473,\n\t\t\t\t\t\"female\": 10353\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 6332,\n\t\t\t\t\t\"female\": 11385\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"FL\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 552054,\n\t\t\t\t\t\"female\": 529003\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 582351,\n\t\t\t\t\t\"female\": 558377\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 363538,\n\t\t\t\t\t\"female\": 345048\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 528013,\n\t\t\t\t\t\"female\": 498162\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 385515,\n\t\t\t\t\t\"female\": 368754\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 641710,\n\t\t\t\t\t\"female\": 622134\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 602467,\n\t\t\t\t\t\"female\": 602634\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 579722,\n\t\t\t\t\t\"female\": 585089\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 623074,\n\t\t\t\t\t\"female\": 639410\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 659376,\n\t\t\t\t\t\"female\": 677305\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 567479,\n\t\t\t\t\t\"female\": 543273\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 687625,\n\t\t\t\t\t\"female\": 723103\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 626363,\n\t\t\t\t\t\"female\": 685728\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 566282,\n\t\t\t\t\t\"female\": 651192\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 517513,\n\t\t\t\t\t\"female\": 589377\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 407275,\n\t\t\t\t\t\"female\": 470688\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 305530,\n\t\t\t\t\t\"female\": 361107\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 219362,\n\t\t\t\t\t\"female\": 281016\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 184760,\n\t\t\t\t\t\"female\": 314363\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"GA\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 338979,\n\t\t\t\t\t\"female\": 326326\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 356404,\n\t\t\t\t\t\"female\": 351833\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 211908,\n\t\t\t\t\t\"female\": 203412\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 305617,\n\t\t\t\t\t\"female\": 289233\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 214032,\n\t\t\t\t\t\"female\": 206526\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 342885,\n\t\t\t\t\t\"female\": 343115\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 333159,\n\t\t\t\t\t\"female\": 348125\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 325121,\n\t\t\t\t\t\"female\": 345251\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 348120,\n\t\t\t\t\t\"female\": 363703\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 343559,\n\t\t\t\t\t\"female\": 358754\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 362147,\n\t\t\t\t\t\"female\": 340071\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 338424,\n\t\t\t\t\t\"female\": 359362\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 294734,\n\t\t\t\t\t\"female\": 325653\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 254497,\n\t\t\t\t\t\"female\": 285276\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 198714,\n\t\t\t\t\t\"female\": 226714\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 135107,\n\t\t\t\t\t\"female\": 164091\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 88135,\n\t\t\t\t\t\"female\": 115830\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 53792,\n\t\t\t\t\t\"female\": 84961\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 37997,\n\t\t\t\t\t\"female\": 85126\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"HI\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 46668,\n\t\t\t\t\t\"female\": 44389\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 42590,\n\t\t\t\t\t\"female\": 41289\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 24759,\n\t\t\t\t\t\"female\": 23961\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 39937,\n\t\t\t\t\t\"female\": 32348\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 35270,\n\t\t\t\t\t\"female\": 28495\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 58033,\n\t\t\t\t\t\"female\": 48700\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 51544,\n\t\t\t\t\t\"female\": 47286\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 44144,\n\t\t\t\t\t\"female\": 42208\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 45731,\n\t\t\t\t\t\"female\": 43404\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 44336,\n\t\t\t\t\t\"female\": 44134\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 44115,\n\t\t\t\t\t\"female\": 40426\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 46481,\n\t\t\t\t\t\"female\": 46908\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 45959,\n\t\t\t\t\t\"female\": 47379\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 42420,\n\t\t\t\t\t\"female\": 43735\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 34846,\n\t\t\t\t\t\"female\": 36670\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 22981,\n\t\t\t\t\t\"female\": 25496\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 15219,\n\t\t\t\t\t\"female\": 18755\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 11142,\n\t\t\t\t\t\"female\": 17952\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 13696,\n\t\t\t\t\t\"female\": 22893\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"IA\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 100400,\n\t\t\t\t\t\"female\": 96170\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 104674,\n\t\t\t\t\t\"female\": 98485\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 62452,\n\t\t\t\t\t\"female\": 59605\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 96966,\n\t\t\t\t\t\"female\": 91782\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 66307,\n\t\t\t\t\t\"female\": 62504\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 98079,\n\t\t\t\t\t\"female\": 93653\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 100924,\n\t\t\t\t\t\"female\": 97248\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 90980,\n\t\t\t\t\t\"female\": 89632\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 92961,\n\t\t\t\t\t\"female\": 90218\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 98877,\n\t\t\t\t\t\"female\": 96654\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 104279,\n\t\t\t\t\t\"female\": 100558\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 109267,\n\t\t\t\t\t\"female\": 110142\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 104021,\n\t\t\t\t\t\"female\": 106042\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 95379,\n\t\t\t\t\t\"female\": 95499\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 68276,\n\t\t\t\t\t\"female\": 73624\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 50414,\n\t\t\t\t\t\"female\": 56973\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 37867,\n\t\t\t\t\t\"female\": 48121\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 27523,\n\t\t\t\t\t\"female\": 39851\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 24949,\n\t\t\t\t\t\"female\": 52170\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"ID\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 58355,\n\t\t\t\t\t\"female\": 56478\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 62528,\n\t\t\t\t\t\"female\": 59881\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 36373,\n\t\t\t\t\t\"female\": 33687\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 45752,\n\t\t\t\t\t\"female\": 45590\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 34595,\n\t\t\t\t\t\"female\": 30216\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 53998,\n\t\t\t\t\t\"female\": 52077\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 54217,\n\t\t\t\t\t\"female\": 52091\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 51247,\n\t\t\t\t\t\"female\": 47801\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 49113,\n\t\t\t\t\t\"female\": 49853\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 48392,\n\t\t\t\t\t\"female\": 48288\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 63107,\n\t\t\t\t\t\"female\": 59237\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 51805,\n\t\t\t\t\t\"female\": 52984\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 49226,\n\t\t\t\t\t\"female\": 51868\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 47343,\n\t\t\t\t\t\"female\": 47631\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 38436,\n\t\t\t\t\t\"female\": 38133\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 26243,\n\t\t\t\t\t\"female\": 28577\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 18404,\n\t\t\t\t\t\"female\": 20325\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 11653,\n\t\t\t\t\t\"female\": 15313\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 9677,\n\t\t\t\t\t\"female\": 16053\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"IL\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 408295,\n\t\t\t\t\t\"female\": 392900\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 437688,\n\t\t\t\t\t\"female\": 419077\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 269202,\n\t\t\t\t\t\"female\": 257213\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 369219,\n\t\t\t\t\t\"female\": 353570\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 268501,\n\t\t\t\t\t\"female\": 258559\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 448001,\n\t\t\t\t\t\"female\": 442418\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 445416,\n\t\t\t\t\t\"female\": 445729\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 416265,\n\t\t\t\t\t\"female\": 418999\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 425825,\n\t\t\t\t\t\"female\": 427573\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 433177,\n\t\t\t\t\t\"female\": 441116\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 427121,\n\t\t\t\t\t\"female\": 412238\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 454039,\n\t\t\t\t\t\"female\": 470982\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 414948,\n\t\t\t\t\t\"female\": 442280\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 354782,\n\t\t\t\t\t\"female\": 380640\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 259363,\n\t\t\t\t\t\"female\": 292899\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 184622,\n\t\t\t\t\t\"female\": 223905\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 129016,\n\t\t\t\t\t\"female\": 171743\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 91973,\n\t\t\t\t\t\"female\": 139204\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 79446,\n\t\t\t\t\t\"female\": 165817\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"IN\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 215697,\n\t\t\t\t\t\"female\": 205242\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 229911,\n\t\t\t\t\t\"female\": 221563\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 139494,\n\t\t\t\t\t\"female\": 132879\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 198763,\n\t\t\t\t\t\"female\": 194206\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 140805,\n\t\t\t\t\t\"female\": 131947\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 210315,\n\t\t\t\t\t\"female\": 208593\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 211656,\n\t\t\t\t\t\"female\": 210103\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 201979,\n\t\t\t\t\t\"female\": 200693\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 212114,\n\t\t\t\t\t\"female\": 212653\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 216446,\n\t\t\t\t\t\"female\": 219033\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 226901,\n\t\t\t\t\t\"female\": 214964\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 232241,\n\t\t\t\t\t\"female\": 237844\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 217033,\n\t\t\t\t\t\"female\": 228674\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 186412,\n\t\t\t\t\t\"female\": 197353\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 140336,\n\t\t\t\t\t\"female\": 156256\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 99402,\n\t\t\t\t\t\"female\": 116834\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 68758,\n\t\t\t\t\t\"female\": 88794\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 47628,\n\t\t\t\t\t\"female\": 72061\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 39372,\n\t\t\t\t\t\"female\": 83690\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"KS\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 102716,\n\t\t\t\t\t\"female\": 98004\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 102335,\n\t\t\t\t\t\"female\": 99132\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 60870,\n\t\t\t\t\t\"female\": 57957\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 90593,\n\t\t\t\t\t\"female\": 83299\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 66512,\n\t\t\t\t\t\"female\": 59368\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 99384,\n\t\t\t\t\t\"female\": 93840\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 98020,\n\t\t\t\t\t\"female\": 94075\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 87763,\n\t\t\t\t\t\"female\": 85422\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 87647,\n\t\t\t\t\t\"female\": 84970\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 89233,\n\t\t\t\t\t\"female\": 88877\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 103861,\n\t\t\t\t\t\"female\": 98642\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 98398,\n\t\t\t\t\t\"female\": 101197\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 95861,\n\t\t\t\t\t\"female\": 96152\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 79440,\n\t\t\t\t\t\"female\": 85124\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 60035,\n\t\t\t\t\t\"female\": 64369\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 42434,\n\t\t\t\t\t\"female\": 49221\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 30967,\n\t\t\t\t\t\"female\": 39425\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 23026,\n\t\t\t\t\t\"female\": 33863\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 20767,\n\t\t\t\t\t\"female\": 40188\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"KY\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 142062,\n\t\t\t\t\t\"female\": 134389\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 147586,\n\t\t\t\t\t\"female\": 138629\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 87696,\n\t\t\t\t\t\"female\": 83139\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 128249,\n\t\t\t\t\t\"female\": 121099\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 90794,\n\t\t\t\t\t\"female\": 85930\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 140811,\n\t\t\t\t\t\"female\": 139855\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 142732,\n\t\t\t\t\t\"female\": 142551\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 137211,\n\t\t\t\t\t\"female\": 136524\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 145358,\n\t\t\t\t\t\"female\": 145251\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 148883,\n\t\t\t\t\t\"female\": 150922\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 143532,\n\t\t\t\t\t\"female\": 139032\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 156890,\n\t\t\t\t\t\"female\": 163054\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 147006,\n\t\t\t\t\t\"female\": 156302\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 129457,\n\t\t\t\t\t\"female\": 139434\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 100883,\n\t\t\t\t\t\"female\": 112696\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 71867,\n\t\t\t\t\t\"female\": 83665\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 47828,\n\t\t\t\t\t\"female\": 62775\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 31477,\n\t\t\t\t\t\"female\": 46386\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 23886,\n\t\t\t\t\t\"female\": 51512\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"LA\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 157642,\n\t\t\t\t\t\"female\": 152324\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 157781,\n\t\t\t\t\t\"female\": 149752\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 93357,\n\t\t\t\t\t\"female\": 90227\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 136496,\n\t\t\t\t\t\"female\": 131202\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 101438,\n\t\t\t\t\t\"female\": 101480\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 167414,\n\t\t\t\t\t\"female\": 168886\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 160094,\n\t\t\t\t\t\"female\": 161424\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 142182,\n\t\t\t\t\t\"female\": 141813\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 138717,\n\t\t\t\t\t\"female\": 144789\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 145906,\n\t\t\t\t\t\"female\": 152340\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 159193,\n\t\t\t\t\t\"female\": 154320\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 157743,\n\t\t\t\t\t\"female\": 167125\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 149001,\n\t\t\t\t\t\"female\": 161295\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 129265,\n\t\t\t\t\t\"female\": 139378\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 98404,\n\t\t\t\t\t\"female\": 106844\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 65845,\n\t\t\t\t\t\"female\": 83779\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 47365,\n\t\t\t\t\t\"female\": 60745\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 29452,\n\t\t\t\t\t\"female\": 48839\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 23861,\n\t\t\t\t\t\"female\": 47535\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"MA\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 187066,\n\t\t\t\t\t\"female\": 178775\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 205530,\n\t\t\t\t\t\"female\": 195312\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 129433,\n\t\t\t\t\t\"female\": 123212\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 207432,\n\t\t\t\t\t\"female\": 213820\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 140356,\n\t\t\t\t\t\"female\": 135839\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 235172,\n\t\t\t\t\t\"female\": 237653\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 216220,\n\t\t\t\t\t\"female\": 221692\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 196293,\n\t\t\t\t\t\"female\": 202730\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 218111,\n\t\t\t\t\t\"female\": 231277\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 237629,\n\t\t\t\t\t\"female\": 249926\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 191958,\n\t\t\t\t\t\"female\": 186343\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 247973,\n\t\t\t\t\t\"female\": 260886\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 227238,\n\t\t\t\t\t\"female\": 241029\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 189981,\n\t\t\t\t\t\"female\": 211282\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 146129,\n\t\t\t\t\t\"female\": 164268\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 100745,\n\t\t\t\t\t\"female\": 123577\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 70828,\n\t\t\t\t\t\"female\": 92141\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 52074,\n\t\t\t\t\t\"female\": 81603\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 49482,\n\t\t\t\t\t\"female\": 104571\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"MD\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 187617,\n\t\t\t\t\t\"female\": 180105\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 191787,\n\t\t\t\t\t\"female\": 185380\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 118027,\n\t\t\t\t\t\"female\": 113549\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 166991,\n\t\t\t\t\t\"female\": 159589\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 120617,\n\t\t\t\t\t\"female\": 116602\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 205555,\n\t\t\t\t\t\"female\": 206944\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 196824,\n\t\t\t\t\t\"female\": 203989\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 179340,\n\t\t\t\t\t\"female\": 193957\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 195388,\n\t\t\t\t\t\"female\": 205570\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 208382,\n\t\t\t\t\t\"female\": 225458\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 189781,\n\t\t\t\t\t\"female\": 182034\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 217574,\n\t\t\t\t\t\"female\": 235604\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 193789,\n\t\t\t\t\t\"female\": 210582\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 161828,\n\t\t\t\t\t\"female\": 186524\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 123204,\n\t\t\t\t\t\"female\": 144193\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 84114,\n\t\t\t\t\t\"female\": 101563\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 56755,\n\t\t\t\t\t\"female\": 75715\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 39615,\n\t\t\t\t\t\"female\": 59728\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 35455,\n\t\t\t\t\t\"female\": 70809\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"ME\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 33298,\n\t\t\t\t\t\"female\": 32108\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 38254,\n\t\t\t\t\t\"female\": 36846\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 24842,\n\t\t\t\t\t\"female\": 23688\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 35315,\n\t\t\t\t\t\"female\": 33777\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 23007,\n\t\t\t\t\t\"female\": 21971\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 37685,\n\t\t\t\t\t\"female\": 38353\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 36838,\n\t\t\t\t\t\"female\": 37697\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 35988,\n\t\t\t\t\t\"female\": 37686\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 42092,\n\t\t\t\t\t\"female\": 42912\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 47141,\n\t\t\t\t\t\"female\": 49161\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 38066,\n\t\t\t\t\t\"female\": 35151\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 53458,\n\t\t\t\t\t\"female\": 55451\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 51789,\n\t\t\t\t\t\"female\": 55407\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 47171,\n\t\t\t\t\t\"female\": 49840\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 37495,\n\t\t\t\t\t\"female\": 39678\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 26300,\n\t\t\t\t\t\"female\": 28932\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 18197,\n\t\t\t\t\t\"female\": 22047\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 12824,\n\t\t\t\t\t\"female\": 18302\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 10321,\n\t\t\t\t\t\"female\": 20012\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"MI\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 295157,\n\t\t\t\t\t\"female\": 280629\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 329983,\n\t\t\t\t\t\"female\": 319870\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 210017,\n\t\t\t\t\t\"female\": 199977\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 299937,\n\t\t\t\t\t\"female\": 287188\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 208270,\n\t\t\t\t\t\"female\": 202858\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 303606,\n\t\t\t\t\t\"female\": 298013\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 292780,\n\t\t\t\t\t\"female\": 296303\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 283925,\n\t\t\t\t\t\"female\": 288526\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 314544,\n\t\t\t\t\t\"female\": 319923\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 337524,\n\t\t\t\t\t\"female\": 344097\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 316345,\n\t\t\t\t\t\"female\": 297675\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 366054,\n\t\t\t\t\t\"female\": 378332\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 349590,\n\t\t\t\t\t\"female\": 369347\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 303421,\n\t\t\t\t\t\"female\": 323815\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 230810,\n\t\t\t\t\t\"female\": 252455\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 161676,\n\t\t\t\t\t\"female\": 186453\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 112555,\n\t\t\t\t\t\"female\": 141554\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 78669,\n\t\t\t\t\t\"female\": 116914\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 67110,\n\t\t\t\t\t\"female\": 134669\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"MN\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 178616,\n\t\t\t\t\t\"female\": 170645\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 180951,\n\t\t\t\t\t\"female\": 174374\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 110001,\n\t\t\t\t\t\"female\": 104197\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 148247,\n\t\t\t\t\t\"female\": 144611\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 108864,\n\t\t\t\t\t\"female\": 103755\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 185766,\n\t\t\t\t\t\"female\": 180698\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 189374,\n\t\t\t\t\t\"female\": 184845\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 166613,\n\t\t\t\t\t\"female\": 160534\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 172583,\n\t\t\t\t\t\"female\": 171011\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 184130,\n\t\t\t\t\t\"female\": 182785\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 185244,\n\t\t\t\t\t\"female\": 176674\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 202427,\n\t\t\t\t\t\"female\": 203327\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 187216,\n\t\t\t\t\t\"female\": 189980\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 157586,\n\t\t\t\t\t\"female\": 160588\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 114903,\n\t\t\t\t\t\"female\": 121985\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 81660,\n\t\t\t\t\t\"female\": 92401\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 57855,\n\t\t\t\t\t\"female\": 72839\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 42192,\n\t\t\t\t\t\"female\": 58545\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 37938,\n\t\t\t\t\t\"female\": 73211\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"MO\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 192851,\n\t\t\t\t\t\"female\": 183921\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 201273,\n\t\t\t\t\t\"female\": 190020\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 122944,\n\t\t\t\t\t\"female\": 116383\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 175782,\n\t\t\t\t\t\"female\": 169076\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 124584,\n\t\t\t\t\t\"female\": 123027\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 200511,\n\t\t\t\t\t\"female\": 200134\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 197781,\n\t\t\t\t\t\"female\": 198735\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 181485,\n\t\t\t\t\t\"female\": 180002\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 183318,\n\t\t\t\t\t\"female\": 188038\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 194538,\n\t\t\t\t\t\"female\": 199735\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 200091,\n\t\t\t\t\t\"female\": 193196\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 218663,\n\t\t\t\t\t\"female\": 225083\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 199513,\n\t\t\t\t\t\"female\": 216459\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 176036,\n\t\t\t\t\t\"female\": 187668\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 135605,\n\t\t\t\t\t\"female\": 150815\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 99845,\n\t\t\t\t\t\"female\": 117802\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 70734,\n\t\t\t\t\t\"female\": 88769\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 48118,\n\t\t\t\t\t\"female\": 72085\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 40331,\n\t\t\t\t\t\"female\": 80497\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"MS\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 100654,\n\t\t\t\t\t\"female\": 97079\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 107363,\n\t\t\t\t\t\"female\": 101958\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 62923,\n\t\t\t\t\t\"female\": 60591\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 94460,\n\t\t\t\t\t\"female\": 94304\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 63870,\n\t\t\t\t\t\"female\": 58909\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 96027,\n\t\t\t\t\t\"female\": 98023\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 95533,\n\t\t\t\t\t\"female\": 98837\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 88278,\n\t\t\t\t\t\"female\": 92876\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 93579,\n\t\t\t\t\t\"female\": 97851\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 92103,\n\t\t\t\t\t\"female\": 98871\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 104911,\n\t\t\t\t\t\"female\": 100694\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 98578,\n\t\t\t\t\t\"female\": 106516\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 94835,\n\t\t\t\t\t\"female\": 101616\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 80677,\n\t\t\t\t\t\"female\": 91332\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 64386,\n\t\t\t\t\t\"female\": 72940\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 46712,\n\t\t\t\t\t\"female\": 56013\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 32079,\n\t\t\t\t\t\"female\": 42598\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 19966,\n\t\t\t\t\t\"female\": 32724\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 14789,\n\t\t\t\t\t\"female\": 32626\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"MT\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 31021,\n\t\t\t\t\t\"female\": 29676\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 30960,\n\t\t\t\t\t\"female\": 29710\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 19558,\n\t\t\t\t\t\"female\": 18061\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 30975,\n\t\t\t\t\t\"female\": 27314\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 21419,\n\t\t\t\t\t\"female\": 20153\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 32300,\n\t\t\t\t\t\"female\": 30805\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 33167,\n\t\t\t\t\t\"female\": 30964\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 29772,\n\t\t\t\t\t\"female\": 28999\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 28538,\n\t\t\t\t\t\"female\": 27311\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 30820,\n\t\t\t\t\t\"female\": 30608\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 33641,\n\t\t\t\t\t\"female\": 31763\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 36761,\n\t\t\t\t\t\"female\": 37476\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 38291,\n\t\t\t\t\t\"female\": 40028\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 35306,\n\t\t\t\t\t\"female\": 35021\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 27786,\n\t\t\t\t\t\"female\": 27047\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 19708,\n\t\t\t\t\t\"female\": 19938\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 13344,\n\t\t\t\t\t\"female\": 14751\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 9435,\n\t\t\t\t\t\"female\": 11392\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 7361,\n\t\t\t\t\t\"female\": 13519\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"NC\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 311288,\n\t\t\t\t\t\"female\": 299882\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 333622,\n\t\t\t\t\t\"female\": 316123\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 194507,\n\t\t\t\t\t\"female\": 185872\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 299506,\n\t\t\t\t\t\"female\": 275504\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 207910,\n\t\t\t\t\t\"female\": 196277\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 317709,\n\t\t\t\t\t\"female\": 324593\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 311582,\n\t\t\t\t\t\"female\": 323483\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 308195,\n\t\t\t\t\t\"female\": 319405\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 334818,\n\t\t\t\t\t\"female\": 349484\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 331086,\n\t\t\t\t\t\"female\": 345940\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 325977,\n\t\t\t\t\t\"female\": 316564\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 334674,\n\t\t\t\t\t\"female\": 355791\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 308840,\n\t\t\t\t\t\"female\": 341170\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 270508,\n\t\t\t\t\t\"female\": 303831\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 225997,\n\t\t\t\t\t\"female\": 254521\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 154010,\n\t\t\t\t\t\"female\": 186677\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 106165,\n\t\t\t\t\t\"female\": 139937\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 68871,\n\t\t\t\t\t\"female\": 104839\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 50143,\n\t\t\t\t\t\"female\": 110032\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"ND\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 24524,\n\t\t\t\t\t\"female\": 24340\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 20939,\n\t\t\t\t\t\"female\": 20728\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 13197,\n\t\t\t\t\t\"female\": 12227\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 27439,\n\t\t\t\t\t\"female\": 22447\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 21413,\n\t\t\t\t\t\"female\": 19299\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 29543,\n\t\t\t\t\t\"female\": 24602\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 26425,\n\t\t\t\t\t\"female\": 22798\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 21846,\n\t\t\t\t\t\"female\": 19046\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 20123,\n\t\t\t\t\t\"female\": 19010\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 21386,\n\t\t\t\t\t\"female\": 20572\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 24336,\n\t\t\t\t\t\"female\": 22721\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 25126,\n\t\t\t\t\t\"female\": 24631\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 24412,\n\t\t\t\t\t\"female\": 24022\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 21598,\n\t\t\t\t\t\"female\": 20250\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 14868,\n\t\t\t\t\t\"female\": 14633\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 10729,\n\t\t\t\t\t\"female\": 11878\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 8086,\n\t\t\t\t\t\"female\": 9626\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 6222,\n\t\t\t\t\t\"female\": 9241\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 5751,\n\t\t\t\t\t\"female\": 11606\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"NE\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 67062,\n\t\t\t\t\t\"female\": 62974\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 64843,\n\t\t\t\t\t\"female\": 62695\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 38679,\n\t\t\t\t\t\"female\": 36116\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 56143,\n\t\t\t\t\t\"female\": 54195\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 40531,\n\t\t\t\t\t\"female\": 38139\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 64277,\n\t\t\t\t\t\"female\": 61028\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 64230,\n\t\t\t\t\t\"female\": 62423\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 57741,\n\t\t\t\t\t\"female\": 55950\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 56139,\n\t\t\t\t\t\"female\": 54518\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 57526,\n\t\t\t\t\t\"female\": 57077\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 68079,\n\t\t\t\t\t\"female\": 64509\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 64444,\n\t\t\t\t\t\"female\": 65106\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 61285,\n\t\t\t\t\t\"female\": 62057\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 52560,\n\t\t\t\t\t\"female\": 54977\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 39372,\n\t\t\t\t\t\"female\": 41007\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 27091,\n\t\t\t\t\t\"female\": 31903\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 20472,\n\t\t\t\t\t\"female\": 26808\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 15625,\n\t\t\t\t\t\"female\": 21401\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 13507,\n\t\t\t\t\t\"female\": 26876\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"NH\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 33531,\n\t\t\t\t\t\"female\": 32061\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 40472,\n\t\t\t\t\t\"female\": 39574\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 26632,\n\t\t\t\t\t\"female\": 25155\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 39600,\n\t\t\t\t\t\"female\": 39270\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 25067,\n\t\t\t\t\t\"female\": 23439\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 39514,\n\t\t\t\t\t\"female\": 37529\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 37282,\n\t\t\t\t\t\"female\": 37104\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 37177,\n\t\t\t\t\t\"female\": 38432\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 43571,\n\t\t\t\t\t\"female\": 43894\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 50559,\n\t\t\t\t\t\"female\": 51423\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 37873,\n\t\t\t\t\t\"female\": 36382\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 55573,\n\t\t\t\t\t\"female\": 57097\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 50802,\n\t\t\t\t\t\"female\": 52906\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 44934,\n\t\t\t\t\t\"female\": 45384\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 33322,\n\t\t\t\t\t\"female\": 34773\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 22786,\n\t\t\t\t\t\"female\": 25421\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 14988,\n\t\t\t\t\t\"female\": 18865\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 10661,\n\t\t\t\t\t\"female\": 14921\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 9140,\n\t\t\t\t\t\"female\": 17087\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"NJ\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 272239,\n\t\t\t\t\t\"female\": 261405\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 296798,\n\t\t\t\t\t\"female\": 281395\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 183608,\n\t\t\t\t\t\"female\": 174902\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 236406,\n\t\t\t\t\t\"female\": 219234\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 171414,\n\t\t\t\t\t\"female\": 162551\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 288078,\n\t\t\t\t\t\"female\": 278395\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 286242,\n\t\t\t\t\t\"female\": 288661\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 278323,\n\t\t\t\t\t\"female\": 286407\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 306371,\n\t\t\t\t\t\"female\": 315976\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 324604,\n\t\t\t\t\t\"female\": 340805\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 280348,\n\t\t\t\t\t\"female\": 272618\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 335379,\n\t\t\t\t\t\"female\": 351753\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 297889,\n\t\t\t\t\t\"female\": 316509\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 243909,\n\t\t\t\t\t\"female\": 272971\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 187928,\n\t\t\t\t\t\"female\": 216233\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 130458,\n\t\t\t\t\t\"female\": 162862\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 92629,\n\t\t\t\t\t\"female\": 121544\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 68009,\n\t\t\t\t\t\"female\": 107002\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 62395,\n\t\t\t\t\t\"female\": 130163\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"NM\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 70556,\n\t\t\t\t\t\"female\": 67433\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 72070,\n\t\t\t\t\t\"female\": 69774\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 42831,\n\t\t\t\t\t\"female\": 41474\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 61671,\n\t\t\t\t\t\"female\": 59289\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 47139,\n\t\t\t\t\t\"female\": 41506\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 73009,\n\t\t\t\t\t\"female\": 67866\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 69394,\n\t\t\t\t\t\"female\": 66383\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 62108,\n\t\t\t\t\t\"female\": 60810\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 61075,\n\t\t\t\t\t\"female\": 61508\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 62327,\n\t\t\t\t\t\"female\": 64988\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 72877,\n\t\t\t\t\t\"female\": 69675\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 69856,\n\t\t\t\t\t\"female\": 73683\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 66381,\n\t\t\t\t\t\"female\": 73952\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 61719,\n\t\t\t\t\t\"female\": 66285\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 48657,\n\t\t\t\t\t\"female\": 54175\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 35942,\n\t\t\t\t\t\"female\": 39668\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 24922,\n\t\t\t\t\t\"female\": 29968\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 16894,\n\t\t\t\t\t\"female\": 21049\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 12986,\n\t\t\t\t\t\"female\": 22217\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"NV\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 91556,\n\t\t\t\t\t\"female\": 87252\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 92376,\n\t\t\t\t\t\"female\": 90127\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 56635,\n\t\t\t\t\t\"female\": 53976\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 72185,\n\t\t\t\t\t\"female\": 68570\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 57429,\n\t\t\t\t\t\"female\": 54635\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 103079,\n\t\t\t\t\t\"female\": 98260\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 101626,\n\t\t\t\t\t\"female\": 97574\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 95952,\n\t\t\t\t\t\"female\": 91752\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 98405,\n\t\t\t\t\t\"female\": 96018\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 98297,\n\t\t\t\t\t\"female\": 92880\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 97639,\n\t\t\t\t\t\"female\": 92019\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 96647,\n\t\t\t\t\t\"female\": 93838\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 86430,\n\t\t\t\t\t\"female\": 90916\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 79651,\n\t\t\t\t\t\"female\": 82206\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 65973,\n\t\t\t\t\t\"female\": 70582\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 48879,\n\t\t\t\t\t\"female\": 50485\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 31798,\n\t\t\t\t\t\"female\": 33652\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 19722,\n\t\t\t\t\t\"female\": 23399\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 13456,\n\t\t\t\t\t\"female\": 22760\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"NY\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 601900,\n\t\t\t\t\t\"female\": 574532\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 602877,\n\t\t\t\t\t\"female\": 576846\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 381224,\n\t\t\t\t\t\"female\": 364149\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 579276,\n\t\t\t\t\t\"female\": 563517\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 423461,\n\t\t\t\t\t\"female\": 419351\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 722290,\n\t\t\t\t\t\"female\": 728064\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 668918,\n\t\t\t\t\t\"female\": 684340\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 607495,\n\t\t\t\t\t\"female\": 628810\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 632186,\n\t\t\t\t\t\"female\": 660306\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 674516,\n\t\t\t\t\t\"female\": 708960\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 588624,\n\t\t\t\t\t\"female\": 561622\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 695357,\n\t\t\t\t\t\"female\": 740342\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 633602,\n\t\t\t\t\t\"female\": 685163\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 540901,\n\t\t\t\t\t\"female\": 604110\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 409399,\n\t\t\t\t\t\"female\": 483158\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 287440,\n\t\t\t\t\t\"female\": 357971\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 207495,\n\t\t\t\t\t\"female\": 274626\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 150642,\n\t\t\t\t\t\"female\": 231063\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 134198,\n\t\t\t\t\t\"female\": 284443\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"OH\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 356598,\n\t\t\t\t\t\"female\": 339398\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 385542,\n\t\t\t\t\t\"female\": 371142\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 239825,\n\t\t\t\t\t\"female\": 228296\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 331115,\n\t\t\t\t\t\"female\": 318019\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 227916,\n\t\t\t\t\t\"female\": 225400\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 369646,\n\t\t\t\t\t\"female\": 367475\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 356757,\n\t\t\t\t\t\"female\": 359375\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 338273,\n\t\t\t\t\t\"female\": 340410\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 368578,\n\t\t\t\t\t\"female\": 375476\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 385388,\n\t\t\t\t\t\"female\": 394341\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 376976,\n\t\t\t\t\t\"female\": 358242\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 420561,\n\t\t\t\t\t\"female\": 438290\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 403067,\n\t\t\t\t\t\"female\": 427137\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 350563,\n\t\t\t\t\t\"female\": 374890\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 262844,\n\t\t\t\t\t\"female\": 292745\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 183419,\n\t\t\t\t\t\"female\": 222552\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 131940,\n\t\t\t\t\t\"female\": 173303\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 93267,\n\t\t\t\t\t\"female\": 140079\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 80618,\n\t\t\t\t\t\"female\": 166514\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"OK\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 135423,\n\t\t\t\t\t\"female\": 130297\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 133539,\n\t\t\t\t\t\"female\": 128110\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 79207,\n\t\t\t\t\t\"female\": 74080\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 115423,\n\t\t\t\t\t\"female\": 107651\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 85610,\n\t\t\t\t\t\"female\": 80749\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 135217,\n\t\t\t\t\t\"female\": 130966\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 132683,\n\t\t\t\t\t\"female\": 128496\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 118240,\n\t\t\t\t\t\"female\": 116104\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 118534,\n\t\t\t\t\t\"female\": 117501\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 117065,\n\t\t\t\t\t\"female\": 118300\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 137212,\n\t\t\t\t\t\"female\": 130040\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 129964,\n\t\t\t\t\t\"female\": 132941\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 121988,\n\t\t\t\t\t\"female\": 129033\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 105018,\n\t\t\t\t\t\"female\": 113144\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 82818,\n\t\t\t\t\t\"female\": 93914\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 62979,\n\t\t\t\t\t\"female\": 71856\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 43899,\n\t\t\t\t\t\"female\": 54848\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 29237,\n\t\t\t\t\t\"female\": 42044\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 22888,\n\t\t\t\t\t\"female\": 42715\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"OR\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 118561,\n\t\t\t\t\t\"female\": 112841\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 123223,\n\t\t\t\t\t\"female\": 116373\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 75620,\n\t\t\t\t\t\"female\": 71764\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 106121,\n\t\t\t\t\t\"female\": 103044\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 79106,\n\t\t\t\t\t\"female\": 75639\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 134241,\n\t\t\t\t\t\"female\": 131539\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 137090,\n\t\t\t\t\t\"female\": 135734\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 128812,\n\t\t\t\t\t\"female\": 126071\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 131405,\n\t\t\t\t\t\"female\": 126875\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 125373,\n\t\t\t\t\t\"female\": 125074\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 122920,\n\t\t\t\t\t\"female\": 119049\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 131932,\n\t\t\t\t\t\"female\": 137021\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 130434,\n\t\t\t\t\t\"female\": 141380\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 129063,\n\t\t\t\t\t\"female\": 136051\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 99577,\n\t\t\t\t\t\"female\": 106208\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 69028,\n\t\t\t\t\t\"female\": 77428\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 46055,\n\t\t\t\t\t\"female\": 53682\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 30900,\n\t\t\t\t\t\"female\": 41853\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 28992,\n\t\t\t\t\t\"female\": 53154\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"PA\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 367290,\n\t\t\t\t\t\"female\": 350371\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 393719,\n\t\t\t\t\t\"female\": 374666\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 250754,\n\t\t\t\t\t\"female\": 236670\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 378940,\n\t\t\t\t\t\"female\": 369819\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 251063,\n\t\t\t\t\t\"female\": 243391\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 420247,\n\t\t\t\t\t\"female\": 410193\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 391190,\n\t\t\t\t\t\"female\": 387225\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 365742,\n\t\t\t\t\t\"female\": 365646\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 399152,\n\t\t\t\t\t\"female\": 405848\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 435250,\n\t\t\t\t\t\"female\": 446328\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 381910,\n\t\t\t\t\t\"female\": 366854\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 472070,\n\t\t\t\t\t\"female\": 489057\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 456215,\n\t\t\t\t\t\"female\": 475044\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 390595,\n\t\t\t\t\t\"female\": 419924\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 301610,\n\t\t\t\t\t\"female\": 335127\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 212200,\n\t\t\t\t\t\"female\": 256188\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 156335,\n\t\t\t\t\t\"female\": 205974\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 117050,\n\t\t\t\t\t\"female\": 178358\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 104012,\n\t\t\t\t\t\"female\": 217532\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"RI\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 28289,\n\t\t\t\t\t\"female\": 26941\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 31383,\n\t\t\t\t\t\"female\": 30724\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 20093,\n\t\t\t\t\t\"female\": 19249\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 35376,\n\t\t\t\t\t\"female\": 37870\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 23397,\n\t\t\t\t\t\"female\": 21358\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 35958,\n\t\t\t\t\t\"female\": 34710\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 32410,\n\t\t\t\t\t\"female\": 32567\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 30325,\n\t\t\t\t\t\"female\": 31145\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 32542,\n\t\t\t\t\t\"female\": 34087\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 36151,\n\t\t\t\t\t\"female\": 38462\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 30462,\n\t\t\t\t\t\"female\": 27878\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 38419,\n\t\t\t\t\t\"female\": 41642\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 36706,\n\t\t\t\t\t\"female\": 39127\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 30349,\n\t\t\t\t\t\"female\": 33752\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 23462,\n\t\t\t\t\t\"female\": 26311\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 16385,\n\t\t\t\t\t\"female\": 19335\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 10978,\n\t\t\t\t\t\"female\": 14833\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 9224,\n\t\t\t\t\t\"female\": 13439\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 8479,\n\t\t\t\t\t\"female\": 19843\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"SC\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 148363,\n\t\t\t\t\t\"female\": 144218\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 153051,\n\t\t\t\t\t\"female\": 148064\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 92781,\n\t\t\t\t\t\"female\": 88090\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 150464,\n\t\t\t\t\t\"female\": 136857\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 99237,\n\t\t\t\t\t\"female\": 99178\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 156273,\n\t\t\t\t\t\"female\": 156982\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 148237,\n\t\t\t\t\t\"female\": 153197\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 139949,\n\t\t\t\t\t\"female\": 146281\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 151524,\n\t\t\t\t\t\"female\": 157192\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 153110,\n\t\t\t\t\t\"female\": 163562\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 156323,\n\t\t\t\t\t\"female\": 150943\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 161003,\n\t\t\t\t\t\"female\": 173752\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 150770,\n\t\t\t\t\t\"female\": 169238\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 141268,\n\t\t\t\t\t\"female\": 160890\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 120618,\n\t\t\t\t\t\"female\": 137154\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 85197,\n\t\t\t\t\t\"female\": 97581\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 55278,\n\t\t\t\t\t\"female\": 69067\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 33979,\n\t\t\t\t\t\"female\": 50585\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 24984,\n\t\t\t\t\t\"female\": 52336\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"SD\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 30615,\n\t\t\t\t\t\"female\": 29377\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 28360,\n\t\t\t\t\t\"female\": 26492\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 17193,\n\t\t\t\t\t\"female\": 16250\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 25514,\n\t\t\t\t\t\"female\": 24234\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 18413,\n\t\t\t\t\t\"female\": 16324\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 29131,\n\t\t\t\t\t\"female\": 26757\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 28133,\n\t\t\t\t\t\"female\": 26710\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 24971,\n\t\t\t\t\t\"female\": 23347\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 24234,\n\t\t\t\t\t\"female\": 23231\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 25555,\n\t\t\t\t\t\"female\": 24867\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 30399,\n\t\t\t\t\t\"female\": 28980\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 29754,\n\t\t\t\t\t\"female\": 29530\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 29075,\n\t\t\t\t\t\"female\": 28968\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 25633,\n\t\t\t\t\t\"female\": 25530\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 19320,\n\t\t\t\t\t\"female\": 18489\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 12964,\n\t\t\t\t\t\"female\": 14702\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 9646,\n\t\t\t\t\t\"female\": 12077\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 7669,\n\t\t\t\t\t\"female\": 10566\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 6898,\n\t\t\t\t\t\"female\": 13282\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"TN\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 204457,\n\t\t\t\t\t\"female\": 196347\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 217061,\n\t\t\t\t\t\"female\": 206350\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 129690,\n\t\t\t\t\t\"female\": 124122\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 183910,\n\t\t\t\t\t\"female\": 175377\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 132501,\n\t\t\t\t\t\"female\": 134905\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 210618,\n\t\t\t\t\t\"female\": 214944\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 209305,\n\t\t\t\t\t\"female\": 214151\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 200270,\n\t\t\t\t\t\"female\": 207520\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 216542,\n\t\t\t\t\t\"female\": 219178\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 217059,\n\t\t\t\t\t\"female\": 224473\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 210365,\n\t\t\t\t\t\"female\": 204494\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 223663,\n\t\t\t\t\t\"female\": 238025\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 210228,\n\t\t\t\t\t\"female\": 229974\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 186739,\n\t\t\t\t\t\"female\": 207022\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 153737,\n\t\t\t\t\t\"female\": 171357\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 108743,\n\t\t\t\t\t\"female\": 125362\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 72813,\n\t\t\t\t\t\"female\": 94077\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 46556,\n\t\t\t\t\t\"female\": 71212\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 33499,\n\t\t\t\t\t\"female\": 72969\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"TX\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 996070,\n\t\t\t\t\t\"female\": 955235\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 998209,\n\t\t\t\t\t\"female\": 959762\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 587712,\n\t\t\t\t\t\"female\": 561008\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 818590,\n\t\t\t\t\t\"female\": 756451\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 582570,\n\t\t\t\t\t\"female\": 556850\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 982673,\n\t\t\t\t\t\"female\": 948564\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 961403,\n\t\t\t\t\t\"female\": 947710\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 897542,\n\t\t\t\t\t\"female\": 898907\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 897922,\n\t\t\t\t\t\"female\": 908091\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 857621,\n\t\t\t\t\t\"female\": 865642\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 1021123,\n\t\t\t\t\t\"female\": 979891\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 861849,\n\t\t\t\t\t\"female\": 880746\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 761410,\n\t\t\t\t\t\"female\": 799294\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 635465,\n\t\t\t\t\t\"female\": 692072\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 483436,\n\t\t\t\t\t\"female\": 533368\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 330457,\n\t\t\t\t\t\"female\": 389996\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 228243,\n\t\t\t\t\t\"female\": 289446\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 153391,\n\t\t\t\t\t\"female\": 219572\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 115630,\n\t\t\t\t\t\"female\": 224693\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"UT\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 130873,\n\t\t\t\t\t\"female\": 124371\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 128076,\n\t\t\t\t\t\"female\": 120364\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 70832,\n\t\t\t\t\t\"female\": 66798\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 87877,\n\t\t\t\t\t\"female\": 92950\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 79431,\n\t\t\t\t\t\"female\": 71405\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 109125,\n\t\t\t\t\t\"female\": 106576\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 115198,\n\t\t\t\t\t\"female\": 110546\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 102771,\n\t\t\t\t\t\"female\": 99664\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 88181,\n\t\t\t\t\t\"female\": 83229\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 76552,\n\t\t\t\t\t\"female\": 74993\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 131094,\n\t\t\t\t\t\"female\": 125110\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 76913,\n\t\t\t\t\t\"female\": 78113\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 71490,\n\t\t\t\t\t\"female\": 73221\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 60996,\n\t\t\t\t\t\"female\": 63835\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 45491,\n\t\t\t\t\t\"female\": 49273\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 32191,\n\t\t\t\t\t\"female\": 35931\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 23112,\n\t\t\t\t\t\"female\": 27761\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 15827,\n\t\t\t\t\t\"female\": 20155\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 13199,\n\t\t\t\t\t\"female\": 19855\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"VA\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 262278,\n\t\t\t\t\t\"female\": 250000\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 266247,\n\t\t\t\t\t\"female\": 251516\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 160174,\n\t\t\t\t\t\"female\": 153149\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 248284,\n\t\t\t\t\t\"female\": 233796\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 175833,\n\t\t\t\t\t\"female\": 167676\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 296682,\n\t\t\t\t\t\"female\": 287052\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 286536,\n\t\t\t\t\t\"female\": 283804\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 264490,\n\t\t\t\t\t\"female\": 265951\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 278474,\n\t\t\t\t\t\"female\": 286095\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 286793,\n\t\t\t\t\t\"female\": 297558\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 264413,\n\t\t\t\t\t\"female\": 256891\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 296096,\n\t\t\t\t\t\"female\": 309898\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 262954,\n\t\t\t\t\t\"female\": 283219\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 228721,\n\t\t\t\t\t\"female\": 250389\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 178498,\n\t\t\t\t\t\"female\": 197033\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 123597,\n\t\t\t\t\t\"female\": 146376\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 82281,\n\t\t\t\t\t\"female\": 103044\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 55037,\n\t\t\t\t\t\"female\": 80081\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 43560,\n\t\t\t\t\t\"female\": 92154\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"VT\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 15766,\n\t\t\t\t\t\"female\": 14629\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 18674,\n\t\t\t\t\t\"female\": 17317\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 11909,\n\t\t\t\t\t\"female\": 11565\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 21686,\n\t\t\t\t\t\"female\": 20502\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 12648,\n\t\t\t\t\t\"female\": 11840\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 18005,\n\t\t\t\t\t\"female\": 17548\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 17565,\n\t\t\t\t\t\"female\": 18161\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 16856,\n\t\t\t\t\t\"female\": 17454\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 19431,\n\t\t\t\t\t\"female\": 19600\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 21315,\n\t\t\t\t\t\"female\": 22377\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 17073,\n\t\t\t\t\t\"female\": 16338\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 24629,\n\t\t\t\t\t\"female\": 26080\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 24925,\n\t\t\t\t\t\"female\": 25588\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 21769,\n\t\t\t\t\t\"female\": 23081\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 16842,\n\t\t\t\t\t\"female\": 17925\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 11855,\n\t\t\t\t\t\"female\": 12331\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 7639,\n\t\t\t\t\t\"female\": 9192\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 5291,\n\t\t\t\t\t\"female\": 8001\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 4695,\n\t\t\t\t\t\"female\": 8502\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"WA\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 228403,\n\t\t\t\t\t\"female\": 217400\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 224142,\n\t\t\t\t\t\"female\": 217269\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 136967,\n\t\t\t\t\t\"female\": 130193\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 195001,\n\t\t\t\t\t\"female\": 179996\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 151577,\n\t\t\t\t\t\"female\": 140876\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 260873,\n\t\t\t\t\t\"female\": 244497\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 252612,\n\t\t\t\t\t\"female\": 243147\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 230325,\n\t\t\t\t\t\"female\": 223596\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 234066,\n\t\t\t\t\t\"female\": 228073\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 233107,\n\t\t\t\t\t\"female\": 230232\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 227824,\n\t\t\t\t\t\"female\": 214378\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 245685,\n\t\t\t\t\t\"female\": 247691\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 231612,\n\t\t\t\t\t\"female\": 241813\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 206233,\n\t\t\t\t\t\"female\": 219560\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 158697,\n\t\t\t\t\t\"female\": 170678\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 107931,\n\t\t\t\t\t\"female\": 118093\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 70497,\n\t\t\t\t\t\"female\": 83476\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 48802,\n\t\t\t\t\t\"female\": 66167\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 43371,\n\t\t\t\t\t\"female\": 80604\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"WI\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 176217,\n\t\t\t\t\t\"female\": 168178\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 191911,\n\t\t\t\t\t\"female\": 180587\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 115730,\n\t\t\t\t\t\"female\": 110660\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 167063,\n\t\t\t\t\t\"female\": 161358\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 117861,\n\t\t\t\t\t\"female\": 113393\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 183464,\n\t\t\t\t\t\"female\": 176718\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 187494,\n\t\t\t\t\t\"female\": 181605\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 172689,\n\t\t\t\t\t\"female\": 168116\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 179862,\n\t\t\t\t\t\"female\": 176322\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 198114,\n\t\t\t\t\t\"female\": 197462\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 186006,\n\t\t\t\t\t\"female\": 180034\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 217886,\n\t\t\t\t\t\"female\": 219813\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 204370,\n\t\t\t\t\t\"female\": 206108\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 176161,\n\t\t\t\t\t\"female\": 178738\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 130349,\n\t\t\t\t\t\"female\": 136552\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 90955,\n\t\t\t\t\t\"female\": 103217\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 65738,\n\t\t\t\t\t\"female\": 81341\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 48337,\n\t\t\t\t\t\"female\": 67614\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 41178,\n\t\t\t\t\t\"female\": 82916\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"WV\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 52472,\n\t\t\t\t\t\"female\": 50287\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 55269,\n\t\t\t\t\t\"female\": 52689\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 34100,\n\t\t\t\t\t\"female\": 32359\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 51801,\n\t\t\t\t\t\"female\": 48967\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 35920,\n\t\t\t\t\t\"female\": 34241\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 54564,\n\t\t\t\t\t\"female\": 52255\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 56430,\n\t\t\t\t\t\"female\": 55121\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 55764,\n\t\t\t\t\t\"female\": 55399\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 60662,\n\t\t\t\t\t\"female\": 59373\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 61771,\n\t\t\t\t\t\"female\": 61257\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 53707,\n\t\t\t\t\t\"female\": 51490\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 66156,\n\t\t\t\t\t\"female\": 68671\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 66936,\n\t\t\t\t\t\"female\": 71680\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 65717,\n\t\t\t\t\t\"female\": 67056\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 51285,\n\t\t\t\t\t\"female\": 54807\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 36504,\n\t\t\t\t\t\"female\": 39946\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 25738,\n\t\t\t\t\t\"female\": 31619\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 16397,\n\t\t\t\t\t\"female\": 24351\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 12438,\n\t\t\t\t\t\"female\": 26221\n\t\t\t\t}\n\t\t\t],\n\t\t\t\"WY\": [{\n\t\t\t\t\t\"age\": \"0 to 5\",\n\t\t\t\t\t\"male\": 19649,\n\t\t\t\t\t\"female\": 18996\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"10 to 14\",\n\t\t\t\t\t\"male\": 20703,\n\t\t\t\t\t\"female\": 17785\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"15 to 17\",\n\t\t\t\t\t\"male\": 11500,\n\t\t\t\t\t\"female\": 10383\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"18 to 21\",\n\t\t\t\t\t\"male\": 18008,\n\t\t\t\t\t\"female\": 15534\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"22 to 24\",\n\t\t\t\t\t\"male\": 12727,\n\t\t\t\t\t\"female\": 11405\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"25 to 29\",\n\t\t\t\t\t\"male\": 21459,\n\t\t\t\t\t\"female\": 19350\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"30 to 34\",\n\t\t\t\t\t\"male\": 21008,\n\t\t\t\t\t\"female\": 19465\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"35 to 39\",\n\t\t\t\t\t\"male\": 18573,\n\t\t\t\t\t\"female\": 17022\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"40 to 44\",\n\t\t\t\t\t\"male\": 17553,\n\t\t\t\t\t\"female\": 16402\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"45 to 49\",\n\t\t\t\t\t\"male\": 17580,\n\t\t\t\t\t\"female\": 16702\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"5 to 9\",\n\t\t\t\t\t\"male\": 19198,\n\t\t\t\t\t\"female\": 19519\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"50 to 54\",\n\t\t\t\t\t\"male\": 20337,\n\t\t\t\t\t\"female\": 20958\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"55 to 59\",\n\t\t\t\t\t\"male\": 21523,\n\t\t\t\t\t\"female\": 21000\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"60 to 64\",\n\t\t\t\t\t\"male\": 19048,\n\t\t\t\t\t\"female\": 18292\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"65 to 69\",\n\t\t\t\t\t\"male\": 13999,\n\t\t\t\t\t\"female\": 13130\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"70 to 74\",\n\t\t\t\t\t\"male\": 8710,\n\t\t\t\t\t\"female\": 9880\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"75 to 79\",\n\t\t\t\t\t\"male\": 6149,\n\t\t\t\t\t\"female\": 6938\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"80 to 84\",\n\t\t\t\t\t\"male\": 4442,\n\t\t\t\t\t\"female\": 5560\n\t\t\t\t}, {\n\t\t\t\t\t\"age\": \"85 and Older\",\n\t\t\t\t\t\"male\": 3395,\n\t\t\t\t\t\"female\": 5797\n\t\t\t\t}\n\t\t\t]};\n\t\t\t\n\t\t\tfunction aggregateData(list) {\n\t\t\t\tvar maleTotal = 0;\n\t\t\t\tvar femaleTotal = 0;\n\t\t\t\t\n\t\t\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\t\t\tvar row = list[i];\n\t\t\t\t\tmaleTotal += row.male;\n\t\t\t\t\tfemaleTotal += row.female;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor(var i = 0; i < list.length; i++) {\n\t\t\t\t\tvar row = list[i];\n\t\t\t\t\trow.malePercent = -1 * Math.round((row.male / maleTotal) * 10000) / 100;\n\t\t\t\t\trow.femalePercent = Math.round((row.female / femaleTotal) * 10000) / 100;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn list;\n\t\t\t}\n\t\t\t\n\t\t\tusData = aggregateData(usData);\t\t\t\n\t\t\t\n\t\t\t// ===========================================================\n\t\t\t// Root and wrapper container\n\t\t\t// ===========================================================\n\t\t\t\n\t\t\t// Create root and chart\n\t\t\troot = am5.Root.new(element);\n\t\t\t\n\t\t\t// Set themes\n\t\t\troot.setThemes([\n\t\t\t\tam5themes_Animated.new(root)\n\t\t\t]);\n\t\t\t\n\t\t\t// Create wrapper container\n\t\t\tvar container = root.container.children.push(am5.Container.new(root, {\n\t\t\t\tlayout: root.horizontalLayout,\n\t\t\t\twidth: am5.p100,\n\t\t\t\theight: am5.p100\n\t\t\t}))\n\t\t\t\n\t\t\t// Set up formats\n\t\t\troot.numberFormatter.setAll({\n\t\t\t\tnumberFormat: \"#.##as\"\n\t\t\t});\t\t\t\n\t\t\t\n\t\t\t// ===========================================================\n\t\t\t// XY chart\n\t\t\t// ===========================================================\n\t\t\t\n\t\t\t// Create chart\n\t\t\tvar chart = container.children.push(am5xy.XYChart.new(root, {\n\t\t\t\tpanX: false,\n\t\t\t\tpanY: false,\n\t\t\t\twheelX: \"none\",\n\t\t\t\twheelY: \"none\",\n\t\t\t\tlayout: root.verticalLayout,\n\t\t\t\twidth: am5.percent(60)\n\t\t\t}));\n\t\t\t\n\t\t\t// Create axes\n\t\t\tvar yAxis1 = chart.yAxes.push(am5xy.CategoryAxis.new(root, {\n\t\t\t\tcategoryField: \"age\",\n\t\t\t\trenderer: am5xy.AxisRendererY.new(root, {})\n\t\t\t}));\n\n\t\t\tyAxis1.get(\"renderer\").labels.template.setAll({\n\t\t\t\tpaddingTop: 0,\n\t\t\t\tfontWeight: \"400\",\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\")),\n\t\t\t});\n\n\t\t\tyAxis1.get(\"renderer\").grid.template.setAll({\n\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-300\")),\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tstrokeOpacity: 1,\n\t\t\t\tstrokeDasharray: [3],\n\t\t\t});\n\n\t\t\tyAxis1.data.setAll(usData);            \n\t\t\t\n\t\t\tvar yAxis2 = chart.yAxes.push(am5xy.CategoryAxis.new(root, {\n\t\t\t\tcategoryField: \"age\",\n\t\t\t\trenderer: am5xy.AxisRendererY.new(root, {\n\t\t\t\t\topposite: true\n\t\t\t\t})\n\t\t\t}));\n\n\t\t\tyAxis2.get(\"renderer\").grid.template.setAll({\n\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-300\")),\n\t\t\t\tstrokeWidth: 1,\n\t\t\t\tstrokeOpacity: 1,\n\t\t\t\tstrokeDasharray: [3],\n\t\t\t});\n\t\t\t\n\t\t\tyAxis2.get(\"renderer\").labels.template.setAll({\n\t\t\t\tpaddingTop: 0,\n\t\t\t\tfontWeight: \"400\",\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\")),\n\t\t\t});\n\n\t\t\tyAxis2.data.setAll(usData);\n\t\t\t\n\t\t\tvar xAxis = chart.xAxes.push(am5xy.ValueAxis.new(root, {\n\t\t\t\tmin: -10,\n\t\t\t\tmax: 10,\n\t\t\t\tnumberFormat: \"#.s'%'\",\n\t\t\t\trenderer: am5xy.AxisRendererX.new(root, {\n\t\t\t\t\tminGridDistance: 40\n\t\t\t\t})\n\t\t\t}));\n\n\t\t\txAxis.get(\"renderer\").labels.template.setAll({\n\t\t\t\tpaddingTop: 20,\n\t\t\t\tfontWeight: \"400\",\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-500\")),\n\t\t\t});\n\n\t\t\txAxis.get(\"renderer\").grid.template.setAll({\n\t\t\t\tdisabled: true,\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t});\n\t\t\t\n\t\t\t// Create series\n\t\t\tvar maleSeries = chart.series.push(am5xy.ColumnSeries.new(root, {\n\t\t\t\tname: \"Males\",\n\t\t\t\txAxis: xAxis,\n\t\t\t\tyAxis: yAxis1,\n\t\t\t\tvalueXField: \"malePercent\",\n\t\t\t\tcategoryYField: \"age\",\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n\t\t\t\tclustered: false,\n\t\t\t}));            \n\t\t\t\n\t\t\tmaleSeries.columns.template.setAll({\n\t\t\t\ttooltipText: \"Males, age {categoryY}: {male} ({malePercent.formatNumber('#.0s')}%)\",\n\t\t\t\ttooltipX: am5.p100,\n\t\t\t\tcornerRadiusBR: 4,\n\t\t\t\tcornerRadiusTR: 4,\n\t\t\t\tcornerRadiusBL: 0,\n\t\t\t\tcornerRadiusTL: 0,\n\t\t\t});\n\t\t\t\n\t\t\tmaleSeries.data.setAll(usData);\n\t\t\t\n\t\t\tvar femaleSeries = chart.series.push(am5xy.ColumnSeries.new(root, {\n\t\t\t\tname: \"Males\",\n\t\t\t\txAxis: xAxis,\n\t\t\t\tyAxis: yAxis1,\n\t\t\t\tvalueXField: \"femalePercent\",\n\t\t\t\tcategoryYField: \"age\",\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\tclustered: false,\n\t\t\t}));\n\t\t\t\n\t\t\tfemaleSeries.columns.template.setAll({\n\t\t\t\ttooltipText: \"Males, age {categoryY}: {female} ({femalePercent.formatNumber('#.0s')}%)\",\n\t\t\t\ttooltipX: am5.p100,\n\t\t\t\tcornerRadiusBR: 4,\n\t\t\t\tcornerRadiusTR: 4,\n\t\t\t\tcornerRadiusBL: 0,\n\t\t\t\tcornerRadiusTL: 0,\n\t\t\t});\n\t\t\t\n\t\t\tfemaleSeries.data.setAll(usData);\n\t\t\t\n\t\t\t// Add labels\n\t\t\tvar maleLabel = chart.plotContainer.children.push(am5.Label.new(root, {\n\t\t\t\ttext: \"Males\",\n\t\t\t\tfontSize: 13,\n\t\t\t\tfontWeight: '500',\n\t\t\t\ty: 5,\n\t\t\t\tx: 5,\n\t\t\t\t//centerX: am5.p50,\n\t\t\t\tfill: maleSeries.get(\"fill\")\n\t\t\t}));\n\t\t\t\n\t\t\tvar femaleLabel = chart.plotContainer.children.push(am5.Label.new(root, {\n\t\t\t\ttext: \"Females\",\n\t\t\t\tfontSize: 13,\n\t\t\t\tfontWeight: '500',\n\t\t\t\ty: 5,\n\t\t\t\tx: am5.p100,\n\t\t\t\tcenterX: am5.p100,\n\t\t\t\tdx: -5,\n\t\t\t\tfill: femaleSeries.get(\"fill\")\n\t\t\t}));            \n\t\t\t\n\t\t\t// ===========================================================\n\t\t\t// Map chart\n\t\t\t// ===========================================================\n\t\t\t\n\t\t\t// Create chart\n\t\t\tvar map = container.children.push(\n\t\t\t\tam5map.MapChart.new(root, {\n\t\t\t\t\tpanX: \"none\",\n\t\t\t\t\tpanY: \"none\",\n\t\t\t\t\twheelY: \"none\",\n\t\t\t\t\tprojection: am5map.geoAlbersUsa(),\n\t\t\t\t\twidth: am5.percent(40)\n\t\t\t\t})\n\t\t\t);\n\t\t\t\n\t\t\tchart.getTooltip().set(\"autoTextColor\", false);\n\t\t\t\n\t\t\t// Title\n\t\t\tvar title = map.children.push(am5.Label.new(root, {\n\t\t\t\ttext: \"United States\",\n\t\t\t\tfontSize: 14,\n\t\t\t\tfontWeight: '500',\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue('--bs-gray-800')),\n\t\t\t\ty: 20,\n\t\t\t\tx: am5.p50,\n\t\t\t\tcenterX: am5.p50\n\t\t\t}));\n\t\t\t\n\t\t\t// Create polygon series\n\t\t\tvar polygonSeries = map.series.push(\n\t\t\t\tam5map.MapPolygonSeries.new(root, {\n\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n\t\t\t\t\tgeoJSON: am5geodata_usaLow\n\t\t\t\t})\n\t\t\t);\n\t\t\t\n\t\t\tpolygonSeries.mapPolygons.template.setAll({\n\t\t\t\ttooltipText: \"{name}\",\n\t\t\t\tinteractive: true\n\t\t\t});\n\n\t\t\tpolygonSeries.mapPolygons.template.states.create(\"hover\", {\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n\t\t\t});\n\n\t\t\tpolygonSeries.mapPolygons.template.states.create(\"active\", {\n\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n\t\t\t});\n\t\t\t\n\t\t\tvar activePolygon;\n\t\t\tpolygonSeries.mapPolygons.template.events.on(\"click\", function(ev) {\n\t\t\t\tif (activePolygon) {\n\t\t\t\t\tactivePolygon.set(\"active\", false);\n\t\t\t\t}\n\t\t\t\tactivePolygon = ev.target;\n\t\t\t\tactivePolygon.set(\"active\", true);\n\t\t\t\tvar state  = ev.target.dataItem.dataContext.id.split(\"-\").pop();\n\t\t\t\tvar data = aggregateData(stateData[state]);\n\t\t\t\t\n\t\t\t\tfor(var i = 0; i < data.length; i++){\n\t\t\t\t\tmaleSeries.data.setIndex(i, data[i]);\n\t\t\t\t\tfemaleSeries.data.setIndex(i, data[i]);\n\t\t\t\t}            \n\t\t\t\n\t\t\t\ttitle.set(\"text\", ev.target.dataItem.dataContext.name);\n\t\t\t}); \n\t\t}\n\n\t\t// On amchart ready\n\t\tam5.ready(function() {      \n\t\t\t// Init chart      \n\t\t\tinit();\n\t\t});\n\n\t\t// Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n\t};\n\n\t// Public methods\n\treturn {\n\t\tinit: function () {\n\t\t\tinitChart();\n\t\t},\n\t};\n})();\n\n// Webpack support\nif (true) {\n\t\twindow.KTChartsWidget24 = module.exports = KTChartsWidget24;\n}\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-24.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-25.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-25.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget25 = (function () {\n\t// Private methods\n\tvar initChart1 = function () {\n\t\t// Check if amchart library is included\n\t\tif (typeof am5 === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element = document.getElementById(\"kt_charts_widget_25_chart_1\");\n\n\t\tif ( !element ) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar root;\n\n\t\tvar init = function() {\n\t\t\t// Create root element\n\t\t\t// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n\t\t\troot = am5.Root.new(element);\n\n\t\t\t// Set themes\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/themes/\n\t\t\troot.setThemes([am5themes_Animated.new(root)]);\n\n\t\t\t// Create chart\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/\n\t\t\tvar chart = root.container.children.push(\n\t\t\t\tam5radar.RadarChart.new(root, {\n\t\t\t\t\tpanX: false,\n\t\t\t\t\tpanY: false,\n\t\t\t\t\twheelX: \"panX\",\n\t\t\t\t\twheelY: \"zoomX\",\n\t\t\t\t\tinnerRadius: am5.percent(40),\n\t\t\t\t\tradius: am5.percent(70),\n\t\t\t\t\tarrangeTooltips: false,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tvar cursor = chart.set(\n\t\t\t\t\"cursor\",\n\t\t\t\tam5radar.RadarCursor.new(root, {\n\t\t\t\t\tbehavior: \"zoomX\",\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tcursor.lineY.set(\"visible\", false);\n\n\t\t\t// Create axes and their renderers\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n\t\t\tvar xRenderer = am5radar.AxisRendererCircular.new(root, {\n\t\t\t\tminGridDistance: 30,\n\t\t\t});\n\n\t\t\txRenderer.labels.template.setAll({\n\t\t\t\ttextType: \"radial\",\n\t\t\t\tradius: 10,\n\t\t\t\tpaddingTop: 0,\n\t\t\t\tpaddingBottom: 0,\n\t\t\t\tcenterY: am5.p50,\n\t\t\t\tfontWeight: \"400\",\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\")),\n\t\t\t});\n\n\t\t\txRenderer.grid.template.setAll({\n\t\t\t\tlocation: 0.5,\n\t\t\t\tstrokeDasharray: [2, 2],\n\t\t\t\tstroke: KTUtil.getCssVariableValue('--bs-gray-400')\n\t\t\t});\n\n\t\t\tvar xAxis = chart.xAxes.push(\n\t\t\t\tam5xy.CategoryAxis.new(root, {\n\t\t\t\t\tmaxDeviation: 0,\n\t\t\t\t\tcategoryField: \"name\",\n\t\t\t\t\trenderer: xRenderer,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tvar yRenderer = am5radar.AxisRendererRadial.new(root, {\n\t\t\t\tminGridDistance: 30,\n\t\t\t});\n\n\t\t\tyRenderer.labels.template.setAll({\n\t\t\t\tfontWeight: \"500\",\n\t\t\t\tfontSize: 12,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\")),\n\t\t\t});\n\n\t\t\tvar yAxis = chart.yAxes.push(\n\t\t\t\tam5xy.ValueAxis.new(root, {\n\t\t\t\t\trenderer: yRenderer,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tyRenderer.grid.template.setAll({\n\t\t\t\tstrokeDasharray: [2, 2],\n\t\t\t\tstroke: KTUtil.getCssVariableValue('--bs-gray-400')\n\t\t\t});\n\n\t\t\t// Create series\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n\t\t\tvar series1 = chart.series.push(\n\t\t\t\tam5radar.RadarLineSeries.new(root, {\n\t\t\t\t\tname: \"Revenue\",\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"value1\",\n\t\t\t\t\tcategoryXField: \"name\",\n\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries1.strokes.template.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t});\n\n\t\t\tseries1.fills.template.setAll({\n\t\t\t\tvisible: true,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\tfillOpacity: 0.5,\n\t\t\t});\n\n\t\t\tvar series2 = chart.series.push(\n\t\t\t\tam5radar.RadarLineSeries.new(root, {\n\t\t\t\t\tname: \"Expense\",\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"value2\",\n\t\t\t\t\tcategoryXField: \"name\",\n\t\t\t\t\tstacked: true,\n\t\t\t\t\ttooltip: am5.Tooltip.new(root, {\n\t\t\t\t\t\tlabelText: \"Revenue: {value1}\\nExpense:{value2}\",\n\t\t\t\t\t}),\n\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries2.strokes.template.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t});\n\n\t\t\tseries2.fills.template.setAll({\n\t\t\t\tvisible: true,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\tfillOpacity: 0.5,\n\t\t\t});\n\n\t\t\tvar legend = chart.radarContainer.children.push(\n\t\t\t\tam5.Legend.new(root, {\n\t\t\t\t\twidth: 150,\n\t\t\t\t\tcenterX: am5.p50,\n\t\t\t\t\tcenterY: am5.p50,\n\t\t\t\t})\n\t\t\t);\n\t\t\tlegend.data.setAll([series1, series2]);\n\n\t\t\tlegend.labels.template.setAll({\n\t\t\t\tfontWeight: \"600\",\n\t\t\t\tfontSize: 13,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\")),\n\t\t\t});\n\n\t\t\t// Set data\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Setting_data\n\t\t\tvar data = [\n\t\t\t\t{\n\t\t\t\t\tname: \"Openlane\",\n\t\t\t\t\tvalue1: 160.2,\n\t\t\t\t\tvalue2: 26.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Yearin\",\n\t\t\t\t\tvalue1: 120.1,\n\t\t\t\t\tvalue2: 50.5,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Goodsilron\",\n\t\t\t\t\tvalue1: 150.7,\n\t\t\t\t\tvalue2: 12.3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Condax\",\n\t\t\t\t\tvalue1: 69.4,\n\t\t\t\t\tvalue2: 74.5,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Opentech\",\n\t\t\t\t\tvalue1: 78.5,\n\t\t\t\t\tvalue2: 29.7,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Golddex\",\n\t\t\t\t\tvalue1: 77.6,\n\t\t\t\t\tvalue2: 102.2,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Isdom\",\n\t\t\t\t\tvalue1: 69.8,\n\t\t\t\t\tvalue2: 22.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Plusstrip\",\n\t\t\t\t\tvalue1: 63.6,\n\t\t\t\t\tvalue2: 45.3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Kinnamplus\",\n\t\t\t\t\tvalue1: 59.7,\n\t\t\t\t\tvalue2: 12.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Zumgoity\",\n\t\t\t\t\tvalue1: 64.3,\n\t\t\t\t\tvalue2: 19.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Stanredtax\",\n\t\t\t\t\tvalue1: 52.9,\n\t\t\t\t\tvalue2: 96.3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Conecom\",\n\t\t\t\t\tvalue1: 42.9,\n\t\t\t\t\tvalue2: 11.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Zencorporation\",\n\t\t\t\t\tvalue1: 40.9,\n\t\t\t\t\tvalue2: 16.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Iselectrics\",\n\t\t\t\t\tvalue1: 39.2,\n\t\t\t\t\tvalue2: 9.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Treequote\",\n\t\t\t\t\tvalue1: 76.6,\n\t\t\t\t\tvalue2: 36.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Sumace\",\n\t\t\t\t\tvalue1: 34.8,\n\t\t\t\t\tvalue2: 14.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Lexiqvolax\",\n\t\t\t\t\tvalue1: 32.1,\n\t\t\t\t\tvalue2: 35.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Sunnamplex\",\n\t\t\t\t\tvalue1: 31.8,\n\t\t\t\t\tvalue2: 5.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Faxquote\",\n\t\t\t\t\tvalue1: 29.3,\n\t\t\t\t\tvalue2: 14.7,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Donware\",\n\t\t\t\t\tvalue1: 23.0,\n\t\t\t\t\tvalue2: 2.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Warephase\",\n\t\t\t\t\tvalue1: 21.5,\n\t\t\t\t\tvalue2: 12.1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Donquadtech\",\n\t\t\t\t\tvalue1: 19.7,\n\t\t\t\t\tvalue2: 10.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Nam-zim\",\n\t\t\t\t\tvalue1: 15.5,\n\t\t\t\t\tvalue2: 4.1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Y-corporation\",\n\t\t\t\t\tvalue1: 14.2,\n\t\t\t\t\tvalue2: 11.3,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tseries1.data.setAll(data);\n\t\t\tseries2.data.setAll(data);\n\t\t\txAxis.data.setAll(data);\n\n\t\t\t// Animate chart and series in\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n\t\t\tseries1.appear(1000);\n\t\t\tseries2.appear(1000);\n\t\t\tchart.appear(1000, 100);\n\t\t}\n\n\t\t// On amchart ready\n\t\tam5.ready(function () {\n\t\t\tinit();\n\t\t}); \n\n\t\t// Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n\t};\n\n\tvar initChart2 = function () {\n\t\t// Check if amchart library is included\n\t\tif (typeof am5 === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element = document.getElementById(\"kt_charts_widget_25_chart_2\");\n\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar root;\n\n\t\tvar init = function() {\n\t\t\t// Create root element\n\t\t\t// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n\t\t\troot = am5.Root.new(element);\n\n\t\t\t// Set themes\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/themes/\n\t\t\troot.setThemes([am5themes_Animated.new(root)]);\n\n\t\t\t// Create chart\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/\n\t\t\tvar chart = root.container.children.push(\n\t\t\t\tam5radar.RadarChart.new(root, {\n\t\t\t\t\tpanX: false,\n\t\t\t\t\tpanY: false,\n\t\t\t\t\twheelX: \"panX\",\n\t\t\t\t\twheelY: \"zoomX\",\n\t\t\t\t\tinnerRadius: am5.percent(40),\n\t\t\t\t\tradius: am5.percent(70),\n\t\t\t\t\tarrangeTooltips: false,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tvar cursor = chart.set(\n\t\t\t\t\"cursor\",\n\t\t\t\tam5radar.RadarCursor.new(root, {\n\t\t\t\t\tbehavior: \"zoomX\",\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tcursor.lineY.set(\"visible\", false);\n\n\t\t\t// Create axes and their renderers\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n\t\t\tvar xRenderer = am5radar.AxisRendererCircular.new(root, {\n\t\t\t\tminGridDistance: 30,\n\t\t\t});\n\t\t\txRenderer.labels.template.setAll({\n\t\t\t\ttextType: \"radial\",\n\t\t\t\tradius: 10,\n\t\t\t\tpaddingTop: 0,\n\t\t\t\tpaddingBottom: 0,\n\t\t\t\tcenterY: am5.p50,\n\t\t\t\tfontWeight: \"400\",\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\")),\n\t\t\t});\n\n\t\t\txRenderer.grid.template.setAll({\n\t\t\t\tlocation: 0.5,\n\t\t\t\tstrokeDasharray: [2, 2],\n\t\t\t\tstroke: KTUtil.getCssVariableValue('--bs-gray-400')\n\t\t\t});\n\n\t\t\tvar xAxis = chart.xAxes.push(\n\t\t\t\tam5xy.CategoryAxis.new(root, {\n\t\t\t\t\tmaxDeviation: 0,\n\t\t\t\t\tcategoryField: \"name\",\n\t\t\t\t\trenderer: xRenderer,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tvar yRenderer = am5radar.AxisRendererRadial.new(root, {\n\t\t\t\tminGridDistance: 30,\n\t\t\t});\n\n\t\t\tvar yAxis = chart.yAxes.push(\n\t\t\t\tam5xy.ValueAxis.new(root, {\n\t\t\t\t\trenderer: yRenderer,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tyRenderer.grid.template.setAll({\n\t\t\t\tstrokeDasharray: [2, 2],\n\t\t\t\tstroke: KTUtil.getCssVariableValue('--bs-gray-400')\n\t\t\t});\n\n\t\t\tyRenderer.labels.template.setAll({\n\t\t\t\tfontWeight: \"500\",\n\t\t\t\tfontSize: 12,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\")),\n\t\t\t});\n\n\t\t\t// Create series\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n\t\t\tvar series1 = chart.series.push(\n\t\t\t\tam5radar.RadarLineSeries.new(root, {\n\t\t\t\t\tname: \"Revenue\",\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"value1\",\n\t\t\t\t\tcategoryXField: \"name\",\n\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries1.strokes.template.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t});\n\n\t\t\tseries1.fills.template.setAll({\n\t\t\t\tvisible: true,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\tfillOpacity: 0.5,\n\t\t\t});\n\n\t\t\tvar series2 = chart.series.push(\n\t\t\t\tam5radar.RadarLineSeries.new(root, {\n\t\t\t\t\tname: \"Expense\",\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"value2\",\n\t\t\t\t\tcategoryXField: \"name\",\n\t\t\t\t\tstacked: true,\n\t\t\t\t\ttooltip: am5.Tooltip.new(root, {\n\t\t\t\t\t\tlabelText: \"Revenue: {value1}\\nExpense:{value2}\",\n\t\t\t\t\t}),\n\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries2.strokes.template.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t});\n\n\t\t\tseries2.fills.template.setAll({\n\t\t\t\tvisible: true,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\tfillOpacity: 0.5,\n\t\t\t});\n\n\t\t\tvar legend = chart.radarContainer.children.push(\n\t\t\t\tam5.Legend.new(root, {\n\t\t\t\t\twidth: 150,\n\t\t\t\t\tcenterX: am5.p50,\n\t\t\t\t\tcenterY: am5.p50,\n\t\t\t\t})\n\t\t\t);\n\t\t\tlegend.data.setAll([series1, series2]);\n\n\t\t\tlegend.labels.template.setAll({\n\t\t\t\tfontWeight: \"600\",\n\t\t\t\tfontSize: 13,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\")),\n\t\t\t});\n\n\t\t\t// Set data\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Setting_data\n\t\t\tvar data = [\n\t\t\t\t{\n\t\t\t\t\tname: \"Openlane\",\n\t\t\t\t\tvalue1: 160.2,\n\t\t\t\t\tvalue2: 66.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Yearin\",\n\t\t\t\t\tvalue1: 150.1,\n\t\t\t\t\tvalue2: 50.5,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Goodsilron\",\n\t\t\t\t\tvalue1: 120.7,\n\t\t\t\t\tvalue2: 32.3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Condax\",\n\t\t\t\t\tvalue1: 89.4,\n\t\t\t\t\tvalue2: 74.5,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Opentech\",\n\t\t\t\t\tvalue1: 78.5,\n\t\t\t\t\tvalue2: 29.7,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Golddex\",\n\t\t\t\t\tvalue1: 77.6,\n\t\t\t\t\tvalue2: 102.2,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Isdom\",\n\t\t\t\t\tvalue1: 69.8,\n\t\t\t\t\tvalue2: 22.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Plusstrip\",\n\t\t\t\t\tvalue1: 63.6,\n\t\t\t\t\tvalue2: 45.3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Kinnamplus\",\n\t\t\t\t\tvalue1: 59.7,\n\t\t\t\t\tvalue2: 12.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Zumgoity\",\n\t\t\t\t\tvalue1: 54.3,\n\t\t\t\t\tvalue2: 19.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Stanredtax\",\n\t\t\t\t\tvalue1: 52.9,\n\t\t\t\t\tvalue2: 96.3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Conecom\",\n\t\t\t\t\tvalue1: 42.9,\n\t\t\t\t\tvalue2: 11.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Zencorporation\",\n\t\t\t\t\tvalue1: 40.9,\n\t\t\t\t\tvalue2: 16.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Iselectrics\",\n\t\t\t\t\tvalue1: 39.2,\n\t\t\t\t\tvalue2: 9.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Treequote\",\n\t\t\t\t\tvalue1: 36.6,\n\t\t\t\t\tvalue2: 36.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Sumace\",\n\t\t\t\t\tvalue1: 34.8,\n\t\t\t\t\tvalue2: 14.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Lexiqvolax\",\n\t\t\t\t\tvalue1: 32.1,\n\t\t\t\t\tvalue2: 35.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Sunnamplex\",\n\t\t\t\t\tvalue1: 31.8,\n\t\t\t\t\tvalue2: 5.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Faxquote\",\n\t\t\t\t\tvalue1: 29.3,\n\t\t\t\t\tvalue2: 14.7,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Donware\",\n\t\t\t\t\tvalue1: 23.0,\n\t\t\t\t\tvalue2: 2.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Warephase\",\n\t\t\t\t\tvalue1: 21.5,\n\t\t\t\t\tvalue2: 12.1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Donquadtech\",\n\t\t\t\t\tvalue1: 19.7,\n\t\t\t\t\tvalue2: 10.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Nam-zim\",\n\t\t\t\t\tvalue1: 15.5,\n\t\t\t\t\tvalue2: 4.1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Y-corporation\",\n\t\t\t\t\tvalue1: 14.2,\n\t\t\t\t\tvalue2: 11.3,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tseries1.data.setAll(data);\n\t\t\tseries2.data.setAll(data);\n\t\t\txAxis.data.setAll(data);\n\n\t\t\t// Animate chart and series in\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n\t\t\tseries1.appear(1000);\n\t\t\tseries2.appear(1000);\n\t\t\tchart.appear(1000, 100);\n\t\t}\n\n\t\t// On amchart ready\n\t\tam5.ready(function () {\n\t\t\tinit();\n\t\t}); // end am5.ready()\n\n\t\t// Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n\t};\n\n\t// Public methods\n\treturn {\n\t\tinit: function () {\n\t\t\tinitChart1();\n\t\t\tinitChart2();\n\t\t},\n\t};\n})();\n\n// Webpack support\nif (true) {\n\twindow.KTChartsWidget25 = module.exports = KTChartsWidget25;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-25.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-26.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-26.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget26 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_26\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n        var lightColor = KTUtil.getCssVariableValue('--bs-primary');\n        var chartInfo = element.getAttribute('data-kt-chart-info');\n\n        var options = {\n            series: [{\n                name: chartInfo,\n                data: [34.5, 34.5, 35, 35, 35.5, 35.5, 35, 35, 35.5, 35.5, 35, 35, 34.5, 34.5, 35, 35, 35.5, 35.5, 35]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 19', 'Apr 21', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                max: 36.3,\n                min: 33,\n                tickAmount: 6,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return '$' + parseInt(10 * val)\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return '$' + parseInt(10 * val)\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);            \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart();\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget26 = module.exports = KTChartsWidget26;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-26.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-27.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-27.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget27 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_27\"); \n\n        if (!element) {\n            return;\n        }\n        \n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');    \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var maxValue = 18;\n        \n        var options = {\n            series: [{\n                name: 'Sessions',\n                data: [12.478, 7.546, 6.083, 5.041, 4.420]                                                                                                             \n            }],           \n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: 350,\n                toolbar: {\n                    show: false\n                }                             \n            },                    \n            plotOptions: {\n                bar: {\n                    borderRadius: 8,\n                    horizontal: true,\n                    distributed: true,\n                    barHeight: 50,\n                    dataLabels: {\n\t\t\t\t        position: 'bottom' // use 'bottom' for left and 'top' for right align(textAnchor)\n\t\t\t        }                                                       \n                }\n            },\n            dataLabels: {  // Docs: https://apexcharts.com/docs/options/datalabels/\n                enabled: true,              \n                textAnchor: 'start',  \n                offsetX: 0,                 \n                formatter: function (val, opts) {\n                    var val = val * 1000;\n                    var Format = wNumb({\n                        //prefix: '$',\n                        //suffix: ',-',\n                        thousand: ','\n                    });\n\n                    return Format.to(val);\n                },\n                style: {\n                    fontSize: '14px',\n                    fontWeight: '600',\n                    align: 'left',                                                            \n                }                                       \n            },             \n            legend: {\n                show: false\n            },                               \n            colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA'],                                                                      \n            xaxis: {\n                categories: [\"USA\", \"India\", 'Canada', 'Brasil', 'France'],\n                labels: {\n                    formatter: function (val) {\n                        return val + \"K\"\n                    },\n                    style: {\n                        colors: labelColor,\n                        fontSize: '14px',\n                        fontWeight: '600',\n                        align: 'left'                                              \n                    }                  \n                },\n                axisBorder: {\n\t\t\t\t\tshow: false\n\t\t\t\t}                         \n            },\n            yaxis: {\n                labels: {       \n                    formatter: function (val, opt) {\n                        if (Number.isInteger(val)) {\n                            var percentage = parseInt(val * 100 / maxValue) . toString(); \n                            return val + ' - ' + percentage + '%';\n                        } else {\n                            return val;\n                        }\n                    },            \n                    style: {\n                        colors: labelColor,\n                        fontSize: '14px',\n                        fontWeight: '600'                                                                 \n                    },\n                    offsetY: 2,\n                    align: 'left' \n                }           \n            },\n            grid: {                \n                borderColor: borderColor,                \n                xaxis: {\n                    lines: {\n                        show: true\n                    }\n                },   \n                yaxis: {\n                    lines: {\n                        show: false  \n                    }\n                },\n                strokeDashArray: 4              \n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val;\n                    }\n                }\n            }                                 \n        };  \n          \n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);        \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget27 = module.exports = KTChartsWidget27;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-27.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-28.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-28.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget28 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n    \n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_28\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-info');         \n\n        var options = {\n            series: [{\n                name: 'Links',\n                data: [190, 230, 230, 200, 200, 190, 190, 200, 200, 220, 220, 200, 200, 210, 210]\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },            \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['May 04', 'May 05', 'May 06', 'May 09', 'May 10', 'May 12', 'May 14', 'May 17', 'May 18', 'May 20', 'May 22', 'May 24', 'May 26', 'May 28', 'May 30'],\n                axisBorder: {\n                    show: false,\n                },\n                offsetX: 20,\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 3,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'                        \n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 250,\n                min: 100,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return val \n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val \n                    }\n                }\n            },\n            colors: [baseColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);  \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget28 = module.exports = KTChartsWidget28;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-28.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-29.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-29.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget29 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_29\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-warning');         \n\n        var options = {\n            series: [{\n                name: 'Position',\n                data: [4, 7.5, 7.5, 6, 6, 4, 4, 6, 6, 8, 8, 6, 6, 7, 7]\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },            \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                offsetX: 20,\n                tickAmount: 4,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'                       \n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 10,\n                min: 1,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return val \n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val \n                    }\n                }\n            },\n            colors: [baseColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);      \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget29 = module.exports = KTChartsWidget29;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-29.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-3.js":
/*!********************************************!*\
  !*** ../src/js/widgets/charts/widget-3.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget3 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_3\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-success');\n        var lightColor = KTUtil.getCssVariableValue('--bs-success');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [18, 18, 20, 20, 18, 18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22]\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15', 'Apr 16', 'Apr 17', 'Apr 18', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 24,\n                min: 10,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return '$' + val + \"K\"\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \"K\"\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);  \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget3 = module.exports = KTChartsWidget3;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-3.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-30.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-30.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget30 = (function () {\n    // Private methods\n    var initChart = function () {\n        // Check if amchart library is included\n        if (typeof am5 === \"undefined\") {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_charts_widget_30_chart\");\n\n        if (!element) {\n            return;\n        }\n\n        var root;\n\n        var init = function() {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create chart\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/\n            // start and end angle must be set both for chart and series\n            var chart = root.container.children.push(\n                am5percent.PieChart.new(root, {\n                    startAngle: 180,\n                    endAngle: 360,\n                    layout: root.verticalLayout,\n                    innerRadius: am5.percent(50),\n                })\n            );\n\n            // Create series\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Series\n            // start and end angle must be set both for chart and series\n            var series = chart.series.push(\n                am5percent.PieSeries.new(root, {\n                    startAngle: 180,\n                    endAngle: 360,\n                    valueField: \"value\",\n                    categoryField: \"category\",\n                    alignLabels: false,\n                })\n            );\n\n            series.labels.template.setAll({\n                fontWeight: \"400\",\n                fontSize: 13,\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-gray-500'))\n            });\n\n            series.states.create(\"hidden\", {\n                startAngle: 180,\n                endAngle: 180,\n            });\n\n            series.slices.template.setAll({\n                cornerRadius: 5,\n            });\n\n            series.ticks.template.setAll({\n                forceHidden: true,\n            });\n\n            // Set data\n            // https://www.amcharts.com/docs/v5/charts/percent-charts/pie-chart/#Setting_data\n            series.data.setAll([\n                { value: 10, category: \"One\", fill: am5.color(KTUtil.getCssVariableValue('--bs-primary')) },\n                { value: 9, category: \"Two\", fill: am5.color(KTUtil.getCssVariableValue('--bs-success')) },\n                { value: 6, category: \"Three\", fill: am5.color(KTUtil.getCssVariableValue('--bs-danger')) },\n                { value: 5, category: \"Four\", fill: am5.color(KTUtil.getCssVariableValue('--bs-warning')) },\n                { value: 4, category: \"Five\", fill: am5.color(KTUtil.getCssVariableValue('--bs-info')) },\n                { value: 3, category: \"Six\", fill: am5.color(KTUtil.getCssVariableValue('--bs-secondary')) }\n            ]);\n\n            series.appear(1000, 100);\n        }\n\n        am5.ready(function () {\n            init();\n        });\n\n        // Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget30 = module.exports = KTChartsWidget30;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-30.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-31.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-31.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget31 = (function () {\n\t// Private methods\n\tvar initChart1 = function () {\n\t\t// Check if amchart library is included\n\t\tif (typeof am5 === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element = document.getElementById(\"kt_charts_widget_31_chart\");\n\n\t\tif (!element) {\n\t\t\treturn;\n\t\t}\n\n\t\tvar chart;\n\t\tvar root;\n\n\t\tvar init = function() {\n\t\t\t// Create root element\n\t\t\t// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n\t\t\troot = am5.Root.new(element);\n\n\t\t\t// Set themes\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/themes/\n\t\t\troot.setThemes([am5themes_Animated.new(root)]);\n\n\t\t\t// Create chart\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/\n\t\t\tchart = root.container.children.push(\n\t\t\t\tam5radar.RadarChart.new(root, {\n\t\t\t\t\tpanX: false,\n\t\t\t\t\tpanY: false,\n\t\t\t\t\twheelX: \"panX\",\n\t\t\t\t\twheelY: \"zoomX\",\n\t\t\t\t\tinnerRadius: am5.percent(40),\n\t\t\t\t\tradius: am5.percent(70),\n\t\t\t\t\tarrangeTooltips: false,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tvar cursor = chart.set(\n\t\t\t\t\"cursor\",\n\t\t\t\tam5radar.RadarCursor.new(root, {\n\t\t\t\t\tbehavior: \"zoomX\",\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tcursor.lineY.set(\"visible\", false);\n\n\t\t\t// Create axes and their renderers\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n\t\t\tvar xRenderer = am5radar.AxisRendererCircular.new(root, {\n\t\t\t\tminGridDistance: 30,\n\t\t\t});\n\t\t\t\n\t\t\txRenderer.labels.template.setAll({\n\t\t\t\ttextType: \"radial\",\n\t\t\t\tradius: 10,\n\t\t\t\tpaddingTop: 0,\n\t\t\t\tpaddingBottom: 0,\n\t\t\t\tcenterY: am5.p50,\n\t\t\t\tfontWeight: \"400\",\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-800\")),\n\t\t\t});\n\n\t\t\txRenderer.grid.template.setAll({\n\t\t\t\tlocation: 0.5,\n\t\t\t\tstrokeDasharray: [2, 2],\n\t\t\t\tstroke: KTUtil.getCssVariableValue('--bs-gray-400')\n\t\t\t});\n\n\t\t\tvar xAxis = chart.xAxes.push(\n\t\t\t\tam5xy.CategoryAxis.new(root, {\n\t\t\t\t\tmaxDeviation: 0,\n\t\t\t\t\tcategoryField: \"name\",\n\t\t\t\t\trenderer: xRenderer,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tvar yRenderer = am5radar.AxisRendererRadial.new(root, {\n\t\t\t\tminGridDistance: 30,\n\t\t\t});\n\n\t\t\tyRenderer.labels.template.setAll({\n\t\t\t\tfontWeight: \"500\",\n\t\t\t\tfontSize: 12,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\")),\n\t\t\t});\n\n\t\t\tvar yAxis = chart.yAxes.push(\n\t\t\t\tam5xy.ValueAxis.new(root, {\n\t\t\t\t\trenderer: yRenderer,\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tyRenderer.grid.template.setAll({\n\t\t\t\tstrokeDasharray: [2, 2],\n\t\t\t\tstroke: KTUtil.getCssVariableValue('--bs-gray-400')\t\t\t\t\n\t\t\t});\n\n\t\t\t// Create series\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n\t\t\tvar series1 = chart.series.push(\n\t\t\t\tam5radar.RadarLineSeries.new(root, {\n\t\t\t\t\tname: \"Revenue\",\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"value1\",\n\t\t\t\t\tcategoryXField: \"name\",\n\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries1.strokes.template.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t});\n\n\t\t\tseries1.fills.template.setAll({\n\t\t\t\tvisible: true,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\tfillOpacity: 0.5,\n\t\t\t});\n\n\t\t\tvar series2 = chart.series.push(\n\t\t\t\tam5radar.RadarLineSeries.new(root, {\n\t\t\t\t\tname: \"Expense\",\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"value2\",\n\t\t\t\t\tcategoryXField: \"name\",\n\t\t\t\t\tstacked: true,\n\t\t\t\t\ttooltip: am5.Tooltip.new(root, {\n\t\t\t\t\t\tlabelText: \"Revenue: {value1}\\nExpense:{value2}\",\n\t\t\t\t\t}),\n\t\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-success\")),\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries2.strokes.template.setAll({\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t});\n\n\t\t\tseries2.fills.template.setAll({\n\t\t\t\tvisible: true,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-primary\")),\n\t\t\t\tfillOpacity: 0.5,\n\t\t\t});\n\n\t\t\tvar legend = chart.radarContainer.children.push(\n\t\t\t\tam5.Legend.new(root, {\n\t\t\t\t\twidth: 150,\n\t\t\t\t\tcenterX: am5.p50,\n\t\t\t\t\tcenterY: am5.p50\n\t\t\t\t})\n\t\t\t);\n\t\t\tlegend.data.setAll([series1, series2]);\n\n\t\t\tlegend.labels.template.setAll({\n\t\t\t\tfontWeight: \"600\",\n\t\t\t\tfontSize: 13,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\")),\n\t\t\t});\n\n\t\t\t// Set data\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Setting_data\n\t\t\tvar data = [\n\t\t\t\t{\n\t\t\t\t\tname: \"Openlane\",\n\t\t\t\t\tvalue1: 160.2,\n\t\t\t\t\tvalue2: 26.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Yearin\",\n\t\t\t\t\tvalue1: 120.1,\n\t\t\t\t\tvalue2: 50.5,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Goodsilron\",\n\t\t\t\t\tvalue1: 150.7,\n\t\t\t\t\tvalue2: 12.3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Condax\",\n\t\t\t\t\tvalue1: 69.4,\n\t\t\t\t\tvalue2: 74.5,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Opentech\",\n\t\t\t\t\tvalue1: 78.5,\n\t\t\t\t\tvalue2: 29.7,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Golddex\",\n\t\t\t\t\tvalue1: 77.6,\n\t\t\t\t\tvalue2: 102.2,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Isdom\",\n\t\t\t\t\tvalue1: 69.8,\n\t\t\t\t\tvalue2: 22.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Plusstrip\",\n\t\t\t\t\tvalue1: 63.6,\n\t\t\t\t\tvalue2: 45.3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Kinnamplus\",\n\t\t\t\t\tvalue1: 59.7,\n\t\t\t\t\tvalue2: 12.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Zumgoity\",\n\t\t\t\t\tvalue1: 64.3,\n\t\t\t\t\tvalue2: 19.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Stanredtax\",\n\t\t\t\t\tvalue1: 52.9,\n\t\t\t\t\tvalue2: 96.3,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Conecom\",\n\t\t\t\t\tvalue1: 42.9,\n\t\t\t\t\tvalue2: 11.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Zencorporation\",\n\t\t\t\t\tvalue1: 40.9,\n\t\t\t\t\tvalue2: 16.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Iselectrics\",\n\t\t\t\t\tvalue1: 39.2,\n\t\t\t\t\tvalue2: 9.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Treequote\",\n\t\t\t\t\tvalue1: 76.6,\n\t\t\t\t\tvalue2: 36.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Sumace\",\n\t\t\t\t\tvalue1: 34.8,\n\t\t\t\t\tvalue2: 14.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Lexiqvolax\",\n\t\t\t\t\tvalue1: 32.1,\n\t\t\t\t\tvalue2: 35.6,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Sunnamplex\",\n\t\t\t\t\tvalue1: 31.8,\n\t\t\t\t\tvalue2: 5.9,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Faxquote\",\n\t\t\t\t\tvalue1: 29.3,\n\t\t\t\t\tvalue2: 14.7,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Donware\",\n\t\t\t\t\tvalue1: 23.0,\n\t\t\t\t\tvalue2: 2.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Warephase\",\n\t\t\t\t\tvalue1: 21.5,\n\t\t\t\t\tvalue2: 12.1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Donquadtech\",\n\t\t\t\t\tvalue1: 19.7,\n\t\t\t\t\tvalue2: 10.8,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Nam-zim\",\n\t\t\t\t\tvalue1: 15.5,\n\t\t\t\t\tvalue2: 4.1,\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"Y-corporation\",\n\t\t\t\t\tvalue1: 14.2,\n\t\t\t\t\tvalue2: 11.3,\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tseries1.data.setAll(data);\n\t\t\tseries2.data.setAll(data);\n\t\t\txAxis.data.setAll(data);\n\n\t\t\t// Animate chart and series in\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n\t\t\tseries1.appear(1000);\n\t\t\tseries2.appear(1000);\n\t\t\tchart.appear(1000, 100);\n\t\t}\n\n\t\t// On amchart ready\n\t\tam5.ready(function () {\n\t\t\tinit();\n\t\t}); // end am5.ready()\n\n\t\t// Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n\t};\n\n\t// Public methods\n\treturn {\n\t\tinit: function () {\n\t\t\tinitChart1();\n\t\t}\n\t};\n})();\n\n// Webpack support\nif (true) {\n\twindow.KTChartsWidget31 = module.exports = KTChartsWidget31;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-31.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-32.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-32.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget32 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, toggle, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);      \n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [{\n                name: 'Deliveries',\n                data: data\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }              \n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['22%'],\n                    borderRadius: 5,                     \n                    dataLabels: {\n                        position: \"top\" // top, center, bottom\n                    },\n                    startingShape: 'flat'\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: true, \n                offsetY: -28,                                             \n                style: {\n                    fontSize: '13px',\n                    colors: [labelColor]\n                }\n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['Grossey', 'Pet Food', 'Flowers', 'Restaurant', 'Kids Toys', 'Clothing', 'Still Water'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }                    \n                },\n                crosshairs: {\n                    fill: {         \n                        gradient: {         \n                            opacityFrom: 0,\n                            opacityTo: 0\n                        }\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                }\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-primary-light')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n        \n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {   \n            var chart1Data = [54, 42, 75, 110, 23, 87, 50];\n            initChart(chart1, '#kt_charts_widget_32_tab_1', '#kt_charts_widget_32_chart_1', chart1Data, true);\n\n            var chart2Data = [25, 55, 35, 50, 45, 20, 31];\n            initChart(chart2, '#kt_charts_widget_32_tab_2', '#kt_charts_widget_32_chart_2', chart2Data, false);\n\n            var chart3Data = [45, 15, 35, 70, 45, 50, 21];\n            initChart(chart3, '#kt_charts_widget_32_tab_3', '#kt_charts_widget_32_chart_3', chart3Data, false);          \n            \n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                } \n                \n                initChart(chart1, '#kt_charts_widget_32_tab_1', '#kt_charts_widget_32_chart_1', chart1Data, chart1.rendered);\n                initChart(chart2, '#kt_charts_widget_32_tab_2', '#kt_charts_widget_32_chart_2', chart2Data, chart2.rendered);  \n                initChart(chart3, '#kt_charts_widget_32_tab_3', '#kt_charts_widget_32_chart_3', chart3Data, chart3.rendered);                                           \n            });         \n        }        \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget32 = module.exports = KTChartsWidget32;\n}\n\n\n \n         \n    \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-32.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-33.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-33.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget33 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart4 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart5 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, toggle, chartSelector, data, labels, initByDefault) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n        \n        var color = element.getAttribute('data-kt-chart-color');\n        var height = parseInt(KTUtil.css(element, 'height'));\n        \n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);    \n\n        var options = {\n            series: [{\n                name: 'Etherium ',\n                data: data\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },            \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0.2,\n                    stops: [15, 120, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: labels,\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                offsetX: 20,\n                tickAmount: 4,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: false,\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'                       \n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 4000,\n                min: 1000,\n                labels: {\n                    show: false                    \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + '$';\n                    }\n                }\n            },\n            colors: [baseColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 3,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {       \n        init: function () {   \n            var chart1Data = [2100, 3200, 3200, 2400, 2400, 1800, 1800, 2400, 2400, 3200, 3200, 3000, 3000, 3250, 3250];\n            var chart1Labels = ['10AM', '10.30AM', '11AM', '11.15AM', '11.30AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM'];\n\n            initChart(chart1, '#kt_charts_widget_33_tab_1', '#kt_charts_widget_33_chart_1', chart1Data, chart1Labels, true);\n\n            var chart2Data = [2300, 2300, 2000, 3200, 3200, 2800, 2400, 2400, 3100, 2900, 3100, 3100, 2600, 2600, 3200];\n            var chart2Labels = ['Apr 01', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15'];\n\n            initChart(chart2, '#kt_charts_widget_33_tab_2', '#kt_charts_widget_33_chart_2', chart2Data, chart2Labels, false);\n\n            var chart3Data = [2600, 3200, 2300, 2300, 2000, 3200, 3100, 2900, 3200, 3200, 2600, 3100, 2800, 2400, 2400];\n            var chart3Labels = ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'];\n\n            initChart(chart3, '#kt_charts_widget_33_tab_3', '#kt_charts_widget_33_chart_3', chart3Data, chart3Labels, false);\n\n            var chart4Data =  [1800, 1800, 2400, 2400, 3200, 3200, 3000, 2100, 3200, 3300, 2400, 2400, 3000, 3200, 3100];\n            var chart4Labels = ['Jun 2021', 'Jul 2021', 'Aug 2021', 'Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022'];\n\n            initChart(chart4, '#kt_charts_widget_33_tab_4', '#kt_charts_widget_33_chart_4', chart4Data, chart4Labels, false);                \n            \n            var chart5Data = [3000, 2100, 3300, 3100, 1800, 1800, 2400, 2400, 3100, 3100, 2400, 2400, 3000, 2400, 2800];\n            var chart5Labels = ['Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022', 'Sep 2022', 'Oct 2022', 'Nov 2022'];\n\n            initChart(chart5, '#kt_charts_widget_33_tab_5', '#kt_charts_widget_33_chart_5', chart5Data, chart5Labels, false);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                }\n\n                if (chart4.rendered) {\n                    chart4.self.destroy();\n                }\n\n                if (chart5.rendered) {\n                    chart5.self.destroy();\n                }\n\n                initChart(chart1, '#kt_charts_widget_33_tab_1', '#kt_charts_widget_33_chart_1', chart1Data, chart1Labels, chart1.rendered);\n                initChart(chart2, '#kt_charts_widget_33_tab_2', '#kt_charts_widget_33_chart_2', chart2Data, chart2Labels, chart2.rendered);  \n                initChart(chart3, '#kt_charts_widget_33_tab_3', '#kt_charts_widget_33_chart_3', chart3Data, chart3Labels, chart3.rendered);\n                initChart(chart4, '#kt_charts_widget_33_tab_4', '#kt_charts_widget_33_chart_4', chart4Data, chart4Labels, chart4.rendered); \n                initChart(chart5, '#kt_charts_widget_33_tab_5', '#kt_charts_widget_33_chart_5', chart5Data, chart5Labels, chart5.rendered); \n            });\n        }  \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget33 = module.exports = KTChartsWidget33;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-33.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-34.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-34.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget34 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart4 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart5 = {\n        self: null,\n        rendered: false\n    };\n    // Private methods\n    var initChart = function(chart, toggle, chartSelector, data, labels, initByDefault) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }        \n         \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var color = element.getAttribute('data-kt-chart-color');\n\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);    \n\n        var options = {\n            series: [{\n                name: 'Earnings',\n                data: data\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },            \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0.2,\n                    stops: [15, 120, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: labels,\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                offsetX: 20,\n                tickAmount: 4,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: false,\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'                       \n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 4000,\n                min: 1000,\n                labels: {\n                    show: false                    \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + '$';\n                    }\n                }\n            },\n            colors: [baseColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 3,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () { \n            var chart1Data = [2100, 2800, 2800, 2400, 2400, 1800, 1800, 2400, 2400, 3200, 3200, 2800, 2800, 3250, 3250];\n            var chart1Labels = ['10AM', '10.30AM', '11AM', '11.15AM', '11.30AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM'];\n\n            initChart(chart1, '#kt_charts_widget_34_tab_1', '#kt_charts_widget_34_chart_1', chart1Data, chart1Labels, true);\n\n            var chart2Data = [2300, 2300, 2000, 3100, 3100, 2800, 2400, 2400, 3100, 2900, 3200, 3200, 2600, 2600, 3200];\n            var chart2Labels = ['Apr 01', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15'];\n\n            initChart(chart2, '#kt_charts_widget_34_tab_2', '#kt_charts_widget_34_chart_2', chart2Data, chart2Labels, false);\n\n            var chart3Data = [2600, 3400, 2300, 2300, 2000, 3100, 3100, 2900, 3200, 3200, 2600, 3100, 2800, 2400, 2400];\n            var chart3Labels = ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'];\n\n            initChart(chart3, '#kt_charts_widget_34_tab_3', '#kt_charts_widget_34_chart_3', chart3Data, chart3Labels, false);\n\n            var chart4Data =  [1800, 1800, 2400, 2400, 3100, 3100, 3000, 2100, 3200, 3200, 2400, 2400, 3000, 3200, 3100];\n            var chart4Labels = ['Jun 2021', 'Jul 2021', 'Aug 2021', 'Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022'];\n\n            initChart(chart4, '#kt_charts_widget_34_tab_4', '#kt_charts_widget_34_chart_4', chart4Data, chart4Labels, false);                \n            \n            var chart5Data = [3000, 2100, 3200, 3200, 1800, 1800, 2400, 2400, 3100, 3100, 2400, 2400, 3000, 2400, 2800];\n            var chart5Labels = ['Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022', 'Sep 2022', 'Oct 2022', 'Nov 2022'];\n\n            initChart(chart5, '#kt_charts_widget_34_tab_5', '#kt_charts_widget_34_chart_5', chart5Data, chart5Labels, false);\n            \n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                }\n\n                if (chart4.rendered) {\n                    chart4.self.destroy();\n                }\n\n                if (chart5.rendered) {\n                    chart5.self.destroy();\n                }\n\n                initChart(chart1, '#kt_charts_widget_34_tab_1', '#kt_charts_widget_34_chart_1', chart1Data, chart1Labels, chart1.rendered);\n                initChart(chart2, '#kt_charts_widget_34_tab_2', '#kt_charts_widget_34_chart_2', chart2Data, chart2Labels, chart2.rendered);  \n                initChart(chart3, '#kt_charts_widget_34_tab_3', '#kt_charts_widget_34_chart_3', chart3Data, chart3Labels, chart3.rendered);\n                initChart(chart4, '#kt_charts_widget_34_tab_4', '#kt_charts_widget_34_chart_4', chart4Data, chart4Labels, chart4.rendered); \n                initChart(chart5, '#kt_charts_widget_34_tab_5', '#kt_charts_widget_34_chart_5', chart5Data, chart5Labels, chart5.rendered); \n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget34 = module.exports = KTChartsWidget34;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-34.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-35.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-35.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget35 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart4 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart5 = {\n        self: null,\n        rendered: false\n    };\n    \n\n    // Private methods\n    var initChart = function(chart, toggle, chartSelector, data, labels, initByDefault) {\n        var element = document.querySelector(chartSelector);       \n\n        if (!element) {\n            return;\n        }     \n         \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var color = element.getAttribute('data-kt-chart-color');        \n        \n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);    \n\n        var options = {\n            series: [{\n                name: 'Earnings',\n                data: data\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },            \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0.2,\n                    stops: [15, 120, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: labels,\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                offsetX: 20,\n                tickAmount: 4,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: false,\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'                       \n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 4000,\n                min: 1000,\n                labels: {\n                    show: false                    \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + '$';\n                    }\n                }\n            },\n            colors: [baseColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 3,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {   \n            var chart1Data = [2100, 3100, 3100, 2400, 2400, 1800, 1800, 2400, 2400, 3200, 3200, 2800, 2800, 3250, 3250];\n            var chart1Labels = ['10AM', '10.30AM', '11AM', '11.15AM', '11.30AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM'];\n\n            initChart(chart1, '#kt_charts_widget_35_tab_1', '#kt_charts_widget_35_chart_1', chart1Data, chart1Labels, true);\n\n            var chart2Data = [2300, 2300, 2000, 3200, 3200, 2800, 2400, 2400, 3100, 2900, 3200, 3200, 2600, 2600, 3200];\n            var chart2Labels = ['Apr 01', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15'];\n\n            initChart(chart2, '#kt_charts_widget_35_tab_2', '#kt_charts_widget_35_chart_2', chart2Data, chart2Labels, false);\n\n            var chart3Data = [2600, 3200, 2300, 2300, 2000, 3200, 3100, 2900, 3400, 3400, 2600, 3200, 2800, 2400, 2400];\n            var chart3Labels = ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'];\n\n            initChart(chart3, '#kt_charts_widget_35_tab_3', '#kt_charts_widget_35_chart_3', chart3Data, chart3Labels, false);\n\n            var chart4Data =  [1800, 1800, 2400, 2400, 3200, 3200, 3000, 2100, 3200, 3200, 2400, 2400, 3000, 3200, 3100];\n            var chart4Labels = ['Jun 2021', 'Jul 2021', 'Aug 2021', 'Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022'];\n\n            initChart(chart4, '#kt_charts_widget_35_tab_4', '#kt_charts_widget_35_chart_4', chart4Data, chart4Labels, false);                \n            \n            var chart5Data = [3200, 2100, 3200, 3200, 3200, 3500, 3000, 2400, 3250, 2400, 2400, 3250, 3000, 2400, 2800];\n            var chart5Labels = ['Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022', 'Sep 2022', 'Oct 2022', 'Nov 2022'];\n\n            initChart(chart5, '#kt_charts_widget_35_tab_5', '#kt_charts_widget_35_chart_5', chart5Data, chart5Labels, false);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                }\n\n                if (chart4.rendered) {\n                    chart4.self.destroy();\n                }\n\n                if (chart5.rendered) {\n                    chart5.self.destroy();\n                }\n\n                initChart(chart1, '#kt_charts_widget_35_tab_1', '#kt_charts_widget_35_chart_1', chart1Data, chart1Labels, chart1.rendered);\n                initChart(chart2, '#kt_charts_widget_35_tab_2', '#kt_charts_widget_35_chart_2', chart2Data, chart2Labels, chart2.rendered);  \n                initChart(chart3, '#kt_charts_widget_35_tab_3', '#kt_charts_widget_35_chart_3', chart3Data, chart3Labels, chart3.rendered);\n                initChart(chart4, '#kt_charts_widget_35_tab_4', '#kt_charts_widget_35_chart_4', chart4Data, chart4Labels, chart4.rendered); \n                initChart(chart5, '#kt_charts_widget_35_tab_5', '#kt_charts_widget_35_chart_5', chart5Data, chart5Labels, chart5.rendered); \n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget35 = module.exports = KTChartsWidget35;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-35.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-36.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-36.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget36 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_36\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseprimaryColor = KTUtil.getCssVariableValue('--bs-primary');\n        var lightprimaryColor = KTUtil.getCssVariableValue('--bs-primary');\n        var basesuccessColor = KTUtil.getCssVariableValue('--bs-success');\n        var lightsuccessColor = KTUtil.getCssVariableValue('--bs-success');\n\n        var options = {\n            series: [{\n                name: 'Inbound Calls',\n                data: [65, 80, 80, 60, 60, 45, 45, 80, 80, 70, 70, 90, 90, 80, 80, 80, 60, 60, 50]\n            }, {\n                name: 'Outbound Calls',\n                data: [90, 110, 110, 95, 95, 85, 85, 95, 95, 115, 115, 100, 100, 115, 115, 95, 95, 85, 85]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0.2,\n                    stops: [15, 120, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseprimaryColor, basesuccessColor]\n            },\n            xaxis: {\n                categories: ['', '8 AM', '81 AM', '9 AM', '10 AM', '11 AM', '12 PM', '13 PM', '14 PM', '15 PM', '16 PM', '17 PM', '18 PM', '18:20 PM', '18:20 PM', '19 PM', '20 PM', '21 PM', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: [baseprimaryColor, basesuccessColor],\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                max: 120,\n                min: 30,\n                tickAmount: 6,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    } \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                } \n            },\n            colors: [lightprimaryColor, lightsuccessColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: [baseprimaryColor, basesuccessColor],\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);      \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget36 = module.exports = KTChartsWidget36;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-36.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-37.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-37.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget37 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart4 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, toggle, chartSelector, data, labels, initByDefault) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var color = element.getAttribute('data-kt-chart-color');         \n        \n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);    \n\n        var options = {\n            series: [{\n                name: 'Earnings',\n                data: data\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },            \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0.2,\n                    stops: [15, 120, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: labels,\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                offsetX: 20,\n                tickAmount: 4,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: false,\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'                       \n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 4000,\n                min: 1000,\n                labels: {\n                    show: false                    \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + '$';\n                    }\n                }\n            },\n            colors: [baseColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 3,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () { \n            var chart1Data = [2100, 3200, 3200, 2400, 2400, 1800, 1800, 2400, 2400, 3200, 3200, 3000, 3000, 3250, 3250];\n            var chart1Labels = ['10AM', '10.30AM', '11AM', '11.15AM', '11.30AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM'];\n\n            initChart(chart1, '#kt_charts_widget_37_tab_1', '#kt_charts_widget_37_chart_1', chart1Data, chart1Labels, true);\n\n            var chart2Data = [2300, 2300, 2000, 3200, 3200, 2800, 2400, 2400, 3100, 2900, 3100, 3100, 2600, 2600, 3200];\n            var chart2Labels = ['Apr 01', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15'];\n\n            initChart(chart2, '#kt_charts_widget_37_tab_2', '#kt_charts_widget_37_chart_2', chart2Data, chart2Labels, false);\n\n            var chart3Data = [2600, 3200, 2300, 2300, 2000, 3200, 3100, 2900, 3200, 3200, 2600, 3100, 2800, 2400, 2400];\n            var chart3Labels = ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'];\n\n            initChart(chart3, '#kt_charts_widget_37_tab_3', '#kt_charts_widget_37_chart_3', chart3Data, chart3Labels, false);\n\n            var chart4Data =  [1800, 1800, 2400, 2400, 3200, 3200, 3000, 2100, 3200, 3300, 2400, 2400, 3000, 3200, 3100];\n            var chart4Labels = ['Jun 2021', 'Jul 2021', 'Aug 2021', 'Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022'];\n\n            initChart(chart4, '#kt_charts_widget_37_tab_4', '#kt_charts_widget_37_chart_4', chart4Data, chart4Labels, false);  \n            \n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                }\n\n                if (chart4.rendered) {\n                    chart4.self.destroy();\n                } \n\n                initChart(chart1, '#kt_charts_widget_37_tab_1', '#kt_charts_widget_37_chart_1', chart1Data, chart1Labels, chart1.rendered);\n                initChart(chart2, '#kt_charts_widget_37_tab_2', '#kt_charts_widget_37_chart_2', chart2Data, chart2Labels, chart2.rendered);  \n                initChart(chart3, '#kt_charts_widget_37_tab_3', '#kt_charts_widget_37_chart_3', chart3Data, chart3Labels, chart3.rendered);\n                initChart(chart4, '#kt_charts_widget_37_tab_4', '#kt_charts_widget_37_chart_4', chart4Data, chart4Labels, chart4.rendered);                 \n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget37 = module.exports = KTChartsWidget37;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-37.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-38.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-38.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget38 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_38_chart\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-900');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [{\n                name: 'LOI Issued',\n                data: [54, 42, 75, 110, 23, 87, 50]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }              \n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['28%'],\n                    borderRadius: 5,                     \n                    dataLabels: {\n                        position: \"top\" // top, center, bottom\n                    },\n                    startingShape: 'flat'\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: true, \n                offsetY: -28,                                             \n                style: {\n                    fontSize: '13px',\n                    colors: [labelColor]\n                },\n                    formatter: function(val) {\n                        return val;// + \"H\";\n                    }                           \n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['E2E', 'IMC', 'SSMC', 'SSBD', 'ICCD', 'PAN', 'SBN'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }                  \n                },\n                crosshairs: {\n                    fill: {         \n                        gradient: {         \n                            opacityFrom: 0,\n                            opacityTo: 0\n                        }\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    },\n                    formatter: function(val) {\n                        return val + \"M\";\n                    } \n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return  + val + 'M' \n                    }\n                } \n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-primary-light')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart();\n            });\n        }        \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget38 = module.exports = KTChartsWidget38;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-38.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-39.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-39.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget39 = (function () {\n\t// Private methods\n\tvar initChart = function () {\n\t\t// Check if amchart library is included\n\t\tif (typeof am5 === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element = document.querySelector('#kt_charts_widget_39_chart');\n\n\t\tif ( !element ) {\n\t\t\treturn;\n\t\t}\n\n        var root;\n\n\t\tvar init = function() {\n\t\t\t// Create root element\n\t\t\t// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n\t\t\troot = am5.Root.new(element);\n\n\t\t\tif ( !root ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set themes\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/themes/\n\t\t\troot.setThemes([am5themes_Animated.new(root)]);\n\n\t\t\t// Create chart\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/\n\t\t\tvar chart = root.container.children.push(\n\t\t\t\tam5radar.RadarChart.new(root, {\n\t\t\t\t\tpanX: false,\n\t\t\t\t\tpanY: false,\n\t\t\t\t\twheelX: \"panX\",\n\t\t\t\t\twheelY: \"zoomX\",\n\t\t\t\t})\n\t\t\t);\n\n\t\t\t// Create axes and their renderers\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n\t\t\tvar xRenderer = am5radar.AxisRendererCircular.new(root, {});\n\t\t\txRenderer.labels.template.setAll({\n\t\t\t\tradius: 10\n\t\t\t});\n\n\t\t\txRenderer.grid.template.setAll({\n\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\"))\n\t\t\t});\n\n\t\t\tvar yRenderer = am5radar.AxisRendererRadial.new(root, {\n\t\t\t\tminGridDistance: 20\n\t\t\t});\t\n\t\t\t\n\t\t\tyRenderer.grid.template.setAll({\n\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\"))\n\t\t\t});\n\n\t\t\tvar xAxis = chart.xAxes.push(\n\t\t\t\tam5xy.CategoryAxis.new(root, {\n\t\t\t\t\tmaxDeviation: 0,\n\t\t\t\t\tcategoryField: \"category\",\n\t\t\t\t\trenderer: xRenderer,\n\t\t\t\t\ttooltip: am5.Tooltip.new(root, {}),\n\t\t\t\t})\n\t\t\t);\t\t\t\n\n\t\t\tvar yAxis = chart.yAxes.push(\n\t\t\t\tam5xy.ValueAxis.new(root, {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 10,\n\t\t\t\t\trenderer: yRenderer\n\t\t\t\t})\n\t\t\t);\n\n\t\t\txRenderer.labels.template.setAll({\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-800\")),\n\t\t\t});\n\n\t\t\tyRenderer.labels.template.setAll({\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-800\")),\n\t\t\t});\n\n\t\t\t//yAxis.get(\"renderer\").labels.template.set(\"forceHidden\", true);\n\n\t\t\t// Create series\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n\t\t\tvar series = chart.series.push(\n\t\t\t\tam5radar.RadarColumnSeries.new(root, {\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"value\",\n\t\t\t\t\tcategoryXField: \"category\",\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries.columns.template.setAll({\n\t\t\t\ttooltipText: \"{categoryX}: {valueY}\",\n\t\t\t\ttemplateField: \"columnSettings\",\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\twidth: am5.p100,\n\t\t\t});\n\n\t\t\t// Set data\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Setting_data\n\t\t\tvar data = [\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Spain\",\n\t\t\t\t\tvalue: 5,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Spain\",\n\t\t\t\t\tvalue: 4,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"United States\",\n\t\t\t\t\tvalue: 9,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Italy\",\n\t\t\t\t\tvalue: 7,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"France\",\n\t\t\t\t\tvalue: 8,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Norway\",\n\t\t\t\t\tvalue: 4,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Brasil\",\n\t\t\t\t\tvalue: 7,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Canada\",\n\t\t\t\t\tvalue: 5,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tseries.data.setAll(data);\n\t\t\txAxis.data.setAll(data);\n\n\t\t\t// Animate chart\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n\t\t\tseries.appear(1000);\n\t\t\tchart.appear(1000, 100);\n\t\t}\n\n\t\t// On amchart ready\n\t\tam5.ready(function () {\n\t\t\tinit();\n\t\t}); // end am5.ready()\n\n\t\t// Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n\t};\n\n\t// Public methods\n\treturn {\n\t\tinit: function () {\n\t\t\tinitChart();\n\t\t},\n\t};\n})();\n\n// Webpack support\nif (true) {\n\twindow.KTChartsWidget39 = module.exports = KTChartsWidget39;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-39.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-4.js":
/*!********************************************!*\
  !*** ../src/js/widgets/charts/widget-4.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget4 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_4\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-primary');\n        var lightColor = KTUtil.getCssVariableValue('--bs-primary');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [34.5, 34.5, 35, 35, 35.5, 35.5, 35, 35, 35.5, 35.5, 35, 35, 34.5, 34.5, 35, 35, 35.5, 35.5, 35]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 19', 'Apr 21', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                max: 36.3,\n                min: 33,\n                tickAmount: 6,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return '$' + parseInt(10 * val)\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return '$' + parseInt(10 * val)\n                    }\n                }\n            },\n            colors: [lightColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);          \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget4 = module.exports = KTChartsWidget4;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-4.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-40.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-40.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget40 = (function () {\n\t// Private methods\n\tvar initChart = function () {\n\t\t// Check if amchart library is included\n\t\tif (typeof am5 === \"undefined\") {\n\t\t\treturn;\n\t\t}\n\n\t\tvar element = document.querySelector('#kt_charts_widget_40_chart');\n\n\t\tif ( !element ) {\n\t\t\treturn;\n\t\t}\n\n        var root;\n\n\t\tvar init = function() {\n\t\t\t// Create root element\n\t\t\t// https://www.amcharts.com/docs/v5/getting-started/#Root_element\n\t\t\troot = am5.Root.new(element);\n\n\t\t\tif ( !root ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t// Set themes\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/themes/\n\t\t\troot.setThemes([am5themes_Animated.new(root)]);\n\n\t\t\t// Create chart\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/\n\t\t\tvar chart = root.container.children.push(\n\t\t\t\tam5radar.RadarChart.new(root, {\n\t\t\t\t\tpanX: false,\n\t\t\t\t\tpanY: false,\n\t\t\t\t\twheelX: \"panX\",\n\t\t\t\t\twheelY: \"zoomX\",\n\t\t\t\t})\n\t\t\t);\n\n\t\t\t// Create axes and their renderers\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_axes\n\t\t\tvar xRenderer = am5radar.AxisRendererCircular.new(root, {});\n\t\t\txRenderer.labels.template.setAll({\n\t\t\t\tradius: 10\n\t\t\t});\n\n\t\t\txRenderer.grid.template.setAll({\n\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\"))\n\t\t\t});\n\n\t\t\tvar yRenderer = am5radar.AxisRendererRadial.new(root, {\n\t\t\t\tminGridDistance: 20\n\t\t\t});\t\n\t\t\t\n\t\t\tyRenderer.grid.template.setAll({\n\t\t\t\tstroke: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-700\"))\n\t\t\t});\n\n\t\t\tvar xAxis = chart.xAxes.push(\n\t\t\t\tam5xy.CategoryAxis.new(root, {\n\t\t\t\t\tmaxDeviation: 0,\n\t\t\t\t\tcategoryField: \"category\",\n\t\t\t\t\trenderer: xRenderer,\n\t\t\t\t\ttooltip: am5.Tooltip.new(root, {}),\n\t\t\t\t})\n\t\t\t);\t\t\t\n\n\t\t\tvar yAxis = chart.yAxes.push(\n\t\t\t\tam5xy.ValueAxis.new(root, {\n\t\t\t\t\tmin: 0,\n\t\t\t\t\tmax: 10,\n\t\t\t\t\trenderer: yRenderer\n\t\t\t\t})\n\t\t\t);\n\n\t\t\txRenderer.labels.template.setAll({\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-800\")),\n\t\t\t});\n\n\t\t\tyRenderer.labels.template.setAll({\n\t\t\t\tfontSize: 11,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue(\"--bs-gray-800\")),\n\t\t\t});\n\n\t\t\t//yAxis.get(\"renderer\").labels.template.set(\"forceHidden\", true);\n\n\t\t\t// Create series\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Adding_series\n\t\t\tvar series = chart.series.push(\n\t\t\t\tam5radar.RadarColumnSeries.new(root, {\n\t\t\t\t\txAxis: xAxis,\n\t\t\t\t\tyAxis: yAxis,\n\t\t\t\t\tvalueYField: \"value\",\n\t\t\t\t\tcategoryXField: \"category\",\n\t\t\t\t})\n\t\t\t);\n\n\t\t\tseries.columns.template.setAll({\n\t\t\t\ttooltipText: \"{categoryX}: {valueY}\",\n\t\t\t\ttemplateField: \"columnSettings\",\n\t\t\t\tstrokeOpacity: 0,\n\t\t\t\twidth: am5.p100,\n\t\t\t});\n\n\t\t\t// Set data\n\t\t\t// https://www.amcharts.com/docs/v5/charts/radar-chart/#Setting_data\n\t\t\tvar data = [\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Spain\",\n\t\t\t\t\tvalue: 5,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Spain\",\n\t\t\t\t\tvalue: 4,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"United States\",\n\t\t\t\t\tvalue: 9,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Italy\",\n\t\t\t\t\tvalue: 7,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"France\",\n\t\t\t\t\tvalue: 8,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Norway\",\n\t\t\t\t\tvalue: 4,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Brasil\",\n\t\t\t\t\tvalue: 7,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tcategory: \"Canada\",\n\t\t\t\t\tvalue: 5,\n\t\t\t\t\tcolumnSettings: {\n\t\t\t\t\t\tfill: chart.get(\"colors\").next(),\n\t\t\t\t\t},\n\t\t\t\t},\n\t\t\t];\n\n\t\t\tseries.data.setAll(data);\n\t\t\txAxis.data.setAll(data);\n\n\t\t\t// Animate chart\n\t\t\t// https://www.amcharts.com/docs/v5/concepts/animations/#Initial_animation\n\t\t\tseries.appear(1000);\n\t\t\tchart.appear(1000, 100);\n\t\t}\n\n\t\t// On amchart ready\n\t\tam5.ready(function () {\n\t\t\tinit();\n\t\t}); // end am5.ready()\n\n\t\t// Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n\t};\n\n\t// Public methods\n\treturn {\n\t\tinit: function () {\n\t\t\tinitChart();\n\t\t},\n\t};\n})();\n\n// Webpack support\nif (true) {\n\twindow.KTChartsWidget40 = module.exports = KTChartsWidget40;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-40.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-41.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-41.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget41 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart4 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart5 = {\n        self: null,\n        rendered: false\n    };\n    \n\n    // Private methods\n    var initChart = function(chart, toggle, chartSelector, data, labels, initByDefault) {\n        var element = document.querySelector(chartSelector);       \n\n        if (!element) {\n            return;\n        }     \n         \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var color = element.getAttribute('data-kt-chart-color');        \n        \n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);   \n\n        var options = {\n            series: [{\n                name: 'Earnings',\n                data: data\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },            \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0.2,\n                    stops: [15, 120, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: labels,\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                offsetX: 20,\n                tickAmount: 4,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: false,\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'                       \n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 4000,\n                min: 1000,\n                labels: {\n                    show: false                    \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + '$';\n                    }\n                }\n            },\n            colors: [baseColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 3,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {   \n            var chart1Data = [2100, 3100, 3100, 2400, 2400, 1800, 1800, 2400, 2400, 3200, 3200, 2800, 2800, 3250, 3250];\n            var chart1Labels = ['10AM', '10.30AM', '11AM', '11.15AM', '11.30AM', '12PM', '1PM', '2PM', '3PM', '4PM', '5PM', '6PM', '7PM', '8PM', '9PM'];\n\n            initChart(chart1, '#kt_charts_widget_41_tab_1', '#kt_charts_widget_41_chart_1', chart1Data, chart1Labels, true);\n\n            var chart2Data = [2300, 2300, 2000, 3200, 3200, 2800, 2400, 2400, 3100, 2900, 3200, 3200, 2600, 2600, 3200];\n            var chart2Labels = ['Apr 01', 'Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 10', 'Apr 11', 'Apr 12', 'Apr 13', 'Apr 14', 'Apr 15'];\n\n            initChart(chart2, '#kt_charts_widget_41_tab_2', '#kt_charts_widget_41_chart_2', chart2Data, chart2Labels, false);\n\n            var chart3Data = [2600, 3200, 2300, 2300, 2000, 3200, 3100, 2900, 3400, 3400, 2600, 3200, 2800, 2400, 2400];\n            var chart3Labels = ['Apr 02', 'Apr 03', 'Apr 04', 'Apr 05', 'Apr 06', 'Apr 09', 'Apr 10', 'Apr 12', 'Apr 14', 'Apr 17', 'Apr 18', 'Apr 18', 'Apr 20', 'Apr 22', 'Apr 24'];\n\n            initChart(chart3, '#kt_charts_widget_41_tab_3', '#kt_charts_widget_41_chart_3', chart3Data, chart3Labels, false);\n\n            var chart4Data =  [1800, 1800, 2400, 2400, 3200, 3200, 3000, 2100, 3200, 3200, 2400, 2400, 3000, 3200, 3100];\n            var chart4Labels = ['Jun 2021', 'Jul 2021', 'Aug 2021', 'Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022'];\n\n            initChart(chart4, '#kt_charts_widget_41_tab_4', '#kt_charts_widget_41_chart_4', chart4Data, chart4Labels, false);                \n            \n            var chart5Data = [3200, 2100, 3200, 3200, 3200, 3500, 3000, 2400, 3250, 2400, 2400, 3250, 3000, 2400, 2800];\n            var chart5Labels = ['Sep 2021', 'Oct 2021', 'Nov 2021', 'Dec 2021', 'Jan 2022', 'Feb 2022', 'Mar 2022', 'Apr 2022', 'May 2022', 'Jun 2022', 'Jul 2022', 'Aug 2022', 'Sep 2022', 'Oct 2022', 'Nov 2022'];\n\n            initChart(chart5, '#kt_charts_widget_41_tab_5', '#kt_charts_widget_41_chart_5', chart5Data, chart5Labels, false);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                }\n\n                if (chart4.rendered) {\n                    chart4.self.destroy();\n                }\n\n                if (chart5.rendered) {\n                    chart5.self.destroy();\n                }\n\n                initChart(chart1, '#kt_charts_widget_41_tab_1', '#kt_charts_widget_41_chart_1', chart1Data, chart1Labels, chart1.rendered);\n                initChart(chart2, '#kt_charts_widget_41_tab_2', '#kt_charts_widget_41_chart_2', chart2Data, chart2Labels, chart2.rendered);  \n                initChart(chart3, '#kt_charts_widget_41_tab_3', '#kt_charts_widget_41_chart_3', chart3Data, chart3Labels, chart3.rendered);\n                initChart(chart4, '#kt_charts_widget_41_tab_4', '#kt_charts_widget_41_chart_4', chart4Data, chart4Labels, chart4.rendered); \n                initChart(chart5, '#kt_charts_widget_41_tab_5', '#kt_charts_widget_41_chart_5', chart5Data, chart5Labels, chart5.rendered); \n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget41 = module.exports = KTChartsWidget41;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-41.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-42.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-42.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget42 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_42\");\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseprimaryColor = KTUtil.getCssVariableValue('--bs-primary');       \n        var basesuccessColor = KTUtil.getCssVariableValue('--bs-success');        \n\n        var options = {\n            series: [{\n                name: 'Inbound Calls',\n                data: [45, 80, 53, 80, 75, 100, 76, 117, 76, 110, 70, 112]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },            \n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseprimaryColor, basesuccessColor]\n            },\n            xaxis: {\n                categories: ['', '29 Sep', '1 Aug', '2 Aug', '3 Aug', '4 Aug', '5 Aug', '6 Aug', '7 Aug', '8 Aug', '9 Aug', '10 Aug', '11 Aug', '12 Aug', '13 Aug','14 Aug', '15 Aug', '16 Aug', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: [baseprimaryColor, basesuccessColor],\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                max: 120,\n                min: 30,\n                tickAmount: 6,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    } \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                } \n            },\n            colors: [baseprimaryColor, basesuccessColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: [baseprimaryColor, basesuccessColor],\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);      \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget42 = module.exports = KTChartsWidget42;\n} \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-42.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-43.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-43.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget43 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_43\");\n\n        if (!element) {\n            return;\n        }\n\n        var color = element.getAttribute('data-kt-chart-color');\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var strokeColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n        var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light');\n\n        var options = {\n            series: [{\n                name: 'Overview',\n                data: [30, 30, 45, 45, 35, 35, 25, 25, 50, 50]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                zoom: {\n                    enabled: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false,\n                    position: 'front',\n                    stroke: {\n                        color: strokeColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 60,\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val\n                    }\n                }\n            },\n            colors: [lightColor],\n            markers: {\n                colors: lightColor,\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart();\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget43 = module.exports = KTChartsWidget43;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-43.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-44.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-44.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget44 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_44\");\n\n        if (!element) {\n            return;\n        }\n\n        var color = element.getAttribute('data-kt-chart-color');\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var strokeColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n        var lightColor = KTUtil.getCssVariableValue('--bs-' + color + '-light');\n\n        var options = {\n            series: [{\n                name: 'Overview',\n                data: [20, 37, 22, 45, 20, 50, 25, 57, 40]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                zoom: {\n                    enabled: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false,\n                    position: 'front',\n                    stroke: {\n                        color: strokeColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 60,\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val\n                    }\n                }\n            },\n            colors: [lightColor],\n            markers: {\n                colors: lightColor,\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart();\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget44 = module.exports = KTChartsWidget44;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-44.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-45.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-45.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget45 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_45\");\n\n        if (!element) {\n            return;\n        }\n\n        var color = element.getAttribute('data-kt-chart-color');\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var strokeColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n        var lightColor = KTUtil.getCssVariableValue('--bs-' + color);\n\n        var options = {\n            series: [{\n                name: 'Overview',\n                data: [15, 15, 42, 42, 13, 13, 35]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                zoom: {\n                    enabled: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.3,\n                    opacityTo: 0.2,\n                    stops: [15, 120, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false,\n                    position: 'front',\n                    stroke: {\n                        color: strokeColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 60,\n                labels: {\n                    show: false,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val\n                    }\n                }\n            },\n            colors: [lightColor],\n            markers: {\n                colors: lightColor,\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart();\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget45 = module.exports = KTChartsWidget45;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-45.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-46.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-46.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget46 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_46\");\n\n        if (!element) {\n            return;\n        }\n\n        var negativeColor = element.hasAttribute('data-kt-negative-color') ? element.getAttribute('data-kt-negative-color') : KTUtil.getCssVariableValue('--bs-gary-500');\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-800');\n\n        var options = {\n            series: [{\n                name: 'Subscribed',\n                data: [20, 30, 20, 40, 60, 75, 65, 18, 10, 5, 15, 40, 60, 18, 35, 55, 20]\n            }, {\n                name: 'Unsubscribed',\n                data: [-20, -15, -5, -20, -30, -15, -10, -8, -5, -5, -10, -25, -15, -5, -10, -5, -15]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                stacked: true,\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n                bar: {\n                    //horizontal: false,\n                    columnWidth: \"35%\",\n                    barHeight: \"70%\",\n                    borderRadius: [4, 4]\n                }\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            xaxis: {\n                categories: ['Jan 5', 'Jan 7', 'Jan 9', 'Jan 11', 'Jan 13', 'Jan 15', 'Jan 17', 'Jan 19', 'Jan 20', 'Jan 21', 'Jan 23', 'Jan 24', 'Jan 25', 'Jan 26', 'Jan 24', 'Jan 28', 'Jan 29'],\n                axisBorder: {\n                    show: false\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 10,\n                labels: {\n                    //rotate: -45,\n                    //rotateAlways: true,\n                    style: {\n                        colors: [labelColor],\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    show: false\n                }\n            },\n            yaxis: {\n                min: -100,\n                max: 150,\n                tickAmount: 5,\n                labels: {\n                    style: {\n                        colors: [labelColor],\n                        fontSize: '12px'\n                    },\n                    formatter: function (val) {\n                        return parseInt(val) \n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px',\n                    borderRadius: 4\n                },\n                y: {\n                    formatter: function (val) {\n                        if (val > 0) {\n                            return val + 'K';\n                        } else {\n                            return Math.abs(val) + 'K';\n                        }\n                    }\n                }\n            },\n            colors: [baseColor, negativeColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,               \n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget46 = module.exports = KTChartsWidget46;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-46.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-47.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-47.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget47 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_47\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));  \n        var baseColor = KTUtil.getCssVariableValue('--bs-white');\n        var lightColor = KTUtil.getCssVariableValue('--bs-white');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [5, 5, 15, 15, 19, 16, 27, 24, 34, 25, 40, 30, 19, 17, 22, 10, 14, 14]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },             \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.5,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                 \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: false                    \n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                enabled: false                \n            },\n            colors: [lightColor],\n            grid: { \n                yaxis: {\n                    lines: {\n                        show: false\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 2\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget47 = module.exports = KTChartsWidget47;\n}\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-47.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-48.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/charts/widget-48.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget48 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_48\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));  \n        var baseColor = KTUtil.getCssVariableValue('--bs-danger');\n        var lightColor = KTUtil.getCssVariableValue('--bs-danger');\n\n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [5, 5, 15, 15, 19, 16, 27, 24, 34, 25, 40, 30, 19, 17, 22, 10, 14, 14]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },             \n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.5,\n                    opacityTo: 0,\n                    stops: [0, 120, 50]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                 \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: false,\n                }\n            },\n            yaxis: {\n                labels: {\n                    show: false\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                enabled: false                \n            },\n            colors: [lightColor],\n            grid: { \n                yaxis: {\n                    lines: {\n                        show: false\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 2\n            }\n        }; \n\n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget48 = module.exports = KTChartsWidget48;\n}\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-48.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-5.js":
/*!********************************************!*\
  !*** ../src/js/widgets/charts/widget-5.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget5 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_5\"); \n\n        if (!element) {\n            return;\n        }\n        \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        \n        var options = {\n            series: [{\n                data: [15, 12, 10, 8, 7, 4, 3],\n                show: false                                                                              \n            }],\n            chart: {\n                type: 'bar',\n                height: 350,\n                toolbar: {\n                    show: false\n                }                             \n            },                    \n            plotOptions: {\n                bar: {\n                    borderRadius: 4,\n                    horizontal: true,\n                    distributed: true,\n                    barHeight: 23                   \n                }\n            },\n            dataLabels: {\n                enabled: false                               \n            },             \n            legend: {\n                show: false\n            },                               \n            colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA', '#50CDCD', '#3F4254'],                                                                      \n            xaxis: {\n                categories: ['Phones', 'Laptops', 'Headsets', 'Games', 'Keyboardsy', 'Monitors', 'Speakers'],\n                labels: {\n                    formatter: function (val) {\n                      return val + \"K\"\n                    },\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-400'),\n                        fontSize: '14px',\n                        fontWeight: '600',\n                        align: 'left'                                              \n                    }                  \n                },\n                axisBorder: {\n\t\t\t\t\tshow: false\n\t\t\t\t}                         \n            },\n            yaxis: {\n                labels: {                   \n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-800'),\n                        fontSize: '14px',\n                        fontWeight: '600'                                                                 \n                    },\n                    offsetY: 2,\n                    align: 'left' \n                }              \n            },\n            grid: {                \n                borderColor: borderColor,                \n                xaxis: {\n                    lines: {\n                        show: true\n                    }\n                },   \n                yaxis: {\n                    lines: {\n                        show: false  \n                    }\n                },\n                strokeDashArray: 4              \n            }                                 \n        };  \n          \n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200); \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget5 = module.exports = KTChartsWidget5;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-5.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-6.js":
/*!********************************************!*\
  !*** ../src/js/widgets/charts/widget-6.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget6 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart) {\n        var element = document.getElementById(\"kt_charts_widget_6\"); \n\n        if (!element) {\n            return;\n        }\n        \n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');    \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var maxValue = 18;\n        \n        var options = {\n            series: [{\n                name: 'Sales',\n                data: [15, 12, 10, 8, 7]                                                                                                             \n            }],           \n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: 350,\n                toolbar: {\n                    show: false\n                }                             \n            },                    \n            plotOptions: {\n                bar: {\n                    borderRadius: 8,\n                    horizontal: true,\n                    distributed: true,\n                    barHeight: 50,\n                    dataLabels: {\n\t\t\t\t        position: 'bottom' // use 'bottom' for left and 'top' for right align(textAnchor)\n\t\t\t        }                                                       \n                }\n            },\n            dataLabels: {  // Docs: https://apexcharts.com/docs/options/datalabels/\n                enabled: true,              \n                textAnchor: 'start',  \n                offsetX: 0,                 \n                formatter: function (val, opts) {\n                    var val = val * 1000;\n                    var Format = wNumb({\n                        //prefix: '$',\n                        //suffix: ',-',\n                        thousand: ','\n                    });\n\n                    return Format.to(val);\n                },\n                style: {\n                    fontSize: '14px',\n                    fontWeight: '600',\n                    align: 'left',                                                            \n                }                                       \n            },             \n            legend: {\n                show: false\n            },                               \n            colors: ['#3E97FF', '#F1416C', '#50CD89', '#FFC700', '#7239EA'],                                                                      \n            xaxis: {\n                categories: [\"ECR - 90%\", \"FGI - 82%\", 'EOQ - 75%', 'FMG - 60%', 'PLG - 50%'],\n                labels: {\n                    formatter: function (val) {\n                        return val + \"K\"\n                    },\n                    style: {\n                        colors: [labelColor],\n                        fontSize: '14px',\n                        fontWeight: '600',\n                        align: 'left'                                              \n                    }                  \n                },\n                axisBorder: {\n\t\t\t\t\tshow: false\n\t\t\t\t}                         \n            },\n            yaxis: {\n                labels: {       \n                    formatter: function (val, opt) {\n                        if (Number.isInteger(val)) {\n                            var percentage = parseInt(val * 100 / maxValue) . toString(); \n                            return val + ' - ' + percentage + '%';\n                        } else {\n                            return val;\n                        }\n                    },            \n                    style: {\n                        colors: labelColor,\n                        fontSize: '14px',\n                        fontWeight: '600'                                                                 \n                    },\n                    offsetY: 2,\n                    align: 'left' \n                }           \n            },\n            grid: {                \n                borderColor: borderColor,                \n                xaxis: {\n                    lines: {\n                        show: true\n                    }\n                },   \n                yaxis: {\n                    lines: {\n                        show: false  \n                    }\n                },\n                strokeDashArray: 4              \n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return val + 'K';\n                    }\n                }\n            }                                 \n        };  \n          \n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);         \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart(chart);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget6 = module.exports = KTChartsWidget6;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-6.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-7.js":
/*!********************************************!*\
  !*** ../src/js/widgets/charts/widget-7.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget7 = function () {\n    // Private methods\n    var initChart = function(chartSelector) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: data1\n            }, {\n                name: 'Revenue',\n                data: data2\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bar',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n                bar: {\n                    horizontal: false,\n                    columnWidth: ['40%'],\n                    borderRadius: [6]\n                },\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            stroke: {\n                show: true,\n                width: 2,\n                colors: ['transparent']\n            },\n            xaxis: {\n                categories: ['Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul'],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-700'),\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-700'),\n                        fontSize: '12px'\n                    }\n                }\n            },\n            fill: {\n                opacity: 1\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            colors: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-primary-light')],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        var chart = new ApexCharts(element, options);\n\n        var init = false;\n        var tab = document.querySelector(tabSelector);\n        \n        if (initByDefault === true) {\n            chart.render();\n            init = true;\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (init == false) {\n                chart.render();\n                init = true;\n            }\n        })\n          \n        var chart = new ApexCharts(element, options);\n        chart.render();   \n    }\n\n    // Public methods\n    return {\n        init: function () {          \n            initChart('#kt_chart_widget_7_tab_1', '#kt_chart_widget_7_chart_1', [44, 55, 57, 56, 61, 58], [76, 85, 101, 98, 87, 105], true);\n            initChart('#kt_chart_widget_7_tab_2', '#kt_chart_widget_7_chart_2', [35, 60, 35, 50, 45, 30], [65, 80, 50, 80, 75, 105], false);\n            initChart('#kt_chart_widget_7_tab_3', '#kt_chart_widget_7_chart_3', [25, 40, 45, 50, 40, 60], [76, 85, 101, 98, 87, 105], false);\n            initChart('#kt_chart_widget_7_tab_4', '#kt_chart_widget_7_chart_4', [50, 35, 45, 55, 30, 40], [76, 85, 101, 98, 87, 105], false);             \n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget7 = module.exports = KTChartsWidget7;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-7.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-8.js":
/*!********************************************!*\
  !*** ../src/js/widgets/charts/widget-8.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget8 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, toggle, selector, data, initByDefault) {\n        var element = document.querySelector(selector);\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));    \n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var options = {\n            series: [\n                {\n                    name: 'Social Campaigns',\n                    data: data[0]  // array value is of the format [x, y, z] where x (timestamp) and y are the two axes coordinates,\n                }, {\n                    name: 'Email Newsletter',\n                    data: data[1]\n                }, {\n                    name: 'TV Campaign',\n                    data: data[2]\n                }, {\n                    name: 'Google Ads',\n                    data: data[3]\n                }, {\n                    name: 'Courses',\n                    data: data[4]\n                }, {\n                    name: 'Radio',\n                    data: data[5]\n                }                \n            ],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'bubble',    \n                height: height,\n                toolbar: {\n                    show: false\n                }                         \n            },                                 \n            plotOptions: {\n                bubble: {\n                }\n            },\n            stroke: {\n                show: false,\n                width: 0\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            xaxis: {\n                type: 'numeric',             \n                tickAmount: 7,\n                min: 0,\n                max: 700,\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: true,\n                    height: 0,\n                },\n                labels: {\n                    show: true,\n                    trim: true,\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 7,\n                min: 0,\n                max: 700,\n                labels: {\n                    style: {\n                        colors: KTUtil.getCssVariableValue('--bs-gray-500'),\n                        fontSize: '13px'\n                    }\n                }               \n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                x: {\n                    formatter: function (val) {\n                        return \"Clicks: \" + val;\n                    }\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \"K\"\n                    }\n                },\n                z: {\n                    title: 'Impression: '\n                }\n            },\n            crosshairs: {\n                show: true,\n                position: 'front',\n                stroke: {\n                    color: KTUtil.getCssVariableValue('--bs-border-dashed-color'),\n                    width: 1,\n                    dashArray: 0,\n                }\n            },           \n            colors: [\n                KTUtil.getCssVariableValue('--bs-primary'),\n                KTUtil.getCssVariableValue('--bs-success'),   \n                KTUtil.getCssVariableValue('--bs-warning'),\n                KTUtil.getCssVariableValue('--bs-danger'),\n                KTUtil.getCssVariableValue('--bs-info'),\n                '#43CED7'\n            ],\n            fill: {\n                opacity: 1,                \n            },\n            markers: {\n                strokeWidth: 0\n            },\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                padding: {\n                    right: 20\n                },\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {    \n            var data1 = [\n                [[100, 250, 30]], [[225, 300, 35]], [[300, 350, 25]], [[350, 350, 20]], [[450, 400, 25]], [[550, 350, 35]]\n            ];\n\n            var data2 = [\n                [[125, 300, 40]], [[250, 350, 35]], [[350, 450, 30]], [[450, 250, 25]], [[500, 500, 30]], [[600, 250, 28]]\n            ];\n\n            initChart(chart1, '#kt_chart_widget_8_week_toggle', '#kt_chart_widget_8_week_chart', data1, false);\n            initChart(chart2, '#kt_chart_widget_8_month_toggle', '#kt_chart_widget_8_month_chart', data2, true);    \n\n            // Update chart on theme mode change\n            var handlerId = KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                initChart(chart1, '#kt_chart_widget_8_week_toggle', '#kt_chart_widget_8_week_chart', data1, chart1.rendered);\n                initChart(chart2, '#kt_chart_widget_8_month_toggle', '#kt_chart_widget_8_month_chart', data2, chart2.rendered);  \n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget8 = module.exports = KTChartsWidget8;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-8.js?");

/***/ }),

/***/ "../src/js/widgets/charts/widget-9.js":
/*!********************************************!*\
  !*** ../src/js/widgets/charts/widget-9.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTChartsWidget9 = function () {\n    var chart = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function() {\n        var element = document.getElementById(\"kt_charts_widget_9\");\n\n        if (!element) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-400');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');    \n\n        var baseColor = KTUtil.getCssVariableValue('--bs-gray-200');\n        var secondaryColor = KTUtil.getCssVariableValue('--bs-primary');\n\n\n        var options = {\n            series: [{\n                name: 'Order',\n                data: [21, 21, 26, 26, 31, 31, 27]\n            }, {\n                name: 'Revenue',\n                data: [12, 16, 16, 21, 21, 18, 18]\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth',\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', '06 Sep', '13 Sep', '20 Sep', '27 Sep', '30 Sep', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: labelColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                },\n                y: {\n                    formatter: function (val) {\n                        return \"$\" + val + \" thousands\"\n                    }\n                }\n            },\n            crosshairs: {\n                show: true,\n                position: 'front',\n                stroke: {\n                    color: KTUtil.getCssVariableValue('--bs-border-dashed-color'),\n                    width: 1,\n                    dashArray: 0,\n                },\n            },\n            colors: [baseColor, secondaryColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                colors: [baseColor, secondaryColor],\n                strokeColor: [KTUtil.getCssVariableValue('--bs-primary'), KTUtil.getCssVariableValue('--bs-gray-300')],\n                strokeWidth: 3\n            }\n        };        \n          \n        chart.self = new ApexCharts(element, options);\n\n        // Set timeout to properly get the parent elements width\n        setTimeout(function() {\n            chart.self.render();\n            chart.rendered = true;\n        }, 200);       \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initChart();\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart.rendered) {\n                    chart.self.destroy();\n                }\n\n                initChart(chart);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTChartsWidget9 = module.exports = KTChartsWidget9;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/charts/widget-9.js?");

/***/ }),

/***/ "../src/js/widgets/forms/widget-1.js":
/*!*******************************************!*\
  !*** ../src/js/widgets/forms/widget-1.js ***!
  \*******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTFormsWidget1 = (function () {\n    // Private methods\n    var initForm1 = function () {\n        var element = document.querySelector('#kt_forms_widget_1_select_1');\n\n        if ( !element ) {\n            return;\n        }\n\n        var optionFormat = function(item) {\n            if ( !item.id ) {\n                return item.text;\n            }\n\n            var span = document.createElement('span');\n            var template = '';\n\n            template += '<img src=\"' + item.element.getAttribute('data-kt-select2-icon') + '\" class=\"rounded-circle h-20px me-2\" alt=\"image\"/>';\n            template += item.text;\n\n            span.innerHTML = template;\n\n            return $(span);\n        }\n\n        // Init Select2 --- more info: https://select2.org/\n        $(element).select2({\n            placeholder: \"Select coin\",\n            minimumResultsForSearch: Infinity,\n            templateSelection: optionFormat,\n            templateResult: optionFormat\n        });\n    };\n\n    var initForm2 = function () {\n        var element = document.querySelector('#kt_forms_widget_1_select_2');\n\n        if ( !element ) {\n            return;\n        }\n\n        var optionFormat = function(item) {\n            if ( !item.id ) {\n                return item.text;\n            }\n\n            var span = document.createElement('span');\n            var template = '';\n\n            template += '<img src=\"' + item.element.getAttribute('data-kt-select2-icon') + '\" class=\"rounded-circle h-20px me-2\" alt=\"image\"/>';\n            template += item.text;\n\n            span.innerHTML = template;\n\n            return $(span);\n        }\n\n        // Init Select2 --- more info: https://select2.org/\n        $(element).select2({\n            placeholder: \"Select coin\",\n            minimumResultsForSearch: Infinity,\n            templateSelection: optionFormat,\n            templateResult: optionFormat\n        });\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initForm1();\n            initForm2();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTFormsWidget1 = module.exports = KTFormsWidget1;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/forms/widget-1.js?");

/***/ }),

/***/ "../src/js/widgets/lists/widget-24.js":
/*!********************************************!*\
  !*** ../src/js/widgets/lists/widget-24.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTimelineWidget24 = function () {\n    // Private methods\n    var handleActions = function() {\n        var card = document.querySelector('#kt_list_widget_24');        \n        \n        if ( !card ) {\n            return;\n        }\n\n        // Checkbox Handler\n        KTUtil.on(card, '[data-kt-element=\"follow\"]', 'click', function (e) {\n            if ( this.innerText === 'Following' ) {\n                this.innerText = 'Follow';\n                this.classList.add('btn-light-primary');\n                this.classList.remove('btn-primary');\n                this.blur();\n            } else {\n                this.innerText = 'Following';\n                this.classList.add('btn-primary');\n                this.classList.remove('btn-light-primary');\n                this.blur();\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {           \n            handleActions();             \n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTimelineWidget24 = module.exports = KTTimelineWidget24;\n} \n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/lists/widget-24.js?");

/***/ }),

/***/ "../src/js/widgets/maps/widget-1.js":
/*!******************************************!*\
  !*** ../src/js/widgets/maps/widget-1.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTMapsWidget1 = (function () {\n    // Private methods\n    var initMap = function () {\n        // Check if amchart library is included\n        if (typeof am5 === 'undefined') {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_maps_widget_1_map\");\n\n        if (!element) {\n            return;\n        }\n\n        var root;\n\n        var init = function() {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create the map chart\n            // https://www.amcharts.com/docs/v5/charts/map-chart/\n            var chart = root.container.children.push(\n                am5map.MapChart.new(root, {\n                    panX: \"translateX\",\n                    panY: \"translateY\",\n                    projection: am5map.geoMercator(),\n\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\tpaddingrIGHT: 0,\n\t\t\t\t\tpaddingBottom: 0\n                })\n            );\n\n            // Create main polygon series for countries\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\n            var polygonSeries = chart.series.push(\n                am5map.MapPolygonSeries.new(root, {\n                    geoJSON: am5geodata_worldLow,\n                    exclude: [\"AQ\"],\n                })\n            );\n\n            polygonSeries.mapPolygons.template.setAll({\n                tooltipText: \"{name}\",\n                toggleKey: \"active\",\n                interactive: true,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n            });\n\n            polygonSeries.mapPolygons.template.states.create(\"hover\", {\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n            });\n\n            polygonSeries.mapPolygons.template.states.create(\"active\", {\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n            });\n\n            // Highlighted Series\n            // Create main polygon series for countries\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\n            var polygonSeriesHighlighted = chart.series.push(\n                am5map.MapPolygonSeries.new(root, {\n                    //geoJSON: am5geodata_usaLow,\n\t\t\t\t\tgeoJSON: am5geodata_worldLow,\n\t\t\t\t\tinclude: ['US', 'BR', 'DE', 'AU', 'JP']\n                })\n            );\n\n            polygonSeriesHighlighted.mapPolygons.template.setAll({\n                tooltipText: \"{name}\",\n                toggleKey: \"active\",\n                interactive: true,\n            });\n\n            var colors = am5.ColorSet.new(root, {});\n\n            polygonSeriesHighlighted.mapPolygons.template.set(\n                \"fill\",\n\t\t\t\tam5.color(KTUtil.getCssVariableValue('--bs-primary')),\n            );\n\n            polygonSeriesHighlighted.mapPolygons.template.states.create(\"hover\", {\n                fill: root.interfaceColors.get(\"primaryButtonHover\"),\n            });\n\n            polygonSeriesHighlighted.mapPolygons.template.states.create(\"active\", {\n                fill: root.interfaceColors.get(\"primaryButtonHover\"),\n            });\n\n            // Add zoom control\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control\n            //chart.set(\"zoomControl\", am5map.ZoomControl.new(root, {}));\n\n            // Set clicking on \"water\" to zoom out\n            chart.chartContainer\n                .get(\"background\")\n                .events.on(\"click\", function () {\n                    chart.goHome();\n                });\n\n            // Make stuff animate on load\n            chart.appear(1000, 100);\n        }\n\n        // On amchart ready\n        am5.ready(function () {\n            init();\n        }); // end am5.ready()\n\n        // Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initMap();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTMapsWidget1 = module.exports = KTMapsWidget1;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/maps/widget-1.js?");

/***/ }),

/***/ "../src/js/widgets/maps/widget-2.js":
/*!******************************************!*\
  !*** ../src/js/widgets/maps/widget-2.js ***!
  \******************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTMapsWidget2 = (function () {\n    // Private methods\n    var initMap = function () {\n        // Check if amchart library is included\n        if (typeof am5 === 'undefined') {\n            return;\n        }\n\n        var element = document.getElementById(\"kt_maps_widget_2_map\");\n\n        if (!element) {\n            return;\n        }\n\n        // Root\n        var root;\n\n        var init = function() {\n            // Create root element\n            // https://www.amcharts.com/docs/v5/getting-started/#Root_element\n            root = am5.Root.new(element);\n\n            // Set themes\n            // https://www.amcharts.com/docs/v5/concepts/themes/\n            root.setThemes([am5themes_Animated.new(root)]);\n\n            // Create the map chart\n            // https://www.amcharts.com/docs/v5/charts/map-chart/\n            var chart = root.container.children.push(\n                am5map.MapChart.new(root, {\n                    panX: \"translateX\",\n                    panY: \"translateY\",\n                    projection: am5map.geoMercator(),\n\t\t\t\t\tpaddingLeft: 0,\n\t\t\t\t\tpaddingrIGHT: 0,\n\t\t\t\t\tpaddingBottom: 0\n                })\n            );\n\n            // Create main polygon series for countries\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\n            var polygonSeries = chart.series.push(\n                am5map.MapPolygonSeries.new(root, {\n                    geoJSON: am5geodata_worldLow,\n                    exclude: [\"AQ\"],\n                })\n            );\n\n            polygonSeries.mapPolygons.template.setAll({\n                tooltipText: \"{name}\",\n                toggleKey: \"active\",\n                interactive: true,\n\t\t\t\tfill: am5.color(KTUtil.getCssVariableValue('--bs-gray-300')),\n            });\n\n            polygonSeries.mapPolygons.template.states.create(\"hover\", {\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n            });\n\n            polygonSeries.mapPolygons.template.states.create(\"active\", {\n                fill: am5.color(KTUtil.getCssVariableValue('--bs-success')),\n            });\n\n            // Highlighted Series\n            // Create main polygon series for countries\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-polygon-series/\n            var polygonSeriesHighlighted = chart.series.push(\n                am5map.MapPolygonSeries.new(root, {\n                    //geoJSON: am5geodata_usaLow,\n\t\t\t\t\tgeoJSON: am5geodata_worldLow,\n\t\t\t\t\tinclude: ['US', 'BR', 'DE', 'AU', 'JP']\n                })\n            );\n\n            polygonSeriesHighlighted.mapPolygons.template.setAll({\n                tooltipText: \"{name}\",\n                toggleKey: \"active\",\n                interactive: true,\n            });\n\n            var colors = am5.ColorSet.new(root, {});\n\n            polygonSeriesHighlighted.mapPolygons.template.set(\n                \"fill\",\n\t\t\t\tam5.color(KTUtil.getCssVariableValue('--bs-primary')),\n            );\n\n            polygonSeriesHighlighted.mapPolygons.template.states.create(\"hover\", {\n                fill: root.interfaceColors.get(\"primaryButtonHover\"),\n            });\n\n            polygonSeriesHighlighted.mapPolygons.template.states.create(\"active\", {\n                fill: root.interfaceColors.get(\"primaryButtonHover\"),\n            });\n\n            // Add zoom control\n            // https://www.amcharts.com/docs/v5/charts/map-chart/map-pan-zoom/#Zoom_control\n            //chart.set(\"zoomControl\", am5map.ZoomControl.new(root, {}));\n\n            // Set clicking on \"water\" to zoom out\n            chart.chartContainer\n                .get(\"background\")\n                .events.on(\"click\", function () {\n                    chart.goHome();\n                });\n\n            // Make stuff animate on load\n            chart.appear(1000, 100);\n        }\n\n        // On amchart ready\n        am5.ready(function () {\n            init();\n        }); // end am5.ready()\n\n        // Update chart on theme mode change\n\t\tKTThemeMode.on(\"kt.thememode.change\", function() {     \n\t\t\t// Destroy chart\n\t\t\troot.dispose();\n\n\t\t\t// Reinit chart\n\t\t\tinit();\n\t\t});\n    };\n\n    // Public methods\n    return {\n        init: function () {\n            initMap();\n        },\n    };\n})();\n\n// Webpack support\nif (true) {\n    window.KTMapsWidget2 = module.exports = KTMapsWidget2;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/maps/widget-2.js?");

/***/ }),

/***/ "../src/js/widgets/players/widget-1.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/players/widget-1.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTPlayersWidget1 = function () {\n    // Private methods\n    var initPlayers = function() {\n        // https://www.w3schools.com/jsref/dom_obj_audio.asp\n        // Toggle Handler\n        KTUtil.on(document.body, '[data-kt-element=\"list-play-button\"]', 'click', function (e) {\n            var currentButton = this;\n\n            var audio = document.querySelector('[data-kt-element=\"audio-track-1\"]');\n            var playIcon = this.querySelector('[data-kt-element=\"list-play-icon\"]');\n            var pauseIcon = this.querySelector('[data-kt-element=\"list-pause-icon\"]');\n\n            if (pauseIcon.classList.contains('d-none')) {\n                audio.play();\n\n                playIcon.classList.add('d-none');\n                pauseIcon.classList.remove('d-none');\n            } else {\n                audio.pause();\n\n                playIcon.classList.remove('d-none');\n                pauseIcon.classList.add('d-none');\n            }\n            \n            var buttons = [].slice.call(document.querySelectorAll('[data-kt-element=\"list-play-button\"]'));\n            buttons.map(function (button) {\n                if (button !== currentButton) {\n                    var playIcon = button.querySelector('[data-kt-element=\"list-play-icon\"]');\n                    var pauseIcon = button.querySelector('[data-kt-element=\"list-pause-icon\"]');\n\n                    playIcon.classList.remove('d-none');\n                    pauseIcon.classList.add('d-none');\n                }\n            });\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initPlayers();\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTPlayersWidget1 = module.exports = KTPlayersWidget1;\n}\n\n// Window load\nwindow.addEventListener(\"load\", function() {\n    KTPlayersWidget1.init();\n}); \n        \n        \n        \n           \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/players/widget-1.js?");

/***/ }),

/***/ "../src/js/widgets/players/widget-2.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/players/widget-2.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTPlayersWidget2 = function () {\n    // Private methods\n    var initPlayer = function() {\n        // https://www.w3schools.com/jsref/dom_obj_audio.asp\n        var element = document.getElementById(\"kt_player_widget_2\");\n\n        if ( !element ) {\n            return;\n        }\n\n        var audio = element.querySelector('[data-kt-element=\"audio-track-1\"]');\n        var progress = element.querySelector('[data-kt-element=\"progress\"]');        \n        var currentTime = element.querySelector('[data-kt-element=\"current-time\"]');\n        var duration = element.querySelector('[data-kt-element=\"duration\"]');\n        var playButton = element.querySelector('[data-kt-element=\"play-button\"]');\n        var playIcon = element.querySelector('[data-kt-element=\"play-icon\"]');\n        var pauseIcon = element.querySelector('[data-kt-element=\"pause-icon\"]');\n\n        var replayButton = element.querySelector('[data-kt-element=\"replay-button\"]');\n        var shuffleButton = element.querySelector('[data-kt-element=\"shuffle-button\"]');\n        var playNextButton = element.querySelector('[data-kt-element=\"play-next-button\"]');\n        var playPrevButton = element.querySelector('[data-kt-element=\"play-prev-button\"]');\n\n        var formatTime = function(time) {\n            var s = parseInt(time % 60);\n            var m = parseInt((time / 60) % 60);\n\n            return m + ':' + (s < 10 ? '0' : '') + s;\n        }\n\n        // Duration\n        duration.innerHTML = formatTime(audio.duration); \n\n        // Update progress\n        var setBarProgress = function() {\n            progress.value = (audio.currentTime / audio.duration) * 100;\n        }\n        \n        // Handle audio update\n        var handleAudioUpdate = function() {\n            currentTime.innerHTML = formatTime(audio.currentTime);\n\n            setBarProgress();\n\n            if (this.ended) {\n                playIcon.classList.remove('d-none');\n                pauseIcon.classList.add('d-none');\n            }\n        }\n\n        audio.addEventListener('timeupdate', handleAudioUpdate);\n\n        // Handle play\n        playButton.addEventListener('click', function() {\n            if (audio.duration > 0 && !audio.paused) {\n                audio.pause();\n\n                playIcon.classList.remove('d-none');\n                pauseIcon.classList.add('d-none');\n            } else if (audio.readyState >= 2) {\n                audio.play();\n\n                playIcon.classList.add('d-none');\n                pauseIcon.classList.remove('d-none');\n            }\n        });\n\n        // Handle replay\n        replayButton.addEventListener('click', function() {\n            if (audio.readyState >= 2) {\n                audio.currentTime = 0;\n                audio.play();\n\n                playIcon.classList.add('d-none');\n                pauseIcon.classList.remove('d-none');\n            }\n        });\n\n        // Handle prev play\n        playPrevButton.addEventListener('click', function() {\n            if (audio.readyState >= 2) {\n                audio.currentTime = 0;\n                audio.play();\n\n                playIcon.classList.add('d-none');\n                pauseIcon.classList.remove('d-none');\n            }\n        });\n\n        // Handle next play\n        playNextButton.addEventListener('click', function() {\n            if (audio.readyState >= 2) {\n                audio.currentTime = 0;\n                audio.play();\n\n                playIcon.classList.add('d-none');\n                pauseIcon.classList.remove('d-none');\n            }\n        });\n\n        // Shuffle replay\n        shuffleButton.addEventListener('click', function() {\n            if (audio.readyState >= 2) {\n                audio.currentTime = 0;\n                audio.play();\n\n                playIcon.classList.add('d-none');\n                pauseIcon.classList.remove('d-none');\n            }\n        });\n\n        // Handle track change\n        progress.addEventListener('change', function() {\n            audio.currentTime = progress.value;\n\n            playIcon.classList.add('d-none');\n            pauseIcon.classList.remove('d-none');\n            audio.play();\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initPlayer();\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTPlayersWidget2 = module.exports = KTPlayersWidget2;\n}\n\n// Window load\nwindow.addEventListener(\"load\", function() {\n    KTPlayersWidget2.init();\n}); \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/players/widget-2.js?");

/***/ }),

/***/ "../src/js/widgets/sliders/widget-1.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/sliders/widget-1.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTSlidersWidget1 = function() {\n    var chart1 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, query, data) {\n        var element = document.querySelector(query);\n\n        if ( !element) {\n            return;\n        }              \n        \n        if ( chart.rendered === true && element.classList.contains(\"initialized\") ) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + 'primary');\n        var lightColor = KTUtil.getCssVariableValue('--bs-' + 'primary-light' );         \n\n        var options = {\n            series: [data],\n            chart: {\n                fontFamily: 'inherit',\n                height: height,\n                type: 'radialBar',\n                sparkline: {\n                    enabled: true,\n                }\n            },\n            plotOptions: {\n                radialBar: {\n                    hollow: {\n                        margin: 0,\n                        size: \"45%\"\n                    },\n                    dataLabels: {\n                        showOn: \"always\",\n                        name: {\n                            show: false                                 \n                        },\n                        value: {                                 \n                            show: false                              \n                        }\n                    },\n                    track: {\n                        background: lightColor,\n                        strokeWidth: '100%'\n                    }\n                }\n            },\n            colors: [baseColor],\n            stroke: {\n                lineCap: \"round\",\n            },\n            labels: [\"Progress\"]\n        };\n\n        chart.self = new ApexCharts(element, options);\n        chart.self.render();\n        chart.rendered = true;\n\n        element.classList.add('initialized');\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            // Init default chart\n            initChart(chart1, '#kt_slider_widget_1_chart_1', 76);\n\n            var carousel = document.querySelector('#kt_sliders_widget_1_slider');\n            \n            if ( !carousel ) {\n                return;\n            }\n\n            // Init slide charts\n            carousel.addEventListener('slid.bs.carousel', function (e) {\n                if (e.to === 1) {\n                    // Init second chart\n                    initChart(chart2, '#kt_slider_widget_1_chart_2', 55);\n                }\n\n                if (e.to === 2) {\n                    // Init third chart\n                    initChart(chart3, '#kt_slider_widget_1_chart_3', 25);\n                }\n            });\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                    chart1.rendered = false;\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                    chart2.rendered = false;\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                    chart3.rendered = false;\n                }\n\n                initChart(chart1, '#kt_slider_widget_1_chart_1', 76);\n                initChart(chart2, '#kt_slider_widget_1_chart_2', 55);\n                initChart(chart3, '#kt_slider_widget_1_chart_3', 25);\n            });\n        }   \n    }        \n}();\n\n\n// Webpack support\nif (true) {\n    window.KTSlidersWidget1 = module.exports = KTSlidersWidget1;\n}\n   \n        \n        \n        \n           \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/sliders/widget-1.js?");

/***/ }),

/***/ "../src/js/widgets/sliders/widget-3.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/sliders/widget-3.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTSlidersWidget3 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, query, color, data) {\n        var element = document.querySelector(query);\n\n        if (!element) {\n            return;\n        }\n        \n        if ( chart.rendered === true && element.classList.contains(\"initialized\") ) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-500');\n        var borderColor = KTUtil.getCssVariableValue('--bs-border-dashed-color');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n\n        var options = {\n            series: [{\n                name: 'Lessons',\n                data: data\n            }],            \n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                }\n            },\n            plotOptions: {\n\n            },\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: \"gradient\",\n                gradient: {\n                    shadeIntensity: 1,\n                    opacityFrom: 0.4,\n                    opacityTo: 0,\n                    stops: [0, 80, 100]\n                }\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 3,\n                colors: [baseColor]\n            },\n            xaxis: {\n                categories: ['', 'Apr 05', 'Apr 06', 'Apr 07', 'Apr 08', 'Apr 09', 'Apr 11', 'Apr 12', 'Apr 14', 'Apr 15', 'Apr 16', 'Apr 17', 'Apr 18', ''],\n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                tickAmount: 6,\n                labels: {\n                    rotate: 0,\n                    rotateAlways: true,\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    }\n                },\n                crosshairs: {\n                    position: 'front',\n                    stroke: {\n                        color: baseColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: true,\n                    formatter: undefined,\n                    offsetY: 0,\n                    style: {\n                        fontSize: '12px'\n                    }\n                }\n            },\n            yaxis: {\n                tickAmount: 4,\n                max: 24,\n                min: 10,\n                labels: {\n                    style: {\n                        colors: labelColor,\n                        fontSize: '12px'\n                    } \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                style: {\n                    fontSize: '12px'\n                } \n            },\n            colors: [baseColor],\n            grid: {\n                borderColor: borderColor,\n                strokeDashArray: 4,\n                yaxis: {\n                    lines: {\n                        show: true\n                    }\n                }\n            },\n            markers: {\n                strokeColor: baseColor,\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);\n        chart.self.render();\n        chart.rendered = true;\n\n        element.classList.add('initialized');   \n    }\n\n    // Public methods\n    return {\n        init: function () {\n            var data1 = [19, 21, 21, 20, 20, 18, 18, 20, 20, 22, 22, 21, 21, 22];\n            var data2 = [18, 22, 22, 20, 20, 18, 18, 20, 20, 18, 18, 20, 20, 22];\n            \n            // Init default chart\n            initChart(chart1, '#kt_sliders_widget_3_chart_1', 'danger', data1);\n\n            var carousel = document.querySelector('#kt_sliders_widget_3_slider');\n\n            if ( !carousel ){\n                return;\n            }\n            \n            carousel.addEventListener('slid.bs.carousel', function (e) {\n                if (e.to === 1) {\n                    // Init second chart\n                    initChart(chart2, '#kt_sliders_widget_3_chart_2', 'primary', data2);\n                }                \n            });\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                    chart1.rendered = false;\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                    chart2.rendered = false;\n                }\n\n                initChart(chart1, '#kt_sliders_widget_3_chart_1', 'danger', data1);\n                initChart(chart2, '#kt_sliders_widget_3_chart_2', 'primary', data2);\n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTSlidersWidget3 = module.exports = KTSlidersWidget3;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/sliders/widget-3.js?");

/***/ }),

/***/ "../src/js/widgets/sliders/widget-7.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/sliders/widget-7.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTSlidersWidget7 = function() {\n    var chart1 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, query, data) {\n        var element = document.querySelector(query);\n\n        if ( !element) {\n            return;\n        }              \n        \n        if ( chart.rendered === true && element.classList.contains(\"initialized\") ) {\n            return;\n        }\n\n        var height = parseInt(KTUtil.css(element, 'height'));\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + 'danger');\n        var lightColor = KTUtil.getCssVariableValue('--bs-' + 'white' );         \n\n        var options = {\n            series: [data],\n            chart: {\n                fontFamily: 'inherit',\n                height: height,\n                type: 'radialBar',\n                sparkline: {\n                    enabled: true,\n                }\n            },\n            plotOptions: {\n                radialBar: {\n                    hollow: {\n                        margin: 0,\n                        size: \"45%\"\n                    },\n                    dataLabels: {\n                        showOn: \"always\",\n                        name: {\n                            show: false                                 \n                        },\n                        value: {                                 \n                            show: false                              \n                        }\n                    },\n                    track: {\n                        background: lightColor,\n                        strokeWidth: '100%'\n                    }\n                }\n            },\n            colors: [baseColor],\n            stroke: {\n                lineCap: \"round\",\n            },\n            labels: [\"Progress\"]\n        };\n\n        chart.self = new ApexCharts(element, options);\n        chart.self.render();\n        chart.rendered = true;\n\n        element.classList.add('initialized');\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            // Init default chart\n            initChart(chart1, '#kt_slider_widget_7_chart_1', 76);\n\n            var carousel = document.querySelector('#kt_sliders_widget_7_slider');\n            \n            if ( !carousel ) {\n                return;\n            }\n\n            // Init slide charts\n            carousel.addEventListener('slid.bs.carousel', function (e) {\n                if (e.to === 1) {\n                    // Init second chart\n                    initChart(chart2, '#kt_slider_widget_7_chart_2', 55);\n                }\n\n                if (e.to === 2) {\n                    // Init third chart\n                    initChart(chart3, '#kt_slider_widget_7_chart_3', 25);\n                }\n            });\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {                \n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                    chart1.rendered = false;\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                    chart2.rendered = false;\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                    chart3.rendered = false;\n                }\n\n                initChart(chart1, '#kt_slider_widget_7_chart_1', 76);\n                initChart(chart2, '#kt_slider_widget_7_chart_2', 55);\n                initChart(chart3, '#kt_slider_widget_7_chart_3', 25);\n            });\n        }   \n    }        \n}();\n\n\n// Webpack support\nif (true) {\n    window.KTSlidersWidget7 = module.exports = KTSlidersWidget7;\n}\n   \n        \n        \n        \n           \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/sliders/widget-7.js?");

/***/ }),

/***/ "../src/js/widgets/tables/widget-14.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/tables/widget-14.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget14 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart4 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart5 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var color = element.getAttribute('data-kt-chart-color');\n       \n        var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n        var lightColor = KTUtil.getCssVariableValue('--bs-body-bg');\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: data\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                zoom: {\n                    enabled: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                 \n                axisBorder: {\n                    show: false,\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false                   \n                },\n                crosshairs: {\n                    show: false,\n                    position: 'front',\n                    stroke: {\n                        color: strokeColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: false\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 60,\n                labels: {\n                    show: false                     \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                enabled: false\n            },\n            colors: [lightColor],\n            markers: {\n                colors: [lightColor],\n                strokeColor: [baseColor],\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);          \n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }            \n    }\n\n    // Public methods\n    return {\n        init: function () { \n            var chart1Data = [7, 10, 5, 21, 6, 11, 5, 23, 5, 11, 18, 7, 21,13];            \n            initChart(chart1, '#kt_table_widget_14_chart_1', chart1Data, true);\n\n            var chart2Data = [17, 5, 23, 2, 21, 9, 17, 23, 4, 24, 9, 17, 21,7];            \n            initChart(chart2, '#kt_table_widget_14_chart_2', chart2Data, true);\n\n            var chart3Data = [2, 24, 5, 17, 7, 2, 12, 24, 5, 24, 2, 8, 12,7];            \n            initChart(chart3, '#kt_table_widget_14_chart_3', chart3Data, true);\n\n            var chart4Data = [24, 3, 5, 19, 3, 7, 25, 14, 5, 14, 2, 8, 5,17];            \n            initChart(chart4, '#kt_table_widget_14_chart_4', chart4Data, true);\n\n            var chart5Data = [3, 23, 1, 19, 3, 17, 3, 9, 25, 4, 2, 18, 25,3];            \n            initChart(chart5, '#kt_table_widget_14_chart_5', chart5Data, true); \n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                }\n\n                if (chart4.rendered) {\n                    chart4.self.destroy();\n                }\n\n                if (chart5.rendered) {\n                    chart5.self.destroy();\n                }\n\n                initChart(chart1, '#kt_table_widget_14_chart_1', chart1Data, chart1.rendered);\n                initChart(chart2, '#kt_table_widget_14_chart_2', chart2Data, chart2.rendered);  \n                initChart(chart3, '#kt_table_widget_14_chart_3', chart3Data, chart3.rendered);\n                initChart(chart4, '#kt_table_widget_14_chart_4', chart4Data, chart4.rendered); \n                initChart(chart5, '#kt_table_widget_14_chart_5', chart5Data, chart5.rendered); \n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTablesWidget14 = module.exports = KTTablesWidget14;\n} \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/tables/widget-14.js?");

/***/ }),

/***/ "../src/js/widgets/tables/widget-15.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/tables/widget-15.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget15 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart4 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart5 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, chartSelector, data, initByDefault) {\n        var element = document.querySelector(chartSelector);\n\n        if (!element) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var color = element.getAttribute('data-kt-chart-color');\n         \n        var strokeColor = KTUtil.getCssVariableValue('--bs-' + 'gray-300');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n        var lightColor = KTUtil.getCssVariableValue('--bs-body-bg');\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: data\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                zoom: {\n                    enabled: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                \n                axisBorder: {\n                    show: false\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false                    \n                },\n                crosshairs: {\n                    show: false,\n                    position: 'front',\n                    stroke: {\n                        color: strokeColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: false\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 60,\n                labels: {\n                    show: false,\n                    ontSize: '12px'                   \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                enabled: false\n            },\n            colors: [lightColor],\n            markers: {\n                colors: [lightColor],\n                strokeColor: [baseColor],\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);          \n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }              \n    }\n\n    // Public methods\n    return {\n        init: function () { \n            var chart1Data = [7, 10, 5, 21, 6, 11, 5, 23, 5, 11, 18, 7, 21,13];            \n            initChart(chart1, '#kt_table_widget_15_chart_1', chart1Data, true);\n\n            var chart2Data = [17, 5, 23, 2, 21, 9, 17, 23, 4, 24, 9, 17, 21,7];            \n            initChart(chart2, '#kt_table_widget_15_chart_2', chart2Data, true);\n\n            var chart3Data = [2, 24, 5, 17, 7, 2, 12, 24, 5, 24, 2, 8, 12,7];            \n            initChart(chart3, '#kt_table_widget_15_chart_3', chart3Data, true);\n\n            var chart4Data = [24, 3, 5, 19, 3, 7, 25, 14, 5, 14, 2, 8, 5,17];            \n            initChart(chart4, '#kt_table_widget_15_chart_4', chart4Data, true);\n\n            var chart5Data = [3, 23, 1, 19, 3, 17, 3, 9, 25, 4, 2, 18, 25,3];            \n            initChart(chart5, '#kt_table_widget_15_chart_5', chart5Data, true);\n            \n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                }\n\n                if (chart4.rendered) {\n                    chart4.self.destroy();\n                }\n\n                if (chart5.rendered) {\n                    chart5.self.destroy();\n                }\n\n                initChart(chart1, '#kt_table_widget_15_chart_1', chart1Data, chart1.rendered);\n                initChart(chart2, '#kt_table_widget_15_chart_2', chart2Data, chart2.rendered);  \n                initChart(chart3, '#kt_table_widget_15_chart_3', chart3Data, chart3.rendered);\n                initChart(chart4, '#kt_table_widget_15_chart_4', chart4Data, chart4.rendered); \n                initChart(chart5, '#kt_table_widget_15_chart_5', chart5Data, chart5.rendered); \n            });\n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTablesWidget15 = module.exports = KTTablesWidget15;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/tables/widget-15.js?");

/***/ }),

/***/ "../src/js/widgets/tables/widget-16.js":
/*!*********************************************!*\
  !*** ../src/js/widgets/tables/widget-16.js ***!
  \*********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget16 = function () {\n    var chart1 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart2 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart3 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart4 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart5 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart6 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart7 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart8 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart9 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart10 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart11 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart12 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart13 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart14 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart15 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart16 = {\n        self: null,\n        rendered: false\n    }; \n\n    var chart17 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart18 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart19 = {\n        self: null,\n        rendered: false\n    };\n\n    var chart20 = {\n        self: null,\n        rendered: false\n    };\n\n    // Private methods\n    var initChart = function(chart, toggle, selector, data, initByDefault) {\n        var element = document.querySelector(selector);\n\n        if ( !element ) {\n            return;\n        }\n        \n        var height = parseInt(KTUtil.css(element, 'height'));\n        var color = element.getAttribute('data-kt-chart-color');\n        var labelColor = KTUtil.getCssVariableValue('--bs-gray-800');\n        var strokeColor = KTUtil.getCssVariableValue('--bs-gray-300');\n        var baseColor = KTUtil.getCssVariableValue('--bs-' + color);\n        var lightColor = KTUtil.getCssVariableValue('--bs-body-bg');\n\n        var options = {\n            series: [{\n                name: 'Net Profit',\n                data: data\n            }],\n            chart: {\n                fontFamily: 'inherit',\n                type: 'area',\n                height: height,\n                toolbar: {\n                    show: false\n                },\n                zoom: {\n                    enabled: false\n                },\n                sparkline: {\n                    enabled: true\n                }\n            },\n            plotOptions: {},\n            legend: {\n                show: false\n            },\n            dataLabels: {\n                enabled: false\n            },\n            fill: {\n                type: 'solid',\n                opacity: 1\n            },\n            stroke: {\n                curve: 'smooth',\n                show: true,\n                width: 2,\n                colors: [baseColor]\n            },\n            xaxis: {                \n                axisBorder: {\n                    show: false\n                },\n                axisTicks: {\n                    show: false\n                },\n                labels: {\n                    show: false                    \n                },\n                crosshairs: {\n                    show: false,\n                    position: 'front',\n                    stroke: {\n                        color: strokeColor,\n                        width: 1,\n                        dashArray: 3\n                    }\n                },\n                tooltip: {\n                    enabled: false\n                }\n            },\n            yaxis: {\n                min: 0,\n                max: 60,\n                labels: {\n                    show: false,\n                    ontSize: '12px'                   \n                }\n            },\n            states: {\n                normal: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                hover: {\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                },\n                active: {\n                    allowMultipleDataPointsSelection: false,\n                    filter: {\n                        type: 'none',\n                        value: 0\n                    }\n                }\n            },\n            tooltip: {\n                enabled: false\n            },\n            colors: [lightColor],\n            markers: {\n                colors: [lightColor],\n                strokeColor: [baseColor],\n                strokeWidth: 3\n            }\n        };\n\n        chart.self = new ApexCharts(element, options);        \n        var tab = document.querySelector(toggle);\n        \n        if (initByDefault === true) {\n            // Set timeout to properly get the parent elements width\n            setTimeout(function() {\n                chart.self.render();  \n                chart.rendered = true;\n            }, 200);\n        }        \n\n        tab.addEventListener('shown.bs.tab', function (event) {\n            if (chart.rendered === false) {\n                chart.self.render();  \n                chart.rendered = true;\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {  \n            var chart1Data = [16, 10, 15, 21, 6, 11, 5, 23, 5, 11, 18, 7, 21, 13];  \n            initChart(chart1, '#kt_stats_widget_16_tab_link_1', '#kt_table_widget_16_chart_1_1', chart1Data, true);        \n             \n            var chart2Data = [8, 5, 16, 3, 23, 16, 11, 15, 3, 11, 15, 7, 17, 9];  \n            initChart(chart2, '#kt_stats_widget_16_tab_link_1', '#kt_table_widget_16_chart_1_2', chart2Data, true);    \n            \n            var chart3Data = [8, 6, 16, 3, 23, 16, 11, 14, 3, 11, 15, 8, 17, 9];  \n            initChart(chart3, '#kt_stats_widget_16_tab_link_1', '#kt_table_widget_16_chart_1_3', chart3Data, true);  \n            \n            var chart4Data = [12, 5, 23, 12, 21, 9, 17, 20, 4, 24, 9, 13, 18, 9];  \n            initChart(chart4, '#kt_stats_widget_16_tab_link_1', '#kt_table_widget_16_chart_1_4', chart4Data, true); \n\n\n            var chart5Data = [13, 10, 15, 21, 6, 11, 5, 21, 5, 12, 18, 7, 21, 13];  \n            initChart(chart5, '#kt_stats_widget_16_tab_link_2', '#kt_table_widget_16_chart_2_1', chart5Data, false);        \n             \n            var chart6Data = [13, 5, 21, 12, 21, 9, 17, 20, 4, 23, 9, 17, 21, 7];  \n            initChart(chart6, '#kt_stats_widget_16_tab_link_2', '#kt_table_widget_16_chart_2_2', chart6Data, false);    \n            \n            var chart7Data = [8, 10, 14, 21, 6, 31, 5, 21, 5, 11, 15, 7, 23, 13];  \n            initChart(chart7, '#kt_stats_widget_16_tab_link_2', '#kt_table_widget_16_chart_2_3', chart7Data, false);  \n            \n            var chart8Data = [6, 10, 12, 21, 6, 11, 7, 23, 5, 12, 18, 7, 21, 15];  \n            initChart(chart8, '#kt_stats_widget_16_tab_link_2', '#kt_table_widget_16_chart_2_4', chart8Data, false); \n\n\n            var chart9Data = [7, 10, 5, 21, 6, 11, 5, 23, 5, 11, 18, 7, 21,13];  \n            initChart(chart9, '#kt_stats_widget_16_tab_link_3', '#kt_table_widget_16_chart_3_1', chart9Data, false);        \n             \n            var chart10Data = [8, 5, 16, 2, 19, 9, 17, 21, 4, 24, 4, 13, 21,5];  \n            initChart(chart10, '#kt_stats_widget_16_tab_link_3', '#kt_table_widget_16_chart_3_2', chart10Data, false);    \n            \n            var chart11Data = [15, 10, 12, 21, 6, 11, 23, 11, 5, 12, 18, 7, 21, 15];  \n            initChart(chart11, '#kt_stats_widget_16_tab_link_3', '#kt_table_widget_16_chart_3_3', chart11Data, false);  \n            \n            var chart12Data = [3, 9, 12, 23, 6, 11, 7, 23, 5, 12, 14, 7, 21, 8];  \n            initChart(chart12, '#kt_stats_widget_16_tab_link_3', '#kt_table_widget_16_chart_3_4', chart12Data, false);\n\n\n            var chart13Data = [9, 14, 15, 21, 8, 11, 5, 23, 5, 11, 18, 5, 23, 8];  \n            initChart(chart13, '#kt_stats_widget_16_tab_link_4', '#kt_table_widget_16_chart_4_1', chart13Data, false);        \n             \n            var chart14Data = [7, 5, 23, 12, 21, 9, 17, 15, 4, 24, 9, 17, 21, 7];  \n            initChart(chart14, '#kt_stats_widget_16_tab_link_4', '#kt_table_widget_16_chart_4_2', chart14Data, false);    \n            \n            var chart15Data = [8, 10, 14, 21, 6, 31, 8, 23, 5, 3, 14, 7, 21, 12];  \n            initChart(chart15, '#kt_stats_widget_16_tab_link_4', '#kt_table_widget_16_chart_4_3', chart15Data, false);  \n            \n            var chart16Data = [6, 12, 12, 19, 6, 11, 7, 23, 5, 12, 18, 7, 21, 15];  \n            initChart(chart16, '#kt_stats_widget_16_tab_link_4', '#kt_table_widget_16_chart_4_4', chart16Data, false);\n\n\n            var chart17Data = [5, 10, 15, 21, 6, 11, 5, 23, 5, 11, 17, 7, 21, 13];  \n            initChart(chart17, '#kt_stats_widget_16_tab_link_5', '#kt_table_widget_16_chart_5_1', chart17Data, false);        \n             \n            var chart18Data = [4, 5, 23, 12, 21, 9, 17, 15, 4, 24, 9, 17, 21, 7];  \n            initChart(chart18, '#kt_stats_widget_16_tab_link_5', '#kt_table_widget_16_chart_5_2', chart18Data, false);    \n            \n            var chart19Data = [7, 10, 14, 21, 6, 31, 5, 23, 5, 11, 15, 7, 21, 17];  \n            initChart(chart19, '#kt_stats_widget_16_tab_link_5', '#kt_table_widget_16_chart_5_3', chart19Data, false);  \n            \n            var chart20Data = [3, 10, 12, 23, 6, 11, 7, 22, 5, 12, 18, 7, 21, 14];  \n            initChart(chart20, '#kt_stats_widget_16_tab_link_5', '#kt_table_widget_16_chart_5_4', chart20Data, false);\n\n            // Update chart on theme mode change\n            KTThemeMode.on(\"kt.thememode.change\", function() {\n                if (chart1.rendered) {\n                    chart1.self.destroy();\n                }\n\n                if (chart2.rendered) {\n                    chart2.self.destroy();\n                }\n\n                if (chart3.rendered) {\n                    chart3.self.destroy();\n                }\n\n                if (chart4.rendered) {\n                    chart4.self.destroy();\n                }\n\n                if (chart5.rendered) {\n                    chart5.self.destroy();\n                }\n\n                if (chart6.rendered) {\n                    chart6.self.destroy();\n                }\n\n                if (chart7.rendered) {\n                    chart7.self.destroy();\n                }\n\n                if (chart8.rendered) {\n                    chart8.self.destroy();\n                }\n\n                if (chart9.rendered) {\n                    chart9.self.destroy();\n                }\n\n                if (chart10.rendered) {\n                    chart10.self.destroy();\n                }\n\n                if (chart11.rendered) {\n                    chart11.self.destroy();\n                }\n\n                if (chart12.rendered) {\n                    chart12.self.destroy();\n                }\n\n                if (chart13.rendered) {\n                    chart13.self.destroy();\n                }\n\n                if (chart14.rendered) {\n                    chart14.self.destroy();\n                }\n\n                if (chart15.rendered) {\n                    chart15.self.destroy();\n                }\n\n                if (chart16.rendered) {\n                    chart16.self.destroy();\n                }\n\n                if (chart17.rendered) {\n                    chart17.self.destroy();\n                }\n\n                if (chart18.rendered) {\n                    chart18.self.destroy();\n                }\n\n                if (chart19.rendered) {\n                    chart19.self.destroy();\n                }\n\n                if (chart20.rendered) {\n                    chart20.self.destroy();\n                }                \n\n                initChart(chart1, '#kt_stats_widget_16_tab_link_1', '#kt_table_widget_16_chart_1_1', chart1Data, chart1.rendered);\n                initChart(chart2, '#kt_stats_widget_16_tab_link_1', '#kt_table_widget_16_chart_1_2', chart2Data, chart2.rendered);  \n                initChart(chart3, '#kt_stats_widget_16_tab_link_1', '#kt_table_widget_16_chart_1_3', chart3Data, chart3.rendered);\n                initChart(chart4, '#kt_stats_widget_16_tab_link_1', '#kt_table_widget_16_chart_1_4', chart4Data, chart4.rendered); \n\n                initChart(chart5, '#kt_stats_widget_16_tab_link_2', '#kt_table_widget_16_chart_2_1', chart5Data, chart5.rendered);\n                initChart(chart6, '#kt_stats_widget_16_tab_link_2', '#kt_table_widget_16_chart_2_2', chart6Data, chart6.rendered);  \n                initChart(chart7, '#kt_stats_widget_16_tab_link_2', '#kt_table_widget_16_chart_2_3', chart7Data, chart7.rendered);\n                initChart(chart8, '#kt_stats_widget_16_tab_link_2', '#kt_table_widget_16_chart_2_4', chart8Data, chart8.rendered); \n\n                initChart(chart9, '#kt_stats_widget_16_tab_link_3', '#kt_table_widget_16_chart_3_1', chart9Data, chart9.rendered);\n                initChart(chart10, '#kt_stats_widget_16_tab_link_3', '#kt_table_widget_16_chart_3_2', chart10Data, chart10.rendered);  \n                initChart(chart11, '#kt_stats_widget_16_tab_link_3', '#kt_table_widget_16_chart_3_3', chart11Data, chart11.rendered);\n                initChart(chart12, '#kt_stats_widget_16_tab_link_3', '#kt_table_widget_16_chart_3_4', chart12Data, chart12.rendered); \n\n                initChart(chart13, '#kt_stats_widget_16_tab_link_4', '#kt_table_widget_16_chart_4_1', chart13Data, chart13.rendered);\n                initChart(chart14, '#kt_stats_widget_16_tab_link_4', '#kt_table_widget_16_chart_4_2', chart14Data, chart14.rendered);  \n                initChart(chart15, '#kt_stats_widget_16_tab_link_4', '#kt_table_widget_16_chart_4_3', chart15Data, chart15.rendered);\n                initChart(chart16, '#kt_stats_widget_16_tab_link_4', '#kt_table_widget_16_chart_4_4', chart16Data, chart16.rendered); \n\n                initChart(chart17, '#kt_stats_widget_16_tab_link_5', '#kt_table_widget_16_chart_5_1', chart17Data, chart17.rendered);\n                initChart(chart18, '#kt_stats_widget_16_tab_link_5', '#kt_table_widget_16_chart_5_2', chart18Data, chart18.rendered);  \n                initChart(chart19, '#kt_stats_widget_16_tab_link_5', '#kt_table_widget_16_chart_5_3', chart19Data, chart19.rendered);\n                initChart(chart20, '#kt_stats_widget_16_tab_link_5', '#kt_table_widget_16_chart_5_4', chart20Data, chart20.rendered);                 \n            });            \n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTablesWidget16 = module.exports = KTTablesWidget16;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/tables/widget-16.js?");

/***/ }),

/***/ "../src/js/widgets/tables/widget-3.js":
/*!********************************************!*\
  !*** ../src/js/widgets/tables/widget-3.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget3 = function () {\n    var table;\n    var datatable;\n\n    // Private methods\n    const initDatatable = () => {\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        datatable = $(table).DataTable({\n            \"info\": false,\n            'order': [],\n            'paging': false,\n            'pageLength': false,\n        });\n    }\n\n    const handleTabStates = () => {\n        const tabs = document.querySelector('[data-kt-table-widget-3=\"tabs_nav\"]');\n        const tabButtons = tabs.querySelectorAll('[data-kt-table-widget-3=\"tab\"]');\n        const tabClasses = ['border-bottom', 'border-3', 'border-primary'];\n\n        tabButtons.forEach(tab => {\n            tab.addEventListener('click', e => {\n                // Get datatable filter value\n                const value = tab.getAttribute('data-kt-table-widget-3-value');\n                tabButtons.forEach(t => {\n                    t.classList.remove(...tabClasses);\n                    t.classList.add('text-muted');\n                });\n\n                tab.classList.remove('text-muted');\n                tab.classList.add(...tabClasses);\n\n                // Filter datatable\n                if (value === 'Show All') {\n                    datatable.search('').draw();\n                } else {\n                    datatable.search(value).draw();\n                }\n            });\n        });\n    }\n\n    // Handle status filter dropdown\n    const handleStatusFilter = () => {\n        const select = document.querySelector('[data-kt-table-widget-3=\"filter_status\"]');\n\n        $(select).on('select2:select', function (e) {\n            const value = $(this).val();\n            if (value === 'Show All') {\n                datatable.search('').draw();\n            } else {\n                datatable.search(value).draw();\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            table = document.querySelector('#kt_widget_table_3');\n\n            if (!table) {\n                return;\n            }\n\n            initDatatable();\n            handleTabStates();\n            handleStatusFilter();\n        }\n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTablesWidget3 = module.exports = KTTablesWidget3;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/tables/widget-3.js?");

/***/ }),

/***/ "../src/js/widgets/tables/widget-4.js":
/*!********************************************!*\
  !*** ../src/js/widgets/tables/widget-4.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget4 = function () {\n    var table;\n    var datatable;\n    var template;\n\n    // Private methods\n    const initDatatable = () => {\n        // Get subtable template\n        const subtable = document.querySelector('[data-kt-table-widget-4=\"subtable_template\"]');\n        template = subtable.cloneNode(true);\n        template.classList.remove('d-none');\n\n        // Remove subtable template\n        subtable.parentNode.removeChild(subtable);\n\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        datatable = $(table).DataTable({\n            \"info\": false,\n            'order': [],\n            \"lengthChange\": false,\n            'pageLength': 6,\n            'ordering': false,\n            'paging': false,\n            'columnDefs': [\n                { orderable: false, targets: 0 }, // Disable ordering on column 0 (checkbox)\n                { orderable: false, targets: 6 }, // Disable ordering on column 6 (actions)\n            ]\n        });\n\n        // Re-init functions on every table re-draw -- more info: https://datatables.net/reference/event/draw\n        datatable.on('draw', function () {\n            resetSubtable();\n            handleActionButton();\n        });\n    }\n\n    // Search Datatable --- official docs reference: https://datatables.net/reference/api/search()\n    var handleSearchDatatable = () => {\n        const filterSearch = document.querySelector('[data-kt-table-widget-4=\"search\"]');\n        filterSearch.addEventListener('keyup', function (e) {\n            datatable.search(e.target.value).draw();\n        });\n    }\n\n    // Handle status filter\n    const handleStatusFilter = () => {\n        const select = document.querySelector('[data-kt-table-widget-4=\"filter_status\"]');\n\n        $(select).on('select2:select', function (e) {\n            const value = $(this).val();\n            if (value === 'Show All') {\n                datatable.search('').draw();\n            } else {\n                datatable.search(value).draw();\n            }\n        });\n    }\n\n    // Subtable data sample\n    const data = [\n        {\n            image: '76',\n            name: 'Go Pro 8',\n            description: 'Latest  version of Go Pro.',\n            cost: '500.00',\n            qty: '1',\n            total: '500.00',\n            stock: '12'\n        },\n        {\n            image: '60',\n            name: 'Bose Earbuds',\n            description: 'Top quality earbuds from Bose.',\n            cost: '300.00',\n            qty: '1',\n            total: '300.00',\n            stock: '8'\n        },\n        {\n            image: '211',\n            name: 'Dry-fit Sports T-shirt',\n            description: 'Comfortable sportswear.',\n            cost: '89.00',\n            qty: '1',\n            total: '89.00',\n            stock: '18'\n        },\n        {\n            image: '21',\n            name: 'Apple Airpod 3',\n            description: 'Apple\\'s latest earbuds.',\n            cost: '200.00',\n            qty: '2',\n            total: '400.00',\n            stock: '32'\n        },\n        {\n            image: '83',\n            name: 'Nike Pumps',\n            description: 'Apple\\'s latest headphones.',\n            cost: '200.00',\n            qty: '1',\n            total: '200.00',\n            stock: '8'\n        }\n    ];\n\n    // Handle action button\n    const handleActionButton = () => {\n        const buttons = document.querySelectorAll('[data-kt-table-widget-4=\"expand_row\"]');\n\n        // Sample row items counter --- for demo purpose only, remove this variable in your project\n        const rowItems = [3, 1, 3, 1, 2, 1];\n\n        buttons.forEach((button, index) => {\n            button.addEventListener('click', e => {\n                e.stopImmediatePropagation();\n                e.preventDefault();\n\n                const row = button.closest('tr');\n                const rowClasses = ['isOpen', 'border-bottom-0'];\n\n                // Get total number of items to generate --- for demo purpose only, remove this code snippet in your project\n                const demoData = [];\n                for (var j = 0; j < rowItems[index]; j++) {\n                    demoData.push(data[j]);\n                }\n                // End of generating demo data\n\n                // Handle subtable expanded state\n                if (row.classList.contains('isOpen')) {\n                    // Remove all subtables from current order row\n                    while (row.nextSibling && row.nextSibling.getAttribute('data-kt-table-widget-4') === 'subtable_template') {\n                        row.nextSibling.parentNode.removeChild(row.nextSibling);\n                    }\n                    row.classList.remove(...rowClasses);\n                    button.classList.remove('active');\n                } else {\n                    populateTemplate(demoData, row);\n                    row.classList.add(...rowClasses);\n                    button.classList.add('active');\n                }\n            });\n        });\n    }\n\n    // Populate template with content/data -- content/data can be replaced with relevant data from database or API\n    const populateTemplate = (data, target) => {\n        data.forEach((d, index) => {\n            // Clone template node\n            const newTemplate = template.cloneNode(true);\n\n            // Stock badges\n            const lowStock = `<div class=\"badge badge-light-warning\">Low Stock</div>`;\n            const inStock = `<div class=\"badge badge-light-success\">In Stock</div>`;\n\n            // Select data elements\n            const image = newTemplate.querySelector('[data-kt-table-widget-4=\"template_image\"]');\n            const name = newTemplate.querySelector('[data-kt-table-widget-4=\"template_name\"]');\n            const description = newTemplate.querySelector('[data-kt-table-widget-4=\"template_description\"]');\n            const cost = newTemplate.querySelector('[data-kt-table-widget-4=\"template_cost\"]');\n            const qty = newTemplate.querySelector('[data-kt-table-widget-4=\"template_qty\"]');\n            const total = newTemplate.querySelector('[data-kt-table-widget-4=\"template_total\"]');\n            const stock = newTemplate.querySelector('[data-kt-table-widget-4=\"template_stock\"]');\n\n            // Populate elements with data\n            const imageSrc = image.getAttribute('data-kt-src-path');\n            image.setAttribute('src', imageSrc + d.image + '.png');\n            name.innerText = d.name;\n            description.innerText = d.description;\n            cost.innerText = d.cost;\n            qty.innerText = d.qty;\n            total.innerText = d.total;\n            if (d.stock > 10) {\n                stock.innerHTML = inStock;\n            } else {\n                stock.innerHTML = lowStock;\n            }\n\n            // New template border controller\n            // When only 1 row is available\n            if (data.length === 1) {\n                //let borderClasses = ['rounded', 'rounded-end-0'];\n                //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n                //borderClasses = ['rounded', 'rounded-start-0'];\n                //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n                // Remove bottom border\n                //newTemplate.classList.add('border-bottom-0');\n            } else {\n                // When multiple rows detected\n                if (index === (data.length - 1)) { // first row\n                    //let borderClasses = ['rounded-start', 'rounded-bottom-0'];\n                   // newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n                    //borderClasses = ['rounded-end', 'rounded-bottom-0'];\n                    //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n                }\n                if (index === 0) { // last row\n                    //let borderClasses = ['rounded-start', 'rounded-top-0'];\n                    //newTemplate.querySelectorAll('td')[0].classList.add(...borderClasses);\n                    //borderClasses = ['rounded-end', 'rounded-top-0'];\n                    //newTemplate.querySelectorAll('td')[4].classList.add(...borderClasses);\n\n                    // Remove bottom border on last row\n                    //newTemplate.classList.add('border-bottom-0');\n                }\n            }\n\n            // Insert new template into table\n            const tbody = table.querySelector('tbody');\n            tbody.insertBefore(newTemplate, target.nextSibling);\n        });\n    }\n\n    // Reset subtable\n    const resetSubtable = () => {\n        const subtables = document.querySelectorAll('[data-kt-table-widget-4=\"subtable_template\"]');\n        subtables.forEach(st => {\n            st.parentNode.removeChild(st);\n        });\n\n        const rows = table.querySelectorAll('tbody tr');\n        rows.forEach(r => {\n            r.classList.remove('isOpen');\n            if (r.querySelector('[data-kt-table-widget-4=\"expand_row\"]')) {\n                r.querySelector('[data-kt-table-widget-4=\"expand_row\"]').classList.remove('active');\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            table = document.querySelector('#kt_table_widget_4_table');\n\n            if (!table) {\n                return;\n            }\n\n            initDatatable();\n            handleSearchDatatable();\n            handleStatusFilter();\n            handleActionButton();\n        }\n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTablesWidget4 = module.exports = KTTablesWidget4;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/tables/widget-4.js?");

/***/ }),

/***/ "../src/js/widgets/tables/widget-5.js":
/*!********************************************!*\
  !*** ../src/js/widgets/tables/widget-5.js ***!
  \********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTablesWidget5 = function () {\n    var table;\n    var datatable;\n\n    // Private methods\n    const initDatatable = () => {\n        // Set date data order\n        const tableRows = table.querySelectorAll('tbody tr');\n\n        tableRows.forEach(row => {\n            const dateRow = row.querySelectorAll('td');\n            const realDate = moment(dateRow[2].innerHTML, \"MMM DD, YYYY\").format(); // select date from 3rd column in table\n            dateRow[2].setAttribute('data-order', realDate);\n        });\n\n        // Init datatable --- more info on datatables: https://datatables.net/manual/\n        datatable = $(table).DataTable({\n            \"info\": false,\n            'order': [],\n            \"lengthChange\": false,\n            'pageLength': 6,\n            'paging': false,\n            'columnDefs': [\n                { orderable: false, targets: 1 }, // Disable ordering on column 1 (product id)\n            ]\n        });\n    }\n\n    // Handle status filter\n    const handleStatusFilter = () => {\n        const select = document.querySelector('[data-kt-table-widget-5=\"filter_status\"]');\n\n        $(select).on('select2:select', function (e) {\n            const value = $(this).val();\n            if (value === 'Show All') {\n                datatable.search('').draw();\n            } else {\n                datatable.search(value).draw();\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            table = document.querySelector('#kt_table_widget_5_table');\n\n            if (!table) {\n                return;\n            }\n\n            initDatatable();\n            handleStatusFilter();\n        }\n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTablesWidget5 = module.exports = KTTablesWidget5;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/tables/widget-5.js?");

/***/ }),

/***/ "../src/js/widgets/timeline/widget-1.js":
/*!**********************************************!*\
  !*** ../src/js/widgets/timeline/widget-1.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTimelineWidget1 = function () {\n    // Private methods\n    // Day timeline\n    const initTimelineDay = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_1_1');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: \"research\",\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: \"qa\",\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: \"ui\",\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: \"dev\",\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 'research',\n                start: now,\n                end: moment(now).add(1.5, 'hours'),\n                content: 'Meeting',\n                progress: \"60%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-6.jpg',\n                    'avatars/300-1.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 'qa',\n                start: moment(now).add(1, 'hours'),\n                end: moment(now).add(2, 'hours'),\n                content: 'Testing',\n                progress: \"47%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 'ui',\n                start: moment(now).add(30, 'minutes'),\n                end: moment(now).add(2.5, 'hours'),\n                content: 'Landing page',\n                progress: \"55%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-20.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 'dev',\n                start: moment(now).add(1.5, 'hours'),\n                end: moment(now).add(3, 'hours'),\n                content: 'Products module',\n                progress: \"75%\",\n                color: 'info',\n                users: [\n                    'avatars/300-23.jpg',\n                    'avatars/300-12.jpg',\n                    'avatars/300-9.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['data-kt-timeline-avatar-src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img data-kt-timeline-avatar-src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                handleAvatarPath();\n\n                const target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);      \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n\n    // Week timeline\n    const initTimelineWeek = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_1_2');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: 1,\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: 2,\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: 3,\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: 4,\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 1,\n                start: now,\n                end: moment(now).add(7, 'days'),\n                content: 'Framework',\n                progress: \"71%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-6.jpg',\n                    'avatars/300-1.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 2,\n                start: moment(now).add(7, 'days'),\n                end: moment(now).add(14, 'days'),\n                content: 'Accessibility',\n                progress: \"84%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 3,\n                start: moment(now).add(3, 'days'),\n                end: moment(now).add(20, 'days'),\n                content: 'Microsites',\n                progress: \"69%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-20.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 4,\n                start: moment(now).add(10, 'days'),\n                end: moment(now).add(21, 'days'),\n                content: 'Deployment',\n                progress: \"74%\",\n                color: 'info',\n                users: [\n                    'avatars/300-23.jpg',\n                    'avatars/300-12.jpg',\n                    'avatars/300-9.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['data-kt-timeline-avatar-src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img data-kt-timeline-avatar-src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                handleAvatarPath();\n\n                const target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);      \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n\n    // Month timeline\n    const initTimelineMonth = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_1_3');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-1-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: \"research\",\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: \"qa\",\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: \"ui\",\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: \"dev\",\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 'research',\n                start: now,\n                end: moment(now).add(2, 'months'),\n                content: 'Tags',\n                progress: \"79%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-6.jpg',\n                    'avatars/300-1.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 'qa',\n                start: moment(now).add(0.5, 'months'),\n                end: moment(now).add(5, 'months'),\n                content: 'Testing',\n                progress: \"64%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 'ui',\n                start: moment(now).add(2, 'months'),\n                end: moment(now).add(6.5, 'months'),\n                content: 'Media',\n                progress: \"82%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-20.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 'dev',\n                start: moment(now).add(4, 'months'),\n                end: moment(now).add(7, 'months'),\n                content: 'Plugins',\n                progress: \"58%\",\n                color: 'info',\n                users: [\n                    'avatars/300-23.jpg',\n                    'avatars/300-12.jpg',\n                    'avatars/300-9.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['data-kt-timeline-avatar-src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img data-kt-timeline-avatar-src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                handleAvatarPath();\n                \n                const target = element.closest('[data-kt-timeline-widget-1-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);                    \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n\n    // Handle BlockUI\n    const handleBlockUI = () => {\n        // Select block ui elements\n        const elements = document.querySelectorAll('[data-kt-timeline-widget-1-blockui=\"true\"]');\n\n        // Init block ui\n        elements.forEach(element => {\n            const blockUI = new KTBlockUI(element, {\n                overlayClass: \"bg-body\",\n            });\n\n            blockUI.block();\n        });\n    }\n\n    // Handle tabs visibility\n    const tabsVisibility = () => {\n        const tabs = document.querySelectorAll('[data-kt-timeline-widget-1=\"tab\"]');\n\n        tabs.forEach(tab => {\n            tab.addEventListener('shown.bs.tab', e => {\n                // Week tab\n                if(tab.getAttribute('href') === '#kt_timeline_widget_1_tab_week'){\n                    initTimelineWeek();\n                }\n\n                // Month tab\n                if(tab.getAttribute('href') === '#kt_timeline_widget_1_tab_month'){\n                    initTimelineMonth();\n                }\n            });\n        });\n    }\n\n    // Handle avatar path conflict\n    const handleAvatarPath = () => {\n        const avatars = document.querySelectorAll('[data-kt-timeline-avatar-src]');\n\n        if(!avatars){\n            return;\n        }\n\n        avatars.forEach(avatar => {\n            avatar.setAttribute('src', avatar.getAttribute('data-kt-timeline-avatar-src'));\n            avatar.removeAttribute('data-kt-timeline-avatar-src');\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initTimelineDay();\n            handleBlockUI();\n            tabsVisibility();\n        }\n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTimelineWidget1 = module.exports = KTTimelineWidget1;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/timeline/widget-1.js?");

/***/ }),

/***/ "../src/js/widgets/timeline/widget-2.js":
/*!**********************************************!*\
  !*** ../src/js/widgets/timeline/widget-2.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTimelineWidget2 = function () {\n    // Private methods\n    var handleCheckbox = function() {\n        var card = document.querySelector('#kt_timeline_widget_2_card');        \n        \n        if (!card) {\n            return;\n        }\n\n        // Checkbox Handler\n        KTUtil.on(card, '[data-kt-element=\"checkbox\"]', 'change', function (e) {\n            var check = this.closest('.form-check');\n            var tr = this.closest('tr');\n            var bullet = tr.querySelector('[data-kt-element=\"bullet\"]');\n            var status = tr.querySelector('[data-kt-element=\"status\"]');\n\n            if ( this.checked === true ) {\n                check.classList.add('form-check-success');\n\n                bullet.classList.remove('bg-primary');\n                bullet.classList.add('bg-success');\n\n                status.innerText = 'Done';\n                status.classList.remove('badge-light-primary');\n                status.classList.add('badge-light-success');\n            } else {\n                check.classList.remove('form-check-success');\n\n                bullet.classList.remove('bg-success');\n                bullet.classList.add('bg-primary');\n\n                status.innerText = 'In Process';\n                status.classList.remove('badge-light-success');\n                status.classList.add('badge-light-primary');\n            }\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {           \n            handleCheckbox();             \n        }   \n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTimelineWidget2 = module.exports = KTTimelineWidget2;\n}\n\n\n \n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/timeline/widget-2.js?");

/***/ }),

/***/ "../src/js/widgets/timeline/widget-4.js":
/*!**********************************************!*\
  !*** ../src/js/widgets/timeline/widget-4.js ***!
  \**********************************************/
/***/ ((module) => {

"use strict";
eval("\n\n// Class definition\nvar KTTimelineWidget4 = function () {\n    // Private methods\n    // Day timeline\n    const initTimelineDay = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_4_1');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-4-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: \"research\",\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: \"qa\",\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: \"ui\",\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: \"dev\",\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 'research',\n                start: now,\n                end: moment(now).add(1.5, 'hours'),\n                content: 'Meeting',\n                progress: \"60%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-6.jpg',\n                    'avatars/300-1.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 'qa',\n                start: moment(now).add(1, 'hours'),\n                end: moment(now).add(2, 'hours'),\n                content: 'Testing',\n                progress: \"47%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 'ui',\n                start: moment(now).add(30, 'minutes'),\n                end: moment(now).add(2.5, 'hours'),\n                content: 'Landing page',\n                progress: \"55%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-20.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 'dev',\n                start: moment(now).add(1.5, 'hours'),\n                end: moment(now).add(3, 'hours'),\n                content: 'Products module',\n                progress: \"75%\",\n                color: 'info',\n                users: [\n                    'avatars/300-23.jpg',\n                    'avatars/300-12.jpg',\n                    'avatars/300-9.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['data-kt-timeline-avatar-src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img data-kt-timeline-avatar-src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                handleAvatarPath();\n\n                const target = element.closest('[data-kt-timeline-widget-4-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);      \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n\n    // Week timeline\n    const initTimelineWeek = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_4_2');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-4-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: 1,\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: 2,\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: 3,\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: 4,\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 1,\n                start: now,\n                end: moment(now).add(7, 'days'),\n                content: 'Framework',\n                progress: \"71%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-6.jpg',\n                    'avatars/300-1.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 2,\n                start: moment(now).add(7, 'days'),\n                end: moment(now).add(14, 'days'),\n                content: 'Accessibility',\n                progress: \"84%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 3,\n                start: moment(now).add(3, 'days'),\n                end: moment(now).add(20, 'days'),\n                content: 'Microsites',\n                progress: \"69%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-20.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 4,\n                start: moment(now).add(10, 'days'),\n                end: moment(now).add(21, 'days'),\n                content: 'Deployment',\n                progress: \"74%\",\n                color: 'info',\n                users: [\n                    'avatars/300-23.jpg',\n                    'avatars/300-12.jpg',\n                    'avatars/300-9.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['data-kt-timeline-avatar-src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img data-kt-timeline-avatar-src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                handleAvatarPath();\n\n                const target = element.closest('[data-kt-timeline-widget-4-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);      \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n\n    // Month timeline\n    const initTimelineMonth = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_4_3');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-4-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: \"research\",\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: \"qa\",\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: \"ui\",\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: \"dev\",\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 'research',\n                start: now,\n                end: moment(now).add(2, 'months'),\n                content: 'Tags',\n                progress: \"79%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-6.jpg',\n                    'avatars/300-1.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 'qa',\n                start: moment(now).add(0.5, 'months'),\n                end: moment(now).add(5, 'months'),\n                content: 'Testing',\n                progress: \"64%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 'ui',\n                start: moment(now).add(2, 'months'),\n                end: moment(now).add(6.5, 'months'),\n                content: 'Media',\n                progress: \"82%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-20.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 'dev',\n                start: moment(now).add(4, 'months'),\n                end: moment(now).add(7, 'months'),\n                content: 'Plugins',\n                progress: \"58%\",\n                color: 'info',\n                users: [\n                    'avatars/300-23.jpg',\n                    'avatars/300-12.jpg',\n                    'avatars/300-9.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['data-kt-timeline-avatar-src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img data-kt-timeline-avatar-src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                handleAvatarPath();\n                \n                const target = element.closest('[data-kt-timeline-widget-4-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);                    \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n    \n    // 2022 timeline\n    const initTimeline2022 = () => {\n        // Detect element\n        const element = document.querySelector('#kt_timeline_widget_4_4');\n        if (!element) {\n            return;\n        }\n\n        if(element.innerHTML){\n            return;\n        }\n\n        // Set variables\n        var now = Date.now();\n        var rootImagePath = element.getAttribute('data-kt-timeline-widget-4-image-root');\n\n        // Build vis-timeline datasets\n        var groups = new vis.DataSet([\n            {\n                id: \"research\",\n                content: \"Research\",\n                order: 1\n            },\n            {\n                id: \"qa\",\n                content: \"Phase 2.6 QA\",\n                order: 2\n            },\n            {\n                id: \"ui\",\n                content: \"UI Design\",\n                order: 3\n            },\n            {\n                id: \"dev\",\n                content: \"Development\",\n                order: 4\n            }\n        ]);\n\n\n        var items = new vis.DataSet([\n            {\n                id: 1,\n                group: 'research',\n                start: now,\n                end: moment(now).add(2, 'months'),\n                content: 'Tags',\n                progress: \"51%\",\n                color: 'primary',\n                users: [\n                    'avatars/300-7.jpg',\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 2,\n                group: 'qa',\n                start: moment(now).add(0.5, 'months'),\n                end: moment(now).add(5, 'months'),\n                content: 'Testing',\n                progress: \"64%\",\n                color: 'success',\n                users: [\n                    'avatars/300-2.jpg'\n                ]\n            },\n            {\n                id: 3,\n                group: 'ui',\n                start: moment(now).add(2, 'months'),\n                end: moment(now).add(6.5, 'months'),\n                content: 'Media',\n                progress: \"54%\",\n                color: 'danger',\n                users: [\n                    'avatars/300-5.jpg',\n                    'avatars/300-21.jpg'\n                ]\n            },\n            {\n                id: 4,\n                group: 'dev',\n                start: moment(now).add(4, 'months'),\n                end: moment(now).add(7, 'months'),\n                content: 'Plugins',\n                progress: \"348%\",\n                color: 'info',\n                users: [\n                    'avatars/300-3.jpg',\n                    'avatars/300-11.jpg',\n                    'avatars/300-13.jpg'\n                ]\n            },\n        ]);\n\n        // Set vis-timeline options\n        var options = {\n            zoomable: false,\n            moveable: false,\n            selectable: false,\n\n            // More options https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            margin: {\n                item: {\n                    horizontal: 10,\n                    vertical: 35\n                }\n            },\n\n            // Remove current time line --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            showCurrentTime: false,\n\n            // Whitelist specified tags and attributes from template --- more info: https://visjs.github.io/vis-timeline/docs/timeline/#Configuration_Options\n            xss: {\n                disabled: false,\n                filterOptions: {\n                    whiteList: {\n                        div: ['class', 'style'],\n                        img: ['data-kt-timeline-avatar-src', 'alt'],\n                        a: ['href', 'class']\n                    },\n                },\n            },\n            // specify a template for the items\n            template: function (item) {\n                // Build users group\n                const users = item.users;\n                let userTemplate = '';\n                users.forEach(user => {\n                    userTemplate += `<div class=\"symbol symbol-circle symbol-25px\"><img data-kt-timeline-avatar-src=\"${rootImagePath + user}\" alt=\"\" /></div>`;\n                });\n\n                return `<div class=\"rounded-pill bg-light-${item.color} d-flex align-items-center position-relative h-40px w-100 p-2 overflow-hidden\">\n                    <div class=\"position-absolute rounded-pill d-block bg-${item.color} start-0 top-0 h-100 z-index-1\" style=\"width: ${item.progress};\"></div>\n        \n                    <div class=\"d-flex align-items-center position-relative z-index-2\">\n                        <div class=\"symbol-group symbol-hover flex-nowrap me-3\">\n                            ${userTemplate}\n                        </div>\n        \n                        <a href=\"#\" class=\"fw-bold text-white text-hover-dark\">${item.content}</a>\n                    </div>\n        \n                    <div class=\"d-flex flex-center bg-body rounded-pill fs-7 fw-bolder ms-auto h-100 px-3 position-relative z-index-2\">\n                        ${item.progress}\n                    </div>\n                </div>        \n                `;\n            },\n\n            // Remove block ui on initial draw\n            onInitialDrawComplete: function () {\n                handleAvatarPath();\n                \n                const target = element.closest('[data-kt-timeline-widget-4-blockui=\"true\"]');\n                const blockUI = KTBlockUI.getInstance(target);\n\n                if (blockUI.isBlocked()) {\n                    setTimeout(() => {\n                        blockUI.release();\n                    }, 1000);                    \n                }\n            }\n        };\n\n        // Init vis-timeline\n        const timeline = new vis.Timeline(element, items, groups, options);\n\n        // Prevent infinite loop draws\n        timeline.on(\"currentTimeTick\", () => {            \n            // After fired the first time we un-subscribed\n            timeline.off(\"currentTimeTick\");\n        });\n    }\n    // Handle BlockUI\n    const handleBlockUI = () => {\n        // Select block ui elements\n        const elements = document.querySelectorAll('[data-kt-timeline-widget-4-blockui=\"true\"]');\n\n        // Init block ui\n        elements.forEach(element => {\n            const blockUI = new KTBlockUI(element, {\n                overlayClass: \"bg-body\",\n            });\n\n            blockUI.block();\n        });\n    }\n\n    // Handle tabs visibility\n    const tabsVisibility = () => {\n        const tabs = document.querySelectorAll('[data-kt-timeline-widget-4=\"tab\"]');\n\n        tabs.forEach(tab => {\n            tab.addEventListener('shown.bs.tab', e => {\n                // Week tab\n                if(tab.getAttribute('href') === '#kt_timeline_widget_4_tab_week'){\n                    initTimelineWeek();\n                }\n\n                // Month tab\n                if(tab.getAttribute('href') === '#kt_timeline_widget_4_tab_month'){\n                    initTimelineMonth();\n                }\n\n                // 2022 tab\n                if(tab.getAttribute('href') === '#kt_timeline_widget_4_tab_2022'){\n                    initTimeline2022();\n                }\n            });\n        });\n    }\n\n    // Handle avatar path conflict\n    const handleAvatarPath = () => {\n        const avatars = document.querySelectorAll('[data-kt-timeline-avatar-src]');\n\n        if(!avatars){\n            return;\n        }\n\n        avatars.forEach(avatar => {\n            avatar.setAttribute('src', avatar.getAttribute('data-kt-timeline-avatar-src'));\n            avatar.removeAttribute('data-kt-timeline-avatar-src');\n        });\n    }\n\n    // Public methods\n    return {\n        init: function () {\n            initTimelineDay();\n            handleBlockUI();\n            tabsVisibility();\n        }\n    }\n}();\n\n// Webpack support\nif (true) {\n    window.KTTimelineWidget4 = module.exports = KTTimelineWidget4;\n}\n\n\n//# sourceURL=webpack://keenthemes/../src/js/widgets/timeline/widget-4.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId](module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module is referenced by other modules so it can't be inlined
/******/ 	__webpack_require__("../src/js/widgets/timeline/widget-4.js");
/******/ 	__webpack_require__("../src/js/widgets/timeline/widget-2.js");
/******/ 	__webpack_require__("../src/js/widgets/timeline/widget-1.js");
/******/ 	__webpack_require__("../src/js/widgets/tables/widget-5.js");
/******/ 	__webpack_require__("../src/js/widgets/tables/widget-4.js");
/******/ 	__webpack_require__("../src/js/widgets/tables/widget-3.js");
/******/ 	__webpack_require__("../src/js/widgets/tables/widget-16.js");
/******/ 	__webpack_require__("../src/js/widgets/tables/widget-15.js");
/******/ 	__webpack_require__("../src/js/widgets/tables/widget-14.js");
/******/ 	__webpack_require__("../src/js/widgets/sliders/widget-7.js");
/******/ 	__webpack_require__("../src/js/widgets/sliders/widget-3.js");
/******/ 	__webpack_require__("../src/js/widgets/sliders/widget-1.js");
/******/ 	__webpack_require__("../src/js/widgets/players/widget-2.js");
/******/ 	__webpack_require__("../src/js/widgets/players/widget-1.js");
/******/ 	__webpack_require__("../src/js/widgets/maps/widget-2.js");
/******/ 	__webpack_require__("../src/js/widgets/maps/widget-1.js");
/******/ 	__webpack_require__("../src/js/widgets/lists/widget-24.js");
/******/ 	__webpack_require__("../src/js/widgets/forms/widget-1.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-9.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-8.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-7.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-6.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-5.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-48.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-47.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-46.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-45.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-44.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-43.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-42.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-41.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-40.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-4.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-39.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-38.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-37.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-36.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-35.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-34.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-33.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-32.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-31.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-30.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-3.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-29.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-28.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-27.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-26.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-25.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-24.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-23.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-22.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-21.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-20.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-2.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-19.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-18.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-17.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-16.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-15.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-14.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-13.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-12.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-11.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-10.js");
/******/ 	__webpack_require__("../src/js/widgets/charts/widget-1.js");
/******/ 	__webpack_require__("../src/js/widgets/cards/widget-9.js");
/******/ 	__webpack_require__("../src/js/widgets/cards/widget-8.js");
/******/ 	__webpack_require__("../src/js/widgets/cards/widget-6.js");
/******/ 	__webpack_require__("../src/js/widgets/cards/widget-4.js");
/******/ 	__webpack_require__("../src/js/widgets/cards/widget-19.js");
/******/ 	__webpack_require__("../src/js/widgets/cards/widget-17.js");
/******/ 	__webpack_require__("../src/js/widgets/cards/widget-13.js");
/******/ 	__webpack_require__("../src/js/widgets/cards/widget-12.js");
/******/ 	__webpack_require__("../src/js/widgets/cards/widget-10.js");
/******/ 	var __webpack_exports__ = __webpack_require__("../src/js/widgets/cards/widget-1.js");
/******/ 	
/******/ })()
;