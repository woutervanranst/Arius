@page "/edit-repository/{id:int}"
@using Arius.Web.Application
@using Arius.Web.Core
@inject RepositoryService RepositoryService
@inject NavigationManager Navigation

<h3>Edit Repository</h3>

<EditForm Model="repositoryOptions" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator/>
    <ValidationSummary/>

    <div class="form-group">
        <label for="path">Path</label>
        <InputText id="path" class="form-control" @bind-Value="repositoryOptions.Path"/>
    </div>

    <div class="form-group">
        <label for="accountName">Blob Account Name</label>
        <InputText id="accountName" class="form-control" @bind-Value="repositoryOptions.AccountName"/>
    </div>

    <div class="form-group">
        <label for="accountKey">Blob Account Key</label>
        <InputText id="accountKey" class="form-control" @bind-Value="repositoryOptions.AccountKey"/>
    </div>

    <div class="form-group">
        <label for="containerName">Blob Container Name</label>
        <InputText id="containerName" class="form-control" @bind-Value="repositoryOptions.ContainerName"/>
    </div>

    <div class="form-group">
        <label for="passphrase">Passphrase</label>
        <InputText id="passphrase" class="form-control" @bind-Value="repositoryOptions.Passphrase"/>
    </div>

    <div class="form-group">
        <label for="tier">Tier</label>
        <InputText id="tier" class="form-control" @bind-Value="repositoryOptions.Tier"/>
    </div>

    <div class="form-group">
        <label for="removeLocal">Remove Local</label>
        <InputCheckbox id="removeLocal" @bind-Value="repositoryOptions.RemoveLocal"/>
    </div>

    <div class="form-group">
        <label for="dedup">Dedup</label>
        <InputCheckbox id="dedup" @bind-Value="repositoryOptions.Dedup"/>
    </div>

    <div class="form-group">
        <label for="fastHash">Fast Hash</label>
        <InputCheckbox id="fastHash" @bind-Value="repositoryOptions.FastHash"/>
    </div>

    <button type="submit" class="btn btn-primary">Save</button>
</EditForm>

@code {
    private RepositoryOptions repositoryOptions = new();

    [Parameter] public int Id { get; set; }

    protected override async Task OnInitializedAsync()
    {
        repositoryOptions = await RepositoryService.GetRepositoryByIdAsync(Id);
    }

    private async Task HandleValidSubmit()
    {
        await RepositoryService.UpdateRepositoryAsync(repositoryOptions);
        Navigation.NavigateTo("/repositories");
    }
}