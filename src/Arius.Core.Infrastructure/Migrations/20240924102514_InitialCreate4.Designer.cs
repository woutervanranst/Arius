// <auto-generated />
using System;
using Arius.Core.Infrastructure.Repositories;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Arius.Core.Infrastructure.Migrations
{
    [DbContext(typeof(SqliteStateDatabaseContext))]
    [Migration("20240924102514_InitialCreate4")]
    partial class InitialCreate4
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.8");

            modelBuilder.Entity("Arius.Core.Infrastructure.Repositories.BinaryPropertiesDto", b =>
                {
                    b.Property<byte[]>("Hash")
                        .HasColumnType("BLOB");

                    b.Property<long>("ArchivedSize")
                        .HasColumnType("INTEGER");

                    b.Property<long>("OriginalSize")
                        .HasColumnType("INTEGER");

                    b.Property<int>("StorageTier")
                        .HasColumnType("INTEGER");

                    b.HasKey("Hash");

                    b.HasIndex("Hash")
                        .IsUnique();

                    b.ToTable("BinaryProperties", (string)null);
                });

            modelBuilder.Entity("Arius.Core.Infrastructure.Repositories.PointerFileEntryDto", b =>
                {
                    b.Property<byte[]>("Hash")
                        .HasColumnType("BLOB");

                    b.Property<string>("RelativeName")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("CreationTimeUtc")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("LastWriteTimeUtc")
                        .HasColumnType("TEXT");

                    b.HasKey("Hash", "RelativeName");

                    b.HasIndex("Hash");

                    b.HasIndex("RelativeName");

                    b.ToTable("PointerFileEntries", (string)null);
                });

            modelBuilder.Entity("Arius.Core.Infrastructure.Repositories.PointerFileEntryDto", b =>
                {
                    b.HasOne("Arius.Core.Infrastructure.Repositories.BinaryPropertiesDto", "BinaryProperties")
                        .WithMany("PointerFileEntries")
                        .HasForeignKey("Hash")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("BinaryProperties");
                });

            modelBuilder.Entity("Arius.Core.Infrastructure.Repositories.BinaryPropertiesDto", b =>
                {
                    b.Navigation("PointerFileEntries");
                });
#pragma warning restore 612, 618
        }
    }
}
