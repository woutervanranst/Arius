<Window x:Class="Arius.UI.Views.RepositoryExplorerWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Arius.UI"
        xmlns:utils="clr-namespace:Arius.UI.Utils"
        xmlns:componentModel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:views="clr-namespace:Arius.UI.Views"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="{Binding WindowName}" 
        Height="1024" Width="1280">

    <Window.Resources>
        <utils:BytesToReadableSizeConverter x:Key="BytesToReadableSizeConverter" />

        <!-- Center and right align ListView columns see https://learn.microsoft.com/en-us/dotnet/desktop/wpf/controls/how-to-change-the-horizontal-alignment-of-a-column-in-a-listview?view=netframeworkdesktop-4.8 -->
        <Style TargetType="ListViewItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
        </Style>

        <!--<CollectionViewSource x:Key="SortedItems" Source="{Binding SelectedFolder.Items}">
            <CollectionViewSource.SortDescriptions>
                <componentModel:SortDescription PropertyName="Name" Direction="Ascending"/>
            </CollectionViewSource.SortDescriptions>
        </CollectionViewSource>-->
    </Window.Resources>

    <!--IsLoading Indicator-->
    <Window.Style>
        <Style TargetType="{x:Type Window}">
            <Setter Property="Cursor" Value="Arrow"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding IsLoading}" Value="True">
                    <Setter Property="Cursor" Value="Wait"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Style>


    <Grid>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="430" />
            <ColumnDefinition Width="5" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <TreeView Grid.Column="0" ItemsSource="{Binding RootNode}" VirtualizingStackPanel.IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling">

            <TreeView.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel />
                </ItemsPanelTemplate>
            </TreeView.ItemsPanel>

            <TreeView.ItemTemplate>
                <HierarchicalDataTemplate DataType="{x:Type TreeViewItem}" ItemsSource="{Binding Folders}">
                    <!--the binding here are the child folders-->
                    <TextBlock Text="{Binding Path=Name}" />
                </HierarchicalDataTemplate>
            </TreeView.ItemTemplate>

            <TreeView.ItemContainerStyle>
                <Style TargetType="TreeViewItem">
                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                    <Setter Property="IsExpanded" Value="{Binding IsExpanded, Mode=TwoWay}"/>
                </Style>
            </TreeView.ItemContainerStyle>
        </TreeView>


        <GridSplitter Grid.Column="1" Width="5" HorizontalAlignment="Stretch" />


        <ListView Grid.Column="2" ItemsSource="{Binding SelectedFolder.Items}">
            <ListView.View>
                <GridView>

                    <!-- Column for Name -->
                    <GridViewColumn Header="Name" Width="300" DisplayMemberBinding="{Binding Name}" />

                    <!-- Column for ItemState (Image) -->
                    <GridViewColumn Header="Status" Width="50">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <views:StateCircle LeftOuterColor="{Binding PointerFileStateColor}" 
                                                   LeftInnerColor="{Binding BinaryFileStateColor}" 

                                                   RightOuterColor="{Binding PointerFileEntryStateColor}" 
                                                   RightInnerColor="{Binding ChunkStateColor}"
                                                   
                                                   ToolTip="{Binding StateTooltip}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Column for OriginalLength -->
                    <GridViewColumn Header="Size" Width="100">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock Text="{Binding OriginalLength, Converter={StaticResource BytesToReadableSizeConverter}}" HorizontalAlignment="Right"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                </GridView>
            </ListView.View>
        </ListView>
    </Grid>
</Window>
