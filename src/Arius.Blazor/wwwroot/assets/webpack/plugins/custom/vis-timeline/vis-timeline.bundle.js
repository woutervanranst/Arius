/*
 * ATTENTION: The "eval" devtool has been used (maybe by default in mode: "development").
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
/******/ (() => { // webpackBootstrap
/******/ 	var __webpack_modules__ = ({

/***/ "./node_modules/handlebars/dist/handlebars.js":
/*!****************************************************!*\
  !*** ./node_modules/handlebars/dist/handlebars.js ***!
  \****************************************************/
/***/ (function(module) {

eval("/**!\n\n @license\n handlebars v4.7.8\n\nCopyright (C) 2011-2019 by Yehuda Katz\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE.\n\n*/\n(function webpackUniversalModuleDefinition(root, factory) {\n\tif(true)\n\t\tmodule.exports = factory();\n\telse {}\n})(this, function() {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __nested_webpack_require_1638__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __nested_webpack_require_1638__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__nested_webpack_require_1638__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__nested_webpack_require_1638__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__nested_webpack_require_1638__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __nested_webpack_require_1638__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ (function(module, exports, __nested_webpack_require_2839__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_2839__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _handlebarsRuntime = __nested_webpack_require_2839__(2);\n\n\tvar _handlebarsRuntime2 = _interopRequireDefault(_handlebarsRuntime);\n\n\t// Compiler imports\n\n\tvar _handlebarsCompilerAst = __nested_webpack_require_2839__(84);\n\n\tvar _handlebarsCompilerAst2 = _interopRequireDefault(_handlebarsCompilerAst);\n\n\tvar _handlebarsCompilerBase = __nested_webpack_require_2839__(85);\n\n\tvar _handlebarsCompilerCompiler = __nested_webpack_require_2839__(90);\n\n\tvar _handlebarsCompilerJavascriptCompiler = __nested_webpack_require_2839__(91);\n\n\tvar _handlebarsCompilerJavascriptCompiler2 = _interopRequireDefault(_handlebarsCompilerJavascriptCompiler);\n\n\tvar _handlebarsCompilerVisitor = __nested_webpack_require_2839__(88);\n\n\tvar _handlebarsCompilerVisitor2 = _interopRequireDefault(_handlebarsCompilerVisitor);\n\n\tvar _handlebarsNoConflict = __nested_webpack_require_2839__(83);\n\n\tvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n\tvar _create = _handlebarsRuntime2['default'].create;\n\tfunction create() {\n\t  var hb = _create();\n\n\t  hb.compile = function (input, options) {\n\t    return _handlebarsCompilerCompiler.compile(input, options, hb);\n\t  };\n\t  hb.precompile = function (input, options) {\n\t    return _handlebarsCompilerCompiler.precompile(input, options, hb);\n\t  };\n\n\t  hb.AST = _handlebarsCompilerAst2['default'];\n\t  hb.Compiler = _handlebarsCompilerCompiler.Compiler;\n\t  hb.JavaScriptCompiler = _handlebarsCompilerJavascriptCompiler2['default'];\n\t  hb.Parser = _handlebarsCompilerBase.parser;\n\t  hb.parse = _handlebarsCompilerBase.parse;\n\t  hb.parseWithoutProcessing = _handlebarsCompilerBase.parseWithoutProcessing;\n\n\t  return hb;\n\t}\n\n\tvar inst = create();\n\tinst.create = create;\n\n\t_handlebarsNoConflict2['default'](inst);\n\n\tinst.Visitor = _handlebarsCompilerVisitor2['default'];\n\n\tinst['default'] = inst;\n\n\texports['default'] = inst;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 1 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\n\texports[\"default\"] = function (obj) {\n\t  return obj && obj.__esModule ? obj : {\n\t    \"default\": obj\n\t  };\n\t};\n\n\texports.__esModule = true;\n\n/***/ }),\n/* 2 */\n/***/ (function(module, exports, __nested_webpack_require_5051__) {\n\n\t'use strict';\n\n\tvar _interopRequireWildcard = __nested_webpack_require_5051__(3)['default'];\n\n\tvar _interopRequireDefault = __nested_webpack_require_5051__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _handlebarsBase = __nested_webpack_require_5051__(4);\n\n\tvar base = _interopRequireWildcard(_handlebarsBase);\n\n\t// Each of these augment the Handlebars object. No need to setup here.\n\t// (This is done to easily share code between commonjs and browse envs)\n\n\tvar _handlebarsSafeString = __nested_webpack_require_5051__(77);\n\n\tvar _handlebarsSafeString2 = _interopRequireDefault(_handlebarsSafeString);\n\n\tvar _handlebarsException = __nested_webpack_require_5051__(6);\n\n\tvar _handlebarsException2 = _interopRequireDefault(_handlebarsException);\n\n\tvar _handlebarsUtils = __nested_webpack_require_5051__(5);\n\n\tvar Utils = _interopRequireWildcard(_handlebarsUtils);\n\n\tvar _handlebarsRuntime = __nested_webpack_require_5051__(78);\n\n\tvar runtime = _interopRequireWildcard(_handlebarsRuntime);\n\n\tvar _handlebarsNoConflict = __nested_webpack_require_5051__(83);\n\n\tvar _handlebarsNoConflict2 = _interopRequireDefault(_handlebarsNoConflict);\n\n\t// For compatibility and usage outside of module systems, make the Handlebars object a namespace\n\tfunction create() {\n\t  var hb = new base.HandlebarsEnvironment();\n\n\t  Utils.extend(hb, base);\n\t  hb.SafeString = _handlebarsSafeString2['default'];\n\t  hb.Exception = _handlebarsException2['default'];\n\t  hb.Utils = Utils;\n\t  hb.escapeExpression = Utils.escapeExpression;\n\n\t  hb.VM = runtime;\n\t  hb.template = function (spec) {\n\t    return runtime.template(spec, hb);\n\t  };\n\n\t  return hb;\n\t}\n\n\tvar inst = create();\n\tinst.create = create;\n\n\t_handlebarsNoConflict2['default'](inst);\n\n\tinst['default'] = inst;\n\n\texports['default'] = inst;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 3 */\n/***/ (function(module, exports) {\n\n\t\"use strict\";\n\n\texports[\"default\"] = function (obj) {\n\t  if (obj && obj.__esModule) {\n\t    return obj;\n\t  } else {\n\t    var newObj = {};\n\n\t    if (obj != null) {\n\t      for (var key in obj) {\n\t        if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key];\n\t      }\n\t    }\n\n\t    newObj[\"default\"] = obj;\n\t    return newObj;\n\t  }\n\t};\n\n\texports.__esModule = true;\n\n/***/ }),\n/* 4 */\n/***/ (function(module, exports, __nested_webpack_require_7277__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_7277__(1)['default'];\n\n\texports.__esModule = true;\n\texports.HandlebarsEnvironment = HandlebarsEnvironment;\n\n\tvar _utils = __nested_webpack_require_7277__(5);\n\n\tvar _exception = __nested_webpack_require_7277__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _helpers = __nested_webpack_require_7277__(10);\n\n\tvar _decorators = __nested_webpack_require_7277__(70);\n\n\tvar _logger = __nested_webpack_require_7277__(72);\n\n\tvar _logger2 = _interopRequireDefault(_logger);\n\n\tvar _internalProtoAccess = __nested_webpack_require_7277__(73);\n\n\tvar VERSION = '4.7.8';\n\texports.VERSION = VERSION;\n\tvar COMPILER_REVISION = 8;\n\texports.COMPILER_REVISION = COMPILER_REVISION;\n\tvar LAST_COMPATIBLE_COMPILER_REVISION = 7;\n\n\texports.LAST_COMPATIBLE_COMPILER_REVISION = LAST_COMPATIBLE_COMPILER_REVISION;\n\tvar REVISION_CHANGES = {\n\t  1: '<= 1.0.rc.2', // 1.0.rc.2 is actually rev2 but doesn't report it\n\t  2: '== 1.0.0-rc.3',\n\t  3: '== 1.0.0-rc.4',\n\t  4: '== 1.x.x',\n\t  5: '== 2.0.0-alpha.x',\n\t  6: '>= 2.0.0-beta.1',\n\t  7: '>= 4.0.0 <4.3.0',\n\t  8: '>= 4.3.0'\n\t};\n\n\texports.REVISION_CHANGES = REVISION_CHANGES;\n\tvar objectType = '[object Object]';\n\n\tfunction HandlebarsEnvironment(helpers, partials, decorators) {\n\t  this.helpers = helpers || {};\n\t  this.partials = partials || {};\n\t  this.decorators = decorators || {};\n\n\t  _helpers.registerDefaultHelpers(this);\n\t  _decorators.registerDefaultDecorators(this);\n\t}\n\n\tHandlebarsEnvironment.prototype = {\n\t  constructor: HandlebarsEnvironment,\n\n\t  logger: _logger2['default'],\n\t  log: _logger2['default'].log,\n\n\t  registerHelper: function registerHelper(name, fn) {\n\t    if (_utils.toString.call(name) === objectType) {\n\t      if (fn) {\n\t        throw new _exception2['default']('Arg not supported with multiple helpers');\n\t      }\n\t      _utils.extend(this.helpers, name);\n\t    } else {\n\t      this.helpers[name] = fn;\n\t    }\n\t  },\n\t  unregisterHelper: function unregisterHelper(name) {\n\t    delete this.helpers[name];\n\t  },\n\n\t  registerPartial: function registerPartial(name, partial) {\n\t    if (_utils.toString.call(name) === objectType) {\n\t      _utils.extend(this.partials, name);\n\t    } else {\n\t      if (typeof partial === 'undefined') {\n\t        throw new _exception2['default']('Attempting to register a partial called \"' + name + '\" as undefined');\n\t      }\n\t      this.partials[name] = partial;\n\t    }\n\t  },\n\t  unregisterPartial: function unregisterPartial(name) {\n\t    delete this.partials[name];\n\t  },\n\n\t  registerDecorator: function registerDecorator(name, fn) {\n\t    if (_utils.toString.call(name) === objectType) {\n\t      if (fn) {\n\t        throw new _exception2['default']('Arg not supported with multiple decorators');\n\t      }\n\t      _utils.extend(this.decorators, name);\n\t    } else {\n\t      this.decorators[name] = fn;\n\t    }\n\t  },\n\t  unregisterDecorator: function unregisterDecorator(name) {\n\t    delete this.decorators[name];\n\t  },\n\t  /**\n\t   * Reset the memory of illegal property accesses that have already been logged.\n\t   * @deprecated should only be used in handlebars test-cases\n\t   */\n\t  resetLoggedPropertyAccesses: function resetLoggedPropertyAccesses() {\n\t    _internalProtoAccess.resetLoggedProperties();\n\t  }\n\t};\n\n\tvar log = _logger2['default'].log;\n\n\texports.log = log;\n\texports.createFrame = _utils.createFrame;\n\texports.logger = _logger2['default'];\n\n/***/ }),\n/* 5 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\texports.extend = extend;\n\texports.indexOf = indexOf;\n\texports.escapeExpression = escapeExpression;\n\texports.isEmpty = isEmpty;\n\texports.createFrame = createFrame;\n\texports.blockParams = blockParams;\n\texports.appendContextPath = appendContextPath;\n\tvar escape = {\n\t  '&': '&amp;',\n\t  '<': '&lt;',\n\t  '>': '&gt;',\n\t  '\"': '&quot;',\n\t  \"'\": '&#x27;',\n\t  '`': '&#x60;',\n\t  '=': '&#x3D;'\n\t};\n\n\tvar badChars = /[&<>\"'`=]/g,\n\t    possible = /[&<>\"'`=]/;\n\n\tfunction escapeChar(chr) {\n\t  return escape[chr];\n\t}\n\n\tfunction extend(obj /* , ...source */) {\n\t  for (var i = 1; i < arguments.length; i++) {\n\t    for (var key in arguments[i]) {\n\t      if (Object.prototype.hasOwnProperty.call(arguments[i], key)) {\n\t        obj[key] = arguments[i][key];\n\t      }\n\t    }\n\t  }\n\n\t  return obj;\n\t}\n\n\tvar toString = Object.prototype.toString;\n\n\texports.toString = toString;\n\t// Sourced from lodash\n\t// https://github.com/bestiejs/lodash/blob/master/LICENSE.txt\n\t/* eslint-disable func-style */\n\tvar isFunction = function isFunction(value) {\n\t  return typeof value === 'function';\n\t};\n\t// fallback for older versions of Chrome and Safari\n\t/* istanbul ignore next */\n\tif (isFunction(/x/)) {\n\t  exports.isFunction = isFunction = function (value) {\n\t    return typeof value === 'function' && toString.call(value) === '[object Function]';\n\t  };\n\t}\n\texports.isFunction = isFunction;\n\n\t/* eslint-enable func-style */\n\n\t/* istanbul ignore next */\n\tvar isArray = Array.isArray || function (value) {\n\t  return value && typeof value === 'object' ? toString.call(value) === '[object Array]' : false;\n\t};\n\n\texports.isArray = isArray;\n\t// Older IE versions do not directly support indexOf so we must implement our own, sadly.\n\n\tfunction indexOf(array, value) {\n\t  for (var i = 0, len = array.length; i < len; i++) {\n\t    if (array[i] === value) {\n\t      return i;\n\t    }\n\t  }\n\t  return -1;\n\t}\n\n\tfunction escapeExpression(string) {\n\t  if (typeof string !== 'string') {\n\t    // don't escape SafeStrings, since they're already safe\n\t    if (string && string.toHTML) {\n\t      return string.toHTML();\n\t    } else if (string == null) {\n\t      return '';\n\t    } else if (!string) {\n\t      return string + '';\n\t    }\n\n\t    // Force a string conversion as this will be done by the append regardless and\n\t    // the regex test will do this transparently behind the scenes, causing issues if\n\t    // an object's to string has escaped characters in it.\n\t    string = '' + string;\n\t  }\n\n\t  if (!possible.test(string)) {\n\t    return string;\n\t  }\n\t  return string.replace(badChars, escapeChar);\n\t}\n\n\tfunction isEmpty(value) {\n\t  if (!value && value !== 0) {\n\t    return true;\n\t  } else if (isArray(value) && value.length === 0) {\n\t    return true;\n\t  } else {\n\t    return false;\n\t  }\n\t}\n\n\tfunction createFrame(object) {\n\t  var frame = extend({}, object);\n\t  frame._parent = object;\n\t  return frame;\n\t}\n\n\tfunction blockParams(params, ids) {\n\t  params.path = ids;\n\t  return params;\n\t}\n\n\tfunction appendContextPath(contextPath, id) {\n\t  return (contextPath ? contextPath + '.' : '') + id;\n\t}\n\n/***/ }),\n/* 6 */\n/***/ (function(module, exports, __nested_webpack_require_13814__) {\n\n\t'use strict';\n\n\tvar _Object$defineProperty = __nested_webpack_require_13814__(7)['default'];\n\n\texports.__esModule = true;\n\tvar errorProps = ['description', 'fileName', 'lineNumber', 'endLineNumber', 'message', 'name', 'number', 'stack'];\n\n\tfunction Exception(message, node) {\n\t  var loc = node && node.loc,\n\t      line = undefined,\n\t      endLineNumber = undefined,\n\t      column = undefined,\n\t      endColumn = undefined;\n\n\t  if (loc) {\n\t    line = loc.start.line;\n\t    endLineNumber = loc.end.line;\n\t    column = loc.start.column;\n\t    endColumn = loc.end.column;\n\n\t    message += ' - ' + line + ':' + column;\n\t  }\n\n\t  var tmp = Error.prototype.constructor.call(this, message);\n\n\t  // Unfortunately errors are not enumerable in Chrome (at least), so `for prop in tmp` doesn't work.\n\t  for (var idx = 0; idx < errorProps.length; idx++) {\n\t    this[errorProps[idx]] = tmp[errorProps[idx]];\n\t  }\n\n\t  /* istanbul ignore else */\n\t  if (Error.captureStackTrace) {\n\t    Error.captureStackTrace(this, Exception);\n\t  }\n\n\t  try {\n\t    if (loc) {\n\t      this.lineNumber = line;\n\t      this.endLineNumber = endLineNumber;\n\n\t      // Work around issue under safari where we can't directly set the column value\n\t      /* istanbul ignore next */\n\t      if (_Object$defineProperty) {\n\t        Object.defineProperty(this, 'column', {\n\t          value: column,\n\t          enumerable: true\n\t        });\n\t        Object.defineProperty(this, 'endColumn', {\n\t          value: endColumn,\n\t          enumerable: true\n\t        });\n\t      } else {\n\t        this.column = column;\n\t        this.endColumn = endColumn;\n\t      }\n\t    }\n\t  } catch (nop) {\n\t    /* Ignore if the browser is very particular */\n\t  }\n\t}\n\n\tException.prototype = new Error();\n\n\texports['default'] = Exception;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 7 */\n/***/ (function(module, exports, __nested_webpack_require_15674__) {\n\n\tmodule.exports = { \"default\": __nested_webpack_require_15674__(8), __esModule: true };\n\n/***/ }),\n/* 8 */\n/***/ (function(module, exports, __nested_webpack_require_15825__) {\n\n\tvar $ = __nested_webpack_require_15825__(9);\n\tmodule.exports = function defineProperty(it, key, desc){\n\t  return $.setDesc(it, key, desc);\n\t};\n\n/***/ }),\n/* 9 */\n/***/ (function(module, exports) {\n\n\tvar $Object = Object;\n\tmodule.exports = {\n\t  create:     $Object.create,\n\t  getProto:   $Object.getPrototypeOf,\n\t  isEnum:     {}.propertyIsEnumerable,\n\t  getDesc:    $Object.getOwnPropertyDescriptor,\n\t  setDesc:    $Object.defineProperty,\n\t  setDescs:   $Object.defineProperties,\n\t  getKeys:    $Object.keys,\n\t  getNames:   $Object.getOwnPropertyNames,\n\t  getSymbols: $Object.getOwnPropertySymbols,\n\t  each:       [].forEach\n\t};\n\n/***/ }),\n/* 10 */\n/***/ (function(module, exports, __nested_webpack_require_16519__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_16519__(1)['default'];\n\n\texports.__esModule = true;\n\texports.registerDefaultHelpers = registerDefaultHelpers;\n\texports.moveHelperToHooks = moveHelperToHooks;\n\n\tvar _helpersBlockHelperMissing = __nested_webpack_require_16519__(11);\n\n\tvar _helpersBlockHelperMissing2 = _interopRequireDefault(_helpersBlockHelperMissing);\n\n\tvar _helpersEach = __nested_webpack_require_16519__(12);\n\n\tvar _helpersEach2 = _interopRequireDefault(_helpersEach);\n\n\tvar _helpersHelperMissing = __nested_webpack_require_16519__(65);\n\n\tvar _helpersHelperMissing2 = _interopRequireDefault(_helpersHelperMissing);\n\n\tvar _helpersIf = __nested_webpack_require_16519__(66);\n\n\tvar _helpersIf2 = _interopRequireDefault(_helpersIf);\n\n\tvar _helpersLog = __nested_webpack_require_16519__(67);\n\n\tvar _helpersLog2 = _interopRequireDefault(_helpersLog);\n\n\tvar _helpersLookup = __nested_webpack_require_16519__(68);\n\n\tvar _helpersLookup2 = _interopRequireDefault(_helpersLookup);\n\n\tvar _helpersWith = __nested_webpack_require_16519__(69);\n\n\tvar _helpersWith2 = _interopRequireDefault(_helpersWith);\n\n\tfunction registerDefaultHelpers(instance) {\n\t  _helpersBlockHelperMissing2['default'](instance);\n\t  _helpersEach2['default'](instance);\n\t  _helpersHelperMissing2['default'](instance);\n\t  _helpersIf2['default'](instance);\n\t  _helpersLog2['default'](instance);\n\t  _helpersLookup2['default'](instance);\n\t  _helpersWith2['default'](instance);\n\t}\n\n\tfunction moveHelperToHooks(instance, helperName, keepHelper) {\n\t  if (instance.helpers[helperName]) {\n\t    instance.hooks[helperName] = instance.helpers[helperName];\n\t    if (!keepHelper) {\n\t      delete instance.helpers[helperName];\n\t    }\n\t  }\n\t}\n\n/***/ }),\n/* 11 */\n/***/ (function(module, exports, __nested_webpack_require_18215__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __nested_webpack_require_18215__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('blockHelperMissing', function (context, options) {\n\t    var inverse = options.inverse,\n\t        fn = options.fn;\n\n\t    if (context === true) {\n\t      return fn(this);\n\t    } else if (context === false || context == null) {\n\t      return inverse(this);\n\t    } else if (_utils.isArray(context)) {\n\t      if (context.length > 0) {\n\t        if (options.ids) {\n\t          options.ids = [options.name];\n\t        }\n\n\t        return instance.helpers.each(context, options);\n\t      } else {\n\t        return inverse(this);\n\t      }\n\t    } else {\n\t      if (options.data && options.ids) {\n\t        var data = _utils.createFrame(options.data);\n\t        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.name);\n\t        options = { data: data };\n\t      }\n\n\t      return fn(context, options);\n\t    }\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 12 */\n/***/ (function(module, exports, __nested_webpack_require_19312__) {\n\n\t'use strict';\n\n\tvar _Symbol = __nested_webpack_require_19312__(13)['default'];\n\n\tvar _Symbol$iterator = __nested_webpack_require_19312__(43)['default'];\n\n\tvar _getIterator = __nested_webpack_require_19312__(55)['default'];\n\n\tvar _Object$keys = __nested_webpack_require_19312__(60)['default'];\n\n\tvar _interopRequireDefault = __nested_webpack_require_19312__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _utils = __nested_webpack_require_19312__(5);\n\n\tvar _exception = __nested_webpack_require_19312__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('each', function (context, options) {\n\t    if (!options) {\n\t      throw new _exception2['default']('Must pass iterator to #each');\n\t    }\n\n\t    var fn = options.fn,\n\t        inverse = options.inverse,\n\t        i = 0,\n\t        ret = '',\n\t        data = undefined,\n\t        contextPath = undefined;\n\n\t    if (options.data && options.ids) {\n\t      contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]) + '.';\n\t    }\n\n\t    if (_utils.isFunction(context)) {\n\t      context = context.call(this);\n\t    }\n\n\t    if (options.data) {\n\t      data = _utils.createFrame(options.data);\n\t    }\n\n\t    function execIteration(field, index, last) {\n\t      if (data) {\n\t        data.key = field;\n\t        data.index = index;\n\t        data.first = index === 0;\n\t        data.last = !!last;\n\n\t        if (contextPath) {\n\t          data.contextPath = contextPath + field;\n\t        }\n\t      }\n\n\t      ret = ret + fn(context[field], {\n\t        data: data,\n\t        blockParams: _utils.blockParams([context[field], field], [contextPath + field, null])\n\t      });\n\t    }\n\n\t    if (context && typeof context === 'object') {\n\t      if (_utils.isArray(context)) {\n\t        for (var j = context.length; i < j; i++) {\n\t          if (i in context) {\n\t            execIteration(i, i, i === context.length - 1);\n\t          }\n\t        }\n\t      } else if (typeof _Symbol === 'function' && context[_Symbol$iterator]) {\n\t        var newContext = [];\n\t        var iterator = _getIterator(context);\n\t        for (var it = iterator.next(); !it.done; it = iterator.next()) {\n\t          newContext.push(it.value);\n\t        }\n\t        context = newContext;\n\t        for (var j = context.length; i < j; i++) {\n\t          execIteration(i, i, i === context.length - 1);\n\t        }\n\t      } else {\n\t        (function () {\n\t          var priorKey = undefined;\n\n\t          _Object$keys(context).forEach(function (key) {\n\t            // We're running the iterations one step out of sync so we can detect\n\t            // the last iteration without have to scan the object twice and create\n\t            // an itermediate keys array.\n\t            if (priorKey !== undefined) {\n\t              execIteration(priorKey, i - 1);\n\t            }\n\t            priorKey = key;\n\t            i++;\n\t          });\n\t          if (priorKey !== undefined) {\n\t            execIteration(priorKey, i - 1, true);\n\t          }\n\t        })();\n\t      }\n\t    }\n\n\t    if (i === 0) {\n\t      ret = inverse(this);\n\t    }\n\n\t    return ret;\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 13 */\n/***/ (function(module, exports, __nested_webpack_require_22468__) {\n\n\tmodule.exports = { \"default\": __nested_webpack_require_22468__(14), __esModule: true };\n\n/***/ }),\n/* 14 */\n/***/ (function(module, exports, __nested_webpack_require_22621__) {\n\n\t__nested_webpack_require_22621__(15);\n\t__nested_webpack_require_22621__(42);\n\tmodule.exports = __nested_webpack_require_22621__(21).Symbol;\n\n/***/ }),\n/* 15 */\n/***/ (function(module, exports, __nested_webpack_require_22800__) {\n\n\t'use strict';\n\t// ECMAScript 6 symbols shim\n\tvar $              = __nested_webpack_require_22800__(9)\n\t  , global         = __nested_webpack_require_22800__(16)\n\t  , has            = __nested_webpack_require_22800__(17)\n\t  , DESCRIPTORS    = __nested_webpack_require_22800__(18)\n\t  , $export        = __nested_webpack_require_22800__(20)\n\t  , redefine       = __nested_webpack_require_22800__(24)\n\t  , $fails         = __nested_webpack_require_22800__(19)\n\t  , shared         = __nested_webpack_require_22800__(27)\n\t  , setToStringTag = __nested_webpack_require_22800__(28)\n\t  , uid            = __nested_webpack_require_22800__(30)\n\t  , wks            = __nested_webpack_require_22800__(29)\n\t  , keyOf          = __nested_webpack_require_22800__(31)\n\t  , $names         = __nested_webpack_require_22800__(36)\n\t  , enumKeys       = __nested_webpack_require_22800__(37)\n\t  , isArray        = __nested_webpack_require_22800__(38)\n\t  , anObject       = __nested_webpack_require_22800__(39)\n\t  , toIObject      = __nested_webpack_require_22800__(32)\n\t  , createDesc     = __nested_webpack_require_22800__(26)\n\t  , getDesc        = $.getDesc\n\t  , setDesc        = $.setDesc\n\t  , _create        = $.create\n\t  , getNames       = $names.get\n\t  , $Symbol        = global.Symbol\n\t  , $JSON          = global.JSON\n\t  , _stringify     = $JSON && $JSON.stringify\n\t  , setter         = false\n\t  , HIDDEN         = wks('_hidden')\n\t  , isEnum         = $.isEnum\n\t  , SymbolRegistry = shared('symbol-registry')\n\t  , AllSymbols     = shared('symbols')\n\t  , useNative      = typeof $Symbol == 'function'\n\t  , ObjectProto    = Object.prototype;\n\n\t// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\n\tvar setSymbolDesc = DESCRIPTORS && $fails(function(){\n\t  return _create(setDesc({}, 'a', {\n\t    get: function(){ return setDesc(this, 'a', {value: 7}).a; }\n\t  })).a != 7;\n\t}) ? function(it, key, D){\n\t  var protoDesc = getDesc(ObjectProto, key);\n\t  if(protoDesc)delete ObjectProto[key];\n\t  setDesc(it, key, D);\n\t  if(protoDesc && it !== ObjectProto)setDesc(ObjectProto, key, protoDesc);\n\t} : setDesc;\n\n\tvar wrap = function(tag){\n\t  var sym = AllSymbols[tag] = _create($Symbol.prototype);\n\t  sym._k = tag;\n\t  DESCRIPTORS && setter && setSymbolDesc(ObjectProto, tag, {\n\t    configurable: true,\n\t    set: function(value){\n\t      if(has(this, HIDDEN) && has(this[HIDDEN], tag))this[HIDDEN][tag] = false;\n\t      setSymbolDesc(this, tag, createDesc(1, value));\n\t    }\n\t  });\n\t  return sym;\n\t};\n\n\tvar isSymbol = function(it){\n\t  return typeof it == 'symbol';\n\t};\n\n\tvar $defineProperty = function defineProperty(it, key, D){\n\t  if(D && has(AllSymbols, key)){\n\t    if(!D.enumerable){\n\t      if(!has(it, HIDDEN))setDesc(it, HIDDEN, createDesc(1, {}));\n\t      it[HIDDEN][key] = true;\n\t    } else {\n\t      if(has(it, HIDDEN) && it[HIDDEN][key])it[HIDDEN][key] = false;\n\t      D = _create(D, {enumerable: createDesc(0, false)});\n\t    } return setSymbolDesc(it, key, D);\n\t  } return setDesc(it, key, D);\n\t};\n\tvar $defineProperties = function defineProperties(it, P){\n\t  anObject(it);\n\t  var keys = enumKeys(P = toIObject(P))\n\t    , i    = 0\n\t    , l = keys.length\n\t    , key;\n\t  while(l > i)$defineProperty(it, key = keys[i++], P[key]);\n\t  return it;\n\t};\n\tvar $create = function create(it, P){\n\t  return P === undefined ? _create(it) : $defineProperties(_create(it), P);\n\t};\n\tvar $propertyIsEnumerable = function propertyIsEnumerable(key){\n\t  var E = isEnum.call(this, key);\n\t  return E || !has(this, key) || !has(AllSymbols, key) || has(this, HIDDEN) && this[HIDDEN][key]\n\t    ? E : true;\n\t};\n\tvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(it, key){\n\t  var D = getDesc(it = toIObject(it), key);\n\t  if(D && has(AllSymbols, key) && !(has(it, HIDDEN) && it[HIDDEN][key]))D.enumerable = true;\n\t  return D;\n\t};\n\tvar $getOwnPropertyNames = function getOwnPropertyNames(it){\n\t  var names  = getNames(toIObject(it))\n\t    , result = []\n\t    , i      = 0\n\t    , key;\n\t  while(names.length > i)if(!has(AllSymbols, key = names[i++]) && key != HIDDEN)result.push(key);\n\t  return result;\n\t};\n\tvar $getOwnPropertySymbols = function getOwnPropertySymbols(it){\n\t  var names  = getNames(toIObject(it))\n\t    , result = []\n\t    , i      = 0\n\t    , key;\n\t  while(names.length > i)if(has(AllSymbols, key = names[i++]))result.push(AllSymbols[key]);\n\t  return result;\n\t};\n\tvar $stringify = function stringify(it){\n\t  if(it === undefined || isSymbol(it))return; // IE8 returns string on undefined\n\t  var args = [it]\n\t    , i    = 1\n\t    , $$   = arguments\n\t    , replacer, $replacer;\n\t  while($$.length > i)args.push($$[i++]);\n\t  replacer = args[1];\n\t  if(typeof replacer == 'function')$replacer = replacer;\n\t  if($replacer || !isArray(replacer))replacer = function(key, value){\n\t    if($replacer)value = $replacer.call(this, key, value);\n\t    if(!isSymbol(value))return value;\n\t  };\n\t  args[1] = replacer;\n\t  return _stringify.apply($JSON, args);\n\t};\n\tvar buggyJSON = $fails(function(){\n\t  var S = $Symbol();\n\t  // MS Edge converts symbol values to JSON as {}\n\t  // WebKit converts symbol values to JSON as null\n\t  // V8 throws on boxed symbols\n\t  return _stringify([S]) != '[null]' || _stringify({a: S}) != '{}' || _stringify(Object(S)) != '{}';\n\t});\n\n\t// 19.4.1.1 Symbol([description])\n\tif(!useNative){\n\t  $Symbol = function Symbol(){\n\t    if(isSymbol(this))throw TypeError('Symbol is not a constructor');\n\t    return wrap(uid(arguments.length > 0 ? arguments[0] : undefined));\n\t  };\n\t  redefine($Symbol.prototype, 'toString', function toString(){\n\t    return this._k;\n\t  });\n\n\t  isSymbol = function(it){\n\t    return it instanceof $Symbol;\n\t  };\n\n\t  $.create     = $create;\n\t  $.isEnum     = $propertyIsEnumerable;\n\t  $.getDesc    = $getOwnPropertyDescriptor;\n\t  $.setDesc    = $defineProperty;\n\t  $.setDescs   = $defineProperties;\n\t  $.getNames   = $names.get = $getOwnPropertyNames;\n\t  $.getSymbols = $getOwnPropertySymbols;\n\n\t  if(DESCRIPTORS && !__nested_webpack_require_22800__(41)){\n\t    redefine(ObjectProto, 'propertyIsEnumerable', $propertyIsEnumerable, true);\n\t  }\n\t}\n\n\tvar symbolStatics = {\n\t  // 19.4.2.1 Symbol.for(key)\n\t  'for': function(key){\n\t    return has(SymbolRegistry, key += '')\n\t      ? SymbolRegistry[key]\n\t      : SymbolRegistry[key] = $Symbol(key);\n\t  },\n\t  // 19.4.2.5 Symbol.keyFor(sym)\n\t  keyFor: function keyFor(key){\n\t    return keyOf(SymbolRegistry, key);\n\t  },\n\t  useSetter: function(){ setter = true; },\n\t  useSimple: function(){ setter = false; }\n\t};\n\t// 19.4.2.2 Symbol.hasInstance\n\t// 19.4.2.3 Symbol.isConcatSpreadable\n\t// 19.4.2.4 Symbol.iterator\n\t// 19.4.2.6 Symbol.match\n\t// 19.4.2.8 Symbol.replace\n\t// 19.4.2.9 Symbol.search\n\t// 19.4.2.10 Symbol.species\n\t// 19.4.2.11 Symbol.split\n\t// 19.4.2.12 Symbol.toPrimitive\n\t// 19.4.2.13 Symbol.toStringTag\n\t// 19.4.2.14 Symbol.unscopables\n\t$.each.call((\n\t  'hasInstance,isConcatSpreadable,iterator,match,replace,search,' +\n\t  'species,split,toPrimitive,toStringTag,unscopables'\n\t).split(','), function(it){\n\t  var sym = wks(it);\n\t  symbolStatics[it] = useNative ? sym : wrap(sym);\n\t});\n\n\tsetter = true;\n\n\t$export($export.G + $export.W, {Symbol: $Symbol});\n\n\t$export($export.S, 'Symbol', symbolStatics);\n\n\t$export($export.S + $export.F * !useNative, 'Object', {\n\t  // 19.1.2.2 Object.create(O [, Properties])\n\t  create: $create,\n\t  // 19.1.2.4 Object.defineProperty(O, P, Attributes)\n\t  defineProperty: $defineProperty,\n\t  // 19.1.2.3 Object.defineProperties(O, Properties)\n\t  defineProperties: $defineProperties,\n\t  // 19.1.2.6 Object.getOwnPropertyDescriptor(O, P)\n\t  getOwnPropertyDescriptor: $getOwnPropertyDescriptor,\n\t  // 19.1.2.7 Object.getOwnPropertyNames(O)\n\t  getOwnPropertyNames: $getOwnPropertyNames,\n\t  // 19.1.2.8 Object.getOwnPropertySymbols(O)\n\t  getOwnPropertySymbols: $getOwnPropertySymbols\n\t});\n\n\t// 24.3.2 JSON.stringify(value [, replacer [, space]])\n\t$JSON && $export($export.S + $export.F * (!useNative || buggyJSON), 'JSON', {stringify: $stringify});\n\n\t// 19.4.3.5 Symbol.prototype[@@toStringTag]\n\tsetToStringTag($Symbol, 'Symbol');\n\t// 20.2.1.9 Math[@@toStringTag]\n\tsetToStringTag(Math, 'Math', true);\n\t// 24.3.3 JSON[@@toStringTag]\n\tsetToStringTag(global.JSON, 'JSON', true);\n\n/***/ }),\n/* 16 */\n/***/ (function(module, exports) {\n\n\t// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\n\tvar global = module.exports = typeof window != 'undefined' && window.Math == Math\n\t  ? window : typeof self != 'undefined' && self.Math == Math ? self : Function('return this')();\n\tif(typeof __g == 'number')__g = global; // eslint-disable-line no-undef\n\n/***/ }),\n/* 17 */\n/***/ (function(module, exports) {\n\n\tvar hasOwnProperty = {}.hasOwnProperty;\n\tmodule.exports = function(it, key){\n\t  return hasOwnProperty.call(it, key);\n\t};\n\n/***/ }),\n/* 18 */\n/***/ (function(module, exports, __nested_webpack_require_31367__) {\n\n\t// Thank's IE8 for his funny defineProperty\n\tmodule.exports = !__nested_webpack_require_31367__(19)(function(){\n\t  return Object.defineProperty({}, 'a', {get: function(){ return 7; }}).a != 7;\n\t});\n\n/***/ }),\n/* 19 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(exec){\n\t  try {\n\t    return !!exec();\n\t  } catch(e){\n\t    return true;\n\t  }\n\t};\n\n/***/ }),\n/* 20 */\n/***/ (function(module, exports, __nested_webpack_require_31793__) {\n\n\tvar global    = __nested_webpack_require_31793__(16)\n\t  , core      = __nested_webpack_require_31793__(21)\n\t  , ctx       = __nested_webpack_require_31793__(22)\n\t  , PROTOTYPE = 'prototype';\n\n\tvar $export = function(type, name, source){\n\t  var IS_FORCED = type & $export.F\n\t    , IS_GLOBAL = type & $export.G\n\t    , IS_STATIC = type & $export.S\n\t    , IS_PROTO  = type & $export.P\n\t    , IS_BIND   = type & $export.B\n\t    , IS_WRAP   = type & $export.W\n\t    , exports   = IS_GLOBAL ? core : core[name] || (core[name] = {})\n\t    , target    = IS_GLOBAL ? global : IS_STATIC ? global[name] : (global[name] || {})[PROTOTYPE]\n\t    , key, own, out;\n\t  if(IS_GLOBAL)source = name;\n\t  for(key in source){\n\t    // contains in native\n\t    own = !IS_FORCED && target && key in target;\n\t    if(own && key in exports)continue;\n\t    // export native or passed\n\t    out = own ? target[key] : source[key];\n\t    // prevent global pollution for namespaces\n\t    exports[key] = IS_GLOBAL && typeof target[key] != 'function' ? source[key]\n\t    // bind timers to global for call from export context\n\t    : IS_BIND && own ? ctx(out, global)\n\t    // wrap global constructors for prevent change them in library\n\t    : IS_WRAP && target[key] == out ? (function(C){\n\t      var F = function(param){\n\t        return this instanceof C ? new C(param) : C(param);\n\t      };\n\t      F[PROTOTYPE] = C[PROTOTYPE];\n\t      return F;\n\t    // make static versions for prototype methods\n\t    })(out) : IS_PROTO && typeof out == 'function' ? ctx(Function.call, out) : out;\n\t    if(IS_PROTO)(exports[PROTOTYPE] || (exports[PROTOTYPE] = {}))[key] = out;\n\t  }\n\t};\n\t// type bitmap\n\t$export.F = 1;  // forced\n\t$export.G = 2;  // global\n\t$export.S = 4;  // static\n\t$export.P = 8;  // proto\n\t$export.B = 16; // bind\n\t$export.W = 32; // wrap\n\tmodule.exports = $export;\n\n/***/ }),\n/* 21 */\n/***/ (function(module, exports) {\n\n\tvar core = module.exports = {version: '1.2.6'};\n\tif(typeof __e == 'number')__e = core; // eslint-disable-line no-undef\n\n/***/ }),\n/* 22 */\n/***/ (function(module, exports, __nested_webpack_require_33828__) {\n\n\t// optional / simple context binding\n\tvar aFunction = __nested_webpack_require_33828__(23);\n\tmodule.exports = function(fn, that, length){\n\t  aFunction(fn);\n\t  if(that === undefined)return fn;\n\t  switch(length){\n\t    case 1: return function(a){\n\t      return fn.call(that, a);\n\t    };\n\t    case 2: return function(a, b){\n\t      return fn.call(that, a, b);\n\t    };\n\t    case 3: return function(a, b, c){\n\t      return fn.call(that, a, b, c);\n\t    };\n\t  }\n\t  return function(/* ...args */){\n\t    return fn.apply(that, arguments);\n\t  };\n\t};\n\n/***/ }),\n/* 23 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  if(typeof it != 'function')throw TypeError(it + ' is not a function!');\n\t  return it;\n\t};\n\n/***/ }),\n/* 24 */\n/***/ (function(module, exports, __nested_webpack_require_34611__) {\n\n\tmodule.exports = __nested_webpack_require_34611__(25);\n\n/***/ }),\n/* 25 */\n/***/ (function(module, exports, __nested_webpack_require_34731__) {\n\n\tvar $          = __nested_webpack_require_34731__(9)\n\t  , createDesc = __nested_webpack_require_34731__(26);\n\tmodule.exports = __nested_webpack_require_34731__(18) ? function(object, key, value){\n\t  return $.setDesc(object, key, createDesc(1, value));\n\t} : function(object, key, value){\n\t  object[key] = value;\n\t  return object;\n\t};\n\n/***/ }),\n/* 26 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(bitmap, value){\n\t  return {\n\t    enumerable  : !(bitmap & 1),\n\t    configurable: !(bitmap & 2),\n\t    writable    : !(bitmap & 4),\n\t    value       : value\n\t  };\n\t};\n\n/***/ }),\n/* 27 */\n/***/ (function(module, exports, __nested_webpack_require_35351__) {\n\n\tvar global = __nested_webpack_require_35351__(16)\n\t  , SHARED = '__core-js_shared__'\n\t  , store  = global[SHARED] || (global[SHARED] = {});\n\tmodule.exports = function(key){\n\t  return store[key] || (store[key] = {});\n\t};\n\n/***/ }),\n/* 28 */\n/***/ (function(module, exports, __nested_webpack_require_35636__) {\n\n\tvar def = __nested_webpack_require_35636__(9).setDesc\n\t  , has = __nested_webpack_require_35636__(17)\n\t  , TAG = __nested_webpack_require_35636__(29)('toStringTag');\n\n\tmodule.exports = function(it, tag, stat){\n\t  if(it && !has(it = stat ? it : it.prototype, TAG))def(it, TAG, {configurable: true, value: tag});\n\t};\n\n/***/ }),\n/* 29 */\n/***/ (function(module, exports, __nested_webpack_require_35990__) {\n\n\tvar store  = __nested_webpack_require_35990__(27)('wks')\n\t  , uid    = __nested_webpack_require_35990__(30)\n\t  , Symbol = __nested_webpack_require_35990__(16).Symbol;\n\tmodule.exports = function(name){\n\t  return store[name] || (store[name] =\n\t    Symbol && Symbol[name] || (Symbol || uid)('Symbol.' + name));\n\t};\n\n/***/ }),\n/* 30 */\n/***/ (function(module, exports) {\n\n\tvar id = 0\n\t  , px = Math.random();\n\tmodule.exports = function(key){\n\t  return 'Symbol('.concat(key === undefined ? '' : key, ')_', (++id + px).toString(36));\n\t};\n\n/***/ }),\n/* 31 */\n/***/ (function(module, exports, __nested_webpack_require_36561__) {\n\n\tvar $         = __nested_webpack_require_36561__(9)\n\t  , toIObject = __nested_webpack_require_36561__(32);\n\tmodule.exports = function(object, el){\n\t  var O      = toIObject(object)\n\t    , keys   = $.getKeys(O)\n\t    , length = keys.length\n\t    , index  = 0\n\t    , key;\n\t  while(length > index)if(O[key = keys[index++]] === el)return key;\n\t};\n\n/***/ }),\n/* 32 */\n/***/ (function(module, exports, __nested_webpack_require_36954__) {\n\n\t// to indexed object, toObject with fallback for non-array-like ES3 strings\n\tvar IObject = __nested_webpack_require_36954__(33)\n\t  , defined = __nested_webpack_require_36954__(35);\n\tmodule.exports = function(it){\n\t  return IObject(defined(it));\n\t};\n\n/***/ }),\n/* 33 */\n/***/ (function(module, exports, __nested_webpack_require_37255__) {\n\n\t// fallback for non-array-like ES3 and non-enumerable old V8 strings\n\tvar cof = __nested_webpack_require_37255__(34);\n\tmodule.exports = Object('z').propertyIsEnumerable(0) ? Object : function(it){\n\t  return cof(it) == 'String' ? it.split('') : Object(it);\n\t};\n\n/***/ }),\n/* 34 */\n/***/ (function(module, exports) {\n\n\tvar toString = {}.toString;\n\n\tmodule.exports = function(it){\n\t  return toString.call(it).slice(8, -1);\n\t};\n\n/***/ }),\n/* 35 */\n/***/ (function(module, exports) {\n\n\t// 7.2.1 RequireObjectCoercible(argument)\n\tmodule.exports = function(it){\n\t  if(it == undefined)throw TypeError(\"Can't call method on  \" + it);\n\t  return it;\n\t};\n\n/***/ }),\n/* 36 */\n/***/ (function(module, exports, __nested_webpack_require_37963__) {\n\n\t// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\n\tvar toIObject = __nested_webpack_require_37963__(32)\n\t  , getNames  = __nested_webpack_require_37963__(9).getNames\n\t  , toString  = {}.toString;\n\n\tvar windowNames = typeof window == 'object' && Object.getOwnPropertyNames\n\t  ? Object.getOwnPropertyNames(window) : [];\n\n\tvar getWindowNames = function(it){\n\t  try {\n\t    return getNames(it);\n\t  } catch(e){\n\t    return windowNames.slice();\n\t  }\n\t};\n\n\tmodule.exports.get = function getOwnPropertyNames(it){\n\t  if(windowNames && toString.call(it) == '[object Window]')return getWindowNames(it);\n\t  return getNames(toIObject(it));\n\t};\n\n/***/ }),\n/* 37 */\n/***/ (function(module, exports, __nested_webpack_require_38672__) {\n\n\t// all enumerable object keys, includes symbols\n\tvar $ = __nested_webpack_require_38672__(9);\n\tmodule.exports = function(it){\n\t  var keys       = $.getKeys(it)\n\t    , getSymbols = $.getSymbols;\n\t  if(getSymbols){\n\t    var symbols = getSymbols(it)\n\t      , isEnum  = $.isEnum\n\t      , i       = 0\n\t      , key;\n\t    while(symbols.length > i)if(isEnum.call(it, key = symbols[i++]))keys.push(key);\n\t  }\n\t  return keys;\n\t};\n\n/***/ }),\n/* 38 */\n/***/ (function(module, exports, __nested_webpack_require_39157__) {\n\n\t// 7.2.2 IsArray(argument)\n\tvar cof = __nested_webpack_require_39157__(34);\n\tmodule.exports = Array.isArray || function(arg){\n\t  return cof(arg) == 'Array';\n\t};\n\n/***/ }),\n/* 39 */\n/***/ (function(module, exports, __nested_webpack_require_39383__) {\n\n\tvar isObject = __nested_webpack_require_39383__(40);\n\tmodule.exports = function(it){\n\t  if(!isObject(it))throw TypeError(it + ' is not an object!');\n\t  return it;\n\t};\n\n/***/ }),\n/* 40 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(it){\n\t  return typeof it === 'object' ? it !== null : typeof it === 'function';\n\t};\n\n/***/ }),\n/* 41 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = true;\n\n/***/ }),\n/* 42 */\n/***/ (function(module, exports) {\n\n\t\n\n/***/ }),\n/* 43 */\n/***/ (function(module, exports, __nested_webpack_require_39920__) {\n\n\tmodule.exports = { \"default\": __nested_webpack_require_39920__(44), __esModule: true };\n\n/***/ }),\n/* 44 */\n/***/ (function(module, exports, __nested_webpack_require_40073__) {\n\n\t__nested_webpack_require_40073__(45);\n\t__nested_webpack_require_40073__(51);\n\tmodule.exports = __nested_webpack_require_40073__(29)('iterator');\n\n/***/ }),\n/* 45 */\n/***/ (function(module, exports, __nested_webpack_require_40257__) {\n\n\t'use strict';\n\tvar $at  = __nested_webpack_require_40257__(46)(true);\n\n\t// 21.1.3.27 String.prototype[@@iterator]()\n\t__nested_webpack_require_40257__(48)(String, 'String', function(iterated){\n\t  this._t = String(iterated); // target\n\t  this._i = 0;                // next index\n\t// 21.1.5.2.1 %StringIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , index = this._i\n\t    , point;\n\t  if(index >= O.length)return {value: undefined, done: true};\n\t  point = $at(O, index);\n\t  this._i += point.length;\n\t  return {value: point, done: false};\n\t});\n\n/***/ }),\n/* 46 */\n/***/ (function(module, exports, __nested_webpack_require_40872__) {\n\n\tvar toInteger = __nested_webpack_require_40872__(47)\n\t  , defined   = __nested_webpack_require_40872__(35);\n\t// true  -> String#at\n\t// false -> String#codePointAt\n\tmodule.exports = function(TO_STRING){\n\t  return function(that, pos){\n\t    var s = String(defined(that))\n\t      , i = toInteger(pos)\n\t      , l = s.length\n\t      , a, b;\n\t    if(i < 0 || i >= l)return TO_STRING ? '' : undefined;\n\t    a = s.charCodeAt(i);\n\t    return a < 0xd800 || a > 0xdbff || i + 1 === l || (b = s.charCodeAt(i + 1)) < 0xdc00 || b > 0xdfff\n\t      ? TO_STRING ? s.charAt(i) : a\n\t      : TO_STRING ? s.slice(i, i + 2) : (a - 0xd800 << 10) + (b - 0xdc00) + 0x10000;\n\t  };\n\t};\n\n/***/ }),\n/* 47 */\n/***/ (function(module, exports) {\n\n\t// 7.1.4 ToInteger\n\tvar ceil  = Math.ceil\n\t  , floor = Math.floor;\n\tmodule.exports = function(it){\n\t  return isNaN(it = +it) ? 0 : (it > 0 ? floor : ceil)(it);\n\t};\n\n/***/ }),\n/* 48 */\n/***/ (function(module, exports, __nested_webpack_require_41800__) {\n\n\t'use strict';\n\tvar LIBRARY        = __nested_webpack_require_41800__(41)\n\t  , $export        = __nested_webpack_require_41800__(20)\n\t  , redefine       = __nested_webpack_require_41800__(24)\n\t  , hide           = __nested_webpack_require_41800__(25)\n\t  , has            = __nested_webpack_require_41800__(17)\n\t  , Iterators      = __nested_webpack_require_41800__(49)\n\t  , $iterCreate    = __nested_webpack_require_41800__(50)\n\t  , setToStringTag = __nested_webpack_require_41800__(28)\n\t  , getProto       = __nested_webpack_require_41800__(9).getProto\n\t  , ITERATOR       = __nested_webpack_require_41800__(29)('iterator')\n\t  , BUGGY          = !([].keys && 'next' in [].keys()) // Safari has buggy iterators w/o `next`\n\t  , FF_ITERATOR    = '@@iterator'\n\t  , KEYS           = 'keys'\n\t  , VALUES         = 'values';\n\n\tvar returnThis = function(){ return this; };\n\n\tmodule.exports = function(Base, NAME, Constructor, next, DEFAULT, IS_SET, FORCED){\n\t  $iterCreate(Constructor, NAME, next);\n\t  var getMethod = function(kind){\n\t    if(!BUGGY && kind in proto)return proto[kind];\n\t    switch(kind){\n\t      case KEYS: return function keys(){ return new Constructor(this, kind); };\n\t      case VALUES: return function values(){ return new Constructor(this, kind); };\n\t    } return function entries(){ return new Constructor(this, kind); };\n\t  };\n\t  var TAG        = NAME + ' Iterator'\n\t    , DEF_VALUES = DEFAULT == VALUES\n\t    , VALUES_BUG = false\n\t    , proto      = Base.prototype\n\t    , $native    = proto[ITERATOR] || proto[FF_ITERATOR] || DEFAULT && proto[DEFAULT]\n\t    , $default   = $native || getMethod(DEFAULT)\n\t    , methods, key;\n\t  // Fix native\n\t  if($native){\n\t    var IteratorPrototype = getProto($default.call(new Base));\n\t    // Set @@toStringTag to native iterators\n\t    setToStringTag(IteratorPrototype, TAG, true);\n\t    // FF fix\n\t    if(!LIBRARY && has(proto, FF_ITERATOR))hide(IteratorPrototype, ITERATOR, returnThis);\n\t    // fix Array#{values, @@iterator}.name in V8 / FF\n\t    if(DEF_VALUES && $native.name !== VALUES){\n\t      VALUES_BUG = true;\n\t      $default = function values(){ return $native.call(this); };\n\t    }\n\t  }\n\t  // Define iterator\n\t  if((!LIBRARY || FORCED) && (BUGGY || VALUES_BUG || !proto[ITERATOR])){\n\t    hide(proto, ITERATOR, $default);\n\t  }\n\t  // Plug for library\n\t  Iterators[NAME] = $default;\n\t  Iterators[TAG]  = returnThis;\n\t  if(DEFAULT){\n\t    methods = {\n\t      values:  DEF_VALUES  ? $default : getMethod(VALUES),\n\t      keys:    IS_SET      ? $default : getMethod(KEYS),\n\t      entries: !DEF_VALUES ? $default : getMethod('entries')\n\t    };\n\t    if(FORCED)for(key in methods){\n\t      if(!(key in proto))redefine(proto, key, methods[key]);\n\t    } else $export($export.P + $export.F * (BUGGY || VALUES_BUG), NAME, methods);\n\t  }\n\t  return methods;\n\t};\n\n/***/ }),\n/* 49 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = {};\n\n/***/ }),\n/* 50 */\n/***/ (function(module, exports, __nested_webpack_require_44627__) {\n\n\t'use strict';\n\tvar $              = __nested_webpack_require_44627__(9)\n\t  , descriptor     = __nested_webpack_require_44627__(26)\n\t  , setToStringTag = __nested_webpack_require_44627__(28)\n\t  , IteratorPrototype = {};\n\n\t// 25.1.2.1.1 %IteratorPrototype%[@@iterator]()\n\t__nested_webpack_require_44627__(25)(IteratorPrototype, __nested_webpack_require_44627__(29)('iterator'), function(){ return this; });\n\n\tmodule.exports = function(Constructor, NAME, next){\n\t  Constructor.prototype = $.create(IteratorPrototype, {next: descriptor(1, next)});\n\t  setToStringTag(Constructor, NAME + ' Iterator');\n\t};\n\n/***/ }),\n/* 51 */\n/***/ (function(module, exports, __nested_webpack_require_45240__) {\n\n\t__nested_webpack_require_45240__(52);\n\tvar Iterators = __nested_webpack_require_45240__(49);\n\tIterators.NodeList = Iterators.HTMLCollection = Iterators.Array;\n\n/***/ }),\n/* 52 */\n/***/ (function(module, exports, __nested_webpack_require_45451__) {\n\n\t'use strict';\n\tvar addToUnscopables = __nested_webpack_require_45451__(53)\n\t  , step             = __nested_webpack_require_45451__(54)\n\t  , Iterators        = __nested_webpack_require_45451__(49)\n\t  , toIObject        = __nested_webpack_require_45451__(32);\n\n\t// 22.1.3.4 Array.prototype.entries()\n\t// 22.1.3.13 Array.prototype.keys()\n\t// 22.1.3.29 Array.prototype.values()\n\t// 22.1.3.30 Array.prototype[@@iterator]()\n\tmodule.exports = __nested_webpack_require_45451__(48)(Array, 'Array', function(iterated, kind){\n\t  this._t = toIObject(iterated); // target\n\t  this._i = 0;                   // next index\n\t  this._k = kind;                // kind\n\t// 22.1.5.2.1 %ArrayIteratorPrototype%.next()\n\t}, function(){\n\t  var O     = this._t\n\t    , kind  = this._k\n\t    , index = this._i++;\n\t  if(!O || index >= O.length){\n\t    this._t = undefined;\n\t    return step(1);\n\t  }\n\t  if(kind == 'keys'  )return step(0, index);\n\t  if(kind == 'values')return step(0, O[index]);\n\t  return step(0, [index, O[index]]);\n\t}, 'values');\n\n\t// argumentsList[@@iterator] is %ArrayProto_values% (9.4.4.6, 9.4.4.7)\n\tIterators.Arguments = Iterators.Array;\n\n\taddToUnscopables('keys');\n\taddToUnscopables('values');\n\taddToUnscopables('entries');\n\n/***/ }),\n/* 53 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(){ /* empty */ };\n\n/***/ }),\n/* 54 */\n/***/ (function(module, exports) {\n\n\tmodule.exports = function(done, value){\n\t  return {value: value, done: !!done};\n\t};\n\n/***/ }),\n/* 55 */\n/***/ (function(module, exports, __nested_webpack_require_46923__) {\n\n\tmodule.exports = { \"default\": __nested_webpack_require_46923__(56), __esModule: true };\n\n/***/ }),\n/* 56 */\n/***/ (function(module, exports, __nested_webpack_require_47076__) {\n\n\t__nested_webpack_require_47076__(51);\n\t__nested_webpack_require_47076__(45);\n\tmodule.exports = __nested_webpack_require_47076__(57);\n\n/***/ }),\n/* 57 */\n/***/ (function(module, exports, __nested_webpack_require_47248__) {\n\n\tvar anObject = __nested_webpack_require_47248__(39)\n\t  , get      = __nested_webpack_require_47248__(58);\n\tmodule.exports = __nested_webpack_require_47248__(21).getIterator = function(it){\n\t  var iterFn = get(it);\n\t  if(typeof iterFn != 'function')throw TypeError(it + ' is not iterable!');\n\t  return anObject(iterFn.call(it));\n\t};\n\n/***/ }),\n/* 58 */\n/***/ (function(module, exports, __nested_webpack_require_47619__) {\n\n\tvar classof   = __nested_webpack_require_47619__(59)\n\t  , ITERATOR  = __nested_webpack_require_47619__(29)('iterator')\n\t  , Iterators = __nested_webpack_require_47619__(49);\n\tmodule.exports = __nested_webpack_require_47619__(21).getIteratorMethod = function(it){\n\t  if(it != undefined)return it[ITERATOR]\n\t    || it['@@iterator']\n\t    || Iterators[classof(it)];\n\t};\n\n/***/ }),\n/* 59 */\n/***/ (function(module, exports, __nested_webpack_require_48011__) {\n\n\t// getting tag from 19.1.3.6 Object.prototype.toString()\n\tvar cof = __nested_webpack_require_48011__(34)\n\t  , TAG = __nested_webpack_require_48011__(29)('toStringTag')\n\t  // ES3 wrong here\n\t  , ARG = cof(function(){ return arguments; }()) == 'Arguments';\n\n\tmodule.exports = function(it){\n\t  var O, T, B;\n\t  return it === undefined ? 'Undefined' : it === null ? 'Null'\n\t    // @@toStringTag case\n\t    : typeof (T = (O = Object(it))[TAG]) == 'string' ? T\n\t    // builtinTag case\n\t    : ARG ? cof(O)\n\t    // ES3 arguments fallback\n\t    : (B = cof(O)) == 'Object' && typeof O.callee == 'function' ? 'Arguments' : B;\n\t};\n\n/***/ }),\n/* 60 */\n/***/ (function(module, exports, __nested_webpack_require_48679__) {\n\n\tmodule.exports = { \"default\": __nested_webpack_require_48679__(61), __esModule: true };\n\n/***/ }),\n/* 61 */\n/***/ (function(module, exports, __nested_webpack_require_48832__) {\n\n\t__nested_webpack_require_48832__(62);\n\tmodule.exports = __nested_webpack_require_48832__(21).Object.keys;\n\n/***/ }),\n/* 62 */\n/***/ (function(module, exports, __nested_webpack_require_48990__) {\n\n\t// 19.1.2.14 Object.keys(O)\n\tvar toObject = __nested_webpack_require_48990__(63);\n\n\t__nested_webpack_require_48990__(64)('keys', function($keys){\n\t  return function keys(it){\n\t    return $keys(toObject(it));\n\t  };\n\t});\n\n/***/ }),\n/* 63 */\n/***/ (function(module, exports, __nested_webpack_require_49261__) {\n\n\t// 7.1.13 ToObject(argument)\n\tvar defined = __nested_webpack_require_49261__(35);\n\tmodule.exports = function(it){\n\t  return Object(defined(it));\n\t};\n\n/***/ }),\n/* 64 */\n/***/ (function(module, exports, __nested_webpack_require_49475__) {\n\n\t// most Object methods by ES6 should accept primitives\n\tvar $export = __nested_webpack_require_49475__(20)\n\t  , core    = __nested_webpack_require_49475__(21)\n\t  , fails   = __nested_webpack_require_49475__(19);\n\tmodule.exports = function(KEY, exec){\n\t  var fn  = (core.Object || {})[KEY] || Object[KEY]\n\t    , exp = {};\n\t  exp[KEY] = exec(fn);\n\t  $export($export.S + $export.F * fails(function(){ fn(1); }), 'Object', exp);\n\t};\n\n/***/ }),\n/* 65 */\n/***/ (function(module, exports, __nested_webpack_require_49943__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_49943__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _exception = __nested_webpack_require_49943__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('helperMissing', function () /* [args, ]options */{\n\t    if (arguments.length === 1) {\n\t      // A missing field in a {{foo}} construct.\n\t      return undefined;\n\t    } else {\n\t      // Someone is actually trying to call something, blow up.\n\t      throw new _exception2['default']('Missing helper: \"' + arguments[arguments.length - 1].name + '\"');\n\t    }\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 66 */\n/***/ (function(module, exports, __nested_webpack_require_50706__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_50706__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _utils = __nested_webpack_require_50706__(5);\n\n\tvar _exception = __nested_webpack_require_50706__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('if', function (conditional, options) {\n\t    if (arguments.length != 2) {\n\t      throw new _exception2['default']('#if requires exactly one argument');\n\t    }\n\t    if (_utils.isFunction(conditional)) {\n\t      conditional = conditional.call(this);\n\t    }\n\n\t    // Default behavior is to render the positive path if the value is truthy and not empty.\n\t    // The `includeZero` option may be set to treat the condtional as purely not empty based on the\n\t    // behavior of isEmpty. Effectively this determines if 0 is handled by the positive path or negative.\n\t    if (!options.hash.includeZero && !conditional || _utils.isEmpty(conditional)) {\n\t      return options.inverse(this);\n\t    } else {\n\t      return options.fn(this);\n\t    }\n\t  });\n\n\t  instance.registerHelper('unless', function (conditional, options) {\n\t    if (arguments.length != 2) {\n\t      throw new _exception2['default']('#unless requires exactly one argument');\n\t    }\n\t    return instance.helpers['if'].call(this, conditional, {\n\t      fn: options.inverse,\n\t      inverse: options.fn,\n\t      hash: options.hash\n\t    });\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 67 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('log', function () /* message, options */{\n\t    var args = [undefined],\n\t        options = arguments[arguments.length - 1];\n\t    for (var i = 0; i < arguments.length - 1; i++) {\n\t      args.push(arguments[i]);\n\t    }\n\n\t    var level = 1;\n\t    if (options.hash.level != null) {\n\t      level = options.hash.level;\n\t    } else if (options.data && options.data.level != null) {\n\t      level = options.data.level;\n\t    }\n\t    args[0] = level;\n\n\t    instance.log.apply(instance, args);\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 68 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('lookup', function (obj, field, options) {\n\t    if (!obj) {\n\t      // Note for 5.0: Change to \"obj == null\" in 5.0\n\t      return obj;\n\t    }\n\t    return options.lookupProperty(obj, field);\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 69 */\n/***/ (function(module, exports, __nested_webpack_require_53352__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_53352__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _utils = __nested_webpack_require_53352__(5);\n\n\tvar _exception = __nested_webpack_require_53352__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\texports['default'] = function (instance) {\n\t  instance.registerHelper('with', function (context, options) {\n\t    if (arguments.length != 2) {\n\t      throw new _exception2['default']('#with requires exactly one argument');\n\t    }\n\t    if (_utils.isFunction(context)) {\n\t      context = context.call(this);\n\t    }\n\n\t    var fn = options.fn;\n\n\t    if (!_utils.isEmpty(context)) {\n\t      var data = options.data;\n\t      if (options.data && options.ids) {\n\t        data = _utils.createFrame(options.data);\n\t        data.contextPath = _utils.appendContextPath(options.data.contextPath, options.ids[0]);\n\t      }\n\n\t      return fn(context, {\n\t        data: data,\n\t        blockParams: _utils.blockParams([context], [data && data.contextPath])\n\t      });\n\t    } else {\n\t      return options.inverse(this);\n\t    }\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 70 */\n/***/ (function(module, exports, __nested_webpack_require_54534__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_54534__(1)['default'];\n\n\texports.__esModule = true;\n\texports.registerDefaultDecorators = registerDefaultDecorators;\n\n\tvar _decoratorsInline = __nested_webpack_require_54534__(71);\n\n\tvar _decoratorsInline2 = _interopRequireDefault(_decoratorsInline);\n\n\tfunction registerDefaultDecorators(instance) {\n\t  _decoratorsInline2['default'](instance);\n\t}\n\n/***/ }),\n/* 71 */\n/***/ (function(module, exports, __nested_webpack_require_55002__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __nested_webpack_require_55002__(5);\n\n\texports['default'] = function (instance) {\n\t  instance.registerDecorator('inline', function (fn, props, container, options) {\n\t    var ret = fn;\n\t    if (!props.partials) {\n\t      props.partials = {};\n\t      ret = function (context, options) {\n\t        // Create a new partials stack frame prior to exec.\n\t        var original = container.partials;\n\t        container.partials = _utils.extend({}, original, props.partials);\n\t        var ret = fn(context, options);\n\t        container.partials = original;\n\t        return ret;\n\t      };\n\t    }\n\n\t    props.partials[options.args[0]] = options.fn;\n\n\t    return ret;\n\t  });\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 72 */\n/***/ (function(module, exports, __nested_webpack_require_55827__) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\n\tvar _utils = __nested_webpack_require_55827__(5);\n\n\tvar logger = {\n\t  methodMap: ['debug', 'info', 'warn', 'error'],\n\t  level: 'info',\n\n\t  // Maps a given level value to the `methodMap` indexes above.\n\t  lookupLevel: function lookupLevel(level) {\n\t    if (typeof level === 'string') {\n\t      var levelMap = _utils.indexOf(logger.methodMap, level.toLowerCase());\n\t      if (levelMap >= 0) {\n\t        level = levelMap;\n\t      } else {\n\t        level = parseInt(level, 10);\n\t      }\n\t    }\n\n\t    return level;\n\t  },\n\n\t  // Can be overridden in the host environment\n\t  log: function log(level) {\n\t    level = logger.lookupLevel(level);\n\n\t    if (typeof console !== 'undefined' && logger.lookupLevel(logger.level) <= level) {\n\t      var method = logger.methodMap[level];\n\t      // eslint-disable-next-line no-console\n\t      if (!console[method]) {\n\t        method = 'log';\n\t      }\n\n\t      for (var _len = arguments.length, message = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n\t        message[_key - 1] = arguments[_key];\n\t      }\n\n\t      console[method].apply(console, message); // eslint-disable-line no-console\n\t    }\n\t  }\n\t};\n\n\texports['default'] = logger;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 73 */\n/***/ (function(module, exports, __nested_webpack_require_57154__) {\n\n\t'use strict';\n\n\tvar _Object$create = __nested_webpack_require_57154__(74)['default'];\n\n\tvar _Object$keys = __nested_webpack_require_57154__(60)['default'];\n\n\tvar _interopRequireDefault = __nested_webpack_require_57154__(1)['default'];\n\n\texports.__esModule = true;\n\texports.createProtoAccessControl = createProtoAccessControl;\n\texports.resultIsAllowed = resultIsAllowed;\n\texports.resetLoggedProperties = resetLoggedProperties;\n\n\tvar _createNewLookupObject = __nested_webpack_require_57154__(76);\n\n\tvar _logger = __nested_webpack_require_57154__(72);\n\n\tvar _logger2 = _interopRequireDefault(_logger);\n\n\tvar loggedProperties = _Object$create(null);\n\n\tfunction createProtoAccessControl(runtimeOptions) {\n\t  var defaultMethodWhiteList = _Object$create(null);\n\t  defaultMethodWhiteList['constructor'] = false;\n\t  defaultMethodWhiteList['__defineGetter__'] = false;\n\t  defaultMethodWhiteList['__defineSetter__'] = false;\n\t  defaultMethodWhiteList['__lookupGetter__'] = false;\n\n\t  var defaultPropertyWhiteList = _Object$create(null);\n\t  // eslint-disable-next-line no-proto\n\t  defaultPropertyWhiteList['__proto__'] = false;\n\n\t  return {\n\t    properties: {\n\t      whitelist: _createNewLookupObject.createNewLookupObject(defaultPropertyWhiteList, runtimeOptions.allowedProtoProperties),\n\t      defaultValue: runtimeOptions.allowProtoPropertiesByDefault\n\t    },\n\t    methods: {\n\t      whitelist: _createNewLookupObject.createNewLookupObject(defaultMethodWhiteList, runtimeOptions.allowedProtoMethods),\n\t      defaultValue: runtimeOptions.allowProtoMethodsByDefault\n\t    }\n\t  };\n\t}\n\n\tfunction resultIsAllowed(result, protoAccessControl, propertyName) {\n\t  if (typeof result === 'function') {\n\t    return checkWhiteList(protoAccessControl.methods, propertyName);\n\t  } else {\n\t    return checkWhiteList(protoAccessControl.properties, propertyName);\n\t  }\n\t}\n\n\tfunction checkWhiteList(protoAccessControlForType, propertyName) {\n\t  if (protoAccessControlForType.whitelist[propertyName] !== undefined) {\n\t    return protoAccessControlForType.whitelist[propertyName] === true;\n\t  }\n\t  if (protoAccessControlForType.defaultValue !== undefined) {\n\t    return protoAccessControlForType.defaultValue;\n\t  }\n\t  logUnexpecedPropertyAccessOnce(propertyName);\n\t  return false;\n\t}\n\n\tfunction logUnexpecedPropertyAccessOnce(propertyName) {\n\t  if (loggedProperties[propertyName] !== true) {\n\t    loggedProperties[propertyName] = true;\n\t    _logger2['default'].log('error', 'Handlebars: Access has been denied to resolve the property \"' + propertyName + '\" because it is not an \"own property\" of its parent.\\n' + 'You can add a runtime option to disable the check or this warning:\\n' + 'See https://handlebarsjs.com/api-reference/runtime-options.html#options-to-control-prototype-access for details');\n\t  }\n\t}\n\n\tfunction resetLoggedProperties() {\n\t  _Object$keys(loggedProperties).forEach(function (propertyName) {\n\t    delete loggedProperties[propertyName];\n\t  });\n\t}\n\n/***/ }),\n/* 74 */\n/***/ (function(module, exports, __nested_webpack_require_60104__) {\n\n\tmodule.exports = { \"default\": __nested_webpack_require_60104__(75), __esModule: true };\n\n/***/ }),\n/* 75 */\n/***/ (function(module, exports, __nested_webpack_require_60257__) {\n\n\tvar $ = __nested_webpack_require_60257__(9);\n\tmodule.exports = function create(P, D){\n\t  return $.create(P, D);\n\t};\n\n/***/ }),\n/* 76 */\n/***/ (function(module, exports, __nested_webpack_require_60438__) {\n\n\t'use strict';\n\n\tvar _Object$create = __nested_webpack_require_60438__(74)['default'];\n\n\texports.__esModule = true;\n\texports.createNewLookupObject = createNewLookupObject;\n\n\tvar _utils = __nested_webpack_require_60438__(5);\n\n\t/**\n\t * Create a new object with \"null\"-prototype to avoid truthy results on prototype properties.\n\t * The resulting object can be used with \"object[property]\" to check if a property exists\n\t * @param {...object} sources a varargs parameter of source objects that will be merged\n\t * @returns {object}\n\t */\n\n\tfunction createNewLookupObject() {\n\t  for (var _len = arguments.length, sources = Array(_len), _key = 0; _key < _len; _key++) {\n\t    sources[_key] = arguments[_key];\n\t  }\n\n\t  return _utils.extend.apply(undefined, [_Object$create(null)].concat(sources));\n\t}\n\n/***/ }),\n/* 77 */\n/***/ (function(module, exports) {\n\n\t// Build out our basic SafeString type\n\t'use strict';\n\n\texports.__esModule = true;\n\tfunction SafeString(string) {\n\t  this.string = string;\n\t}\n\n\tSafeString.prototype.toString = SafeString.prototype.toHTML = function () {\n\t  return '' + this.string;\n\t};\n\n\texports['default'] = SafeString;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 78 */\n/***/ (function(module, exports, __nested_webpack_require_61662__) {\n\n\t'use strict';\n\n\tvar _Object$seal = __nested_webpack_require_61662__(79)['default'];\n\n\tvar _Object$keys = __nested_webpack_require_61662__(60)['default'];\n\n\tvar _interopRequireWildcard = __nested_webpack_require_61662__(3)['default'];\n\n\tvar _interopRequireDefault = __nested_webpack_require_61662__(1)['default'];\n\n\texports.__esModule = true;\n\texports.checkRevision = checkRevision;\n\texports.template = template;\n\texports.wrapProgram = wrapProgram;\n\texports.resolvePartial = resolvePartial;\n\texports.invokePartial = invokePartial;\n\texports.noop = noop;\n\n\tvar _utils = __nested_webpack_require_61662__(5);\n\n\tvar Utils = _interopRequireWildcard(_utils);\n\n\tvar _exception = __nested_webpack_require_61662__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _base = __nested_webpack_require_61662__(4);\n\n\tvar _helpers = __nested_webpack_require_61662__(10);\n\n\tvar _internalWrapHelper = __nested_webpack_require_61662__(82);\n\n\tvar _internalProtoAccess = __nested_webpack_require_61662__(73);\n\n\tfunction checkRevision(compilerInfo) {\n\t  var compilerRevision = compilerInfo && compilerInfo[0] || 1,\n\t      currentRevision = _base.COMPILER_REVISION;\n\n\t  if (compilerRevision >= _base.LAST_COMPATIBLE_COMPILER_REVISION && compilerRevision <= _base.COMPILER_REVISION) {\n\t    return;\n\t  }\n\n\t  if (compilerRevision < _base.LAST_COMPATIBLE_COMPILER_REVISION) {\n\t    var runtimeVersions = _base.REVISION_CHANGES[currentRevision],\n\t        compilerVersions = _base.REVISION_CHANGES[compilerRevision];\n\t    throw new _exception2['default']('Template was precompiled with an older version of Handlebars than the current runtime. ' + 'Please update your precompiler to a newer version (' + runtimeVersions + ') or downgrade your runtime to an older version (' + compilerVersions + ').');\n\t  } else {\n\t    // Use the embedded version info since the runtime doesn't know about this revision yet\n\t    throw new _exception2['default']('Template was precompiled with a newer version of Handlebars than the current runtime. ' + 'Please update your runtime to a newer version (' + compilerInfo[1] + ').');\n\t  }\n\t}\n\n\tfunction template(templateSpec, env) {\n\t  /* istanbul ignore next */\n\t  if (!env) {\n\t    throw new _exception2['default']('No environment passed to template');\n\t  }\n\t  if (!templateSpec || !templateSpec.main) {\n\t    throw new _exception2['default']('Unknown template object: ' + typeof templateSpec);\n\t  }\n\n\t  templateSpec.main.decorator = templateSpec.main_d;\n\n\t  // Note: Using env.VM references rather than local var references throughout this section to allow\n\t  // for external users to override these as pseudo-supported APIs.\n\t  env.VM.checkRevision(templateSpec.compiler);\n\n\t  // backwards compatibility for precompiled templates with compiler-version 7 (<4.3.0)\n\t  var templateWasPrecompiledWithCompilerV7 = templateSpec.compiler && templateSpec.compiler[0] === 7;\n\n\t  function invokePartialWrapper(partial, context, options) {\n\t    if (options.hash) {\n\t      context = Utils.extend({}, context, options.hash);\n\t      if (options.ids) {\n\t        options.ids[0] = true;\n\t      }\n\t    }\n\t    partial = env.VM.resolvePartial.call(this, partial, context, options);\n\n\t    var extendedOptions = Utils.extend({}, options, {\n\t      hooks: this.hooks,\n\t      protoAccessControl: this.protoAccessControl\n\t    });\n\n\t    var result = env.VM.invokePartial.call(this, partial, context, extendedOptions);\n\n\t    if (result == null && env.compile) {\n\t      options.partials[options.name] = env.compile(partial, templateSpec.compilerOptions, env);\n\t      result = options.partials[options.name](context, extendedOptions);\n\t    }\n\t    if (result != null) {\n\t      if (options.indent) {\n\t        var lines = result.split('\\n');\n\t        for (var i = 0, l = lines.length; i < l; i++) {\n\t          if (!lines[i] && i + 1 === l) {\n\t            break;\n\t          }\n\n\t          lines[i] = options.indent + lines[i];\n\t        }\n\t        result = lines.join('\\n');\n\t      }\n\t      return result;\n\t    } else {\n\t      throw new _exception2['default']('The partial ' + options.name + ' could not be compiled when running in runtime-only mode');\n\t    }\n\t  }\n\n\t  // Just add water\n\t  var container = {\n\t    strict: function strict(obj, name, loc) {\n\t      if (!obj || !(name in obj)) {\n\t        throw new _exception2['default']('\"' + name + '\" not defined in ' + obj, {\n\t          loc: loc\n\t        });\n\t      }\n\t      return container.lookupProperty(obj, name);\n\t    },\n\t    lookupProperty: function lookupProperty(parent, propertyName) {\n\t      var result = parent[propertyName];\n\t      if (result == null) {\n\t        return result;\n\t      }\n\t      if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\n\t        return result;\n\t      }\n\n\t      if (_internalProtoAccess.resultIsAllowed(result, container.protoAccessControl, propertyName)) {\n\t        return result;\n\t      }\n\t      return undefined;\n\t    },\n\t    lookup: function lookup(depths, name) {\n\t      var len = depths.length;\n\t      for (var i = 0; i < len; i++) {\n\t        var result = depths[i] && container.lookupProperty(depths[i], name);\n\t        if (result != null) {\n\t          return depths[i][name];\n\t        }\n\t      }\n\t    },\n\t    lambda: function lambda(current, context) {\n\t      return typeof current === 'function' ? current.call(context) : current;\n\t    },\n\n\t    escapeExpression: Utils.escapeExpression,\n\t    invokePartial: invokePartialWrapper,\n\n\t    fn: function fn(i) {\n\t      var ret = templateSpec[i];\n\t      ret.decorator = templateSpec[i + '_d'];\n\t      return ret;\n\t    },\n\n\t    programs: [],\n\t    program: function program(i, data, declaredBlockParams, blockParams, depths) {\n\t      var programWrapper = this.programs[i],\n\t          fn = this.fn(i);\n\t      if (data || depths || blockParams || declaredBlockParams) {\n\t        programWrapper = wrapProgram(this, i, fn, data, declaredBlockParams, blockParams, depths);\n\t      } else if (!programWrapper) {\n\t        programWrapper = this.programs[i] = wrapProgram(this, i, fn);\n\t      }\n\t      return programWrapper;\n\t    },\n\n\t    data: function data(value, depth) {\n\t      while (value && depth--) {\n\t        value = value._parent;\n\t      }\n\t      return value;\n\t    },\n\t    mergeIfNeeded: function mergeIfNeeded(param, common) {\n\t      var obj = param || common;\n\n\t      if (param && common && param !== common) {\n\t        obj = Utils.extend({}, common, param);\n\t      }\n\n\t      return obj;\n\t    },\n\t    // An empty object to use as replacement for null-contexts\n\t    nullContext: _Object$seal({}),\n\n\t    noop: env.VM.noop,\n\t    compilerInfo: templateSpec.compiler\n\t  };\n\n\t  function ret(context) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t    var data = options.data;\n\n\t    ret._setup(options);\n\t    if (!options.partial && templateSpec.useData) {\n\t      data = initData(context, data);\n\t    }\n\t    var depths = undefined,\n\t        blockParams = templateSpec.useBlockParams ? [] : undefined;\n\t    if (templateSpec.useDepths) {\n\t      if (options.depths) {\n\t        depths = context != options.depths[0] ? [context].concat(options.depths) : options.depths;\n\t      } else {\n\t        depths = [context];\n\t      }\n\t    }\n\n\t    function main(context /*, options*/) {\n\t      return '' + templateSpec.main(container, context, container.helpers, container.partials, data, blockParams, depths);\n\t    }\n\n\t    main = executeDecorators(templateSpec.main, main, container, options.depths || [], data, blockParams);\n\t    return main(context, options);\n\t  }\n\n\t  ret.isTop = true;\n\n\t  ret._setup = function (options) {\n\t    if (!options.partial) {\n\t      var mergedHelpers = Utils.extend({}, env.helpers, options.helpers);\n\t      wrapHelpersToPassLookupProperty(mergedHelpers, container);\n\t      container.helpers = mergedHelpers;\n\n\t      if (templateSpec.usePartial) {\n\t        // Use mergeIfNeeded here to prevent compiling global partials multiple times\n\t        container.partials = container.mergeIfNeeded(options.partials, env.partials);\n\t      }\n\t      if (templateSpec.usePartial || templateSpec.useDecorators) {\n\t        container.decorators = Utils.extend({}, env.decorators, options.decorators);\n\t      }\n\n\t      container.hooks = {};\n\t      container.protoAccessControl = _internalProtoAccess.createProtoAccessControl(options);\n\n\t      var keepHelperInHelpers = options.allowCallsToHelperMissing || templateWasPrecompiledWithCompilerV7;\n\t      _helpers.moveHelperToHooks(container, 'helperMissing', keepHelperInHelpers);\n\t      _helpers.moveHelperToHooks(container, 'blockHelperMissing', keepHelperInHelpers);\n\t    } else {\n\t      container.protoAccessControl = options.protoAccessControl; // internal option\n\t      container.helpers = options.helpers;\n\t      container.partials = options.partials;\n\t      container.decorators = options.decorators;\n\t      container.hooks = options.hooks;\n\t    }\n\t  };\n\n\t  ret._child = function (i, data, blockParams, depths) {\n\t    if (templateSpec.useBlockParams && !blockParams) {\n\t      throw new _exception2['default']('must pass block params');\n\t    }\n\t    if (templateSpec.useDepths && !depths) {\n\t      throw new _exception2['default']('must pass parent depths');\n\t    }\n\n\t    return wrapProgram(container, i, templateSpec[i], data, 0, blockParams, depths);\n\t  };\n\t  return ret;\n\t}\n\n\tfunction wrapProgram(container, i, fn, data, declaredBlockParams, blockParams, depths) {\n\t  function prog(context) {\n\t    var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t    var currentDepths = depths;\n\t    if (depths && context != depths[0] && !(context === container.nullContext && depths[0] === null)) {\n\t      currentDepths = [context].concat(depths);\n\t    }\n\n\t    return fn(container, context, container.helpers, container.partials, options.data || data, blockParams && [options.blockParams].concat(blockParams), currentDepths);\n\t  }\n\n\t  prog = executeDecorators(fn, prog, container, depths, data, blockParams);\n\n\t  prog.program = i;\n\t  prog.depth = depths ? depths.length : 0;\n\t  prog.blockParams = declaredBlockParams || 0;\n\t  return prog;\n\t}\n\n\t/**\n\t * This is currently part of the official API, therefore implementation details should not be changed.\n\t */\n\n\tfunction resolvePartial(partial, context, options) {\n\t  if (!partial) {\n\t    if (options.name === '@partial-block') {\n\t      partial = options.data['partial-block'];\n\t    } else {\n\t      partial = options.partials[options.name];\n\t    }\n\t  } else if (!partial.call && !options.name) {\n\t    // This is a dynamic partial that returned a string\n\t    options.name = partial;\n\t    partial = options.partials[partial];\n\t  }\n\t  return partial;\n\t}\n\n\tfunction invokePartial(partial, context, options) {\n\t  // Use the current closure context to save the partial-block if this partial\n\t  var currentPartialBlock = options.data && options.data['partial-block'];\n\t  options.partial = true;\n\t  if (options.ids) {\n\t    options.data.contextPath = options.ids[0] || options.data.contextPath;\n\t  }\n\n\t  var partialBlock = undefined;\n\t  if (options.fn && options.fn !== noop) {\n\t    (function () {\n\t      options.data = _base.createFrame(options.data);\n\t      // Wrapper function to get access to currentPartialBlock from the closure\n\t      var fn = options.fn;\n\t      partialBlock = options.data['partial-block'] = function partialBlockWrapper(context) {\n\t        var options = arguments.length <= 1 || arguments[1] === undefined ? {} : arguments[1];\n\n\t        // Restore the partial-block from the closure for the execution of the block\n\t        // i.e. the part inside the block of the partial call.\n\t        options.data = _base.createFrame(options.data);\n\t        options.data['partial-block'] = currentPartialBlock;\n\t        return fn(context, options);\n\t      };\n\t      if (fn.partials) {\n\t        options.partials = Utils.extend({}, options.partials, fn.partials);\n\t      }\n\t    })();\n\t  }\n\n\t  if (partial === undefined && partialBlock) {\n\t    partial = partialBlock;\n\t  }\n\n\t  if (partial === undefined) {\n\t    throw new _exception2['default']('The partial ' + options.name + ' could not be found');\n\t  } else if (partial instanceof Function) {\n\t    return partial(context, options);\n\t  }\n\t}\n\n\tfunction noop() {\n\t  return '';\n\t}\n\n\tfunction initData(context, data) {\n\t  if (!data || !('root' in data)) {\n\t    data = data ? _base.createFrame(data) : {};\n\t    data.root = context;\n\t  }\n\t  return data;\n\t}\n\n\tfunction executeDecorators(fn, prog, container, depths, data, blockParams) {\n\t  if (fn.decorator) {\n\t    var props = {};\n\t    prog = fn.decorator(prog, props, container, depths && depths[0], data, blockParams, depths);\n\t    Utils.extend(prog, props);\n\t  }\n\t  return prog;\n\t}\n\n\tfunction wrapHelpersToPassLookupProperty(mergedHelpers, container) {\n\t  _Object$keys(mergedHelpers).forEach(function (helperName) {\n\t    var helper = mergedHelpers[helperName];\n\t    mergedHelpers[helperName] = passLookupPropertyOption(helper, container);\n\t  });\n\t}\n\n\tfunction passLookupPropertyOption(helper, container) {\n\t  var lookupProperty = container.lookupProperty;\n\t  return _internalWrapHelper.wrapHelper(helper, function (options) {\n\t    return Utils.extend({ lookupProperty: lookupProperty }, options);\n\t  });\n\t}\n\n/***/ }),\n/* 79 */\n/***/ (function(module, exports, __nested_webpack_require_74814__) {\n\n\tmodule.exports = { \"default\": __nested_webpack_require_74814__(80), __esModule: true };\n\n/***/ }),\n/* 80 */\n/***/ (function(module, exports, __nested_webpack_require_74967__) {\n\n\t__nested_webpack_require_74967__(81);\n\tmodule.exports = __nested_webpack_require_74967__(21).Object.seal;\n\n/***/ }),\n/* 81 */\n/***/ (function(module, exports, __nested_webpack_require_75125__) {\n\n\t// 19.1.2.17 Object.seal(O)\n\tvar isObject = __nested_webpack_require_75125__(40);\n\n\t__nested_webpack_require_75125__(64)('seal', function($seal){\n\t  return function seal(it){\n\t    return $seal && isObject(it) ? $seal(it) : it;\n\t  };\n\t});\n\n/***/ }),\n/* 82 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\texports.wrapHelper = wrapHelper;\n\n\tfunction wrapHelper(helper, transformOptionsFn) {\n\t  if (typeof helper !== 'function') {\n\t    // This should not happen, but apparently it does in https://github.com/wycats/handlebars.js/issues/1639\n\t    // We try to make the wrapper least-invasive by not wrapping it, if the helper is not a function.\n\t    return helper;\n\t  }\n\t  var wrapper = function wrapper() /* dynamic arguments */{\n\t    var options = arguments[arguments.length - 1];\n\t    arguments[arguments.length - 1] = transformOptionsFn(options);\n\t    return helper.apply(this, arguments);\n\t  };\n\t  return wrapper;\n\t}\n\n/***/ }),\n/* 83 */\n/***/ (function(module, exports) {\n\n\t/* global globalThis */\n\t'use strict';\n\n\texports.__esModule = true;\n\n\texports['default'] = function (Handlebars) {\n\t  /* istanbul ignore next */\n\t  // https://mathiasbynens.be/notes/globalthis\n\t  (function () {\n\t    if (typeof globalThis === 'object') return;\n\t    Object.prototype.__defineGetter__('__magic__', function () {\n\t      return this;\n\t    });\n\t    __magic__.globalThis = __magic__; // eslint-disable-line no-undef\n\t    delete Object.prototype.__magic__;\n\t  })();\n\n\t  var $Handlebars = globalThis.Handlebars;\n\n\t  /* istanbul ignore next */\n\t  Handlebars.noConflict = function () {\n\t    if (globalThis.Handlebars === Handlebars) {\n\t      globalThis.Handlebars = $Handlebars;\n\t    }\n\t    return Handlebars;\n\t  };\n\t};\n\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 84 */\n/***/ (function(module, exports) {\n\n\t'use strict';\n\n\texports.__esModule = true;\n\tvar AST = {\n\t  // Public API used to evaluate derived attributes regarding AST nodes\n\t  helpers: {\n\t    // a mustache is definitely a helper if:\n\t    // * it is an eligible helper, and\n\t    // * it has at least one parameter or hash segment\n\t    helperExpression: function helperExpression(node) {\n\t      return node.type === 'SubExpression' || (node.type === 'MustacheStatement' || node.type === 'BlockStatement') && !!(node.params && node.params.length || node.hash);\n\t    },\n\n\t    scopedId: function scopedId(path) {\n\t      return (/^\\.|this\\b/.test(path.original)\n\t      );\n\t    },\n\n\t    // an ID is simple if it only has one part, and that part is not\n\t    // `..` or `this`.\n\t    simpleId: function simpleId(path) {\n\t      return path.parts.length === 1 && !AST.helpers.scopedId(path) && !path.depth;\n\t    }\n\t  }\n\t};\n\n\t// Must be exported as an object rather than the root of the module as the jison lexer\n\t// must modify the object to operate properly.\n\texports['default'] = AST;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 85 */\n/***/ (function(module, exports, __nested_webpack_require_78078__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_78078__(1)['default'];\n\n\tvar _interopRequireWildcard = __nested_webpack_require_78078__(3)['default'];\n\n\texports.__esModule = true;\n\texports.parseWithoutProcessing = parseWithoutProcessing;\n\texports.parse = parse;\n\n\tvar _parser = __nested_webpack_require_78078__(86);\n\n\tvar _parser2 = _interopRequireDefault(_parser);\n\n\tvar _whitespaceControl = __nested_webpack_require_78078__(87);\n\n\tvar _whitespaceControl2 = _interopRequireDefault(_whitespaceControl);\n\n\tvar _helpers = __nested_webpack_require_78078__(89);\n\n\tvar Helpers = _interopRequireWildcard(_helpers);\n\n\tvar _utils = __nested_webpack_require_78078__(5);\n\n\texports.parser = _parser2['default'];\n\n\tvar yy = {};\n\t_utils.extend(yy, Helpers);\n\n\tfunction parseWithoutProcessing(input, options) {\n\t  // Just return if an already-compiled AST was passed in.\n\t  if (input.type === 'Program') {\n\t    return input;\n\t  }\n\n\t  _parser2['default'].yy = yy;\n\n\t  // Altering the shared object here, but this is ok as parser is a sync operation\n\t  yy.locInfo = function (locInfo) {\n\t    return new yy.SourceLocation(options && options.srcName, locInfo);\n\t  };\n\n\t  var ast = _parser2['default'].parse(input);\n\n\t  return ast;\n\t}\n\n\tfunction parse(input, options) {\n\t  var ast = parseWithoutProcessing(input, options);\n\t  var strip = new _whitespaceControl2['default'](options);\n\n\t  return strip.accept(ast);\n\t}\n\n/***/ }),\n/* 86 */\n/***/ (function(module, exports) {\n\n\t// File ignored in coverage tests via setting in .istanbul.yml\n\t/* Jison generated parser */\n\t\"use strict\";\n\n\texports.__esModule = true;\n\tvar handlebars = (function () {\n\t    var parser = { trace: function trace() {},\n\t        yy: {},\n\t        symbols_: { \"error\": 2, \"root\": 3, \"program\": 4, \"EOF\": 5, \"program_repetition0\": 6, \"statement\": 7, \"mustache\": 8, \"block\": 9, \"rawBlock\": 10, \"partial\": 11, \"partialBlock\": 12, \"content\": 13, \"COMMENT\": 14, \"CONTENT\": 15, \"openRawBlock\": 16, \"rawBlock_repetition0\": 17, \"END_RAW_BLOCK\": 18, \"OPEN_RAW_BLOCK\": 19, \"helperName\": 20, \"openRawBlock_repetition0\": 21, \"openRawBlock_option0\": 22, \"CLOSE_RAW_BLOCK\": 23, \"openBlock\": 24, \"block_option0\": 25, \"closeBlock\": 26, \"openInverse\": 27, \"block_option1\": 28, \"OPEN_BLOCK\": 29, \"openBlock_repetition0\": 30, \"openBlock_option0\": 31, \"openBlock_option1\": 32, \"CLOSE\": 33, \"OPEN_INVERSE\": 34, \"openInverse_repetition0\": 35, \"openInverse_option0\": 36, \"openInverse_option1\": 37, \"openInverseChain\": 38, \"OPEN_INVERSE_CHAIN\": 39, \"openInverseChain_repetition0\": 40, \"openInverseChain_option0\": 41, \"openInverseChain_option1\": 42, \"inverseAndProgram\": 43, \"INVERSE\": 44, \"inverseChain\": 45, \"inverseChain_option0\": 46, \"OPEN_ENDBLOCK\": 47, \"OPEN\": 48, \"mustache_repetition0\": 49, \"mustache_option0\": 50, \"OPEN_UNESCAPED\": 51, \"mustache_repetition1\": 52, \"mustache_option1\": 53, \"CLOSE_UNESCAPED\": 54, \"OPEN_PARTIAL\": 55, \"partialName\": 56, \"partial_repetition0\": 57, \"partial_option0\": 58, \"openPartialBlock\": 59, \"OPEN_PARTIAL_BLOCK\": 60, \"openPartialBlock_repetition0\": 61, \"openPartialBlock_option0\": 62, \"param\": 63, \"sexpr\": 64, \"OPEN_SEXPR\": 65, \"sexpr_repetition0\": 66, \"sexpr_option0\": 67, \"CLOSE_SEXPR\": 68, \"hash\": 69, \"hash_repetition_plus0\": 70, \"hashSegment\": 71, \"ID\": 72, \"EQUALS\": 73, \"blockParams\": 74, \"OPEN_BLOCK_PARAMS\": 75, \"blockParams_repetition_plus0\": 76, \"CLOSE_BLOCK_PARAMS\": 77, \"path\": 78, \"dataName\": 79, \"STRING\": 80, \"NUMBER\": 81, \"BOOLEAN\": 82, \"UNDEFINED\": 83, \"NULL\": 84, \"DATA\": 85, \"pathSegments\": 86, \"SEP\": 87, \"$accept\": 0, \"$end\": 1 },\n\t        terminals_: { 2: \"error\", 5: \"EOF\", 14: \"COMMENT\", 15: \"CONTENT\", 18: \"END_RAW_BLOCK\", 19: \"OPEN_RAW_BLOCK\", 23: \"CLOSE_RAW_BLOCK\", 29: \"OPEN_BLOCK\", 33: \"CLOSE\", 34: \"OPEN_INVERSE\", 39: \"OPEN_INVERSE_CHAIN\", 44: \"INVERSE\", 47: \"OPEN_ENDBLOCK\", 48: \"OPEN\", 51: \"OPEN_UNESCAPED\", 54: \"CLOSE_UNESCAPED\", 55: \"OPEN_PARTIAL\", 60: \"OPEN_PARTIAL_BLOCK\", 65: \"OPEN_SEXPR\", 68: \"CLOSE_SEXPR\", 72: \"ID\", 73: \"EQUALS\", 75: \"OPEN_BLOCK_PARAMS\", 77: \"CLOSE_BLOCK_PARAMS\", 80: \"STRING\", 81: \"NUMBER\", 82: \"BOOLEAN\", 83: \"UNDEFINED\", 84: \"NULL\", 85: \"DATA\", 87: \"SEP\" },\n\t        productions_: [0, [3, 2], [4, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [7, 1], [13, 1], [10, 3], [16, 5], [9, 4], [9, 4], [24, 6], [27, 6], [38, 6], [43, 2], [45, 3], [45, 1], [26, 3], [8, 5], [8, 5], [11, 5], [12, 3], [59, 5], [63, 1], [63, 1], [64, 5], [69, 1], [71, 3], [74, 3], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [20, 1], [56, 1], [56, 1], [79, 2], [78, 1], [86, 3], [86, 1], [6, 0], [6, 2], [17, 0], [17, 2], [21, 0], [21, 2], [22, 0], [22, 1], [25, 0], [25, 1], [28, 0], [28, 1], [30, 0], [30, 2], [31, 0], [31, 1], [32, 0], [32, 1], [35, 0], [35, 2], [36, 0], [36, 1], [37, 0], [37, 1], [40, 0], [40, 2], [41, 0], [41, 1], [42, 0], [42, 1], [46, 0], [46, 1], [49, 0], [49, 2], [50, 0], [50, 1], [52, 0], [52, 2], [53, 0], [53, 1], [57, 0], [57, 2], [58, 0], [58, 1], [61, 0], [61, 2], [62, 0], [62, 1], [66, 0], [66, 2], [67, 0], [67, 1], [70, 1], [70, 2], [76, 1], [76, 2]],\n\t        performAction: function anonymous(yytext, yyleng, yylineno, yy, yystate, $$, _$) {\n\n\t            var $0 = $$.length - 1;\n\t            switch (yystate) {\n\t                case 1:\n\t                    return $$[$0 - 1];\n\t                    break;\n\t                case 2:\n\t                    this.$ = yy.prepareProgram($$[$0]);\n\t                    break;\n\t                case 3:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 4:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 5:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 6:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 7:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 8:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 9:\n\t                    this.$ = {\n\t                        type: 'CommentStatement',\n\t                        value: yy.stripComment($$[$0]),\n\t                        strip: yy.stripFlags($$[$0], $$[$0]),\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 10:\n\t                    this.$ = {\n\t                        type: 'ContentStatement',\n\t                        original: $$[$0],\n\t                        value: $$[$0],\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 11:\n\t                    this.$ = yy.prepareRawBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n\t                    break;\n\t                case 12:\n\t                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1] };\n\t                    break;\n\t                case 13:\n\t                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], false, this._$);\n\t                    break;\n\t                case 14:\n\t                    this.$ = yy.prepareBlock($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0], true, this._$);\n\t                    break;\n\t                case 15:\n\t                    this.$ = { open: $$[$0 - 5], path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n\t                    break;\n\t                case 16:\n\t                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n\t                    break;\n\t                case 17:\n\t                    this.$ = { path: $$[$0 - 4], params: $$[$0 - 3], hash: $$[$0 - 2], blockParams: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 5], $$[$0]) };\n\t                    break;\n\t                case 18:\n\t                    this.$ = { strip: yy.stripFlags($$[$0 - 1], $$[$0 - 1]), program: $$[$0] };\n\t                    break;\n\t                case 19:\n\t                    var inverse = yy.prepareBlock($$[$0 - 2], $$[$0 - 1], $$[$0], $$[$0], false, this._$),\n\t                        program = yy.prepareProgram([inverse], $$[$0 - 1].loc);\n\t                    program.chained = true;\n\n\t                    this.$ = { strip: $$[$0 - 2].strip, program: program, chain: true };\n\n\t                    break;\n\t                case 20:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 21:\n\t                    this.$ = { path: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 2], $$[$0]) };\n\t                    break;\n\t                case 22:\n\t                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n\t                    break;\n\t                case 23:\n\t                    this.$ = yy.prepareMustache($$[$0 - 3], $$[$0 - 2], $$[$0 - 1], $$[$0 - 4], yy.stripFlags($$[$0 - 4], $$[$0]), this._$);\n\t                    break;\n\t                case 24:\n\t                    this.$ = {\n\t                        type: 'PartialStatement',\n\t                        name: $$[$0 - 3],\n\t                        params: $$[$0 - 2],\n\t                        hash: $$[$0 - 1],\n\t                        indent: '',\n\t                        strip: yy.stripFlags($$[$0 - 4], $$[$0]),\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 25:\n\t                    this.$ = yy.preparePartialBlock($$[$0 - 2], $$[$0 - 1], $$[$0], this._$);\n\t                    break;\n\t                case 26:\n\t                    this.$ = { path: $$[$0 - 3], params: $$[$0 - 2], hash: $$[$0 - 1], strip: yy.stripFlags($$[$0 - 4], $$[$0]) };\n\t                    break;\n\t                case 27:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 28:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 29:\n\t                    this.$ = {\n\t                        type: 'SubExpression',\n\t                        path: $$[$0 - 3],\n\t                        params: $$[$0 - 2],\n\t                        hash: $$[$0 - 1],\n\t                        loc: yy.locInfo(this._$)\n\t                    };\n\n\t                    break;\n\t                case 30:\n\t                    this.$ = { type: 'Hash', pairs: $$[$0], loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 31:\n\t                    this.$ = { type: 'HashPair', key: yy.id($$[$0 - 2]), value: $$[$0], loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 32:\n\t                    this.$ = yy.id($$[$0 - 1]);\n\t                    break;\n\t                case 33:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 34:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 35:\n\t                    this.$ = { type: 'StringLiteral', value: $$[$0], original: $$[$0], loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 36:\n\t                    this.$ = { type: 'NumberLiteral', value: Number($$[$0]), original: Number($$[$0]), loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 37:\n\t                    this.$ = { type: 'BooleanLiteral', value: $$[$0] === 'true', original: $$[$0] === 'true', loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 38:\n\t                    this.$ = { type: 'UndefinedLiteral', original: undefined, value: undefined, loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 39:\n\t                    this.$ = { type: 'NullLiteral', original: null, value: null, loc: yy.locInfo(this._$) };\n\t                    break;\n\t                case 40:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 41:\n\t                    this.$ = $$[$0];\n\t                    break;\n\t                case 42:\n\t                    this.$ = yy.preparePath(true, $$[$0], this._$);\n\t                    break;\n\t                case 43:\n\t                    this.$ = yy.preparePath(false, $$[$0], this._$);\n\t                    break;\n\t                case 44:\n\t                    $$[$0 - 2].push({ part: yy.id($$[$0]), original: $$[$0], separator: $$[$0 - 1] });this.$ = $$[$0 - 2];\n\t                    break;\n\t                case 45:\n\t                    this.$ = [{ part: yy.id($$[$0]), original: $$[$0] }];\n\t                    break;\n\t                case 46:\n\t                    this.$ = [];\n\t                    break;\n\t                case 47:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 48:\n\t                    this.$ = [];\n\t                    break;\n\t                case 49:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 50:\n\t                    this.$ = [];\n\t                    break;\n\t                case 51:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 58:\n\t                    this.$ = [];\n\t                    break;\n\t                case 59:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 64:\n\t                    this.$ = [];\n\t                    break;\n\t                case 65:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 70:\n\t                    this.$ = [];\n\t                    break;\n\t                case 71:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 78:\n\t                    this.$ = [];\n\t                    break;\n\t                case 79:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 82:\n\t                    this.$ = [];\n\t                    break;\n\t                case 83:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 86:\n\t                    this.$ = [];\n\t                    break;\n\t                case 87:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 90:\n\t                    this.$ = [];\n\t                    break;\n\t                case 91:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 94:\n\t                    this.$ = [];\n\t                    break;\n\t                case 95:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 98:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 99:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t                case 100:\n\t                    this.$ = [$$[$0]];\n\t                    break;\n\t                case 101:\n\t                    $$[$0 - 1].push($$[$0]);\n\t                    break;\n\t            }\n\t        },\n\t        table: [{ 3: 1, 4: 2, 5: [2, 46], 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 1: [3] }, { 5: [1, 4] }, { 5: [2, 2], 7: 5, 8: 6, 9: 7, 10: 8, 11: 9, 12: 10, 13: 11, 14: [1, 12], 15: [1, 20], 16: 17, 19: [1, 23], 24: 15, 27: 16, 29: [1, 21], 34: [1, 22], 39: [2, 2], 44: [2, 2], 47: [2, 2], 48: [1, 13], 51: [1, 14], 55: [1, 18], 59: 19, 60: [1, 24] }, { 1: [2, 1] }, { 5: [2, 47], 14: [2, 47], 15: [2, 47], 19: [2, 47], 29: [2, 47], 34: [2, 47], 39: [2, 47], 44: [2, 47], 47: [2, 47], 48: [2, 47], 51: [2, 47], 55: [2, 47], 60: [2, 47] }, { 5: [2, 3], 14: [2, 3], 15: [2, 3], 19: [2, 3], 29: [2, 3], 34: [2, 3], 39: [2, 3], 44: [2, 3], 47: [2, 3], 48: [2, 3], 51: [2, 3], 55: [2, 3], 60: [2, 3] }, { 5: [2, 4], 14: [2, 4], 15: [2, 4], 19: [2, 4], 29: [2, 4], 34: [2, 4], 39: [2, 4], 44: [2, 4], 47: [2, 4], 48: [2, 4], 51: [2, 4], 55: [2, 4], 60: [2, 4] }, { 5: [2, 5], 14: [2, 5], 15: [2, 5], 19: [2, 5], 29: [2, 5], 34: [2, 5], 39: [2, 5], 44: [2, 5], 47: [2, 5], 48: [2, 5], 51: [2, 5], 55: [2, 5], 60: [2, 5] }, { 5: [2, 6], 14: [2, 6], 15: [2, 6], 19: [2, 6], 29: [2, 6], 34: [2, 6], 39: [2, 6], 44: [2, 6], 47: [2, 6], 48: [2, 6], 51: [2, 6], 55: [2, 6], 60: [2, 6] }, { 5: [2, 7], 14: [2, 7], 15: [2, 7], 19: [2, 7], 29: [2, 7], 34: [2, 7], 39: [2, 7], 44: [2, 7], 47: [2, 7], 48: [2, 7], 51: [2, 7], 55: [2, 7], 60: [2, 7] }, { 5: [2, 8], 14: [2, 8], 15: [2, 8], 19: [2, 8], 29: [2, 8], 34: [2, 8], 39: [2, 8], 44: [2, 8], 47: [2, 8], 48: [2, 8], 51: [2, 8], 55: [2, 8], 60: [2, 8] }, { 5: [2, 9], 14: [2, 9], 15: [2, 9], 19: [2, 9], 29: [2, 9], 34: [2, 9], 39: [2, 9], 44: [2, 9], 47: [2, 9], 48: [2, 9], 51: [2, 9], 55: [2, 9], 60: [2, 9] }, { 20: 25, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 36, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 37, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 4: 38, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 15: [2, 48], 17: 39, 18: [2, 48] }, { 20: 41, 56: 40, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 44, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 5: [2, 10], 14: [2, 10], 15: [2, 10], 18: [2, 10], 19: [2, 10], 29: [2, 10], 34: [2, 10], 39: [2, 10], 44: [2, 10], 47: [2, 10], 48: [2, 10], 51: [2, 10], 55: [2, 10], 60: [2, 10] }, { 20: 45, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 46, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 47, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 41, 56: 48, 64: 42, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [2, 78], 49: 49, 65: [2, 78], 72: [2, 78], 80: [2, 78], 81: [2, 78], 82: [2, 78], 83: [2, 78], 84: [2, 78], 85: [2, 78] }, { 23: [2, 33], 33: [2, 33], 54: [2, 33], 65: [2, 33], 68: [2, 33], 72: [2, 33], 75: [2, 33], 80: [2, 33], 81: [2, 33], 82: [2, 33], 83: [2, 33], 84: [2, 33], 85: [2, 33] }, { 23: [2, 34], 33: [2, 34], 54: [2, 34], 65: [2, 34], 68: [2, 34], 72: [2, 34], 75: [2, 34], 80: [2, 34], 81: [2, 34], 82: [2, 34], 83: [2, 34], 84: [2, 34], 85: [2, 34] }, { 23: [2, 35], 33: [2, 35], 54: [2, 35], 65: [2, 35], 68: [2, 35], 72: [2, 35], 75: [2, 35], 80: [2, 35], 81: [2, 35], 82: [2, 35], 83: [2, 35], 84: [2, 35], 85: [2, 35] }, { 23: [2, 36], 33: [2, 36], 54: [2, 36], 65: [2, 36], 68: [2, 36], 72: [2, 36], 75: [2, 36], 80: [2, 36], 81: [2, 36], 82: [2, 36], 83: [2, 36], 84: [2, 36], 85: [2, 36] }, { 23: [2, 37], 33: [2, 37], 54: [2, 37], 65: [2, 37], 68: [2, 37], 72: [2, 37], 75: [2, 37], 80: [2, 37], 81: [2, 37], 82: [2, 37], 83: [2, 37], 84: [2, 37], 85: [2, 37] }, { 23: [2, 38], 33: [2, 38], 54: [2, 38], 65: [2, 38], 68: [2, 38], 72: [2, 38], 75: [2, 38], 80: [2, 38], 81: [2, 38], 82: [2, 38], 83: [2, 38], 84: [2, 38], 85: [2, 38] }, { 23: [2, 39], 33: [2, 39], 54: [2, 39], 65: [2, 39], 68: [2, 39], 72: [2, 39], 75: [2, 39], 80: [2, 39], 81: [2, 39], 82: [2, 39], 83: [2, 39], 84: [2, 39], 85: [2, 39] }, { 23: [2, 43], 33: [2, 43], 54: [2, 43], 65: [2, 43], 68: [2, 43], 72: [2, 43], 75: [2, 43], 80: [2, 43], 81: [2, 43], 82: [2, 43], 83: [2, 43], 84: [2, 43], 85: [2, 43], 87: [1, 50] }, { 72: [1, 35], 86: 51 }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 52: 52, 54: [2, 82], 65: [2, 82], 72: [2, 82], 80: [2, 82], 81: [2, 82], 82: [2, 82], 83: [2, 82], 84: [2, 82], 85: [2, 82] }, { 25: 53, 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 54, 47: [2, 54] }, { 28: 59, 43: 60, 44: [1, 58], 47: [2, 56] }, { 13: 62, 15: [1, 20], 18: [1, 61] }, { 33: [2, 86], 57: 63, 65: [2, 86], 72: [2, 86], 80: [2, 86], 81: [2, 86], 82: [2, 86], 83: [2, 86], 84: [2, 86], 85: [2, 86] }, { 33: [2, 40], 65: [2, 40], 72: [2, 40], 80: [2, 40], 81: [2, 40], 82: [2, 40], 83: [2, 40], 84: [2, 40], 85: [2, 40] }, { 33: [2, 41], 65: [2, 41], 72: [2, 41], 80: [2, 41], 81: [2, 41], 82: [2, 41], 83: [2, 41], 84: [2, 41], 85: [2, 41] }, { 20: 64, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 65, 47: [1, 66] }, { 30: 67, 33: [2, 58], 65: [2, 58], 72: [2, 58], 75: [2, 58], 80: [2, 58], 81: [2, 58], 82: [2, 58], 83: [2, 58], 84: [2, 58], 85: [2, 58] }, { 33: [2, 64], 35: 68, 65: [2, 64], 72: [2, 64], 75: [2, 64], 80: [2, 64], 81: [2, 64], 82: [2, 64], 83: [2, 64], 84: [2, 64], 85: [2, 64] }, { 21: 69, 23: [2, 50], 65: [2, 50], 72: [2, 50], 80: [2, 50], 81: [2, 50], 82: [2, 50], 83: [2, 50], 84: [2, 50], 85: [2, 50] }, { 33: [2, 90], 61: 70, 65: [2, 90], 72: [2, 90], 80: [2, 90], 81: [2, 90], 82: [2, 90], 83: [2, 90], 84: [2, 90], 85: [2, 90] }, { 20: 74, 33: [2, 80], 50: 71, 63: 72, 64: 75, 65: [1, 43], 69: 73, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 72: [1, 79] }, { 23: [2, 42], 33: [2, 42], 54: [2, 42], 65: [2, 42], 68: [2, 42], 72: [2, 42], 75: [2, 42], 80: [2, 42], 81: [2, 42], 82: [2, 42], 83: [2, 42], 84: [2, 42], 85: [2, 42], 87: [1, 50] }, { 20: 74, 53: 80, 54: [2, 84], 63: 81, 64: 75, 65: [1, 43], 69: 82, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 26: 83, 47: [1, 66] }, { 47: [2, 55] }, { 4: 84, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 39: [2, 46], 44: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 47: [2, 20] }, { 20: 85, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 4: 86, 6: 3, 14: [2, 46], 15: [2, 46], 19: [2, 46], 29: [2, 46], 34: [2, 46], 47: [2, 46], 48: [2, 46], 51: [2, 46], 55: [2, 46], 60: [2, 46] }, { 26: 87, 47: [1, 66] }, { 47: [2, 57] }, { 5: [2, 11], 14: [2, 11], 15: [2, 11], 19: [2, 11], 29: [2, 11], 34: [2, 11], 39: [2, 11], 44: [2, 11], 47: [2, 11], 48: [2, 11], 51: [2, 11], 55: [2, 11], 60: [2, 11] }, { 15: [2, 49], 18: [2, 49] }, { 20: 74, 33: [2, 88], 58: 88, 63: 89, 64: 75, 65: [1, 43], 69: 90, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 65: [2, 94], 66: 91, 68: [2, 94], 72: [2, 94], 80: [2, 94], 81: [2, 94], 82: [2, 94], 83: [2, 94], 84: [2, 94], 85: [2, 94] }, { 5: [2, 25], 14: [2, 25], 15: [2, 25], 19: [2, 25], 29: [2, 25], 34: [2, 25], 39: [2, 25], 44: [2, 25], 47: [2, 25], 48: [2, 25], 51: [2, 25], 55: [2, 25], 60: [2, 25] }, { 20: 92, 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 31: 93, 33: [2, 60], 63: 94, 64: 75, 65: [1, 43], 69: 95, 70: 76, 71: 77, 72: [1, 78], 75: [2, 60], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 66], 36: 96, 63: 97, 64: 75, 65: [1, 43], 69: 98, 70: 76, 71: 77, 72: [1, 78], 75: [2, 66], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 22: 99, 23: [2, 52], 63: 100, 64: 75, 65: [1, 43], 69: 101, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 20: 74, 33: [2, 92], 62: 102, 63: 103, 64: 75, 65: [1, 43], 69: 104, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 105] }, { 33: [2, 79], 65: [2, 79], 72: [2, 79], 80: [2, 79], 81: [2, 79], 82: [2, 79], 83: [2, 79], 84: [2, 79], 85: [2, 79] }, { 33: [2, 81] }, { 23: [2, 27], 33: [2, 27], 54: [2, 27], 65: [2, 27], 68: [2, 27], 72: [2, 27], 75: [2, 27], 80: [2, 27], 81: [2, 27], 82: [2, 27], 83: [2, 27], 84: [2, 27], 85: [2, 27] }, { 23: [2, 28], 33: [2, 28], 54: [2, 28], 65: [2, 28], 68: [2, 28], 72: [2, 28], 75: [2, 28], 80: [2, 28], 81: [2, 28], 82: [2, 28], 83: [2, 28], 84: [2, 28], 85: [2, 28] }, { 23: [2, 30], 33: [2, 30], 54: [2, 30], 68: [2, 30], 71: 106, 72: [1, 107], 75: [2, 30] }, { 23: [2, 98], 33: [2, 98], 54: [2, 98], 68: [2, 98], 72: [2, 98], 75: [2, 98] }, { 23: [2, 45], 33: [2, 45], 54: [2, 45], 65: [2, 45], 68: [2, 45], 72: [2, 45], 73: [1, 108], 75: [2, 45], 80: [2, 45], 81: [2, 45], 82: [2, 45], 83: [2, 45], 84: [2, 45], 85: [2, 45], 87: [2, 45] }, { 23: [2, 44], 33: [2, 44], 54: [2, 44], 65: [2, 44], 68: [2, 44], 72: [2, 44], 75: [2, 44], 80: [2, 44], 81: [2, 44], 82: [2, 44], 83: [2, 44], 84: [2, 44], 85: [2, 44], 87: [2, 44] }, { 54: [1, 109] }, { 54: [2, 83], 65: [2, 83], 72: [2, 83], 80: [2, 83], 81: [2, 83], 82: [2, 83], 83: [2, 83], 84: [2, 83], 85: [2, 83] }, { 54: [2, 85] }, { 5: [2, 13], 14: [2, 13], 15: [2, 13], 19: [2, 13], 29: [2, 13], 34: [2, 13], 39: [2, 13], 44: [2, 13], 47: [2, 13], 48: [2, 13], 51: [2, 13], 55: [2, 13], 60: [2, 13] }, { 38: 55, 39: [1, 57], 43: 56, 44: [1, 58], 45: 111, 46: 110, 47: [2, 76] }, { 33: [2, 70], 40: 112, 65: [2, 70], 72: [2, 70], 75: [2, 70], 80: [2, 70], 81: [2, 70], 82: [2, 70], 83: [2, 70], 84: [2, 70], 85: [2, 70] }, { 47: [2, 18] }, { 5: [2, 14], 14: [2, 14], 15: [2, 14], 19: [2, 14], 29: [2, 14], 34: [2, 14], 39: [2, 14], 44: [2, 14], 47: [2, 14], 48: [2, 14], 51: [2, 14], 55: [2, 14], 60: [2, 14] }, { 33: [1, 113] }, { 33: [2, 87], 65: [2, 87], 72: [2, 87], 80: [2, 87], 81: [2, 87], 82: [2, 87], 83: [2, 87], 84: [2, 87], 85: [2, 87] }, { 33: [2, 89] }, { 20: 74, 63: 115, 64: 75, 65: [1, 43], 67: 114, 68: [2, 96], 69: 116, 70: 76, 71: 77, 72: [1, 78], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 33: [1, 117] }, { 32: 118, 33: [2, 62], 74: 119, 75: [1, 120] }, { 33: [2, 59], 65: [2, 59], 72: [2, 59], 75: [2, 59], 80: [2, 59], 81: [2, 59], 82: [2, 59], 83: [2, 59], 84: [2, 59], 85: [2, 59] }, { 33: [2, 61], 75: [2, 61] }, { 33: [2, 68], 37: 121, 74: 122, 75: [1, 120] }, { 33: [2, 65], 65: [2, 65], 72: [2, 65], 75: [2, 65], 80: [2, 65], 81: [2, 65], 82: [2, 65], 83: [2, 65], 84: [2, 65], 85: [2, 65] }, { 33: [2, 67], 75: [2, 67] }, { 23: [1, 123] }, { 23: [2, 51], 65: [2, 51], 72: [2, 51], 80: [2, 51], 81: [2, 51], 82: [2, 51], 83: [2, 51], 84: [2, 51], 85: [2, 51] }, { 23: [2, 53] }, { 33: [1, 124] }, { 33: [2, 91], 65: [2, 91], 72: [2, 91], 80: [2, 91], 81: [2, 91], 82: [2, 91], 83: [2, 91], 84: [2, 91], 85: [2, 91] }, { 33: [2, 93] }, { 5: [2, 22], 14: [2, 22], 15: [2, 22], 19: [2, 22], 29: [2, 22], 34: [2, 22], 39: [2, 22], 44: [2, 22], 47: [2, 22], 48: [2, 22], 51: [2, 22], 55: [2, 22], 60: [2, 22] }, { 23: [2, 99], 33: [2, 99], 54: [2, 99], 68: [2, 99], 72: [2, 99], 75: [2, 99] }, { 73: [1, 108] }, { 20: 74, 63: 125, 64: 75, 65: [1, 43], 72: [1, 35], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 23], 14: [2, 23], 15: [2, 23], 19: [2, 23], 29: [2, 23], 34: [2, 23], 39: [2, 23], 44: [2, 23], 47: [2, 23], 48: [2, 23], 51: [2, 23], 55: [2, 23], 60: [2, 23] }, { 47: [2, 19] }, { 47: [2, 77] }, { 20: 74, 33: [2, 72], 41: 126, 63: 127, 64: 75, 65: [1, 43], 69: 128, 70: 76, 71: 77, 72: [1, 78], 75: [2, 72], 78: 26, 79: 27, 80: [1, 28], 81: [1, 29], 82: [1, 30], 83: [1, 31], 84: [1, 32], 85: [1, 34], 86: 33 }, { 5: [2, 24], 14: [2, 24], 15: [2, 24], 19: [2, 24], 29: [2, 24], 34: [2, 24], 39: [2, 24], 44: [2, 24], 47: [2, 24], 48: [2, 24], 51: [2, 24], 55: [2, 24], 60: [2, 24] }, { 68: [1, 129] }, { 65: [2, 95], 68: [2, 95], 72: [2, 95], 80: [2, 95], 81: [2, 95], 82: [2, 95], 83: [2, 95], 84: [2, 95], 85: [2, 95] }, { 68: [2, 97] }, { 5: [2, 21], 14: [2, 21], 15: [2, 21], 19: [2, 21], 29: [2, 21], 34: [2, 21], 39: [2, 21], 44: [2, 21], 47: [2, 21], 48: [2, 21], 51: [2, 21], 55: [2, 21], 60: [2, 21] }, { 33: [1, 130] }, { 33: [2, 63] }, { 72: [1, 132], 76: 131 }, { 33: [1, 133] }, { 33: [2, 69] }, { 15: [2, 12], 18: [2, 12] }, { 14: [2, 26], 15: [2, 26], 19: [2, 26], 29: [2, 26], 34: [2, 26], 47: [2, 26], 48: [2, 26], 51: [2, 26], 55: [2, 26], 60: [2, 26] }, { 23: [2, 31], 33: [2, 31], 54: [2, 31], 68: [2, 31], 72: [2, 31], 75: [2, 31] }, { 33: [2, 74], 42: 134, 74: 135, 75: [1, 120] }, { 33: [2, 71], 65: [2, 71], 72: [2, 71], 75: [2, 71], 80: [2, 71], 81: [2, 71], 82: [2, 71], 83: [2, 71], 84: [2, 71], 85: [2, 71] }, { 33: [2, 73], 75: [2, 73] }, { 23: [2, 29], 33: [2, 29], 54: [2, 29], 65: [2, 29], 68: [2, 29], 72: [2, 29], 75: [2, 29], 80: [2, 29], 81: [2, 29], 82: [2, 29], 83: [2, 29], 84: [2, 29], 85: [2, 29] }, { 14: [2, 15], 15: [2, 15], 19: [2, 15], 29: [2, 15], 34: [2, 15], 39: [2, 15], 44: [2, 15], 47: [2, 15], 48: [2, 15], 51: [2, 15], 55: [2, 15], 60: [2, 15] }, { 72: [1, 137], 77: [1, 136] }, { 72: [2, 100], 77: [2, 100] }, { 14: [2, 16], 15: [2, 16], 19: [2, 16], 29: [2, 16], 34: [2, 16], 44: [2, 16], 47: [2, 16], 48: [2, 16], 51: [2, 16], 55: [2, 16], 60: [2, 16] }, { 33: [1, 138] }, { 33: [2, 75] }, { 33: [2, 32] }, { 72: [2, 101], 77: [2, 101] }, { 14: [2, 17], 15: [2, 17], 19: [2, 17], 29: [2, 17], 34: [2, 17], 39: [2, 17], 44: [2, 17], 47: [2, 17], 48: [2, 17], 51: [2, 17], 55: [2, 17], 60: [2, 17] }],\n\t        defaultActions: { 4: [2, 1], 54: [2, 55], 56: [2, 20], 60: [2, 57], 73: [2, 81], 82: [2, 85], 86: [2, 18], 90: [2, 89], 101: [2, 53], 104: [2, 93], 110: [2, 19], 111: [2, 77], 116: [2, 97], 119: [2, 63], 122: [2, 69], 135: [2, 75], 136: [2, 32] },\n\t        parseError: function parseError(str, hash) {\n\t            throw new Error(str);\n\t        },\n\t        parse: function parse(input) {\n\t            var self = this,\n\t                stack = [0],\n\t                vstack = [null],\n\t                lstack = [],\n\t                table = this.table,\n\t                yytext = \"\",\n\t                yylineno = 0,\n\t                yyleng = 0,\n\t                recovering = 0,\n\t                TERROR = 2,\n\t                EOF = 1;\n\t            this.lexer.setInput(input);\n\t            this.lexer.yy = this.yy;\n\t            this.yy.lexer = this.lexer;\n\t            this.yy.parser = this;\n\t            if (typeof this.lexer.yylloc == \"undefined\") this.lexer.yylloc = {};\n\t            var yyloc = this.lexer.yylloc;\n\t            lstack.push(yyloc);\n\t            var ranges = this.lexer.options && this.lexer.options.ranges;\n\t            if (typeof this.yy.parseError === \"function\") this.parseError = this.yy.parseError;\n\t            function popStack(n) {\n\t                stack.length = stack.length - 2 * n;\n\t                vstack.length = vstack.length - n;\n\t                lstack.length = lstack.length - n;\n\t            }\n\t            function lex() {\n\t                var token;\n\t                token = self.lexer.lex() || 1;\n\t                if (typeof token !== \"number\") {\n\t                    token = self.symbols_[token] || token;\n\t                }\n\t                return token;\n\t            }\n\t            var symbol,\n\t                preErrorSymbol,\n\t                state,\n\t                action,\n\t                a,\n\t                r,\n\t                yyval = {},\n\t                p,\n\t                len,\n\t                newState,\n\t                expected;\n\t            while (true) {\n\t                state = stack[stack.length - 1];\n\t                if (this.defaultActions[state]) {\n\t                    action = this.defaultActions[state];\n\t                } else {\n\t                    if (symbol === null || typeof symbol == \"undefined\") {\n\t                        symbol = lex();\n\t                    }\n\t                    action = table[state] && table[state][symbol];\n\t                }\n\t                if (typeof action === \"undefined\" || !action.length || !action[0]) {\n\t                    var errStr = \"\";\n\t                    if (!recovering) {\n\t                        expected = [];\n\t                        for (p in table[state]) if (this.terminals_[p] && p > 2) {\n\t                            expected.push(\"'\" + this.terminals_[p] + \"'\");\n\t                        }\n\t                        if (this.lexer.showPosition) {\n\t                            errStr = \"Parse error on line \" + (yylineno + 1) + \":\\n\" + this.lexer.showPosition() + \"\\nExpecting \" + expected.join(\", \") + \", got '\" + (this.terminals_[symbol] || symbol) + \"'\";\n\t                        } else {\n\t                            errStr = \"Parse error on line \" + (yylineno + 1) + \": Unexpected \" + (symbol == 1 ? \"end of input\" : \"'\" + (this.terminals_[symbol] || symbol) + \"'\");\n\t                        }\n\t                        this.parseError(errStr, { text: this.lexer.match, token: this.terminals_[symbol] || symbol, line: this.lexer.yylineno, loc: yyloc, expected: expected });\n\t                    }\n\t                }\n\t                if (action[0] instanceof Array && action.length > 1) {\n\t                    throw new Error(\"Parse Error: multiple actions possible at state: \" + state + \", token: \" + symbol);\n\t                }\n\t                switch (action[0]) {\n\t                    case 1:\n\t                        stack.push(symbol);\n\t                        vstack.push(this.lexer.yytext);\n\t                        lstack.push(this.lexer.yylloc);\n\t                        stack.push(action[1]);\n\t                        symbol = null;\n\t                        if (!preErrorSymbol) {\n\t                            yyleng = this.lexer.yyleng;\n\t                            yytext = this.lexer.yytext;\n\t                            yylineno = this.lexer.yylineno;\n\t                            yyloc = this.lexer.yylloc;\n\t                            if (recovering > 0) recovering--;\n\t                        } else {\n\t                            symbol = preErrorSymbol;\n\t                            preErrorSymbol = null;\n\t                        }\n\t                        break;\n\t                    case 2:\n\t                        len = this.productions_[action[1]][1];\n\t                        yyval.$ = vstack[vstack.length - len];\n\t                        yyval._$ = { first_line: lstack[lstack.length - (len || 1)].first_line, last_line: lstack[lstack.length - 1].last_line, first_column: lstack[lstack.length - (len || 1)].first_column, last_column: lstack[lstack.length - 1].last_column };\n\t                        if (ranges) {\n\t                            yyval._$.range = [lstack[lstack.length - (len || 1)].range[0], lstack[lstack.length - 1].range[1]];\n\t                        }\n\t                        r = this.performAction.call(yyval, yytext, yyleng, yylineno, this.yy, action[1], vstack, lstack);\n\t                        if (typeof r !== \"undefined\") {\n\t                            return r;\n\t                        }\n\t                        if (len) {\n\t                            stack = stack.slice(0, -1 * len * 2);\n\t                            vstack = vstack.slice(0, -1 * len);\n\t                            lstack = lstack.slice(0, -1 * len);\n\t                        }\n\t                        stack.push(this.productions_[action[1]][0]);\n\t                        vstack.push(yyval.$);\n\t                        lstack.push(yyval._$);\n\t                        newState = table[stack[stack.length - 2]][stack[stack.length - 1]];\n\t                        stack.push(newState);\n\t                        break;\n\t                    case 3:\n\t                        return true;\n\t                }\n\t            }\n\t            return true;\n\t        }\n\t    };\n\t    /* Jison generated lexer */\n\t    var lexer = (function () {\n\t        var lexer = { EOF: 1,\n\t            parseError: function parseError(str, hash) {\n\t                if (this.yy.parser) {\n\t                    this.yy.parser.parseError(str, hash);\n\t                } else {\n\t                    throw new Error(str);\n\t                }\n\t            },\n\t            setInput: function setInput(input) {\n\t                this._input = input;\n\t                this._more = this._less = this.done = false;\n\t                this.yylineno = this.yyleng = 0;\n\t                this.yytext = this.matched = this.match = '';\n\t                this.conditionStack = ['INITIAL'];\n\t                this.yylloc = { first_line: 1, first_column: 0, last_line: 1, last_column: 0 };\n\t                if (this.options.ranges) this.yylloc.range = [0, 0];\n\t                this.offset = 0;\n\t                return this;\n\t            },\n\t            input: function input() {\n\t                var ch = this._input[0];\n\t                this.yytext += ch;\n\t                this.yyleng++;\n\t                this.offset++;\n\t                this.match += ch;\n\t                this.matched += ch;\n\t                var lines = ch.match(/(?:\\r\\n?|\\n).*/g);\n\t                if (lines) {\n\t                    this.yylineno++;\n\t                    this.yylloc.last_line++;\n\t                } else {\n\t                    this.yylloc.last_column++;\n\t                }\n\t                if (this.options.ranges) this.yylloc.range[1]++;\n\n\t                this._input = this._input.slice(1);\n\t                return ch;\n\t            },\n\t            unput: function unput(ch) {\n\t                var len = ch.length;\n\t                var lines = ch.split(/(?:\\r\\n?|\\n)/g);\n\n\t                this._input = ch + this._input;\n\t                this.yytext = this.yytext.substr(0, this.yytext.length - len - 1);\n\t                //this.yyleng -= len;\n\t                this.offset -= len;\n\t                var oldLines = this.match.split(/(?:\\r\\n?|\\n)/g);\n\t                this.match = this.match.substr(0, this.match.length - 1);\n\t                this.matched = this.matched.substr(0, this.matched.length - 1);\n\n\t                if (lines.length - 1) this.yylineno -= lines.length - 1;\n\t                var r = this.yylloc.range;\n\n\t                this.yylloc = { first_line: this.yylloc.first_line,\n\t                    last_line: this.yylineno + 1,\n\t                    first_column: this.yylloc.first_column,\n\t                    last_column: lines ? (lines.length === oldLines.length ? this.yylloc.first_column : 0) + oldLines[oldLines.length - lines.length].length - lines[0].length : this.yylloc.first_column - len\n\t                };\n\n\t                if (this.options.ranges) {\n\t                    this.yylloc.range = [r[0], r[0] + this.yyleng - len];\n\t                }\n\t                return this;\n\t            },\n\t            more: function more() {\n\t                this._more = true;\n\t                return this;\n\t            },\n\t            less: function less(n) {\n\t                this.unput(this.match.slice(n));\n\t            },\n\t            pastInput: function pastInput() {\n\t                var past = this.matched.substr(0, this.matched.length - this.match.length);\n\t                return (past.length > 20 ? '...' : '') + past.substr(-20).replace(/\\n/g, \"\");\n\t            },\n\t            upcomingInput: function upcomingInput() {\n\t                var next = this.match;\n\t                if (next.length < 20) {\n\t                    next += this._input.substr(0, 20 - next.length);\n\t                }\n\t                return (next.substr(0, 20) + (next.length > 20 ? '...' : '')).replace(/\\n/g, \"\");\n\t            },\n\t            showPosition: function showPosition() {\n\t                var pre = this.pastInput();\n\t                var c = new Array(pre.length + 1).join(\"-\");\n\t                return pre + this.upcomingInput() + \"\\n\" + c + \"^\";\n\t            },\n\t            next: function next() {\n\t                if (this.done) {\n\t                    return this.EOF;\n\t                }\n\t                if (!this._input) this.done = true;\n\n\t                var token, match, tempMatch, index, col, lines;\n\t                if (!this._more) {\n\t                    this.yytext = '';\n\t                    this.match = '';\n\t                }\n\t                var rules = this._currentRules();\n\t                for (var i = 0; i < rules.length; i++) {\n\t                    tempMatch = this._input.match(this.rules[rules[i]]);\n\t                    if (tempMatch && (!match || tempMatch[0].length > match[0].length)) {\n\t                        match = tempMatch;\n\t                        index = i;\n\t                        if (!this.options.flex) break;\n\t                    }\n\t                }\n\t                if (match) {\n\t                    lines = match[0].match(/(?:\\r\\n?|\\n).*/g);\n\t                    if (lines) this.yylineno += lines.length;\n\t                    this.yylloc = { first_line: this.yylloc.last_line,\n\t                        last_line: this.yylineno + 1,\n\t                        first_column: this.yylloc.last_column,\n\t                        last_column: lines ? lines[lines.length - 1].length - lines[lines.length - 1].match(/\\r?\\n?/)[0].length : this.yylloc.last_column + match[0].length };\n\t                    this.yytext += match[0];\n\t                    this.match += match[0];\n\t                    this.matches = match;\n\t                    this.yyleng = this.yytext.length;\n\t                    if (this.options.ranges) {\n\t                        this.yylloc.range = [this.offset, this.offset += this.yyleng];\n\t                    }\n\t                    this._more = false;\n\t                    this._input = this._input.slice(match[0].length);\n\t                    this.matched += match[0];\n\t                    token = this.performAction.call(this, this.yy, this, rules[index], this.conditionStack[this.conditionStack.length - 1]);\n\t                    if (this.done && this._input) this.done = false;\n\t                    if (token) return token;else return;\n\t                }\n\t                if (this._input === \"\") {\n\t                    return this.EOF;\n\t                } else {\n\t                    return this.parseError('Lexical error on line ' + (this.yylineno + 1) + '. Unrecognized text.\\n' + this.showPosition(), { text: \"\", token: null, line: this.yylineno });\n\t                }\n\t            },\n\t            lex: function lex() {\n\t                var r = this.next();\n\t                if (typeof r !== 'undefined') {\n\t                    return r;\n\t                } else {\n\t                    return this.lex();\n\t                }\n\t            },\n\t            begin: function begin(condition) {\n\t                this.conditionStack.push(condition);\n\t            },\n\t            popState: function popState() {\n\t                return this.conditionStack.pop();\n\t            },\n\t            _currentRules: function _currentRules() {\n\t                return this.conditions[this.conditionStack[this.conditionStack.length - 1]].rules;\n\t            },\n\t            topState: function topState() {\n\t                return this.conditionStack[this.conditionStack.length - 2];\n\t            },\n\t            pushState: function begin(condition) {\n\t                this.begin(condition);\n\t            } };\n\t        lexer.options = {};\n\t        lexer.performAction = function anonymous(yy, yy_, $avoiding_name_collisions, YY_START) {\n\n\t            function strip(start, end) {\n\t                return yy_.yytext = yy_.yytext.substring(start, yy_.yyleng - end + start);\n\t            }\n\n\t            var YYSTATE = YY_START;\n\t            switch ($avoiding_name_collisions) {\n\t                case 0:\n\t                    if (yy_.yytext.slice(-2) === \"\\\\\\\\\") {\n\t                        strip(0, 1);\n\t                        this.begin(\"mu\");\n\t                    } else if (yy_.yytext.slice(-1) === \"\\\\\") {\n\t                        strip(0, 1);\n\t                        this.begin(\"emu\");\n\t                    } else {\n\t                        this.begin(\"mu\");\n\t                    }\n\t                    if (yy_.yytext) return 15;\n\n\t                    break;\n\t                case 1:\n\t                    return 15;\n\t                    break;\n\t                case 2:\n\t                    this.popState();\n\t                    return 15;\n\n\t                    break;\n\t                case 3:\n\t                    this.begin('raw');return 15;\n\t                    break;\n\t                case 4:\n\t                    this.popState();\n\t                    // Should be using `this.topState()` below, but it currently\n\t                    // returns the second top instead of the first top. Opened an\n\t                    // issue about it at https://github.com/zaach/jison/issues/291\n\t                    if (this.conditionStack[this.conditionStack.length - 1] === 'raw') {\n\t                        return 15;\n\t                    } else {\n\t                        strip(5, 9);\n\t                        return 'END_RAW_BLOCK';\n\t                    }\n\n\t                    break;\n\t                case 5:\n\t                    return 15;\n\t                    break;\n\t                case 6:\n\t                    this.popState();\n\t                    return 14;\n\n\t                    break;\n\t                case 7:\n\t                    return 65;\n\t                    break;\n\t                case 8:\n\t                    return 68;\n\t                    break;\n\t                case 9:\n\t                    return 19;\n\t                    break;\n\t                case 10:\n\t                    this.popState();\n\t                    this.begin('raw');\n\t                    return 23;\n\n\t                    break;\n\t                case 11:\n\t                    return 55;\n\t                    break;\n\t                case 12:\n\t                    return 60;\n\t                    break;\n\t                case 13:\n\t                    return 29;\n\t                    break;\n\t                case 14:\n\t                    return 47;\n\t                    break;\n\t                case 15:\n\t                    this.popState();return 44;\n\t                    break;\n\t                case 16:\n\t                    this.popState();return 44;\n\t                    break;\n\t                case 17:\n\t                    return 34;\n\t                    break;\n\t                case 18:\n\t                    return 39;\n\t                    break;\n\t                case 19:\n\t                    return 51;\n\t                    break;\n\t                case 20:\n\t                    return 48;\n\t                    break;\n\t                case 21:\n\t                    this.unput(yy_.yytext);\n\t                    this.popState();\n\t                    this.begin('com');\n\n\t                    break;\n\t                case 22:\n\t                    this.popState();\n\t                    return 14;\n\n\t                    break;\n\t                case 23:\n\t                    return 48;\n\t                    break;\n\t                case 24:\n\t                    return 73;\n\t                    break;\n\t                case 25:\n\t                    return 72;\n\t                    break;\n\t                case 26:\n\t                    return 72;\n\t                    break;\n\t                case 27:\n\t                    return 87;\n\t                    break;\n\t                case 28:\n\t                    // ignore whitespace\n\t                    break;\n\t                case 29:\n\t                    this.popState();return 54;\n\t                    break;\n\t                case 30:\n\t                    this.popState();return 33;\n\t                    break;\n\t                case 31:\n\t                    yy_.yytext = strip(1, 2).replace(/\\\\\"/g, '\"');return 80;\n\t                    break;\n\t                case 32:\n\t                    yy_.yytext = strip(1, 2).replace(/\\\\'/g, \"'\");return 80;\n\t                    break;\n\t                case 33:\n\t                    return 85;\n\t                    break;\n\t                case 34:\n\t                    return 82;\n\t                    break;\n\t                case 35:\n\t                    return 82;\n\t                    break;\n\t                case 36:\n\t                    return 83;\n\t                    break;\n\t                case 37:\n\t                    return 84;\n\t                    break;\n\t                case 38:\n\t                    return 81;\n\t                    break;\n\t                case 39:\n\t                    return 75;\n\t                    break;\n\t                case 40:\n\t                    return 77;\n\t                    break;\n\t                case 41:\n\t                    return 72;\n\t                    break;\n\t                case 42:\n\t                    yy_.yytext = yy_.yytext.replace(/\\\\([\\\\\\]])/g, '$1');return 72;\n\t                    break;\n\t                case 43:\n\t                    return 'INVALID';\n\t                    break;\n\t                case 44:\n\t                    return 5;\n\t                    break;\n\t            }\n\t        };\n\t        lexer.rules = [/^(?:[^\\x00]*?(?=(\\{\\{)))/, /^(?:[^\\x00]+)/, /^(?:[^\\x00]{2,}?(?=(\\{\\{|\\\\\\{\\{|\\\\\\\\\\{\\{|$)))/, /^(?:\\{\\{\\{\\{(?=[^/]))/, /^(?:\\{\\{\\{\\{\\/[^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=[=}\\s\\/.])\\}\\}\\}\\})/, /^(?:[^\\x00]+?(?=(\\{\\{\\{\\{)))/, /^(?:[\\s\\S]*?--(~)?\\}\\})/, /^(?:\\()/, /^(?:\\))/, /^(?:\\{\\{\\{\\{)/, /^(?:\\}\\}\\}\\})/, /^(?:\\{\\{(~)?>)/, /^(?:\\{\\{(~)?#>)/, /^(?:\\{\\{(~)?#\\*?)/, /^(?:\\{\\{(~)?\\/)/, /^(?:\\{\\{(~)?\\^\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\s*else\\s*(~)?\\}\\})/, /^(?:\\{\\{(~)?\\^)/, /^(?:\\{\\{(~)?\\s*else\\b)/, /^(?:\\{\\{(~)?\\{)/, /^(?:\\{\\{(~)?&)/, /^(?:\\{\\{(~)?!--)/, /^(?:\\{\\{(~)?![\\s\\S]*?\\}\\})/, /^(?:\\{\\{(~)?\\*?)/, /^(?:=)/, /^(?:\\.\\.)/, /^(?:\\.(?=([=~}\\s\\/.)|])))/, /^(?:[\\/.])/, /^(?:\\s+)/, /^(?:\\}(~)?\\}\\})/, /^(?:(~)?\\}\\})/, /^(?:\"(\\\\[\"]|[^\"])*\")/, /^(?:'(\\\\[']|[^'])*')/, /^(?:@)/, /^(?:true(?=([~}\\s)])))/, /^(?:false(?=([~}\\s)])))/, /^(?:undefined(?=([~}\\s)])))/, /^(?:null(?=([~}\\s)])))/, /^(?:-?[0-9]+(?:\\.[0-9]+)?(?=([~}\\s)])))/, /^(?:as\\s+\\|)/, /^(?:\\|)/, /^(?:([^\\s!\"#%-,\\.\\/;->@\\[-\\^`\\{-~]+(?=([=~}\\s\\/.)|]))))/, /^(?:\\[(\\\\\\]|[^\\]])*\\])/, /^(?:.)/, /^(?:$)/];\n\t        lexer.conditions = { \"mu\": { \"rules\": [7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44], \"inclusive\": false }, \"emu\": { \"rules\": [2], \"inclusive\": false }, \"com\": { \"rules\": [6], \"inclusive\": false }, \"raw\": { \"rules\": [3, 4, 5], \"inclusive\": false }, \"INITIAL\": { \"rules\": [0, 1, 44], \"inclusive\": true } };\n\t        return lexer;\n\t    })();\n\t    parser.lexer = lexer;\n\t    function Parser() {\n\t        this.yy = {};\n\t    }Parser.prototype = parser;parser.Parser = Parser;\n\t    return new Parser();\n\t})();exports[\"default\"] = handlebars;\n\tmodule.exports = exports[\"default\"];\n\n/***/ }),\n/* 87 */\n/***/ (function(module, exports, __nested_webpack_require_129022__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_129022__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _visitor = __nested_webpack_require_129022__(88);\n\n\tvar _visitor2 = _interopRequireDefault(_visitor);\n\n\tfunction WhitespaceControl() {\n\t  var options = arguments.length <= 0 || arguments[0] === undefined ? {} : arguments[0];\n\n\t  this.options = options;\n\t}\n\tWhitespaceControl.prototype = new _visitor2['default']();\n\n\tWhitespaceControl.prototype.Program = function (program) {\n\t  var doStandalone = !this.options.ignoreStandalone;\n\n\t  var isRoot = !this.isRootSeen;\n\t  this.isRootSeen = true;\n\n\t  var body = program.body;\n\t  for (var i = 0, l = body.length; i < l; i++) {\n\t    var current = body[i],\n\t        strip = this.accept(current);\n\n\t    if (!strip) {\n\t      continue;\n\t    }\n\n\t    var _isPrevWhitespace = isPrevWhitespace(body, i, isRoot),\n\t        _isNextWhitespace = isNextWhitespace(body, i, isRoot),\n\t        openStandalone = strip.openStandalone && _isPrevWhitespace,\n\t        closeStandalone = strip.closeStandalone && _isNextWhitespace,\n\t        inlineStandalone = strip.inlineStandalone && _isPrevWhitespace && _isNextWhitespace;\n\n\t    if (strip.close) {\n\t      omitRight(body, i, true);\n\t    }\n\t    if (strip.open) {\n\t      omitLeft(body, i, true);\n\t    }\n\n\t    if (doStandalone && inlineStandalone) {\n\t      omitRight(body, i);\n\n\t      if (omitLeft(body, i)) {\n\t        // If we are on a standalone node, save the indent info for partials\n\t        if (current.type === 'PartialStatement') {\n\t          // Pull out the whitespace from the final line\n\t          current.indent = /([ \\t]+$)/.exec(body[i - 1].original)[1];\n\t        }\n\t      }\n\t    }\n\t    if (doStandalone && openStandalone) {\n\t      omitRight((current.program || current.inverse).body);\n\n\t      // Strip out the previous content node if it's whitespace only\n\t      omitLeft(body, i);\n\t    }\n\t    if (doStandalone && closeStandalone) {\n\t      // Always strip the next node\n\t      omitRight(body, i);\n\n\t      omitLeft((current.inverse || current.program).body);\n\t    }\n\t  }\n\n\t  return program;\n\t};\n\n\tWhitespaceControl.prototype.BlockStatement = WhitespaceControl.prototype.DecoratorBlock = WhitespaceControl.prototype.PartialBlockStatement = function (block) {\n\t  this.accept(block.program);\n\t  this.accept(block.inverse);\n\n\t  // Find the inverse program that is involed with whitespace stripping.\n\t  var program = block.program || block.inverse,\n\t      inverse = block.program && block.inverse,\n\t      firstInverse = inverse,\n\t      lastInverse = inverse;\n\n\t  if (inverse && inverse.chained) {\n\t    firstInverse = inverse.body[0].program;\n\n\t    // Walk the inverse chain to find the last inverse that is actually in the chain.\n\t    while (lastInverse.chained) {\n\t      lastInverse = lastInverse.body[lastInverse.body.length - 1].program;\n\t    }\n\t  }\n\n\t  var strip = {\n\t    open: block.openStrip.open,\n\t    close: block.closeStrip.close,\n\n\t    // Determine the standalone candiacy. Basically flag our content as being possibly standalone\n\t    // so our parent can determine if we actually are standalone\n\t    openStandalone: isNextWhitespace(program.body),\n\t    closeStandalone: isPrevWhitespace((firstInverse || program).body)\n\t  };\n\n\t  if (block.openStrip.close) {\n\t    omitRight(program.body, null, true);\n\t  }\n\n\t  if (inverse) {\n\t    var inverseStrip = block.inverseStrip;\n\n\t    if (inverseStrip.open) {\n\t      omitLeft(program.body, null, true);\n\t    }\n\n\t    if (inverseStrip.close) {\n\t      omitRight(firstInverse.body, null, true);\n\t    }\n\t    if (block.closeStrip.open) {\n\t      omitLeft(lastInverse.body, null, true);\n\t    }\n\n\t    // Find standalone else statments\n\t    if (!this.options.ignoreStandalone && isPrevWhitespace(program.body) && isNextWhitespace(firstInverse.body)) {\n\t      omitLeft(program.body);\n\t      omitRight(firstInverse.body);\n\t    }\n\t  } else if (block.closeStrip.open) {\n\t    omitLeft(program.body, null, true);\n\t  }\n\n\t  return strip;\n\t};\n\n\tWhitespaceControl.prototype.Decorator = WhitespaceControl.prototype.MustacheStatement = function (mustache) {\n\t  return mustache.strip;\n\t};\n\n\tWhitespaceControl.prototype.PartialStatement = WhitespaceControl.prototype.CommentStatement = function (node) {\n\t  /* istanbul ignore next */\n\t  var strip = node.strip || {};\n\t  return {\n\t    inlineStandalone: true,\n\t    open: strip.open,\n\t    close: strip.close\n\t  };\n\t};\n\n\tfunction isPrevWhitespace(body, i, isRoot) {\n\t  if (i === undefined) {\n\t    i = body.length;\n\t  }\n\n\t  // Nodes that end with newlines are considered whitespace (but are special\n\t  // cased for strip operations)\n\t  var prev = body[i - 1],\n\t      sibling = body[i - 2];\n\t  if (!prev) {\n\t    return isRoot;\n\t  }\n\n\t  if (prev.type === 'ContentStatement') {\n\t    return (sibling || !isRoot ? /\\r?\\n\\s*?$/ : /(^|\\r?\\n)\\s*?$/).test(prev.original);\n\t  }\n\t}\n\tfunction isNextWhitespace(body, i, isRoot) {\n\t  if (i === undefined) {\n\t    i = -1;\n\t  }\n\n\t  var next = body[i + 1],\n\t      sibling = body[i + 2];\n\t  if (!next) {\n\t    return isRoot;\n\t  }\n\n\t  if (next.type === 'ContentStatement') {\n\t    return (sibling || !isRoot ? /^\\s*?\\r?\\n/ : /^\\s*?(\\r?\\n|$)/).test(next.original);\n\t  }\n\t}\n\n\t// Marks the node to the right of the position as omitted.\n\t// I.e. {{foo}}' ' will mark the ' ' node as omitted.\n\t//\n\t// If i is undefined, then the first child will be marked as such.\n\t//\n\t// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n\t// content is met.\n\tfunction omitRight(body, i, multiple) {\n\t  var current = body[i == null ? 0 : i + 1];\n\t  if (!current || current.type !== 'ContentStatement' || !multiple && current.rightStripped) {\n\t    return;\n\t  }\n\n\t  var original = current.value;\n\t  current.value = current.value.replace(multiple ? /^\\s+/ : /^[ \\t]*\\r?\\n?/, '');\n\t  current.rightStripped = current.value !== original;\n\t}\n\n\t// Marks the node to the left of the position as omitted.\n\t// I.e. ' '{{foo}} will mark the ' ' node as omitted.\n\t//\n\t// If i is undefined then the last child will be marked as such.\n\t//\n\t// If mulitple is truthy then all whitespace will be stripped out until non-whitespace\n\t// content is met.\n\tfunction omitLeft(body, i, multiple) {\n\t  var current = body[i == null ? body.length - 1 : i - 1];\n\t  if (!current || current.type !== 'ContentStatement' || !multiple && current.leftStripped) {\n\t    return;\n\t  }\n\n\t  // We omit the last node if it's whitespace only and not preceded by a non-content node.\n\t  var original = current.value;\n\t  current.value = current.value.replace(multiple ? /\\s+$/ : /[ \\t]+$/, '');\n\t  current.leftStripped = current.value !== original;\n\t  return current.leftStripped;\n\t}\n\n\texports['default'] = WhitespaceControl;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 88 */\n/***/ (function(module, exports, __nested_webpack_require_135807__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_135807__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _exception = __nested_webpack_require_135807__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tfunction Visitor() {\n\t  this.parents = [];\n\t}\n\n\tVisitor.prototype = {\n\t  constructor: Visitor,\n\t  mutating: false,\n\n\t  // Visits a given value. If mutating, will replace the value if necessary.\n\t  acceptKey: function acceptKey(node, name) {\n\t    var value = this.accept(node[name]);\n\t    if (this.mutating) {\n\t      // Hacky sanity check: This may have a few false positives for type for the helper\n\t      // methods but will generally do the right thing without a lot of overhead.\n\t      if (value && !Visitor.prototype[value.type]) {\n\t        throw new _exception2['default']('Unexpected node type \"' + value.type + '\" found when accepting ' + name + ' on ' + node.type);\n\t      }\n\t      node[name] = value;\n\t    }\n\t  },\n\n\t  // Performs an accept operation with added sanity check to ensure\n\t  // required keys are not removed.\n\t  acceptRequired: function acceptRequired(node, name) {\n\t    this.acceptKey(node, name);\n\n\t    if (!node[name]) {\n\t      throw new _exception2['default'](node.type + ' requires ' + name);\n\t    }\n\t  },\n\n\t  // Traverses a given array. If mutating, empty respnses will be removed\n\t  // for child elements.\n\t  acceptArray: function acceptArray(array) {\n\t    for (var i = 0, l = array.length; i < l; i++) {\n\t      this.acceptKey(array, i);\n\n\t      if (!array[i]) {\n\t        array.splice(i, 1);\n\t        i--;\n\t        l--;\n\t      }\n\t    }\n\t  },\n\n\t  accept: function accept(object) {\n\t    if (!object) {\n\t      return;\n\t    }\n\n\t    /* istanbul ignore next: Sanity code */\n\t    if (!this[object.type]) {\n\t      throw new _exception2['default']('Unknown type: ' + object.type, object);\n\t    }\n\n\t    if (this.current) {\n\t      this.parents.unshift(this.current);\n\t    }\n\t    this.current = object;\n\n\t    var ret = this[object.type](object);\n\n\t    this.current = this.parents.shift();\n\n\t    if (!this.mutating || ret) {\n\t      return ret;\n\t    } else if (ret !== false) {\n\t      return object;\n\t    }\n\t  },\n\n\t  Program: function Program(program) {\n\t    this.acceptArray(program.body);\n\t  },\n\n\t  MustacheStatement: visitSubExpression,\n\t  Decorator: visitSubExpression,\n\n\t  BlockStatement: visitBlock,\n\t  DecoratorBlock: visitBlock,\n\n\t  PartialStatement: visitPartial,\n\t  PartialBlockStatement: function PartialBlockStatement(partial) {\n\t    visitPartial.call(this, partial);\n\n\t    this.acceptKey(partial, 'program');\n\t  },\n\n\t  ContentStatement: function ContentStatement() /* content */{},\n\t  CommentStatement: function CommentStatement() /* comment */{},\n\n\t  SubExpression: visitSubExpression,\n\n\t  PathExpression: function PathExpression() /* path */{},\n\n\t  StringLiteral: function StringLiteral() /* string */{},\n\t  NumberLiteral: function NumberLiteral() /* number */{},\n\t  BooleanLiteral: function BooleanLiteral() /* bool */{},\n\t  UndefinedLiteral: function UndefinedLiteral() /* literal */{},\n\t  NullLiteral: function NullLiteral() /* literal */{},\n\n\t  Hash: function Hash(hash) {\n\t    this.acceptArray(hash.pairs);\n\t  },\n\t  HashPair: function HashPair(pair) {\n\t    this.acceptRequired(pair, 'value');\n\t  }\n\t};\n\n\tfunction visitSubExpression(mustache) {\n\t  this.acceptRequired(mustache, 'path');\n\t  this.acceptArray(mustache.params);\n\t  this.acceptKey(mustache, 'hash');\n\t}\n\tfunction visitBlock(block) {\n\t  visitSubExpression.call(this, block);\n\n\t  this.acceptKey(block, 'program');\n\t  this.acceptKey(block, 'inverse');\n\t}\n\tfunction visitPartial(partial) {\n\t  this.acceptRequired(partial, 'name');\n\t  this.acceptArray(partial.params);\n\t  this.acceptKey(partial, 'hash');\n\t}\n\n\texports['default'] = Visitor;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 89 */\n/***/ (function(module, exports, __nested_webpack_require_139663__) {\n\n\t'use strict';\n\n\tvar _interopRequireDefault = __nested_webpack_require_139663__(1)['default'];\n\n\texports.__esModule = true;\n\texports.SourceLocation = SourceLocation;\n\texports.id = id;\n\texports.stripFlags = stripFlags;\n\texports.stripComment = stripComment;\n\texports.preparePath = preparePath;\n\texports.prepareMustache = prepareMustache;\n\texports.prepareRawBlock = prepareRawBlock;\n\texports.prepareBlock = prepareBlock;\n\texports.prepareProgram = prepareProgram;\n\texports.preparePartialBlock = preparePartialBlock;\n\n\tvar _exception = __nested_webpack_require_139663__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tfunction validateClose(open, close) {\n\t  close = close.path ? close.path.original : close;\n\n\t  if (open.path.original !== close) {\n\t    var errorNode = { loc: open.path.loc };\n\n\t    throw new _exception2['default'](open.path.original + \" doesn't match \" + close, errorNode);\n\t  }\n\t}\n\n\tfunction SourceLocation(source, locInfo) {\n\t  this.source = source;\n\t  this.start = {\n\t    line: locInfo.first_line,\n\t    column: locInfo.first_column\n\t  };\n\t  this.end = {\n\t    line: locInfo.last_line,\n\t    column: locInfo.last_column\n\t  };\n\t}\n\n\tfunction id(token) {\n\t  if (/^\\[.*\\]$/.test(token)) {\n\t    return token.substring(1, token.length - 1);\n\t  } else {\n\t    return token;\n\t  }\n\t}\n\n\tfunction stripFlags(open, close) {\n\t  return {\n\t    open: open.charAt(2) === '~',\n\t    close: close.charAt(close.length - 3) === '~'\n\t  };\n\t}\n\n\tfunction stripComment(comment) {\n\t  return comment.replace(/^\\{\\{~?!-?-?/, '').replace(/-?-?~?\\}\\}$/, '');\n\t}\n\n\tfunction preparePath(data, parts, loc) {\n\t  loc = this.locInfo(loc);\n\n\t  var original = data ? '@' : '',\n\t      dig = [],\n\t      depth = 0;\n\n\t  for (var i = 0, l = parts.length; i < l; i++) {\n\t    var part = parts[i].part,\n\n\t    // If we have [] syntax then we do not treat path references as operators,\n\t    // i.e. foo.[this] resolves to approximately context.foo['this']\n\t    isLiteral = parts[i].original !== part;\n\t    original += (parts[i].separator || '') + part;\n\n\t    if (!isLiteral && (part === '..' || part === '.' || part === 'this')) {\n\t      if (dig.length > 0) {\n\t        throw new _exception2['default']('Invalid path: ' + original, { loc: loc });\n\t      } else if (part === '..') {\n\t        depth++;\n\t      }\n\t    } else {\n\t      dig.push(part);\n\t    }\n\t  }\n\n\t  return {\n\t    type: 'PathExpression',\n\t    data: data,\n\t    depth: depth,\n\t    parts: dig,\n\t    original: original,\n\t    loc: loc\n\t  };\n\t}\n\n\tfunction prepareMustache(path, params, hash, open, strip, locInfo) {\n\t  // Must use charAt to support IE pre-10\n\t  var escapeFlag = open.charAt(3) || open.charAt(2),\n\t      escaped = escapeFlag !== '{' && escapeFlag !== '&';\n\n\t  var decorator = /\\*/.test(open);\n\t  return {\n\t    type: decorator ? 'Decorator' : 'MustacheStatement',\n\t    path: path,\n\t    params: params,\n\t    hash: hash,\n\t    escaped: escaped,\n\t    strip: strip,\n\t    loc: this.locInfo(locInfo)\n\t  };\n\t}\n\n\tfunction prepareRawBlock(openRawBlock, contents, close, locInfo) {\n\t  validateClose(openRawBlock, close);\n\n\t  locInfo = this.locInfo(locInfo);\n\t  var program = {\n\t    type: 'Program',\n\t    body: contents,\n\t    strip: {},\n\t    loc: locInfo\n\t  };\n\n\t  return {\n\t    type: 'BlockStatement',\n\t    path: openRawBlock.path,\n\t    params: openRawBlock.params,\n\t    hash: openRawBlock.hash,\n\t    program: program,\n\t    openStrip: {},\n\t    inverseStrip: {},\n\t    closeStrip: {},\n\t    loc: locInfo\n\t  };\n\t}\n\n\tfunction prepareBlock(openBlock, program, inverseAndProgram, close, inverted, locInfo) {\n\t  if (close && close.path) {\n\t    validateClose(openBlock, close);\n\t  }\n\n\t  var decorator = /\\*/.test(openBlock.open);\n\n\t  program.blockParams = openBlock.blockParams;\n\n\t  var inverse = undefined,\n\t      inverseStrip = undefined;\n\n\t  if (inverseAndProgram) {\n\t    if (decorator) {\n\t      throw new _exception2['default']('Unexpected inverse block on decorator', inverseAndProgram);\n\t    }\n\n\t    if (inverseAndProgram.chain) {\n\t      inverseAndProgram.program.body[0].closeStrip = close.strip;\n\t    }\n\n\t    inverseStrip = inverseAndProgram.strip;\n\t    inverse = inverseAndProgram.program;\n\t  }\n\n\t  if (inverted) {\n\t    inverted = inverse;\n\t    inverse = program;\n\t    program = inverted;\n\t  }\n\n\t  return {\n\t    type: decorator ? 'DecoratorBlock' : 'BlockStatement',\n\t    path: openBlock.path,\n\t    params: openBlock.params,\n\t    hash: openBlock.hash,\n\t    program: program,\n\t    inverse: inverse,\n\t    openStrip: openBlock.strip,\n\t    inverseStrip: inverseStrip,\n\t    closeStrip: close && close.strip,\n\t    loc: this.locInfo(locInfo)\n\t  };\n\t}\n\n\tfunction prepareProgram(statements, loc) {\n\t  if (!loc && statements.length) {\n\t    var firstLoc = statements[0].loc,\n\t        lastLoc = statements[statements.length - 1].loc;\n\n\t    /* istanbul ignore else */\n\t    if (firstLoc && lastLoc) {\n\t      loc = {\n\t        source: firstLoc.source,\n\t        start: {\n\t          line: firstLoc.start.line,\n\t          column: firstLoc.start.column\n\t        },\n\t        end: {\n\t          line: lastLoc.end.line,\n\t          column: lastLoc.end.column\n\t        }\n\t      };\n\t    }\n\t  }\n\n\t  return {\n\t    type: 'Program',\n\t    body: statements,\n\t    strip: {},\n\t    loc: loc\n\t  };\n\t}\n\n\tfunction preparePartialBlock(open, program, close, locInfo) {\n\t  validateClose(open, close);\n\n\t  return {\n\t    type: 'PartialBlockStatement',\n\t    name: open.path,\n\t    params: open.params,\n\t    hash: open.hash,\n\t    program: program,\n\t    openStrip: open.strip,\n\t    closeStrip: close && close.strip,\n\t    loc: this.locInfo(locInfo)\n\t  };\n\t}\n\n/***/ }),\n/* 90 */\n/***/ (function(module, exports, __nested_webpack_require_145258__) {\n\n\t/* eslint-disable new-cap */\n\n\t'use strict';\n\n\tvar _Object$create = __nested_webpack_require_145258__(74)['default'];\n\n\tvar _interopRequireDefault = __nested_webpack_require_145258__(1)['default'];\n\n\texports.__esModule = true;\n\texports.Compiler = Compiler;\n\texports.precompile = precompile;\n\texports.compile = compile;\n\n\tvar _exception = __nested_webpack_require_145258__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _utils = __nested_webpack_require_145258__(5);\n\n\tvar _ast = __nested_webpack_require_145258__(84);\n\n\tvar _ast2 = _interopRequireDefault(_ast);\n\n\tvar slice = [].slice;\n\n\tfunction Compiler() {}\n\n\t// the foundHelper register will disambiguate helper lookup from finding a\n\t// function in a context. This is necessary for mustache compatibility, which\n\t// requires that context functions in blocks are evaluated by blockHelperMissing,\n\t// and then proceed as if the resulting value was provided to blockHelperMissing.\n\n\tCompiler.prototype = {\n\t  compiler: Compiler,\n\n\t  equals: function equals(other) {\n\t    var len = this.opcodes.length;\n\t    if (other.opcodes.length !== len) {\n\t      return false;\n\t    }\n\n\t    for (var i = 0; i < len; i++) {\n\t      var opcode = this.opcodes[i],\n\t          otherOpcode = other.opcodes[i];\n\t      if (opcode.opcode !== otherOpcode.opcode || !argEquals(opcode.args, otherOpcode.args)) {\n\t        return false;\n\t      }\n\t    }\n\n\t    // We know that length is the same between the two arrays because they are directly tied\n\t    // to the opcode behavior above.\n\t    len = this.children.length;\n\t    for (var i = 0; i < len; i++) {\n\t      if (!this.children[i].equals(other.children[i])) {\n\t        return false;\n\t      }\n\t    }\n\n\t    return true;\n\t  },\n\n\t  guid: 0,\n\n\t  compile: function compile(program, options) {\n\t    this.sourceNode = [];\n\t    this.opcodes = [];\n\t    this.children = [];\n\t    this.options = options;\n\t    this.stringParams = options.stringParams;\n\t    this.trackIds = options.trackIds;\n\n\t    options.blockParams = options.blockParams || [];\n\n\t    options.knownHelpers = _utils.extend(_Object$create(null), {\n\t      helperMissing: true,\n\t      blockHelperMissing: true,\n\t      each: true,\n\t      'if': true,\n\t      unless: true,\n\t      'with': true,\n\t      log: true,\n\t      lookup: true\n\t    }, options.knownHelpers);\n\n\t    return this.accept(program);\n\t  },\n\n\t  compileProgram: function compileProgram(program) {\n\t    var childCompiler = new this.compiler(),\n\t        // eslint-disable-line new-cap\n\t    result = childCompiler.compile(program, this.options),\n\t        guid = this.guid++;\n\n\t    this.usePartial = this.usePartial || result.usePartial;\n\n\t    this.children[guid] = result;\n\t    this.useDepths = this.useDepths || result.useDepths;\n\n\t    return guid;\n\t  },\n\n\t  accept: function accept(node) {\n\t    /* istanbul ignore next: Sanity code */\n\t    if (!this[node.type]) {\n\t      throw new _exception2['default']('Unknown type: ' + node.type, node);\n\t    }\n\n\t    this.sourceNode.unshift(node);\n\t    var ret = this[node.type](node);\n\t    this.sourceNode.shift();\n\t    return ret;\n\t  },\n\n\t  Program: function Program(program) {\n\t    this.options.blockParams.unshift(program.blockParams);\n\n\t    var body = program.body,\n\t        bodyLength = body.length;\n\t    for (var i = 0; i < bodyLength; i++) {\n\t      this.accept(body[i]);\n\t    }\n\n\t    this.options.blockParams.shift();\n\n\t    this.isSimple = bodyLength === 1;\n\t    this.blockParams = program.blockParams ? program.blockParams.length : 0;\n\n\t    return this;\n\t  },\n\n\t  BlockStatement: function BlockStatement(block) {\n\t    transformLiteralToPath(block);\n\n\t    var program = block.program,\n\t        inverse = block.inverse;\n\n\t    program = program && this.compileProgram(program);\n\t    inverse = inverse && this.compileProgram(inverse);\n\n\t    var type = this.classifySexpr(block);\n\n\t    if (type === 'helper') {\n\t      this.helperSexpr(block, program, inverse);\n\t    } else if (type === 'simple') {\n\t      this.simpleSexpr(block);\n\n\t      // now that the simple mustache is resolved, we need to\n\t      // evaluate it by executing `blockHelperMissing`\n\t      this.opcode('pushProgram', program);\n\t      this.opcode('pushProgram', inverse);\n\t      this.opcode('emptyHash');\n\t      this.opcode('blockValue', block.path.original);\n\t    } else {\n\t      this.ambiguousSexpr(block, program, inverse);\n\n\t      // now that the simple mustache is resolved, we need to\n\t      // evaluate it by executing `blockHelperMissing`\n\t      this.opcode('pushProgram', program);\n\t      this.opcode('pushProgram', inverse);\n\t      this.opcode('emptyHash');\n\t      this.opcode('ambiguousBlockValue');\n\t    }\n\n\t    this.opcode('append');\n\t  },\n\n\t  DecoratorBlock: function DecoratorBlock(decorator) {\n\t    var program = decorator.program && this.compileProgram(decorator.program);\n\t    var params = this.setupFullMustacheParams(decorator, program, undefined),\n\t        path = decorator.path;\n\n\t    this.useDecorators = true;\n\t    this.opcode('registerDecorator', params.length, path.original);\n\t  },\n\n\t  PartialStatement: function PartialStatement(partial) {\n\t    this.usePartial = true;\n\n\t    var program = partial.program;\n\t    if (program) {\n\t      program = this.compileProgram(partial.program);\n\t    }\n\n\t    var params = partial.params;\n\t    if (params.length > 1) {\n\t      throw new _exception2['default']('Unsupported number of partial arguments: ' + params.length, partial);\n\t    } else if (!params.length) {\n\t      if (this.options.explicitPartialContext) {\n\t        this.opcode('pushLiteral', 'undefined');\n\t      } else {\n\t        params.push({ type: 'PathExpression', parts: [], depth: 0 });\n\t      }\n\t    }\n\n\t    var partialName = partial.name.original,\n\t        isDynamic = partial.name.type === 'SubExpression';\n\t    if (isDynamic) {\n\t      this.accept(partial.name);\n\t    }\n\n\t    this.setupFullMustacheParams(partial, program, undefined, true);\n\n\t    var indent = partial.indent || '';\n\t    if (this.options.preventIndent && indent) {\n\t      this.opcode('appendContent', indent);\n\t      indent = '';\n\t    }\n\n\t    this.opcode('invokePartial', isDynamic, partialName, indent);\n\t    this.opcode('append');\n\t  },\n\t  PartialBlockStatement: function PartialBlockStatement(partialBlock) {\n\t    this.PartialStatement(partialBlock);\n\t  },\n\n\t  MustacheStatement: function MustacheStatement(mustache) {\n\t    this.SubExpression(mustache);\n\n\t    if (mustache.escaped && !this.options.noEscape) {\n\t      this.opcode('appendEscaped');\n\t    } else {\n\t      this.opcode('append');\n\t    }\n\t  },\n\t  Decorator: function Decorator(decorator) {\n\t    this.DecoratorBlock(decorator);\n\t  },\n\n\t  ContentStatement: function ContentStatement(content) {\n\t    if (content.value) {\n\t      this.opcode('appendContent', content.value);\n\t    }\n\t  },\n\n\t  CommentStatement: function CommentStatement() {},\n\n\t  SubExpression: function SubExpression(sexpr) {\n\t    transformLiteralToPath(sexpr);\n\t    var type = this.classifySexpr(sexpr);\n\n\t    if (type === 'simple') {\n\t      this.simpleSexpr(sexpr);\n\t    } else if (type === 'helper') {\n\t      this.helperSexpr(sexpr);\n\t    } else {\n\t      this.ambiguousSexpr(sexpr);\n\t    }\n\t  },\n\t  ambiguousSexpr: function ambiguousSexpr(sexpr, program, inverse) {\n\t    var path = sexpr.path,\n\t        name = path.parts[0],\n\t        isBlock = program != null || inverse != null;\n\n\t    this.opcode('getContext', path.depth);\n\n\t    this.opcode('pushProgram', program);\n\t    this.opcode('pushProgram', inverse);\n\n\t    path.strict = true;\n\t    this.accept(path);\n\n\t    this.opcode('invokeAmbiguous', name, isBlock);\n\t  },\n\n\t  simpleSexpr: function simpleSexpr(sexpr) {\n\t    var path = sexpr.path;\n\t    path.strict = true;\n\t    this.accept(path);\n\t    this.opcode('resolvePossibleLambda');\n\t  },\n\n\t  helperSexpr: function helperSexpr(sexpr, program, inverse) {\n\t    var params = this.setupFullMustacheParams(sexpr, program, inverse),\n\t        path = sexpr.path,\n\t        name = path.parts[0];\n\n\t    if (this.options.knownHelpers[name]) {\n\t      this.opcode('invokeKnownHelper', params.length, name);\n\t    } else if (this.options.knownHelpersOnly) {\n\t      throw new _exception2['default']('You specified knownHelpersOnly, but used the unknown helper ' + name, sexpr);\n\t    } else {\n\t      path.strict = true;\n\t      path.falsy = true;\n\n\t      this.accept(path);\n\t      this.opcode('invokeHelper', params.length, path.original, _ast2['default'].helpers.simpleId(path));\n\t    }\n\t  },\n\n\t  PathExpression: function PathExpression(path) {\n\t    this.addDepth(path.depth);\n\t    this.opcode('getContext', path.depth);\n\n\t    var name = path.parts[0],\n\t        scoped = _ast2['default'].helpers.scopedId(path),\n\t        blockParamId = !path.depth && !scoped && this.blockParamIndex(name);\n\n\t    if (blockParamId) {\n\t      this.opcode('lookupBlockParam', blockParamId, path.parts);\n\t    } else if (!name) {\n\t      // Context reference, i.e. `{{foo .}}` or `{{foo ..}}`\n\t      this.opcode('pushContext');\n\t    } else if (path.data) {\n\t      this.options.data = true;\n\t      this.opcode('lookupData', path.depth, path.parts, path.strict);\n\t    } else {\n\t      this.opcode('lookupOnContext', path.parts, path.falsy, path.strict, scoped);\n\t    }\n\t  },\n\n\t  StringLiteral: function StringLiteral(string) {\n\t    this.opcode('pushString', string.value);\n\t  },\n\n\t  NumberLiteral: function NumberLiteral(number) {\n\t    this.opcode('pushLiteral', number.value);\n\t  },\n\n\t  BooleanLiteral: function BooleanLiteral(bool) {\n\t    this.opcode('pushLiteral', bool.value);\n\t  },\n\n\t  UndefinedLiteral: function UndefinedLiteral() {\n\t    this.opcode('pushLiteral', 'undefined');\n\t  },\n\n\t  NullLiteral: function NullLiteral() {\n\t    this.opcode('pushLiteral', 'null');\n\t  },\n\n\t  Hash: function Hash(hash) {\n\t    var pairs = hash.pairs,\n\t        i = 0,\n\t        l = pairs.length;\n\n\t    this.opcode('pushHash');\n\n\t    for (; i < l; i++) {\n\t      this.pushParam(pairs[i].value);\n\t    }\n\t    while (i--) {\n\t      this.opcode('assignToHash', pairs[i].key);\n\t    }\n\t    this.opcode('popHash');\n\t  },\n\n\t  // HELPERS\n\t  opcode: function opcode(name) {\n\t    this.opcodes.push({\n\t      opcode: name,\n\t      args: slice.call(arguments, 1),\n\t      loc: this.sourceNode[0].loc\n\t    });\n\t  },\n\n\t  addDepth: function addDepth(depth) {\n\t    if (!depth) {\n\t      return;\n\t    }\n\n\t    this.useDepths = true;\n\t  },\n\n\t  classifySexpr: function classifySexpr(sexpr) {\n\t    var isSimple = _ast2['default'].helpers.simpleId(sexpr.path);\n\n\t    var isBlockParam = isSimple && !!this.blockParamIndex(sexpr.path.parts[0]);\n\n\t    // a mustache is an eligible helper if:\n\t    // * its id is simple (a single part, not `this` or `..`)\n\t    var isHelper = !isBlockParam && _ast2['default'].helpers.helperExpression(sexpr);\n\n\t    // if a mustache is an eligible helper but not a definite\n\t    // helper, it is ambiguous, and will be resolved in a later\n\t    // pass or at runtime.\n\t    var isEligible = !isBlockParam && (isHelper || isSimple);\n\n\t    // if ambiguous, we can possibly resolve the ambiguity now\n\t    // An eligible helper is one that does not have a complex path, i.e. `this.foo`, `../foo` etc.\n\t    if (isEligible && !isHelper) {\n\t      var _name = sexpr.path.parts[0],\n\t          options = this.options;\n\t      if (options.knownHelpers[_name]) {\n\t        isHelper = true;\n\t      } else if (options.knownHelpersOnly) {\n\t        isEligible = false;\n\t      }\n\t    }\n\n\t    if (isHelper) {\n\t      return 'helper';\n\t    } else if (isEligible) {\n\t      return 'ambiguous';\n\t    } else {\n\t      return 'simple';\n\t    }\n\t  },\n\n\t  pushParams: function pushParams(params) {\n\t    for (var i = 0, l = params.length; i < l; i++) {\n\t      this.pushParam(params[i]);\n\t    }\n\t  },\n\n\t  pushParam: function pushParam(val) {\n\t    var value = val.value != null ? val.value : val.original || '';\n\n\t    if (this.stringParams) {\n\t      if (value.replace) {\n\t        value = value.replace(/^(\\.?\\.\\/)*/g, '').replace(/\\//g, '.');\n\t      }\n\n\t      if (val.depth) {\n\t        this.addDepth(val.depth);\n\t      }\n\t      this.opcode('getContext', val.depth || 0);\n\t      this.opcode('pushStringParam', value, val.type);\n\n\t      if (val.type === 'SubExpression') {\n\t        // SubExpressions get evaluated and passed in\n\t        // in string params mode.\n\t        this.accept(val);\n\t      }\n\t    } else {\n\t      if (this.trackIds) {\n\t        var blockParamIndex = undefined;\n\t        if (val.parts && !_ast2['default'].helpers.scopedId(val) && !val.depth) {\n\t          blockParamIndex = this.blockParamIndex(val.parts[0]);\n\t        }\n\t        if (blockParamIndex) {\n\t          var blockParamChild = val.parts.slice(1).join('.');\n\t          this.opcode('pushId', 'BlockParam', blockParamIndex, blockParamChild);\n\t        } else {\n\t          value = val.original || value;\n\t          if (value.replace) {\n\t            value = value.replace(/^this(?:\\.|$)/, '').replace(/^\\.\\//, '').replace(/^\\.$/, '');\n\t          }\n\n\t          this.opcode('pushId', val.type, value);\n\t        }\n\t      }\n\t      this.accept(val);\n\t    }\n\t  },\n\n\t  setupFullMustacheParams: function setupFullMustacheParams(sexpr, program, inverse, omitEmpty) {\n\t    var params = sexpr.params;\n\t    this.pushParams(params);\n\n\t    this.opcode('pushProgram', program);\n\t    this.opcode('pushProgram', inverse);\n\n\t    if (sexpr.hash) {\n\t      this.accept(sexpr.hash);\n\t    } else {\n\t      this.opcode('emptyHash', omitEmpty);\n\t    }\n\n\t    return params;\n\t  },\n\n\t  blockParamIndex: function blockParamIndex(name) {\n\t    for (var depth = 0, len = this.options.blockParams.length; depth < len; depth++) {\n\t      var blockParams = this.options.blockParams[depth],\n\t          param = blockParams && _utils.indexOf(blockParams, name);\n\t      if (blockParams && param >= 0) {\n\t        return [depth, param];\n\t      }\n\t    }\n\t  }\n\t};\n\n\tfunction precompile(input, options, env) {\n\t  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n\t    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.precompile. You passed ' + input);\n\t  }\n\n\t  options = options || {};\n\t  if (!('data' in options)) {\n\t    options.data = true;\n\t  }\n\t  if (options.compat) {\n\t    options.useDepths = true;\n\t  }\n\n\t  var ast = env.parse(input, options),\n\t      environment = new env.Compiler().compile(ast, options);\n\t  return new env.JavaScriptCompiler().compile(environment, options);\n\t}\n\n\tfunction compile(input, options, env) {\n\t  if (options === undefined) options = {};\n\n\t  if (input == null || typeof input !== 'string' && input.type !== 'Program') {\n\t    throw new _exception2['default']('You must pass a string or Handlebars AST to Handlebars.compile. You passed ' + input);\n\t  }\n\n\t  options = _utils.extend({}, options);\n\t  if (!('data' in options)) {\n\t    options.data = true;\n\t  }\n\t  if (options.compat) {\n\t    options.useDepths = true;\n\t  }\n\n\t  var compiled = undefined;\n\n\t  function compileInput() {\n\t    var ast = env.parse(input, options),\n\t        environment = new env.Compiler().compile(ast, options),\n\t        templateSpec = new env.JavaScriptCompiler().compile(environment, options, undefined, true);\n\t    return env.template(templateSpec);\n\t  }\n\n\t  // Template is only compiled on first use and cached after that point.\n\t  function ret(context, execOptions) {\n\t    if (!compiled) {\n\t      compiled = compileInput();\n\t    }\n\t    return compiled.call(this, context, execOptions);\n\t  }\n\t  ret._setup = function (setupOptions) {\n\t    if (!compiled) {\n\t      compiled = compileInput();\n\t    }\n\t    return compiled._setup(setupOptions);\n\t  };\n\t  ret._child = function (i, data, blockParams, depths) {\n\t    if (!compiled) {\n\t      compiled = compileInput();\n\t    }\n\t    return compiled._child(i, data, blockParams, depths);\n\t  };\n\t  return ret;\n\t}\n\n\tfunction argEquals(a, b) {\n\t  if (a === b) {\n\t    return true;\n\t  }\n\n\t  if (_utils.isArray(a) && _utils.isArray(b) && a.length === b.length) {\n\t    for (var i = 0; i < a.length; i++) {\n\t      if (!argEquals(a[i], b[i])) {\n\t        return false;\n\t      }\n\t    }\n\t    return true;\n\t  }\n\t}\n\n\tfunction transformLiteralToPath(sexpr) {\n\t  if (!sexpr.path.parts) {\n\t    var literal = sexpr.path;\n\t    // Casting to string here to make false and 0 literal values play nicely with the rest\n\t    // of the system.\n\t    sexpr.path = {\n\t      type: 'PathExpression',\n\t      data: false,\n\t      depth: 0,\n\t      parts: [literal.original + ''],\n\t      original: literal.original + '',\n\t      loc: literal.loc\n\t    };\n\t  }\n\t}\n\n/***/ }),\n/* 91 */\n/***/ (function(module, exports, __nested_webpack_require_161675__) {\n\n\t'use strict';\n\n\tvar _Object$keys = __nested_webpack_require_161675__(60)['default'];\n\n\tvar _interopRequireDefault = __nested_webpack_require_161675__(1)['default'];\n\n\texports.__esModule = true;\n\n\tvar _base = __nested_webpack_require_161675__(4);\n\n\tvar _exception = __nested_webpack_require_161675__(6);\n\n\tvar _exception2 = _interopRequireDefault(_exception);\n\n\tvar _utils = __nested_webpack_require_161675__(5);\n\n\tvar _codeGen = __nested_webpack_require_161675__(92);\n\n\tvar _codeGen2 = _interopRequireDefault(_codeGen);\n\n\tfunction Literal(value) {\n\t  this.value = value;\n\t}\n\n\tfunction JavaScriptCompiler() {}\n\n\tJavaScriptCompiler.prototype = {\n\t  // PUBLIC API: You can override these methods in a subclass to provide\n\t  // alternative compiled forms for name lookup and buffering semantics\n\t  nameLookup: function nameLookup(parent, name /*,  type */) {\n\t    return this.internalNameLookup(parent, name);\n\t  },\n\t  depthedLookup: function depthedLookup(name) {\n\t    return [this.aliasable('container.lookup'), '(depths, ', JSON.stringify(name), ')'];\n\t  },\n\n\t  compilerInfo: function compilerInfo() {\n\t    var revision = _base.COMPILER_REVISION,\n\t        versions = _base.REVISION_CHANGES[revision];\n\t    return [revision, versions];\n\t  },\n\n\t  appendToBuffer: function appendToBuffer(source, location, explicit) {\n\t    // Force a source as this simplifies the merge logic.\n\t    if (!_utils.isArray(source)) {\n\t      source = [source];\n\t    }\n\t    source = this.source.wrap(source, location);\n\n\t    if (this.environment.isSimple) {\n\t      return ['return ', source, ';'];\n\t    } else if (explicit) {\n\t      // This is a case where the buffer operation occurs as a child of another\n\t      // construct, generally braces. We have to explicitly output these buffer\n\t      // operations to ensure that the emitted code goes in the correct location.\n\t      return ['buffer += ', source, ';'];\n\t    } else {\n\t      source.appendToBuffer = true;\n\t      return source;\n\t    }\n\t  },\n\n\t  initializeBuffer: function initializeBuffer() {\n\t    return this.quotedString('');\n\t  },\n\t  // END PUBLIC API\n\t  internalNameLookup: function internalNameLookup(parent, name) {\n\t    this.lookupPropertyFunctionIsUsed = true;\n\t    return ['lookupProperty(', parent, ',', JSON.stringify(name), ')'];\n\t  },\n\n\t  lookupPropertyFunctionIsUsed: false,\n\n\t  compile: function compile(environment, options, context, asObject) {\n\t    this.environment = environment;\n\t    this.options = options;\n\t    this.stringParams = this.options.stringParams;\n\t    this.trackIds = this.options.trackIds;\n\t    this.precompile = !asObject;\n\n\t    this.name = this.environment.name;\n\t    this.isChild = !!context;\n\t    this.context = context || {\n\t      decorators: [],\n\t      programs: [],\n\t      environments: []\n\t    };\n\n\t    this.preamble();\n\n\t    this.stackSlot = 0;\n\t    this.stackVars = [];\n\t    this.aliases = {};\n\t    this.registers = { list: [] };\n\t    this.hashes = [];\n\t    this.compileStack = [];\n\t    this.inlineStack = [];\n\t    this.blockParams = [];\n\n\t    this.compileChildren(environment, options);\n\n\t    this.useDepths = this.useDepths || environment.useDepths || environment.useDecorators || this.options.compat;\n\t    this.useBlockParams = this.useBlockParams || environment.useBlockParams;\n\n\t    var opcodes = environment.opcodes,\n\t        opcode = undefined,\n\t        firstLoc = undefined,\n\t        i = undefined,\n\t        l = undefined;\n\n\t    for (i = 0, l = opcodes.length; i < l; i++) {\n\t      opcode = opcodes[i];\n\n\t      this.source.currentLocation = opcode.loc;\n\t      firstLoc = firstLoc || opcode.loc;\n\t      this[opcode.opcode].apply(this, opcode.args);\n\t    }\n\n\t    // Flush any trailing content that might be pending.\n\t    this.source.currentLocation = firstLoc;\n\t    this.pushSource('');\n\n\t    /* istanbul ignore next */\n\t    if (this.stackSlot || this.inlineStack.length || this.compileStack.length) {\n\t      throw new _exception2['default']('Compile completed with content left on stack');\n\t    }\n\n\t    if (!this.decorators.isEmpty()) {\n\t      this.useDecorators = true;\n\n\t      this.decorators.prepend(['var decorators = container.decorators, ', this.lookupPropertyFunctionVarDeclaration(), ';\\n']);\n\t      this.decorators.push('return fn;');\n\n\t      if (asObject) {\n\t        this.decorators = Function.apply(this, ['fn', 'props', 'container', 'depth0', 'data', 'blockParams', 'depths', this.decorators.merge()]);\n\t      } else {\n\t        this.decorators.prepend('function(fn, props, container, depth0, data, blockParams, depths) {\\n');\n\t        this.decorators.push('}\\n');\n\t        this.decorators = this.decorators.merge();\n\t      }\n\t    } else {\n\t      this.decorators = undefined;\n\t    }\n\n\t    var fn = this.createFunctionContext(asObject);\n\t    if (!this.isChild) {\n\t      var ret = {\n\t        compiler: this.compilerInfo(),\n\t        main: fn\n\t      };\n\n\t      if (this.decorators) {\n\t        ret.main_d = this.decorators; // eslint-disable-line camelcase\n\t        ret.useDecorators = true;\n\t      }\n\n\t      var _context = this.context;\n\t      var programs = _context.programs;\n\t      var decorators = _context.decorators;\n\n\t      for (i = 0, l = programs.length; i < l; i++) {\n\t        if (programs[i]) {\n\t          ret[i] = programs[i];\n\t          if (decorators[i]) {\n\t            ret[i + '_d'] = decorators[i];\n\t            ret.useDecorators = true;\n\t          }\n\t        }\n\t      }\n\n\t      if (this.environment.usePartial) {\n\t        ret.usePartial = true;\n\t      }\n\t      if (this.options.data) {\n\t        ret.useData = true;\n\t      }\n\t      if (this.useDepths) {\n\t        ret.useDepths = true;\n\t      }\n\t      if (this.useBlockParams) {\n\t        ret.useBlockParams = true;\n\t      }\n\t      if (this.options.compat) {\n\t        ret.compat = true;\n\t      }\n\n\t      if (!asObject) {\n\t        ret.compiler = JSON.stringify(ret.compiler);\n\n\t        this.source.currentLocation = { start: { line: 1, column: 0 } };\n\t        ret = this.objectLiteral(ret);\n\n\t        if (options.srcName) {\n\t          ret = ret.toStringWithSourceMap({ file: options.destName });\n\t          ret.map = ret.map && ret.map.toString();\n\t        } else {\n\t          ret = ret.toString();\n\t        }\n\t      } else {\n\t        ret.compilerOptions = this.options;\n\t      }\n\n\t      return ret;\n\t    } else {\n\t      return fn;\n\t    }\n\t  },\n\n\t  preamble: function preamble() {\n\t    // track the last context pushed into place to allow skipping the\n\t    // getContext opcode when it would be a noop\n\t    this.lastContext = 0;\n\t    this.source = new _codeGen2['default'](this.options.srcName);\n\t    this.decorators = new _codeGen2['default'](this.options.srcName);\n\t  },\n\n\t  createFunctionContext: function createFunctionContext(asObject) {\n\t    // istanbul ignore next\n\n\t    var _this = this;\n\n\t    var varDeclarations = '';\n\n\t    var locals = this.stackVars.concat(this.registers.list);\n\t    if (locals.length > 0) {\n\t      varDeclarations += ', ' + locals.join(', ');\n\t    }\n\n\t    // Generate minimizer alias mappings\n\t    //\n\t    // When using true SourceNodes, this will update all references to the given alias\n\t    // as the source nodes are reused in situ. For the non-source node compilation mode,\n\t    // aliases will not be used, but this case is already being run on the client and\n\t    // we aren't concern about minimizing the template size.\n\t    var aliasCount = 0;\n\t    _Object$keys(this.aliases).forEach(function (alias) {\n\t      var node = _this.aliases[alias];\n\t      if (node.children && node.referenceCount > 1) {\n\t        varDeclarations += ', alias' + ++aliasCount + '=' + alias;\n\t        node.children[0] = 'alias' + aliasCount;\n\t      }\n\t    });\n\n\t    if (this.lookupPropertyFunctionIsUsed) {\n\t      varDeclarations += ', ' + this.lookupPropertyFunctionVarDeclaration();\n\t    }\n\n\t    var params = ['container', 'depth0', 'helpers', 'partials', 'data'];\n\n\t    if (this.useBlockParams || this.useDepths) {\n\t      params.push('blockParams');\n\t    }\n\t    if (this.useDepths) {\n\t      params.push('depths');\n\t    }\n\n\t    // Perform a second pass over the output to merge content when possible\n\t    var source = this.mergeSource(varDeclarations);\n\n\t    if (asObject) {\n\t      params.push(source);\n\n\t      return Function.apply(this, params);\n\t    } else {\n\t      return this.source.wrap(['function(', params.join(','), ') {\\n  ', source, '}']);\n\t    }\n\t  },\n\t  mergeSource: function mergeSource(varDeclarations) {\n\t    var isSimple = this.environment.isSimple,\n\t        appendOnly = !this.forceBuffer,\n\t        appendFirst = undefined,\n\t        sourceSeen = undefined,\n\t        bufferStart = undefined,\n\t        bufferEnd = undefined;\n\t    this.source.each(function (line) {\n\t      if (line.appendToBuffer) {\n\t        if (bufferStart) {\n\t          line.prepend('  + ');\n\t        } else {\n\t          bufferStart = line;\n\t        }\n\t        bufferEnd = line;\n\t      } else {\n\t        if (bufferStart) {\n\t          if (!sourceSeen) {\n\t            appendFirst = true;\n\t          } else {\n\t            bufferStart.prepend('buffer += ');\n\t          }\n\t          bufferEnd.add(';');\n\t          bufferStart = bufferEnd = undefined;\n\t        }\n\n\t        sourceSeen = true;\n\t        if (!isSimple) {\n\t          appendOnly = false;\n\t        }\n\t      }\n\t    });\n\n\t    if (appendOnly) {\n\t      if (bufferStart) {\n\t        bufferStart.prepend('return ');\n\t        bufferEnd.add(';');\n\t      } else if (!sourceSeen) {\n\t        this.source.push('return \"\";');\n\t      }\n\t    } else {\n\t      varDeclarations += ', buffer = ' + (appendFirst ? '' : this.initializeBuffer());\n\n\t      if (bufferStart) {\n\t        bufferStart.prepend('return buffer + ');\n\t        bufferEnd.add(';');\n\t      } else {\n\t        this.source.push('return buffer;');\n\t      }\n\t    }\n\n\t    if (varDeclarations) {\n\t      this.source.prepend('var ' + varDeclarations.substring(2) + (appendFirst ? '' : ';\\n'));\n\t    }\n\n\t    return this.source.merge();\n\t  },\n\n\t  lookupPropertyFunctionVarDeclaration: function lookupPropertyFunctionVarDeclaration() {\n\t    return '\\n      lookupProperty = container.lookupProperty || function(parent, propertyName) {\\n        if (Object.prototype.hasOwnProperty.call(parent, propertyName)) {\\n          return parent[propertyName];\\n        }\\n        return undefined\\n    }\\n    '.trim();\n\t  },\n\n\t  // [blockValue]\n\t  //\n\t  // On stack, before: hash, inverse, program, value\n\t  // On stack, after: return value of blockHelperMissing\n\t  //\n\t  // The purpose of this opcode is to take a block of the form\n\t  // `{{#this.foo}}...{{/this.foo}}`, resolve the value of `foo`, and\n\t  // replace it on the stack with the result of properly\n\t  // invoking blockHelperMissing.\n\t  blockValue: function blockValue(name) {\n\t    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),\n\t        params = [this.contextName(0)];\n\t    this.setupHelperArgs(name, 0, params);\n\n\t    var blockName = this.popStack();\n\t    params.splice(1, 0, blockName);\n\n\t    this.push(this.source.functionCall(blockHelperMissing, 'call', params));\n\t  },\n\n\t  // [ambiguousBlockValue]\n\t  //\n\t  // On stack, before: hash, inverse, program, value\n\t  // Compiler value, before: lastHelper=value of last found helper, if any\n\t  // On stack, after, if no lastHelper: same as [blockValue]\n\t  // On stack, after, if lastHelper: value\n\t  ambiguousBlockValue: function ambiguousBlockValue() {\n\t    // We're being a bit cheeky and reusing the options value from the prior exec\n\t    var blockHelperMissing = this.aliasable('container.hooks.blockHelperMissing'),\n\t        params = [this.contextName(0)];\n\t    this.setupHelperArgs('', 0, params, true);\n\n\t    this.flushInline();\n\n\t    var current = this.topStack();\n\t    params.splice(1, 0, current);\n\n\t    this.pushSource(['if (!', this.lastHelper, ') { ', current, ' = ', this.source.functionCall(blockHelperMissing, 'call', params), '}']);\n\t  },\n\n\t  // [appendContent]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: ...\n\t  //\n\t  // Appends the string value of `content` to the current buffer\n\t  appendContent: function appendContent(content) {\n\t    if (this.pendingContent) {\n\t      content = this.pendingContent + content;\n\t    } else {\n\t      this.pendingLocation = this.source.currentLocation;\n\t    }\n\n\t    this.pendingContent = content;\n\t  },\n\n\t  // [append]\n\t  //\n\t  // On stack, before: value, ...\n\t  // On stack, after: ...\n\t  //\n\t  // Coerces `value` to a String and appends it to the current buffer.\n\t  //\n\t  // If `value` is truthy, or 0, it is coerced into a string and appended\n\t  // Otherwise, the empty string is appended\n\t  append: function append() {\n\t    if (this.isInline()) {\n\t      this.replaceStack(function (current) {\n\t        return [' != null ? ', current, ' : \"\"'];\n\t      });\n\n\t      this.pushSource(this.appendToBuffer(this.popStack()));\n\t    } else {\n\t      var local = this.popStack();\n\t      this.pushSource(['if (', local, ' != null) { ', this.appendToBuffer(local, undefined, true), ' }']);\n\t      if (this.environment.isSimple) {\n\t        this.pushSource(['else { ', this.appendToBuffer(\"''\", undefined, true), ' }']);\n\t      }\n\t    }\n\t  },\n\n\t  // [appendEscaped]\n\t  //\n\t  // On stack, before: value, ...\n\t  // On stack, after: ...\n\t  //\n\t  // Escape `value` and append it to the buffer\n\t  appendEscaped: function appendEscaped() {\n\t    this.pushSource(this.appendToBuffer([this.aliasable('container.escapeExpression'), '(', this.popStack(), ')']));\n\t  },\n\n\t  // [getContext]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: ...\n\t  // Compiler value, after: lastContext=depth\n\t  //\n\t  // Set the value of the `lastContext` compiler value to the depth\n\t  getContext: function getContext(depth) {\n\t    this.lastContext = depth;\n\t  },\n\n\t  // [pushContext]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: currentContext, ...\n\t  //\n\t  // Pushes the value of the current context onto the stack.\n\t  pushContext: function pushContext() {\n\t    this.pushStackLiteral(this.contextName(this.lastContext));\n\t  },\n\n\t  // [lookupOnContext]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: currentContext[name], ...\n\t  //\n\t  // Looks up the value of `name` on the current context and pushes\n\t  // it onto the stack.\n\t  lookupOnContext: function lookupOnContext(parts, falsy, strict, scoped) {\n\t    var i = 0;\n\n\t    if (!scoped && this.options.compat && !this.lastContext) {\n\t      // The depthed query is expected to handle the undefined logic for the root level that\n\t      // is implemented below, so we evaluate that directly in compat mode\n\t      this.push(this.depthedLookup(parts[i++]));\n\t    } else {\n\t      this.pushContext();\n\t    }\n\n\t    this.resolvePath('context', parts, i, falsy, strict);\n\t  },\n\n\t  // [lookupBlockParam]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: blockParam[name], ...\n\t  //\n\t  // Looks up the value of `parts` on the given block param and pushes\n\t  // it onto the stack.\n\t  lookupBlockParam: function lookupBlockParam(blockParamId, parts) {\n\t    this.useBlockParams = true;\n\n\t    this.push(['blockParams[', blockParamId[0], '][', blockParamId[1], ']']);\n\t    this.resolvePath('context', parts, 1);\n\t  },\n\n\t  // [lookupData]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: data, ...\n\t  //\n\t  // Push the data lookup operator\n\t  lookupData: function lookupData(depth, parts, strict) {\n\t    if (!depth) {\n\t      this.pushStackLiteral('data');\n\t    } else {\n\t      this.pushStackLiteral('container.data(data, ' + depth + ')');\n\t    }\n\n\t    this.resolvePath('data', parts, 0, true, strict);\n\t  },\n\n\t  resolvePath: function resolvePath(type, parts, i, falsy, strict) {\n\t    // istanbul ignore next\n\n\t    var _this2 = this;\n\n\t    if (this.options.strict || this.options.assumeObjects) {\n\t      this.push(strictLookup(this.options.strict && strict, this, parts, i, type));\n\t      return;\n\t    }\n\n\t    var len = parts.length;\n\t    for (; i < len; i++) {\n\t      /* eslint-disable no-loop-func */\n\t      this.replaceStack(function (current) {\n\t        var lookup = _this2.nameLookup(current, parts[i], type);\n\t        // We want to ensure that zero and false are handled properly if the context (falsy flag)\n\t        // needs to have the special handling for these values.\n\t        if (!falsy) {\n\t          return [' != null ? ', lookup, ' : ', current];\n\t        } else {\n\t          // Otherwise we can use generic falsy handling\n\t          return [' && ', lookup];\n\t        }\n\t      });\n\t      /* eslint-enable no-loop-func */\n\t    }\n\t  },\n\n\t  // [resolvePossibleLambda]\n\t  //\n\t  // On stack, before: value, ...\n\t  // On stack, after: resolved value, ...\n\t  //\n\t  // If the `value` is a lambda, replace it on the stack by\n\t  // the return value of the lambda\n\t  resolvePossibleLambda: function resolvePossibleLambda() {\n\t    this.push([this.aliasable('container.lambda'), '(', this.popStack(), ', ', this.contextName(0), ')']);\n\t  },\n\n\t  // [pushStringParam]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: string, currentContext, ...\n\t  //\n\t  // This opcode is designed for use in string mode, which\n\t  // provides the string value of a parameter along with its\n\t  // depth rather than resolving it immediately.\n\t  pushStringParam: function pushStringParam(string, type) {\n\t    this.pushContext();\n\t    this.pushString(type);\n\n\t    // If it's a subexpression, the string result\n\t    // will be pushed after this opcode.\n\t    if (type !== 'SubExpression') {\n\t      if (typeof string === 'string') {\n\t        this.pushString(string);\n\t      } else {\n\t        this.pushStackLiteral(string);\n\t      }\n\t    }\n\t  },\n\n\t  emptyHash: function emptyHash(omitEmpty) {\n\t    if (this.trackIds) {\n\t      this.push('{}'); // hashIds\n\t    }\n\t    if (this.stringParams) {\n\t      this.push('{}'); // hashContexts\n\t      this.push('{}'); // hashTypes\n\t    }\n\t    this.pushStackLiteral(omitEmpty ? 'undefined' : '{}');\n\t  },\n\t  pushHash: function pushHash() {\n\t    if (this.hash) {\n\t      this.hashes.push(this.hash);\n\t    }\n\t    this.hash = { values: {}, types: [], contexts: [], ids: [] };\n\t  },\n\t  popHash: function popHash() {\n\t    var hash = this.hash;\n\t    this.hash = this.hashes.pop();\n\n\t    if (this.trackIds) {\n\t      this.push(this.objectLiteral(hash.ids));\n\t    }\n\t    if (this.stringParams) {\n\t      this.push(this.objectLiteral(hash.contexts));\n\t      this.push(this.objectLiteral(hash.types));\n\t    }\n\n\t    this.push(this.objectLiteral(hash.values));\n\t  },\n\n\t  // [pushString]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: quotedString(string), ...\n\t  //\n\t  // Push a quoted version of `string` onto the stack\n\t  pushString: function pushString(string) {\n\t    this.pushStackLiteral(this.quotedString(string));\n\t  },\n\n\t  // [pushLiteral]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: value, ...\n\t  //\n\t  // Pushes a value onto the stack. This operation prevents\n\t  // the compiler from creating a temporary variable to hold\n\t  // it.\n\t  pushLiteral: function pushLiteral(value) {\n\t    this.pushStackLiteral(value);\n\t  },\n\n\t  // [pushProgram]\n\t  //\n\t  // On stack, before: ...\n\t  // On stack, after: program(guid), ...\n\t  //\n\t  // Push a program expression onto the stack. This takes\n\t  // a compile-time guid and converts it into a runtime-accessible\n\t  // expression.\n\t  pushProgram: function pushProgram(guid) {\n\t    if (guid != null) {\n\t      this.pushStackLiteral(this.programExpression(guid));\n\t    } else {\n\t      this.pushStackLiteral(null);\n\t    }\n\t  },\n\n\t  // [registerDecorator]\n\t  //\n\t  // On stack, before: hash, program, params..., ...\n\t  // On stack, after: ...\n\t  //\n\t  // Pops off the decorator's parameters, invokes the decorator,\n\t  // and inserts the decorator into the decorators list.\n\t  registerDecorator: function registerDecorator(paramSize, name) {\n\t    var foundDecorator = this.nameLookup('decorators', name, 'decorator'),\n\t        options = this.setupHelperArgs(name, paramSize);\n\n\t    this.decorators.push(['fn = ', this.decorators.functionCall(foundDecorator, '', ['fn', 'props', 'container', options]), ' || fn;']);\n\t  },\n\n\t  // [invokeHelper]\n\t  //\n\t  // On stack, before: hash, inverse, program, params..., ...\n\t  // On stack, after: result of helper invocation\n\t  //\n\t  // Pops off the helper's parameters, invokes the helper,\n\t  // and pushes the helper's return value onto the stack.\n\t  //\n\t  // If the helper is not found, `helperMissing` is called.\n\t  invokeHelper: function invokeHelper(paramSize, name, isSimple) {\n\t    var nonHelper = this.popStack(),\n\t        helper = this.setupHelper(paramSize, name);\n\n\t    var possibleFunctionCalls = [];\n\n\t    if (isSimple) {\n\t      // direct call to helper\n\t      possibleFunctionCalls.push(helper.name);\n\t    }\n\t    // call a function from the input object\n\t    possibleFunctionCalls.push(nonHelper);\n\t    if (!this.options.strict) {\n\t      possibleFunctionCalls.push(this.aliasable('container.hooks.helperMissing'));\n\t    }\n\n\t    var functionLookupCode = ['(', this.itemsSeparatedBy(possibleFunctionCalls, '||'), ')'];\n\t    var functionCall = this.source.functionCall(functionLookupCode, 'call', helper.callParams);\n\t    this.push(functionCall);\n\t  },\n\n\t  itemsSeparatedBy: function itemsSeparatedBy(items, separator) {\n\t    var result = [];\n\t    result.push(items[0]);\n\t    for (var i = 1; i < items.length; i++) {\n\t      result.push(separator, items[i]);\n\t    }\n\t    return result;\n\t  },\n\t  // [invokeKnownHelper]\n\t  //\n\t  // On stack, before: hash, inverse, program, params..., ...\n\t  // On stack, after: result of helper invocation\n\t  //\n\t  // This operation is used when the helper is known to exist,\n\t  // so a `helperMissing` fallback is not required.\n\t  invokeKnownHelper: function invokeKnownHelper(paramSize, name) {\n\t    var helper = this.setupHelper(paramSize, name);\n\t    this.push(this.source.functionCall(helper.name, 'call', helper.callParams));\n\t  },\n\n\t  // [invokeAmbiguous]\n\t  //\n\t  // On stack, before: hash, inverse, program, params..., ...\n\t  // On stack, after: result of disambiguation\n\t  //\n\t  // This operation is used when an expression like `{{foo}}`\n\t  // is provided, but we don't know at compile-time whether it\n\t  // is a helper or a path.\n\t  //\n\t  // This operation emits more code than the other options,\n\t  // and can be avoided by passing the `knownHelpers` and\n\t  // `knownHelpersOnly` flags at compile-time.\n\t  invokeAmbiguous: function invokeAmbiguous(name, helperCall) {\n\t    this.useRegister('helper');\n\n\t    var nonHelper = this.popStack();\n\n\t    this.emptyHash();\n\t    var helper = this.setupHelper(0, name, helperCall);\n\n\t    var helperName = this.lastHelper = this.nameLookup('helpers', name, 'helper');\n\n\t    var lookup = ['(', '(helper = ', helperName, ' || ', nonHelper, ')'];\n\t    if (!this.options.strict) {\n\t      lookup[0] = '(helper = ';\n\t      lookup.push(' != null ? helper : ', this.aliasable('container.hooks.helperMissing'));\n\t    }\n\n\t    this.push(['(', lookup, helper.paramsInit ? ['),(', helper.paramsInit] : [], '),', '(typeof helper === ', this.aliasable('\"function\"'), ' ? ', this.source.functionCall('helper', 'call', helper.callParams), ' : helper))']);\n\t  },\n\n\t  // [invokePartial]\n\t  //\n\t  // On stack, before: context, ...\n\t  // On stack after: result of partial invocation\n\t  //\n\t  // This operation pops off a context, invokes a partial with that context,\n\t  // and pushes the result of the invocation back.\n\t  invokePartial: function invokePartial(isDynamic, name, indent) {\n\t    var params = [],\n\t        options = this.setupParams(name, 1, params);\n\n\t    if (isDynamic) {\n\t      name = this.popStack();\n\t      delete options.name;\n\t    }\n\n\t    if (indent) {\n\t      options.indent = JSON.stringify(indent);\n\t    }\n\t    options.helpers = 'helpers';\n\t    options.partials = 'partials';\n\t    options.decorators = 'container.decorators';\n\n\t    if (!isDynamic) {\n\t      params.unshift(this.nameLookup('partials', name, 'partial'));\n\t    } else {\n\t      params.unshift(name);\n\t    }\n\n\t    if (this.options.compat) {\n\t      options.depths = 'depths';\n\t    }\n\t    options = this.objectLiteral(options);\n\t    params.push(options);\n\n\t    this.push(this.source.functionCall('container.invokePartial', '', params));\n\t  },\n\n\t  // [assignToHash]\n\t  //\n\t  // On stack, before: value, ..., hash, ...\n\t  // On stack, after: ..., hash, ...\n\t  //\n\t  // Pops a value off the stack and assigns it to the current hash\n\t  assignToHash: function assignToHash(key) {\n\t    var value = this.popStack(),\n\t        context = undefined,\n\t        type = undefined,\n\t        id = undefined;\n\n\t    if (this.trackIds) {\n\t      id = this.popStack();\n\t    }\n\t    if (this.stringParams) {\n\t      type = this.popStack();\n\t      context = this.popStack();\n\t    }\n\n\t    var hash = this.hash;\n\t    if (context) {\n\t      hash.contexts[key] = context;\n\t    }\n\t    if (type) {\n\t      hash.types[key] = type;\n\t    }\n\t    if (id) {\n\t      hash.ids[key] = id;\n\t    }\n\t    hash.values[key] = value;\n\t  },\n\n\t  pushId: function pushId(type, name, child) {\n\t    if (type === 'BlockParam') {\n\t      this.pushStackLiteral('blockParams[' + name[0] + '].path[' + name[1] + ']' + (child ? ' + ' + JSON.stringify('.' + child) : ''));\n\t    } else if (type === 'PathExpression') {\n\t      this.pushString(name);\n\t    } else if (type === 'SubExpression') {\n\t      this.pushStackLiteral('true');\n\t    } else {\n\t      this.pushStackLiteral('null');\n\t    }\n\t  },\n\n\t  // HELPERS\n\n\t  compiler: JavaScriptCompiler,\n\n\t  compileChildren: function compileChildren(environment, options) {\n\t    var children = environment.children,\n\t        child = undefined,\n\t        compiler = undefined;\n\n\t    for (var i = 0, l = children.length; i < l; i++) {\n\t      child = children[i];\n\t      compiler = new this.compiler(); // eslint-disable-line new-cap\n\n\t      var existing = this.matchExistingProgram(child);\n\n\t      if (existing == null) {\n\t        this.context.programs.push(''); // Placeholder to prevent name conflicts for nested children\n\t        var index = this.context.programs.length;\n\t        child.index = index;\n\t        child.name = 'program' + index;\n\t        this.context.programs[index] = compiler.compile(child, options, this.context, !this.precompile);\n\t        this.context.decorators[index] = compiler.decorators;\n\t        this.context.environments[index] = child;\n\n\t        this.useDepths = this.useDepths || compiler.useDepths;\n\t        this.useBlockParams = this.useBlockParams || compiler.useBlockParams;\n\t        child.useDepths = this.useDepths;\n\t        child.useBlockParams = this.useBlockParams;\n\t      } else {\n\t        child.index = existing.index;\n\t        child.name = 'program' + existing.index;\n\n\t        this.useDepths = this.useDepths || existing.useDepths;\n\t        this.useBlockParams = this.useBlockParams || existing.useBlockParams;\n\t      }\n\t    }\n\t  },\n\t  matchExistingProgram: function matchExistingProgram(child) {\n\t    for (var i = 0, len = this.context.environments.length; i < len; i++) {\n\t      var environment = this.context.environments[i];\n\t      if (environment && environment.equals(child)) {\n\t        return environment;\n\t      }\n\t    }\n\t  },\n\n\t  programExpression: function programExpression(guid) {\n\t    var child = this.environment.children[guid],\n\t        programParams = [child.index, 'data', child.blockParams];\n\n\t    if (this.useBlockParams || this.useDepths) {\n\t      programParams.push('blockParams');\n\t    }\n\t    if (this.useDepths) {\n\t      programParams.push('depths');\n\t    }\n\n\t    return 'container.program(' + programParams.join(', ') + ')';\n\t  },\n\n\t  useRegister: function useRegister(name) {\n\t    if (!this.registers[name]) {\n\t      this.registers[name] = true;\n\t      this.registers.list.push(name);\n\t    }\n\t  },\n\n\t  push: function push(expr) {\n\t    if (!(expr instanceof Literal)) {\n\t      expr = this.source.wrap(expr);\n\t    }\n\n\t    this.inlineStack.push(expr);\n\t    return expr;\n\t  },\n\n\t  pushStackLiteral: function pushStackLiteral(item) {\n\t    this.push(new Literal(item));\n\t  },\n\n\t  pushSource: function pushSource(source) {\n\t    if (this.pendingContent) {\n\t      this.source.push(this.appendToBuffer(this.source.quotedString(this.pendingContent), this.pendingLocation));\n\t      this.pendingContent = undefined;\n\t    }\n\n\t    if (source) {\n\t      this.source.push(source);\n\t    }\n\t  },\n\n\t  replaceStack: function replaceStack(callback) {\n\t    var prefix = ['('],\n\t        stack = undefined,\n\t        createdStack = undefined,\n\t        usedLiteral = undefined;\n\n\t    /* istanbul ignore next */\n\t    if (!this.isInline()) {\n\t      throw new _exception2['default']('replaceStack on non-inline');\n\t    }\n\n\t    // We want to merge the inline statement into the replacement statement via ','\n\t    var top = this.popStack(true);\n\n\t    if (top instanceof Literal) {\n\t      // Literals do not need to be inlined\n\t      stack = [top.value];\n\t      prefix = ['(', stack];\n\t      usedLiteral = true;\n\t    } else {\n\t      // Get or create the current stack name for use by the inline\n\t      createdStack = true;\n\t      var _name = this.incrStack();\n\n\t      prefix = ['((', this.push(_name), ' = ', top, ')'];\n\t      stack = this.topStack();\n\t    }\n\n\t    var item = callback.call(this, stack);\n\n\t    if (!usedLiteral) {\n\t      this.popStack();\n\t    }\n\t    if (createdStack) {\n\t      this.stackSlot--;\n\t    }\n\t    this.push(prefix.concat(item, ')'));\n\t  },\n\n\t  incrStack: function incrStack() {\n\t    this.stackSlot++;\n\t    if (this.stackSlot > this.stackVars.length) {\n\t      this.stackVars.push('stack' + this.stackSlot);\n\t    }\n\t    return this.topStackName();\n\t  },\n\t  topStackName: function topStackName() {\n\t    return 'stack' + this.stackSlot;\n\t  },\n\t  flushInline: function flushInline() {\n\t    var inlineStack = this.inlineStack;\n\t    this.inlineStack = [];\n\t    for (var i = 0, len = inlineStack.length; i < len; i++) {\n\t      var entry = inlineStack[i];\n\t      /* istanbul ignore if */\n\t      if (entry instanceof Literal) {\n\t        this.compileStack.push(entry);\n\t      } else {\n\t        var stack = this.incrStack();\n\t        this.pushSource([stack, ' = ', entry, ';']);\n\t        this.compileStack.push(stack);\n\t      }\n\t    }\n\t  },\n\t  isInline: function isInline() {\n\t    return this.inlineStack.length;\n\t  },\n\n\t  popStack: function popStack(wrapped) {\n\t    var inline = this.isInline(),\n\t        item = (inline ? this.inlineStack : this.compileStack).pop();\n\n\t    if (!wrapped && item instanceof Literal) {\n\t      return item.value;\n\t    } else {\n\t      if (!inline) {\n\t        /* istanbul ignore next */\n\t        if (!this.stackSlot) {\n\t          throw new _exception2['default']('Invalid stack pop');\n\t        }\n\t        this.stackSlot--;\n\t      }\n\t      return item;\n\t    }\n\t  },\n\n\t  topStack: function topStack() {\n\t    var stack = this.isInline() ? this.inlineStack : this.compileStack,\n\t        item = stack[stack.length - 1];\n\n\t    /* istanbul ignore if */\n\t    if (item instanceof Literal) {\n\t      return item.value;\n\t    } else {\n\t      return item;\n\t    }\n\t  },\n\n\t  contextName: function contextName(context) {\n\t    if (this.useDepths && context) {\n\t      return 'depths[' + context + ']';\n\t    } else {\n\t      return 'depth' + context;\n\t    }\n\t  },\n\n\t  quotedString: function quotedString(str) {\n\t    return this.source.quotedString(str);\n\t  },\n\n\t  objectLiteral: function objectLiteral(obj) {\n\t    return this.source.objectLiteral(obj);\n\t  },\n\n\t  aliasable: function aliasable(name) {\n\t    var ret = this.aliases[name];\n\t    if (ret) {\n\t      ret.referenceCount++;\n\t      return ret;\n\t    }\n\n\t    ret = this.aliases[name] = this.source.wrap(name);\n\t    ret.aliasable = true;\n\t    ret.referenceCount = 1;\n\n\t    return ret;\n\t  },\n\n\t  setupHelper: function setupHelper(paramSize, name, blockHelper) {\n\t    var params = [],\n\t        paramsInit = this.setupHelperArgs(name, paramSize, params, blockHelper);\n\t    var foundHelper = this.nameLookup('helpers', name, 'helper'),\n\t        callContext = this.aliasable(this.contextName(0) + ' != null ? ' + this.contextName(0) + ' : (container.nullContext || {})');\n\n\t    return {\n\t      params: params,\n\t      paramsInit: paramsInit,\n\t      name: foundHelper,\n\t      callParams: [callContext].concat(params)\n\t    };\n\t  },\n\n\t  setupParams: function setupParams(helper, paramSize, params) {\n\t    var options = {},\n\t        contexts = [],\n\t        types = [],\n\t        ids = [],\n\t        objectArgs = !params,\n\t        param = undefined;\n\n\t    if (objectArgs) {\n\t      params = [];\n\t    }\n\n\t    options.name = this.quotedString(helper);\n\t    options.hash = this.popStack();\n\n\t    if (this.trackIds) {\n\t      options.hashIds = this.popStack();\n\t    }\n\t    if (this.stringParams) {\n\t      options.hashTypes = this.popStack();\n\t      options.hashContexts = this.popStack();\n\t    }\n\n\t    var inverse = this.popStack(),\n\t        program = this.popStack();\n\n\t    // Avoid setting fn and inverse if neither are set. This allows\n\t    // helpers to do a check for `if (options.fn)`\n\t    if (program || inverse) {\n\t      options.fn = program || 'container.noop';\n\t      options.inverse = inverse || 'container.noop';\n\t    }\n\n\t    // The parameters go on to the stack in order (making sure that they are evaluated in order)\n\t    // so we need to pop them off the stack in reverse order\n\t    var i = paramSize;\n\t    while (i--) {\n\t      param = this.popStack();\n\t      params[i] = param;\n\n\t      if (this.trackIds) {\n\t        ids[i] = this.popStack();\n\t      }\n\t      if (this.stringParams) {\n\t        types[i] = this.popStack();\n\t        contexts[i] = this.popStack();\n\t      }\n\t    }\n\n\t    if (objectArgs) {\n\t      options.args = this.source.generateArray(params);\n\t    }\n\n\t    if (this.trackIds) {\n\t      options.ids = this.source.generateArray(ids);\n\t    }\n\t    if (this.stringParams) {\n\t      options.types = this.source.generateArray(types);\n\t      options.contexts = this.source.generateArray(contexts);\n\t    }\n\n\t    if (this.options.data) {\n\t      options.data = 'data';\n\t    }\n\t    if (this.useBlockParams) {\n\t      options.blockParams = 'blockParams';\n\t    }\n\t    return options;\n\t  },\n\n\t  setupHelperArgs: function setupHelperArgs(helper, paramSize, params, useRegister) {\n\t    var options = this.setupParams(helper, paramSize, params);\n\t    options.loc = JSON.stringify(this.source.currentLocation);\n\t    options = this.objectLiteral(options);\n\t    if (useRegister) {\n\t      this.useRegister('options');\n\t      params.push('options');\n\t      return ['options=', options];\n\t    } else if (params) {\n\t      params.push(options);\n\t      return '';\n\t    } else {\n\t      return options;\n\t    }\n\t  }\n\t};\n\n\t(function () {\n\t  var reservedWords = ('break else new var' + ' case finally return void' + ' catch for switch while' + ' continue function this with' + ' default if throw' + ' delete in try' + ' do instanceof typeof' + ' abstract enum int short' + ' boolean export interface static' + ' byte extends long super' + ' char final native synchronized' + ' class float package throws' + ' const goto private transient' + ' debugger implements protected volatile' + ' double import public let yield await' + ' null true false').split(' ');\n\n\t  var compilerWords = JavaScriptCompiler.RESERVED_WORDS = {};\n\n\t  for (var i = 0, l = reservedWords.length; i < l; i++) {\n\t    compilerWords[reservedWords[i]] = true;\n\t  }\n\t})();\n\n\t/**\n\t * @deprecated May be removed in the next major version\n\t */\n\tJavaScriptCompiler.isValidJavaScriptVariableName = function (name) {\n\t  return !JavaScriptCompiler.RESERVED_WORDS[name] && /^[a-zA-Z_$][0-9a-zA-Z_$]*$/.test(name);\n\t};\n\n\tfunction strictLookup(requireTerminal, compiler, parts, i, type) {\n\t  var stack = compiler.popStack(),\n\t      len = parts.length;\n\t  if (requireTerminal) {\n\t    len--;\n\t  }\n\n\t  for (; i < len; i++) {\n\t    stack = compiler.nameLookup(stack, parts[i], type);\n\t  }\n\n\t  if (requireTerminal) {\n\t    return [compiler.aliasable('container.strict'), '(', stack, ', ', compiler.quotedString(parts[i]), ', ', JSON.stringify(compiler.source.currentLocation), ' )'];\n\t  } else {\n\t    return stack;\n\t  }\n\t}\n\n\texports['default'] = JavaScriptCompiler;\n\tmodule.exports = exports['default'];\n\n/***/ }),\n/* 92 */\n/***/ (function(module, exports, __nested_webpack_require_197611__) {\n\n\t/* global define, require */\n\t'use strict';\n\n\tvar _Object$keys = __nested_webpack_require_197611__(60)['default'];\n\n\texports.__esModule = true;\n\n\tvar _utils = __nested_webpack_require_197611__(5);\n\n\tvar SourceNode = undefined;\n\n\ttry {\n\t  /* istanbul ignore next */\n\t  if (false) { var SourceMap; }\n\t} catch (err) {}\n\t/* NOP */\n\n\t/* istanbul ignore if: tested but not covered in istanbul due to dist build  */\n\tif (!SourceNode) {\n\t  SourceNode = function (line, column, srcFile, chunks) {\n\t    this.src = '';\n\t    if (chunks) {\n\t      this.add(chunks);\n\t    }\n\t  };\n\t  /* istanbul ignore next */\n\t  SourceNode.prototype = {\n\t    add: function add(chunks) {\n\t      if (_utils.isArray(chunks)) {\n\t        chunks = chunks.join('');\n\t      }\n\t      this.src += chunks;\n\t    },\n\t    prepend: function prepend(chunks) {\n\t      if (_utils.isArray(chunks)) {\n\t        chunks = chunks.join('');\n\t      }\n\t      this.src = chunks + this.src;\n\t    },\n\t    toStringWithSourceMap: function toStringWithSourceMap() {\n\t      return { code: this.toString() };\n\t    },\n\t    toString: function toString() {\n\t      return this.src;\n\t    }\n\t  };\n\t}\n\n\tfunction castChunk(chunk, codeGen, loc) {\n\t  if (_utils.isArray(chunk)) {\n\t    var ret = [];\n\n\t    for (var i = 0, len = chunk.length; i < len; i++) {\n\t      ret.push(codeGen.wrap(chunk[i], loc));\n\t    }\n\t    return ret;\n\t  } else if (typeof chunk === 'boolean' || typeof chunk === 'number') {\n\t    // Handle primitives that the SourceNode will throw up on\n\t    return chunk + '';\n\t  }\n\t  return chunk;\n\t}\n\n\tfunction CodeGen(srcFile) {\n\t  this.srcFile = srcFile;\n\t  this.source = [];\n\t}\n\n\tCodeGen.prototype = {\n\t  isEmpty: function isEmpty() {\n\t    return !this.source.length;\n\t  },\n\t  prepend: function prepend(source, loc) {\n\t    this.source.unshift(this.wrap(source, loc));\n\t  },\n\t  push: function push(source, loc) {\n\t    this.source.push(this.wrap(source, loc));\n\t  },\n\n\t  merge: function merge() {\n\t    var source = this.empty();\n\t    this.each(function (line) {\n\t      source.add(['  ', line, '\\n']);\n\t    });\n\t    return source;\n\t  },\n\n\t  each: function each(iter) {\n\t    for (var i = 0, len = this.source.length; i < len; i++) {\n\t      iter(this.source[i]);\n\t    }\n\t  },\n\n\t  empty: function empty() {\n\t    var loc = this.currentLocation || { start: {} };\n\t    return new SourceNode(loc.start.line, loc.start.column, this.srcFile);\n\t  },\n\t  wrap: function wrap(chunk) {\n\t    var loc = arguments.length <= 1 || arguments[1] === undefined ? this.currentLocation || { start: {} } : arguments[1];\n\n\t    if (chunk instanceof SourceNode) {\n\t      return chunk;\n\t    }\n\n\t    chunk = castChunk(chunk, this, loc);\n\n\t    return new SourceNode(loc.start.line, loc.start.column, this.srcFile, chunk);\n\t  },\n\n\t  functionCall: function functionCall(fn, type, params) {\n\t    params = this.generateList(params);\n\t    return this.wrap([fn, type ? '.' + type + '(' : '(', params, ')']);\n\t  },\n\n\t  quotedString: function quotedString(str) {\n\t    return '\"' + (str + '').replace(/\\\\/g, '\\\\\\\\').replace(/\"/g, '\\\\\"').replace(/\\n/g, '\\\\n').replace(/\\r/g, '\\\\r').replace(/\\u2028/g, '\\\\u2028') // Per Ecma-262 7.3 + 7.8.4\n\t    .replace(/\\u2029/g, '\\\\u2029') + '\"';\n\t  },\n\n\t  objectLiteral: function objectLiteral(obj) {\n\t    // istanbul ignore next\n\n\t    var _this = this;\n\n\t    var pairs = [];\n\n\t    _Object$keys(obj).forEach(function (key) {\n\t      var value = castChunk(obj[key], _this);\n\t      if (value !== 'undefined') {\n\t        pairs.push([_this.quotedString(key), ':', value]);\n\t      }\n\t    });\n\n\t    var ret = this.generateList(pairs);\n\t    ret.prepend('{');\n\t    ret.add('}');\n\t    return ret;\n\t  },\n\n\t  generateList: function generateList(entries) {\n\t    var ret = this.empty();\n\n\t    for (var i = 0, len = entries.length; i < len; i++) {\n\t      if (i) {\n\t        ret.add(',');\n\t      }\n\n\t      ret.add(castChunk(entries[i], this));\n\t    }\n\n\t    return ret;\n\t  },\n\n\t  generateArray: function generateArray(entries) {\n\t    var ret = this.generateList(entries);\n\t    ret.prepend('[');\n\t    ret.add(']');\n\n\t    return ret;\n\t  }\n\t};\n\n\texports['default'] = CodeGen;\n\tmodule.exports = exports['default'];\n\n/***/ })\n/******/ ])\n});\n;\n\n//# sourceURL=webpack://keenthemes/./node_modules/handlebars/dist/handlebars.js?");

/***/ }),

/***/ "./node_modules/vis-timeline/dist/vis-timeline-graph2d.css":
/*!*****************************************************************!*\
  !*** ./node_modules/vis-timeline/dist/vis-timeline-graph2d.css ***!
  \*****************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n// extracted by mini-css-extract-plugin\n\n\n//# sourceURL=webpack://keenthemes/./node_modules/vis-timeline/dist/vis-timeline-graph2d.css?");

/***/ }),

/***/ "./node_modules/vis-timeline/standalone/esm/index.js":
/*!***********************************************************!*\
  !*** ./node_modules/vis-timeline/standalone/esm/index.js ***!
  \***********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMutil: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.DOMutil),\n/* harmony export */   DataSet: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.DataSet),\n/* harmony export */   DataView: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.DataView),\n/* harmony export */   Graph2d: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.Graph2d),\n/* harmony export */   Hammer: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.Hammer),\n/* harmony export */   Queue: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.Queue),\n/* harmony export */   Timeline: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.Timeline),\n/* harmony export */   keycharm: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.keycharm),\n/* harmony export */   moment: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.moment),\n/* harmony export */   timeline: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.timeline),\n/* harmony export */   util: () => (/* reexport safe */ _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__.util)\n/* harmony export */ });\n/* harmony import */ var _vis_timeline_graph2d__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./vis-timeline-graph2d */ \"./node_modules/vis-timeline/standalone/esm/vis-timeline-graph2d.js\");\n\n\n\n//# sourceURL=webpack://keenthemes/./node_modules/vis-timeline/standalone/esm/index.js?");

/***/ }),

/***/ "./node_modules/vis-timeline/standalone/esm/vis-timeline-graph2d.js":
/*!**************************************************************************!*\
  !*** ./node_modules/vis-timeline/standalone/esm/vis-timeline-graph2d.js ***!
  \**************************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMutil: () => (/* binding */ DOMutil),\n/* harmony export */   DataSet: () => (/* binding */ DataSet),\n/* harmony export */   DataView: () => (/* binding */ DataView),\n/* harmony export */   Graph2d: () => (/* binding */ Graph2d),\n/* harmony export */   Hammer: () => (/* binding */ Hammer),\n/* harmony export */   Queue: () => (/* binding */ Queue),\n/* harmony export */   Timeline: () => (/* binding */ Timeline),\n/* harmony export */   keycharm: () => (/* binding */ keycharm),\n/* harmony export */   moment: () => (/* binding */ moment$4),\n/* harmony export */   timeline: () => (/* binding */ timeline),\n/* harmony export */   util: () => (/* binding */ util$2)\n/* harmony export */ });\n/**\n * vis-timeline and vis-graph2d\n * https://visjs.github.io/vis-timeline/\n *\n * Create a fully customizable, interactive timeline with items and ranges.\n *\n * @version 7.7.3\n * @date    2023-10-27T17:57:57.604Z\n *\n * @copyright (c) 2011-2017 Almende B.V, http://almende.com\n * @copyright (c) 2017-2019 visjs contributors, https://github.com/visjs\n *\n * @license\n * vis.js is dual licensed under both\n *\n *   1. The Apache 2.0 License\n *      http://www.apache.org/licenses/LICENSE-2.0\n *\n *   and\n *\n *   2. The MIT License\n *      http://opensource.org/licenses/MIT\n *\n * vis.js may be distributed under either license.\n */\n\nvar commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof __webpack_require__.g !== 'undefined' ? __webpack_require__.g : typeof self !== 'undefined' ? self : {};\n\nfunction getDefaultExportFromCjs (x) {\n\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n}\n\nfunction commonjsRequire(path) {\n\tthrow new Error('Could not dynamically require \"' + path + '\". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');\n}\n\nvar moment$5 = {exports: {}};\n\nvar hasRequiredMoment;\n\nfunction requireMoment () {\n\tif (hasRequiredMoment) return moment$5.exports;\n\thasRequiredMoment = 1;\n\t(function (module, exports) {\n(function (global, factory) {\n\t\t    module.exports = factory() ;\n\t\t}(commonjsGlobal, (function () {\n\t\t    var hookCallback;\n\n\t\t    function hooks() {\n\t\t        return hookCallback.apply(null, arguments);\n\t\t    }\n\n\t\t    // This is done to register the method called with moment()\n\t\t    // without creating circular dependencies.\n\t\t    function setHookCallback(callback) {\n\t\t        hookCallback = callback;\n\t\t    }\n\n\t\t    function isArray(input) {\n\t\t        return (\n\t\t            input instanceof Array ||\n\t\t            Object.prototype.toString.call(input) === '[object Array]'\n\t\t        );\n\t\t    }\n\n\t\t    function isObject(input) {\n\t\t        // IE8 will treat undefined and null as object if it wasn't for\n\t\t        // input != null\n\t\t        return (\n\t\t            input != null &&\n\t\t            Object.prototype.toString.call(input) === '[object Object]'\n\t\t        );\n\t\t    }\n\n\t\t    function hasOwnProp(a, b) {\n\t\t        return Object.prototype.hasOwnProperty.call(a, b);\n\t\t    }\n\n\t\t    function isObjectEmpty(obj) {\n\t\t        if (Object.getOwnPropertyNames) {\n\t\t            return Object.getOwnPropertyNames(obj).length === 0;\n\t\t        } else {\n\t\t            var k;\n\t\t            for (k in obj) {\n\t\t                if (hasOwnProp(obj, k)) {\n\t\t                    return false;\n\t\t                }\n\t\t            }\n\t\t            return true;\n\t\t        }\n\t\t    }\n\n\t\t    function isUndefined(input) {\n\t\t        return input === void 0;\n\t\t    }\n\n\t\t    function isNumber(input) {\n\t\t        return (\n\t\t            typeof input === 'number' ||\n\t\t            Object.prototype.toString.call(input) === '[object Number]'\n\t\t        );\n\t\t    }\n\n\t\t    function isDate(input) {\n\t\t        return (\n\t\t            input instanceof Date ||\n\t\t            Object.prototype.toString.call(input) === '[object Date]'\n\t\t        );\n\t\t    }\n\n\t\t    function map(arr, fn) {\n\t\t        var res = [],\n\t\t            i,\n\t\t            arrLen = arr.length;\n\t\t        for (i = 0; i < arrLen; ++i) {\n\t\t            res.push(fn(arr[i], i));\n\t\t        }\n\t\t        return res;\n\t\t    }\n\n\t\t    function extend(a, b) {\n\t\t        for (var i in b) {\n\t\t            if (hasOwnProp(b, i)) {\n\t\t                a[i] = b[i];\n\t\t            }\n\t\t        }\n\n\t\t        if (hasOwnProp(b, 'toString')) {\n\t\t            a.toString = b.toString;\n\t\t        }\n\n\t\t        if (hasOwnProp(b, 'valueOf')) {\n\t\t            a.valueOf = b.valueOf;\n\t\t        }\n\n\t\t        return a;\n\t\t    }\n\n\t\t    function createUTC(input, format, locale, strict) {\n\t\t        return createLocalOrUTC(input, format, locale, strict, true).utc();\n\t\t    }\n\n\t\t    function defaultParsingFlags() {\n\t\t        // We need to deep clone this object.\n\t\t        return {\n\t\t            empty: false,\n\t\t            unusedTokens: [],\n\t\t            unusedInput: [],\n\t\t            overflow: -2,\n\t\t            charsLeftOver: 0,\n\t\t            nullInput: false,\n\t\t            invalidEra: null,\n\t\t            invalidMonth: null,\n\t\t            invalidFormat: false,\n\t\t            userInvalidated: false,\n\t\t            iso: false,\n\t\t            parsedDateParts: [],\n\t\t            era: null,\n\t\t            meridiem: null,\n\t\t            rfc2822: false,\n\t\t            weekdayMismatch: false,\n\t\t        };\n\t\t    }\n\n\t\t    function getParsingFlags(m) {\n\t\t        if (m._pf == null) {\n\t\t            m._pf = defaultParsingFlags();\n\t\t        }\n\t\t        return m._pf;\n\t\t    }\n\n\t\t    var some;\n\t\t    if (Array.prototype.some) {\n\t\t        some = Array.prototype.some;\n\t\t    } else {\n\t\t        some = function (fun) {\n\t\t            var t = Object(this),\n\t\t                len = t.length >>> 0,\n\t\t                i;\n\n\t\t            for (i = 0; i < len; i++) {\n\t\t                if (i in t && fun.call(this, t[i], i, t)) {\n\t\t                    return true;\n\t\t                }\n\t\t            }\n\n\t\t            return false;\n\t\t        };\n\t\t    }\n\n\t\t    function isValid(m) {\n\t\t        if (m._isValid == null) {\n\t\t            var flags = getParsingFlags(m),\n\t\t                parsedParts = some.call(flags.parsedDateParts, function (i) {\n\t\t                    return i != null;\n\t\t                }),\n\t\t                isNowValid =\n\t\t                    !isNaN(m._d.getTime()) &&\n\t\t                    flags.overflow < 0 &&\n\t\t                    !flags.empty &&\n\t\t                    !flags.invalidEra &&\n\t\t                    !flags.invalidMonth &&\n\t\t                    !flags.invalidWeekday &&\n\t\t                    !flags.weekdayMismatch &&\n\t\t                    !flags.nullInput &&\n\t\t                    !flags.invalidFormat &&\n\t\t                    !flags.userInvalidated &&\n\t\t                    (!flags.meridiem || (flags.meridiem && parsedParts));\n\n\t\t            if (m._strict) {\n\t\t                isNowValid =\n\t\t                    isNowValid &&\n\t\t                    flags.charsLeftOver === 0 &&\n\t\t                    flags.unusedTokens.length === 0 &&\n\t\t                    flags.bigHour === undefined;\n\t\t            }\n\n\t\t            if (Object.isFrozen == null || !Object.isFrozen(m)) {\n\t\t                m._isValid = isNowValid;\n\t\t            } else {\n\t\t                return isNowValid;\n\t\t            }\n\t\t        }\n\t\t        return m._isValid;\n\t\t    }\n\n\t\t    function createInvalid(flags) {\n\t\t        var m = createUTC(NaN);\n\t\t        if (flags != null) {\n\t\t            extend(getParsingFlags(m), flags);\n\t\t        } else {\n\t\t            getParsingFlags(m).userInvalidated = true;\n\t\t        }\n\n\t\t        return m;\n\t\t    }\n\n\t\t    // Plugins that add properties should also add the key here (null value),\n\t\t    // so we can properly clone ourselves.\n\t\t    var momentProperties = (hooks.momentProperties = []),\n\t\t        updateInProgress = false;\n\n\t\t    function copyConfig(to, from) {\n\t\t        var i,\n\t\t            prop,\n\t\t            val,\n\t\t            momentPropertiesLen = momentProperties.length;\n\n\t\t        if (!isUndefined(from._isAMomentObject)) {\n\t\t            to._isAMomentObject = from._isAMomentObject;\n\t\t        }\n\t\t        if (!isUndefined(from._i)) {\n\t\t            to._i = from._i;\n\t\t        }\n\t\t        if (!isUndefined(from._f)) {\n\t\t            to._f = from._f;\n\t\t        }\n\t\t        if (!isUndefined(from._l)) {\n\t\t            to._l = from._l;\n\t\t        }\n\t\t        if (!isUndefined(from._strict)) {\n\t\t            to._strict = from._strict;\n\t\t        }\n\t\t        if (!isUndefined(from._tzm)) {\n\t\t            to._tzm = from._tzm;\n\t\t        }\n\t\t        if (!isUndefined(from._isUTC)) {\n\t\t            to._isUTC = from._isUTC;\n\t\t        }\n\t\t        if (!isUndefined(from._offset)) {\n\t\t            to._offset = from._offset;\n\t\t        }\n\t\t        if (!isUndefined(from._pf)) {\n\t\t            to._pf = getParsingFlags(from);\n\t\t        }\n\t\t        if (!isUndefined(from._locale)) {\n\t\t            to._locale = from._locale;\n\t\t        }\n\n\t\t        if (momentPropertiesLen > 0) {\n\t\t            for (i = 0; i < momentPropertiesLen; i++) {\n\t\t                prop = momentProperties[i];\n\t\t                val = from[prop];\n\t\t                if (!isUndefined(val)) {\n\t\t                    to[prop] = val;\n\t\t                }\n\t\t            }\n\t\t        }\n\n\t\t        return to;\n\t\t    }\n\n\t\t    // Moment prototype object\n\t\t    function Moment(config) {\n\t\t        copyConfig(this, config);\n\t\t        this._d = new Date(config._d != null ? config._d.getTime() : NaN);\n\t\t        if (!this.isValid()) {\n\t\t            this._d = new Date(NaN);\n\t\t        }\n\t\t        // Prevent infinite loop in case updateOffset creates new moment\n\t\t        // objects.\n\t\t        if (updateInProgress === false) {\n\t\t            updateInProgress = true;\n\t\t            hooks.updateOffset(this);\n\t\t            updateInProgress = false;\n\t\t        }\n\t\t    }\n\n\t\t    function isMoment(obj) {\n\t\t        return (\n\t\t            obj instanceof Moment || (obj != null && obj._isAMomentObject != null)\n\t\t        );\n\t\t    }\n\n\t\t    function warn(msg) {\n\t\t        if (\n\t\t            hooks.suppressDeprecationWarnings === false &&\n\t\t            typeof console !== 'undefined' &&\n\t\t            console.warn\n\t\t        ) {\n\t\t            console.warn('Deprecation warning: ' + msg);\n\t\t        }\n\t\t    }\n\n\t\t    function deprecate(msg, fn) {\n\t\t        var firstTime = true;\n\n\t\t        return extend(function () {\n\t\t            if (hooks.deprecationHandler != null) {\n\t\t                hooks.deprecationHandler(null, msg);\n\t\t            }\n\t\t            if (firstTime) {\n\t\t                var args = [],\n\t\t                    arg,\n\t\t                    i,\n\t\t                    key,\n\t\t                    argLen = arguments.length;\n\t\t                for (i = 0; i < argLen; i++) {\n\t\t                    arg = '';\n\t\t                    if (typeof arguments[i] === 'object') {\n\t\t                        arg += '\\n[' + i + '] ';\n\t\t                        for (key in arguments[0]) {\n\t\t                            if (hasOwnProp(arguments[0], key)) {\n\t\t                                arg += key + ': ' + arguments[0][key] + ', ';\n\t\t                            }\n\t\t                        }\n\t\t                        arg = arg.slice(0, -2); // Remove trailing comma and space\n\t\t                    } else {\n\t\t                        arg = arguments[i];\n\t\t                    }\n\t\t                    args.push(arg);\n\t\t                }\n\t\t                warn(\n\t\t                    msg +\n\t\t                        '\\nArguments: ' +\n\t\t                        Array.prototype.slice.call(args).join('') +\n\t\t                        '\\n' +\n\t\t                        new Error().stack\n\t\t                );\n\t\t                firstTime = false;\n\t\t            }\n\t\t            return fn.apply(this, arguments);\n\t\t        }, fn);\n\t\t    }\n\n\t\t    var deprecations = {};\n\n\t\t    function deprecateSimple(name, msg) {\n\t\t        if (hooks.deprecationHandler != null) {\n\t\t            hooks.deprecationHandler(name, msg);\n\t\t        }\n\t\t        if (!deprecations[name]) {\n\t\t            warn(msg);\n\t\t            deprecations[name] = true;\n\t\t        }\n\t\t    }\n\n\t\t    hooks.suppressDeprecationWarnings = false;\n\t\t    hooks.deprecationHandler = null;\n\n\t\t    function isFunction(input) {\n\t\t        return (\n\t\t            (typeof Function !== 'undefined' && input instanceof Function) ||\n\t\t            Object.prototype.toString.call(input) === '[object Function]'\n\t\t        );\n\t\t    }\n\n\t\t    function set(config) {\n\t\t        var prop, i;\n\t\t        for (i in config) {\n\t\t            if (hasOwnProp(config, i)) {\n\t\t                prop = config[i];\n\t\t                if (isFunction(prop)) {\n\t\t                    this[i] = prop;\n\t\t                } else {\n\t\t                    this['_' + i] = prop;\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        this._config = config;\n\t\t        // Lenient ordinal parsing accepts just a number in addition to\n\t\t        // number + (possibly) stuff coming from _dayOfMonthOrdinalParse.\n\t\t        // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t\t        this._dayOfMonthOrdinalParseLenient = new RegExp(\n\t\t            (this._dayOfMonthOrdinalParse.source || this._ordinalParse.source) +\n\t\t                '|' +\n\t\t                /\\d{1,2}/.source\n\t\t        );\n\t\t    }\n\n\t\t    function mergeConfigs(parentConfig, childConfig) {\n\t\t        var res = extend({}, parentConfig),\n\t\t            prop;\n\t\t        for (prop in childConfig) {\n\t\t            if (hasOwnProp(childConfig, prop)) {\n\t\t                if (isObject(parentConfig[prop]) && isObject(childConfig[prop])) {\n\t\t                    res[prop] = {};\n\t\t                    extend(res[prop], parentConfig[prop]);\n\t\t                    extend(res[prop], childConfig[prop]);\n\t\t                } else if (childConfig[prop] != null) {\n\t\t                    res[prop] = childConfig[prop];\n\t\t                } else {\n\t\t                    delete res[prop];\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        for (prop in parentConfig) {\n\t\t            if (\n\t\t                hasOwnProp(parentConfig, prop) &&\n\t\t                !hasOwnProp(childConfig, prop) &&\n\t\t                isObject(parentConfig[prop])\n\t\t            ) {\n\t\t                // make sure changes to properties don't modify parent config\n\t\t                res[prop] = extend({}, res[prop]);\n\t\t            }\n\t\t        }\n\t\t        return res;\n\t\t    }\n\n\t\t    function Locale(config) {\n\t\t        if (config != null) {\n\t\t            this.set(config);\n\t\t        }\n\t\t    }\n\n\t\t    var keys;\n\n\t\t    if (Object.keys) {\n\t\t        keys = Object.keys;\n\t\t    } else {\n\t\t        keys = function (obj) {\n\t\t            var i,\n\t\t                res = [];\n\t\t            for (i in obj) {\n\t\t                if (hasOwnProp(obj, i)) {\n\t\t                    res.push(i);\n\t\t                }\n\t\t            }\n\t\t            return res;\n\t\t        };\n\t\t    }\n\n\t\t    var defaultCalendar = {\n\t\t        sameDay: '[Today at] LT',\n\t\t        nextDay: '[Tomorrow at] LT',\n\t\t        nextWeek: 'dddd [at] LT',\n\t\t        lastDay: '[Yesterday at] LT',\n\t\t        lastWeek: '[Last] dddd [at] LT',\n\t\t        sameElse: 'L',\n\t\t    };\n\n\t\t    function calendar(key, mom, now) {\n\t\t        var output = this._calendar[key] || this._calendar['sameElse'];\n\t\t        return isFunction(output) ? output.call(mom, now) : output;\n\t\t    }\n\n\t\t    function zeroFill(number, targetLength, forceSign) {\n\t\t        var absNumber = '' + Math.abs(number),\n\t\t            zerosToFill = targetLength - absNumber.length,\n\t\t            sign = number >= 0;\n\t\t        return (\n\t\t            (sign ? (forceSign ? '+' : '') : '-') +\n\t\t            Math.pow(10, Math.max(0, zerosToFill)).toString().substr(1) +\n\t\t            absNumber\n\t\t        );\n\t\t    }\n\n\t\t    var formattingTokens =\n\t\t            /(\\[[^\\[]*\\])|(\\\\)?([Hh]mm(ss)?|Mo|MM?M?M?|Do|DDDo|DD?D?D?|ddd?d?|do?|w[o|w]?|W[o|W]?|Qo?|N{1,5}|YYYYYY|YYYYY|YYYY|YY|y{2,4}|yo?|gg(ggg?)?|GG(GGG?)?|e|E|a|A|hh?|HH?|kk?|mm?|ss?|S{1,9}|x|X|zz?|ZZ?|.)/g,\n\t\t        localFormattingTokens = /(\\[[^\\[]*\\])|(\\\\)?(LTS|LT|LL?L?L?|l{1,4})/g,\n\t\t        formatFunctions = {},\n\t\t        formatTokenFunctions = {};\n\n\t\t    // token:    'M'\n\t\t    // padded:   ['MM', 2]\n\t\t    // ordinal:  'Mo'\n\t\t    // callback: function () { this.month() + 1 }\n\t\t    function addFormatToken(token, padded, ordinal, callback) {\n\t\t        var func = callback;\n\t\t        if (typeof callback === 'string') {\n\t\t            func = function () {\n\t\t                return this[callback]();\n\t\t            };\n\t\t        }\n\t\t        if (token) {\n\t\t            formatTokenFunctions[token] = func;\n\t\t        }\n\t\t        if (padded) {\n\t\t            formatTokenFunctions[padded[0]] = function () {\n\t\t                return zeroFill(func.apply(this, arguments), padded[1], padded[2]);\n\t\t            };\n\t\t        }\n\t\t        if (ordinal) {\n\t\t            formatTokenFunctions[ordinal] = function () {\n\t\t                return this.localeData().ordinal(\n\t\t                    func.apply(this, arguments),\n\t\t                    token\n\t\t                );\n\t\t            };\n\t\t        }\n\t\t    }\n\n\t\t    function removeFormattingTokens(input) {\n\t\t        if (input.match(/\\[[\\s\\S]/)) {\n\t\t            return input.replace(/^\\[|\\]$/g, '');\n\t\t        }\n\t\t        return input.replace(/\\\\/g, '');\n\t\t    }\n\n\t\t    function makeFormatFunction(format) {\n\t\t        var array = format.match(formattingTokens),\n\t\t            i,\n\t\t            length;\n\n\t\t        for (i = 0, length = array.length; i < length; i++) {\n\t\t            if (formatTokenFunctions[array[i]]) {\n\t\t                array[i] = formatTokenFunctions[array[i]];\n\t\t            } else {\n\t\t                array[i] = removeFormattingTokens(array[i]);\n\t\t            }\n\t\t        }\n\n\t\t        return function (mom) {\n\t\t            var output = '',\n\t\t                i;\n\t\t            for (i = 0; i < length; i++) {\n\t\t                output += isFunction(array[i])\n\t\t                    ? array[i].call(mom, format)\n\t\t                    : array[i];\n\t\t            }\n\t\t            return output;\n\t\t        };\n\t\t    }\n\n\t\t    // format date using native date object\n\t\t    function formatMoment(m, format) {\n\t\t        if (!m.isValid()) {\n\t\t            return m.localeData().invalidDate();\n\t\t        }\n\n\t\t        format = expandFormat(format, m.localeData());\n\t\t        formatFunctions[format] =\n\t\t            formatFunctions[format] || makeFormatFunction(format);\n\n\t\t        return formatFunctions[format](m);\n\t\t    }\n\n\t\t    function expandFormat(format, locale) {\n\t\t        var i = 5;\n\n\t\t        function replaceLongDateFormatTokens(input) {\n\t\t            return locale.longDateFormat(input) || input;\n\t\t        }\n\n\t\t        localFormattingTokens.lastIndex = 0;\n\t\t        while (i >= 0 && localFormattingTokens.test(format)) {\n\t\t            format = format.replace(\n\t\t                localFormattingTokens,\n\t\t                replaceLongDateFormatTokens\n\t\t            );\n\t\t            localFormattingTokens.lastIndex = 0;\n\t\t            i -= 1;\n\t\t        }\n\n\t\t        return format;\n\t\t    }\n\n\t\t    var defaultLongDateFormat = {\n\t\t        LTS: 'h:mm:ss A',\n\t\t        LT: 'h:mm A',\n\t\t        L: 'MM/DD/YYYY',\n\t\t        LL: 'MMMM D, YYYY',\n\t\t        LLL: 'MMMM D, YYYY h:mm A',\n\t\t        LLLL: 'dddd, MMMM D, YYYY h:mm A',\n\t\t    };\n\n\t\t    function longDateFormat(key) {\n\t\t        var format = this._longDateFormat[key],\n\t\t            formatUpper = this._longDateFormat[key.toUpperCase()];\n\n\t\t        if (format || !formatUpper) {\n\t\t            return format;\n\t\t        }\n\n\t\t        this._longDateFormat[key] = formatUpper\n\t\t            .match(formattingTokens)\n\t\t            .map(function (tok) {\n\t\t                if (\n\t\t                    tok === 'MMMM' ||\n\t\t                    tok === 'MM' ||\n\t\t                    tok === 'DD' ||\n\t\t                    tok === 'dddd'\n\t\t                ) {\n\t\t                    return tok.slice(1);\n\t\t                }\n\t\t                return tok;\n\t\t            })\n\t\t            .join('');\n\n\t\t        return this._longDateFormat[key];\n\t\t    }\n\n\t\t    var defaultInvalidDate = 'Invalid date';\n\n\t\t    function invalidDate() {\n\t\t        return this._invalidDate;\n\t\t    }\n\n\t\t    var defaultOrdinal = '%d',\n\t\t        defaultDayOfMonthOrdinalParse = /\\d{1,2}/;\n\n\t\t    function ordinal(number) {\n\t\t        return this._ordinal.replace('%d', number);\n\t\t    }\n\n\t\t    var defaultRelativeTime = {\n\t\t        future: 'in %s',\n\t\t        past: '%s ago',\n\t\t        s: 'a few seconds',\n\t\t        ss: '%d seconds',\n\t\t        m: 'a minute',\n\t\t        mm: '%d minutes',\n\t\t        h: 'an hour',\n\t\t        hh: '%d hours',\n\t\t        d: 'a day',\n\t\t        dd: '%d days',\n\t\t        w: 'a week',\n\t\t        ww: '%d weeks',\n\t\t        M: 'a month',\n\t\t        MM: '%d months',\n\t\t        y: 'a year',\n\t\t        yy: '%d years',\n\t\t    };\n\n\t\t    function relativeTime(number, withoutSuffix, string, isFuture) {\n\t\t        var output = this._relativeTime[string];\n\t\t        return isFunction(output)\n\t\t            ? output(number, withoutSuffix, string, isFuture)\n\t\t            : output.replace(/%d/i, number);\n\t\t    }\n\n\t\t    function pastFuture(diff, output) {\n\t\t        var format = this._relativeTime[diff > 0 ? 'future' : 'past'];\n\t\t        return isFunction(format) ? format(output) : format.replace(/%s/i, output);\n\t\t    }\n\n\t\t    var aliases = {};\n\n\t\t    function addUnitAlias(unit, shorthand) {\n\t\t        var lowerCase = unit.toLowerCase();\n\t\t        aliases[lowerCase] = aliases[lowerCase + 's'] = aliases[shorthand] = unit;\n\t\t    }\n\n\t\t    function normalizeUnits(units) {\n\t\t        return typeof units === 'string'\n\t\t            ? aliases[units] || aliases[units.toLowerCase()]\n\t\t            : undefined;\n\t\t    }\n\n\t\t    function normalizeObjectUnits(inputObject) {\n\t\t        var normalizedInput = {},\n\t\t            normalizedProp,\n\t\t            prop;\n\n\t\t        for (prop in inputObject) {\n\t\t            if (hasOwnProp(inputObject, prop)) {\n\t\t                normalizedProp = normalizeUnits(prop);\n\t\t                if (normalizedProp) {\n\t\t                    normalizedInput[normalizedProp] = inputObject[prop];\n\t\t                }\n\t\t            }\n\t\t        }\n\n\t\t        return normalizedInput;\n\t\t    }\n\n\t\t    var priorities = {};\n\n\t\t    function addUnitPriority(unit, priority) {\n\t\t        priorities[unit] = priority;\n\t\t    }\n\n\t\t    function getPrioritizedUnits(unitsObj) {\n\t\t        var units = [],\n\t\t            u;\n\t\t        for (u in unitsObj) {\n\t\t            if (hasOwnProp(unitsObj, u)) {\n\t\t                units.push({ unit: u, priority: priorities[u] });\n\t\t            }\n\t\t        }\n\t\t        units.sort(function (a, b) {\n\t\t            return a.priority - b.priority;\n\t\t        });\n\t\t        return units;\n\t\t    }\n\n\t\t    function isLeapYear(year) {\n\t\t        return (year % 4 === 0 && year % 100 !== 0) || year % 400 === 0;\n\t\t    }\n\n\t\t    function absFloor(number) {\n\t\t        if (number < 0) {\n\t\t            // -0 -> 0\n\t\t            return Math.ceil(number) || 0;\n\t\t        } else {\n\t\t            return Math.floor(number);\n\t\t        }\n\t\t    }\n\n\t\t    function toInt(argumentForCoercion) {\n\t\t        var coercedNumber = +argumentForCoercion,\n\t\t            value = 0;\n\n\t\t        if (coercedNumber !== 0 && isFinite(coercedNumber)) {\n\t\t            value = absFloor(coercedNumber);\n\t\t        }\n\n\t\t        return value;\n\t\t    }\n\n\t\t    function makeGetSet(unit, keepTime) {\n\t\t        return function (value) {\n\t\t            if (value != null) {\n\t\t                set$1(this, unit, value);\n\t\t                hooks.updateOffset(this, keepTime);\n\t\t                return this;\n\t\t            } else {\n\t\t                return get(this, unit);\n\t\t            }\n\t\t        };\n\t\t    }\n\n\t\t    function get(mom, unit) {\n\t\t        return mom.isValid()\n\t\t            ? mom._d['get' + (mom._isUTC ? 'UTC' : '') + unit]()\n\t\t            : NaN;\n\t\t    }\n\n\t\t    function set$1(mom, unit, value) {\n\t\t        if (mom.isValid() && !isNaN(value)) {\n\t\t            if (\n\t\t                unit === 'FullYear' &&\n\t\t                isLeapYear(mom.year()) &&\n\t\t                mom.month() === 1 &&\n\t\t                mom.date() === 29\n\t\t            ) {\n\t\t                value = toInt(value);\n\t\t                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](\n\t\t                    value,\n\t\t                    mom.month(),\n\t\t                    daysInMonth(value, mom.month())\n\t\t                );\n\t\t            } else {\n\t\t                mom._d['set' + (mom._isUTC ? 'UTC' : '') + unit](value);\n\t\t            }\n\t\t        }\n\t\t    }\n\n\t\t    // MOMENTS\n\n\t\t    function stringGet(units) {\n\t\t        units = normalizeUnits(units);\n\t\t        if (isFunction(this[units])) {\n\t\t            return this[units]();\n\t\t        }\n\t\t        return this;\n\t\t    }\n\n\t\t    function stringSet(units, value) {\n\t\t        if (typeof units === 'object') {\n\t\t            units = normalizeObjectUnits(units);\n\t\t            var prioritized = getPrioritizedUnits(units),\n\t\t                i,\n\t\t                prioritizedLen = prioritized.length;\n\t\t            for (i = 0; i < prioritizedLen; i++) {\n\t\t                this[prioritized[i].unit](units[prioritized[i].unit]);\n\t\t            }\n\t\t        } else {\n\t\t            units = normalizeUnits(units);\n\t\t            if (isFunction(this[units])) {\n\t\t                return this[units](value);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    }\n\n\t\t    var match1 = /\\d/, //       0 - 9\n\t\t        match2 = /\\d\\d/, //      00 - 99\n\t\t        match3 = /\\d{3}/, //     000 - 999\n\t\t        match4 = /\\d{4}/, //    0000 - 9999\n\t\t        match6 = /[+-]?\\d{6}/, // -999999 - 999999\n\t\t        match1to2 = /\\d\\d?/, //       0 - 99\n\t\t        match3to4 = /\\d\\d\\d\\d?/, //     999 - 9999\n\t\t        match5to6 = /\\d\\d\\d\\d\\d\\d?/, //   99999 - 999999\n\t\t        match1to3 = /\\d{1,3}/, //       0 - 999\n\t\t        match1to4 = /\\d{1,4}/, //       0 - 9999\n\t\t        match1to6 = /[+-]?\\d{1,6}/, // -999999 - 999999\n\t\t        matchUnsigned = /\\d+/, //       0 - inf\n\t\t        matchSigned = /[+-]?\\d+/, //    -inf - inf\n\t\t        matchOffset = /Z|[+-]\\d\\d:?\\d\\d/gi, // +00:00 -00:00 +0000 -0000 or Z\n\t\t        matchShortOffset = /Z|[+-]\\d\\d(?::?\\d\\d)?/gi, // +00 -00 +00:00 -00:00 +0000 -0000 or Z\n\t\t        matchTimestamp = /[+-]?\\d+(\\.\\d{1,3})?/, // 123456789 123456789.123\n\t\t        // any word (or two) characters or numbers including two/three word month in arabic.\n\t\t        // includes scottish gaelic two word and hyphenated months\n\t\t        matchWord =\n\t\t            /[0-9]{0,256}['a-z\\u00A0-\\u05FF\\u0700-\\uD7FF\\uF900-\\uFDCF\\uFDF0-\\uFF07\\uFF10-\\uFFEF]{1,256}|[\\u0600-\\u06FF\\/]{1,256}(\\s*?[\\u0600-\\u06FF]{1,256}){1,2}/i,\n\t\t        regexes;\n\n\t\t    regexes = {};\n\n\t\t    function addRegexToken(token, regex, strictRegex) {\n\t\t        regexes[token] = isFunction(regex)\n\t\t            ? regex\n\t\t            : function (isStrict, localeData) {\n\t\t                  return isStrict && strictRegex ? strictRegex : regex;\n\t\t              };\n\t\t    }\n\n\t\t    function getParseRegexForToken(token, config) {\n\t\t        if (!hasOwnProp(regexes, token)) {\n\t\t            return new RegExp(unescapeFormat(token));\n\t\t        }\n\n\t\t        return regexes[token](config._strict, config._locale);\n\t\t    }\n\n\t\t    // Code from http://stackoverflow.com/questions/3561493/is-there-a-regexp-escape-function-in-javascript\n\t\t    function unescapeFormat(s) {\n\t\t        return regexEscape(\n\t\t            s\n\t\t                .replace('\\\\', '')\n\t\t                .replace(\n\t\t                    /\\\\(\\[)|\\\\(\\])|\\[([^\\]\\[]*)\\]|\\\\(.)/g,\n\t\t                    function (matched, p1, p2, p3, p4) {\n\t\t                        return p1 || p2 || p3 || p4;\n\t\t                    }\n\t\t                )\n\t\t        );\n\t\t    }\n\n\t\t    function regexEscape(s) {\n\t\t        return s.replace(/[-\\/\\\\^$*+?.()|[\\]{}]/g, '\\\\$&');\n\t\t    }\n\n\t\t    var tokens = {};\n\n\t\t    function addParseToken(token, callback) {\n\t\t        var i,\n\t\t            func = callback,\n\t\t            tokenLen;\n\t\t        if (typeof token === 'string') {\n\t\t            token = [token];\n\t\t        }\n\t\t        if (isNumber(callback)) {\n\t\t            func = function (input, array) {\n\t\t                array[callback] = toInt(input);\n\t\t            };\n\t\t        }\n\t\t        tokenLen = token.length;\n\t\t        for (i = 0; i < tokenLen; i++) {\n\t\t            tokens[token[i]] = func;\n\t\t        }\n\t\t    }\n\n\t\t    function addWeekParseToken(token, callback) {\n\t\t        addParseToken(token, function (input, array, config, token) {\n\t\t            config._w = config._w || {};\n\t\t            callback(input, config._w, config, token);\n\t\t        });\n\t\t    }\n\n\t\t    function addTimeToArrayFromToken(token, input, config) {\n\t\t        if (input != null && hasOwnProp(tokens, token)) {\n\t\t            tokens[token](input, config._a, config, token);\n\t\t        }\n\t\t    }\n\n\t\t    var YEAR = 0,\n\t\t        MONTH = 1,\n\t\t        DATE = 2,\n\t\t        HOUR = 3,\n\t\t        MINUTE = 4,\n\t\t        SECOND = 5,\n\t\t        MILLISECOND = 6,\n\t\t        WEEK = 7,\n\t\t        WEEKDAY = 8;\n\n\t\t    function mod(n, x) {\n\t\t        return ((n % x) + x) % x;\n\t\t    }\n\n\t\t    var indexOf;\n\n\t\t    if (Array.prototype.indexOf) {\n\t\t        indexOf = Array.prototype.indexOf;\n\t\t    } else {\n\t\t        indexOf = function (o) {\n\t\t            // I know\n\t\t            var i;\n\t\t            for (i = 0; i < this.length; ++i) {\n\t\t                if (this[i] === o) {\n\t\t                    return i;\n\t\t                }\n\t\t            }\n\t\t            return -1;\n\t\t        };\n\t\t    }\n\n\t\t    function daysInMonth(year, month) {\n\t\t        if (isNaN(year) || isNaN(month)) {\n\t\t            return NaN;\n\t\t        }\n\t\t        var modMonth = mod(month, 12);\n\t\t        year += (month - modMonth) / 12;\n\t\t        return modMonth === 1\n\t\t            ? isLeapYear(year)\n\t\t                ? 29\n\t\t                : 28\n\t\t            : 31 - ((modMonth % 7) % 2);\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('M', ['MM', 2], 'Mo', function () {\n\t\t        return this.month() + 1;\n\t\t    });\n\n\t\t    addFormatToken('MMM', 0, 0, function (format) {\n\t\t        return this.localeData().monthsShort(this, format);\n\t\t    });\n\n\t\t    addFormatToken('MMMM', 0, 0, function (format) {\n\t\t        return this.localeData().months(this, format);\n\t\t    });\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('month', 'M');\n\n\t\t    // PRIORITY\n\n\t\t    addUnitPriority('month', 8);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('M', match1to2);\n\t\t    addRegexToken('MM', match1to2, match2);\n\t\t    addRegexToken('MMM', function (isStrict, locale) {\n\t\t        return locale.monthsShortRegex(isStrict);\n\t\t    });\n\t\t    addRegexToken('MMMM', function (isStrict, locale) {\n\t\t        return locale.monthsRegex(isStrict);\n\t\t    });\n\n\t\t    addParseToken(['M', 'MM'], function (input, array) {\n\t\t        array[MONTH] = toInt(input) - 1;\n\t\t    });\n\n\t\t    addParseToken(['MMM', 'MMMM'], function (input, array, config, token) {\n\t\t        var month = config._locale.monthsParse(input, token, config._strict);\n\t\t        // if we didn't find a month name, mark the date as invalid.\n\t\t        if (month != null) {\n\t\t            array[MONTH] = month;\n\t\t        } else {\n\t\t            getParsingFlags(config).invalidMonth = input;\n\t\t        }\n\t\t    });\n\n\t\t    // LOCALES\n\n\t\t    var defaultLocaleMonths =\n\t\t            'January_February_March_April_May_June_July_August_September_October_November_December'.split(\n\t\t                '_'\n\t\t            ),\n\t\t        defaultLocaleMonthsShort =\n\t\t            'Jan_Feb_Mar_Apr_May_Jun_Jul_Aug_Sep_Oct_Nov_Dec'.split('_'),\n\t\t        MONTHS_IN_FORMAT = /D[oD]?(\\[[^\\[\\]]*\\]|\\s)+MMMM?/,\n\t\t        defaultMonthsShortRegex = matchWord,\n\t\t        defaultMonthsRegex = matchWord;\n\n\t\t    function localeMonths(m, format) {\n\t\t        if (!m) {\n\t\t            return isArray(this._months)\n\t\t                ? this._months\n\t\t                : this._months['standalone'];\n\t\t        }\n\t\t        return isArray(this._months)\n\t\t            ? this._months[m.month()]\n\t\t            : this._months[\n\t\t                  (this._months.isFormat || MONTHS_IN_FORMAT).test(format)\n\t\t                      ? 'format'\n\t\t                      : 'standalone'\n\t\t              ][m.month()];\n\t\t    }\n\n\t\t    function localeMonthsShort(m, format) {\n\t\t        if (!m) {\n\t\t            return isArray(this._monthsShort)\n\t\t                ? this._monthsShort\n\t\t                : this._monthsShort['standalone'];\n\t\t        }\n\t\t        return isArray(this._monthsShort)\n\t\t            ? this._monthsShort[m.month()]\n\t\t            : this._monthsShort[\n\t\t                  MONTHS_IN_FORMAT.test(format) ? 'format' : 'standalone'\n\t\t              ][m.month()];\n\t\t    }\n\n\t\t    function handleStrictParse(monthName, format, strict) {\n\t\t        var i,\n\t\t            ii,\n\t\t            mom,\n\t\t            llc = monthName.toLocaleLowerCase();\n\t\t        if (!this._monthsParse) {\n\t\t            // this is not used\n\t\t            this._monthsParse = [];\n\t\t            this._longMonthsParse = [];\n\t\t            this._shortMonthsParse = [];\n\t\t            for (i = 0; i < 12; ++i) {\n\t\t                mom = createUTC([2000, i]);\n\t\t                this._shortMonthsParse[i] = this.monthsShort(\n\t\t                    mom,\n\t\t                    ''\n\t\t                ).toLocaleLowerCase();\n\t\t                this._longMonthsParse[i] = this.months(mom, '').toLocaleLowerCase();\n\t\t            }\n\t\t        }\n\n\t\t        if (strict) {\n\t\t            if (format === 'MMM') {\n\t\t                ii = indexOf.call(this._shortMonthsParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            } else {\n\t\t                ii = indexOf.call(this._longMonthsParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            }\n\t\t        } else {\n\t\t            if (format === 'MMM') {\n\t\t                ii = indexOf.call(this._shortMonthsParse, llc);\n\t\t                if (ii !== -1) {\n\t\t                    return ii;\n\t\t                }\n\t\t                ii = indexOf.call(this._longMonthsParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            } else {\n\t\t                ii = indexOf.call(this._longMonthsParse, llc);\n\t\t                if (ii !== -1) {\n\t\t                    return ii;\n\t\t                }\n\t\t                ii = indexOf.call(this._shortMonthsParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            }\n\t\t        }\n\t\t    }\n\n\t\t    function localeMonthsParse(monthName, format, strict) {\n\t\t        var i, mom, regex;\n\n\t\t        if (this._monthsParseExact) {\n\t\t            return handleStrictParse.call(this, monthName, format, strict);\n\t\t        }\n\n\t\t        if (!this._monthsParse) {\n\t\t            this._monthsParse = [];\n\t\t            this._longMonthsParse = [];\n\t\t            this._shortMonthsParse = [];\n\t\t        }\n\n\t\t        // TODO: add sorting\n\t\t        // Sorting makes sure if one month (or abbr) is a prefix of another\n\t\t        // see sorting in computeMonthsParse\n\t\t        for (i = 0; i < 12; i++) {\n\t\t            // make the regex if we don't have it already\n\t\t            mom = createUTC([2000, i]);\n\t\t            if (strict && !this._longMonthsParse[i]) {\n\t\t                this._longMonthsParse[i] = new RegExp(\n\t\t                    '^' + this.months(mom, '').replace('.', '') + '$',\n\t\t                    'i'\n\t\t                );\n\t\t                this._shortMonthsParse[i] = new RegExp(\n\t\t                    '^' + this.monthsShort(mom, '').replace('.', '') + '$',\n\t\t                    'i'\n\t\t                );\n\t\t            }\n\t\t            if (!strict && !this._monthsParse[i]) {\n\t\t                regex =\n\t\t                    '^' + this.months(mom, '') + '|^' + this.monthsShort(mom, '');\n\t\t                this._monthsParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t\t            }\n\t\t            // test the regex\n\t\t            if (\n\t\t                strict &&\n\t\t                format === 'MMMM' &&\n\t\t                this._longMonthsParse[i].test(monthName)\n\t\t            ) {\n\t\t                return i;\n\t\t            } else if (\n\t\t                strict &&\n\t\t                format === 'MMM' &&\n\t\t                this._shortMonthsParse[i].test(monthName)\n\t\t            ) {\n\t\t                return i;\n\t\t            } else if (!strict && this._monthsParse[i].test(monthName)) {\n\t\t                return i;\n\t\t            }\n\t\t        }\n\t\t    }\n\n\t\t    // MOMENTS\n\n\t\t    function setMonth(mom, value) {\n\t\t        var dayOfMonth;\n\n\t\t        if (!mom.isValid()) {\n\t\t            // No op\n\t\t            return mom;\n\t\t        }\n\n\t\t        if (typeof value === 'string') {\n\t\t            if (/^\\d+$/.test(value)) {\n\t\t                value = toInt(value);\n\t\t            } else {\n\t\t                value = mom.localeData().monthsParse(value);\n\t\t                // TODO: Another silent failure?\n\t\t                if (!isNumber(value)) {\n\t\t                    return mom;\n\t\t                }\n\t\t            }\n\t\t        }\n\n\t\t        dayOfMonth = Math.min(mom.date(), daysInMonth(mom.year(), value));\n\t\t        mom._d['set' + (mom._isUTC ? 'UTC' : '') + 'Month'](value, dayOfMonth);\n\t\t        return mom;\n\t\t    }\n\n\t\t    function getSetMonth(value) {\n\t\t        if (value != null) {\n\t\t            setMonth(this, value);\n\t\t            hooks.updateOffset(this, true);\n\t\t            return this;\n\t\t        } else {\n\t\t            return get(this, 'Month');\n\t\t        }\n\t\t    }\n\n\t\t    function getDaysInMonth() {\n\t\t        return daysInMonth(this.year(), this.month());\n\t\t    }\n\n\t\t    function monthsShortRegex(isStrict) {\n\t\t        if (this._monthsParseExact) {\n\t\t            if (!hasOwnProp(this, '_monthsRegex')) {\n\t\t                computeMonthsParse.call(this);\n\t\t            }\n\t\t            if (isStrict) {\n\t\t                return this._monthsShortStrictRegex;\n\t\t            } else {\n\t\t                return this._monthsShortRegex;\n\t\t            }\n\t\t        } else {\n\t\t            if (!hasOwnProp(this, '_monthsShortRegex')) {\n\t\t                this._monthsShortRegex = defaultMonthsShortRegex;\n\t\t            }\n\t\t            return this._monthsShortStrictRegex && isStrict\n\t\t                ? this._monthsShortStrictRegex\n\t\t                : this._monthsShortRegex;\n\t\t        }\n\t\t    }\n\n\t\t    function monthsRegex(isStrict) {\n\t\t        if (this._monthsParseExact) {\n\t\t            if (!hasOwnProp(this, '_monthsRegex')) {\n\t\t                computeMonthsParse.call(this);\n\t\t            }\n\t\t            if (isStrict) {\n\t\t                return this._monthsStrictRegex;\n\t\t            } else {\n\t\t                return this._monthsRegex;\n\t\t            }\n\t\t        } else {\n\t\t            if (!hasOwnProp(this, '_monthsRegex')) {\n\t\t                this._monthsRegex = defaultMonthsRegex;\n\t\t            }\n\t\t            return this._monthsStrictRegex && isStrict\n\t\t                ? this._monthsStrictRegex\n\t\t                : this._monthsRegex;\n\t\t        }\n\t\t    }\n\n\t\t    function computeMonthsParse() {\n\t\t        function cmpLenRev(a, b) {\n\t\t            return b.length - a.length;\n\t\t        }\n\n\t\t        var shortPieces = [],\n\t\t            longPieces = [],\n\t\t            mixedPieces = [],\n\t\t            i,\n\t\t            mom;\n\t\t        for (i = 0; i < 12; i++) {\n\t\t            // make the regex if we don't have it already\n\t\t            mom = createUTC([2000, i]);\n\t\t            shortPieces.push(this.monthsShort(mom, ''));\n\t\t            longPieces.push(this.months(mom, ''));\n\t\t            mixedPieces.push(this.months(mom, ''));\n\t\t            mixedPieces.push(this.monthsShort(mom, ''));\n\t\t        }\n\t\t        // Sorting makes sure if one month (or abbr) is a prefix of another it\n\t\t        // will match the longer piece.\n\t\t        shortPieces.sort(cmpLenRev);\n\t\t        longPieces.sort(cmpLenRev);\n\t\t        mixedPieces.sort(cmpLenRev);\n\t\t        for (i = 0; i < 12; i++) {\n\t\t            shortPieces[i] = regexEscape(shortPieces[i]);\n\t\t            longPieces[i] = regexEscape(longPieces[i]);\n\t\t        }\n\t\t        for (i = 0; i < 24; i++) {\n\t\t            mixedPieces[i] = regexEscape(mixedPieces[i]);\n\t\t        }\n\n\t\t        this._monthsRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t\t        this._monthsShortRegex = this._monthsRegex;\n\t\t        this._monthsStrictRegex = new RegExp(\n\t\t            '^(' + longPieces.join('|') + ')',\n\t\t            'i'\n\t\t        );\n\t\t        this._monthsShortStrictRegex = new RegExp(\n\t\t            '^(' + shortPieces.join('|') + ')',\n\t\t            'i'\n\t\t        );\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('Y', 0, 0, function () {\n\t\t        var y = this.year();\n\t\t        return y <= 9999 ? zeroFill(y, 4) : '+' + y;\n\t\t    });\n\n\t\t    addFormatToken(0, ['YY', 2], 0, function () {\n\t\t        return this.year() % 100;\n\t\t    });\n\n\t\t    addFormatToken(0, ['YYYY', 4], 0, 'year');\n\t\t    addFormatToken(0, ['YYYYY', 5], 0, 'year');\n\t\t    addFormatToken(0, ['YYYYYY', 6, true], 0, 'year');\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('year', 'y');\n\n\t\t    // PRIORITIES\n\n\t\t    addUnitPriority('year', 1);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('Y', matchSigned);\n\t\t    addRegexToken('YY', match1to2, match2);\n\t\t    addRegexToken('YYYY', match1to4, match4);\n\t\t    addRegexToken('YYYYY', match1to6, match6);\n\t\t    addRegexToken('YYYYYY', match1to6, match6);\n\n\t\t    addParseToken(['YYYYY', 'YYYYYY'], YEAR);\n\t\t    addParseToken('YYYY', function (input, array) {\n\t\t        array[YEAR] =\n\t\t            input.length === 2 ? hooks.parseTwoDigitYear(input) : toInt(input);\n\t\t    });\n\t\t    addParseToken('YY', function (input, array) {\n\t\t        array[YEAR] = hooks.parseTwoDigitYear(input);\n\t\t    });\n\t\t    addParseToken('Y', function (input, array) {\n\t\t        array[YEAR] = parseInt(input, 10);\n\t\t    });\n\n\t\t    // HELPERS\n\n\t\t    function daysInYear(year) {\n\t\t        return isLeapYear(year) ? 366 : 365;\n\t\t    }\n\n\t\t    // HOOKS\n\n\t\t    hooks.parseTwoDigitYear = function (input) {\n\t\t        return toInt(input) + (toInt(input) > 68 ? 1900 : 2000);\n\t\t    };\n\n\t\t    // MOMENTS\n\n\t\t    var getSetYear = makeGetSet('FullYear', true);\n\n\t\t    function getIsLeapYear() {\n\t\t        return isLeapYear(this.year());\n\t\t    }\n\n\t\t    function createDate(y, m, d, h, M, s, ms) {\n\t\t        // can't just apply() to create a date:\n\t\t        // https://stackoverflow.com/q/181348\n\t\t        var date;\n\t\t        // the date constructor remaps years 0-99 to 1900-1999\n\t\t        if (y < 100 && y >= 0) {\n\t\t            // preserve leap years using a full 400 year cycle, then reset\n\t\t            date = new Date(y + 400, m, d, h, M, s, ms);\n\t\t            if (isFinite(date.getFullYear())) {\n\t\t                date.setFullYear(y);\n\t\t            }\n\t\t        } else {\n\t\t            date = new Date(y, m, d, h, M, s, ms);\n\t\t        }\n\n\t\t        return date;\n\t\t    }\n\n\t\t    function createUTCDate(y) {\n\t\t        var date, args;\n\t\t        // the Date.UTC function remaps years 0-99 to 1900-1999\n\t\t        if (y < 100 && y >= 0) {\n\t\t            args = Array.prototype.slice.call(arguments);\n\t\t            // preserve leap years using a full 400 year cycle, then reset\n\t\t            args[0] = y + 400;\n\t\t            date = new Date(Date.UTC.apply(null, args));\n\t\t            if (isFinite(date.getUTCFullYear())) {\n\t\t                date.setUTCFullYear(y);\n\t\t            }\n\t\t        } else {\n\t\t            date = new Date(Date.UTC.apply(null, arguments));\n\t\t        }\n\n\t\t        return date;\n\t\t    }\n\n\t\t    // start-of-first-week - start-of-year\n\t\t    function firstWeekOffset(year, dow, doy) {\n\t\t        var // first-week day -- which january is always in the first week (4 for iso, 1 for other)\n\t\t            fwd = 7 + dow - doy,\n\t\t            // first-week day local weekday -- which local weekday is fwd\n\t\t            fwdlw = (7 + createUTCDate(year, 0, fwd).getUTCDay() - dow) % 7;\n\n\t\t        return -fwdlw + fwd - 1;\n\t\t    }\n\n\t\t    // https://en.wikipedia.org/wiki/ISO_week_date#Calculating_a_date_given_the_year.2C_week_number_and_weekday\n\t\t    function dayOfYearFromWeeks(year, week, weekday, dow, doy) {\n\t\t        var localWeekday = (7 + weekday - dow) % 7,\n\t\t            weekOffset = firstWeekOffset(year, dow, doy),\n\t\t            dayOfYear = 1 + 7 * (week - 1) + localWeekday + weekOffset,\n\t\t            resYear,\n\t\t            resDayOfYear;\n\n\t\t        if (dayOfYear <= 0) {\n\t\t            resYear = year - 1;\n\t\t            resDayOfYear = daysInYear(resYear) + dayOfYear;\n\t\t        } else if (dayOfYear > daysInYear(year)) {\n\t\t            resYear = year + 1;\n\t\t            resDayOfYear = dayOfYear - daysInYear(year);\n\t\t        } else {\n\t\t            resYear = year;\n\t\t            resDayOfYear = dayOfYear;\n\t\t        }\n\n\t\t        return {\n\t\t            year: resYear,\n\t\t            dayOfYear: resDayOfYear,\n\t\t        };\n\t\t    }\n\n\t\t    function weekOfYear(mom, dow, doy) {\n\t\t        var weekOffset = firstWeekOffset(mom.year(), dow, doy),\n\t\t            week = Math.floor((mom.dayOfYear() - weekOffset - 1) / 7) + 1,\n\t\t            resWeek,\n\t\t            resYear;\n\n\t\t        if (week < 1) {\n\t\t            resYear = mom.year() - 1;\n\t\t            resWeek = week + weeksInYear(resYear, dow, doy);\n\t\t        } else if (week > weeksInYear(mom.year(), dow, doy)) {\n\t\t            resWeek = week - weeksInYear(mom.year(), dow, doy);\n\t\t            resYear = mom.year() + 1;\n\t\t        } else {\n\t\t            resYear = mom.year();\n\t\t            resWeek = week;\n\t\t        }\n\n\t\t        return {\n\t\t            week: resWeek,\n\t\t            year: resYear,\n\t\t        };\n\t\t    }\n\n\t\t    function weeksInYear(year, dow, doy) {\n\t\t        var weekOffset = firstWeekOffset(year, dow, doy),\n\t\t            weekOffsetNext = firstWeekOffset(year + 1, dow, doy);\n\t\t        return (daysInYear(year) - weekOffset + weekOffsetNext) / 7;\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('w', ['ww', 2], 'wo', 'week');\n\t\t    addFormatToken('W', ['WW', 2], 'Wo', 'isoWeek');\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('week', 'w');\n\t\t    addUnitAlias('isoWeek', 'W');\n\n\t\t    // PRIORITIES\n\n\t\t    addUnitPriority('week', 5);\n\t\t    addUnitPriority('isoWeek', 5);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('w', match1to2);\n\t\t    addRegexToken('ww', match1to2, match2);\n\t\t    addRegexToken('W', match1to2);\n\t\t    addRegexToken('WW', match1to2, match2);\n\n\t\t    addWeekParseToken(\n\t\t        ['w', 'ww', 'W', 'WW'],\n\t\t        function (input, week, config, token) {\n\t\t            week[token.substr(0, 1)] = toInt(input);\n\t\t        }\n\t\t    );\n\n\t\t    // HELPERS\n\n\t\t    // LOCALES\n\n\t\t    function localeWeek(mom) {\n\t\t        return weekOfYear(mom, this._week.dow, this._week.doy).week;\n\t\t    }\n\n\t\t    var defaultLocaleWeek = {\n\t\t        dow: 0, // Sunday is the first day of the week.\n\t\t        doy: 6, // The week that contains Jan 6th is the first week of the year.\n\t\t    };\n\n\t\t    function localeFirstDayOfWeek() {\n\t\t        return this._week.dow;\n\t\t    }\n\n\t\t    function localeFirstDayOfYear() {\n\t\t        return this._week.doy;\n\t\t    }\n\n\t\t    // MOMENTS\n\n\t\t    function getSetWeek(input) {\n\t\t        var week = this.localeData().week(this);\n\t\t        return input == null ? week : this.add((input - week) * 7, 'd');\n\t\t    }\n\n\t\t    function getSetISOWeek(input) {\n\t\t        var week = weekOfYear(this, 1, 4).week;\n\t\t        return input == null ? week : this.add((input - week) * 7, 'd');\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('d', 0, 'do', 'day');\n\n\t\t    addFormatToken('dd', 0, 0, function (format) {\n\t\t        return this.localeData().weekdaysMin(this, format);\n\t\t    });\n\n\t\t    addFormatToken('ddd', 0, 0, function (format) {\n\t\t        return this.localeData().weekdaysShort(this, format);\n\t\t    });\n\n\t\t    addFormatToken('dddd', 0, 0, function (format) {\n\t\t        return this.localeData().weekdays(this, format);\n\t\t    });\n\n\t\t    addFormatToken('e', 0, 0, 'weekday');\n\t\t    addFormatToken('E', 0, 0, 'isoWeekday');\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('day', 'd');\n\t\t    addUnitAlias('weekday', 'e');\n\t\t    addUnitAlias('isoWeekday', 'E');\n\n\t\t    // PRIORITY\n\t\t    addUnitPriority('day', 11);\n\t\t    addUnitPriority('weekday', 11);\n\t\t    addUnitPriority('isoWeekday', 11);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('d', match1to2);\n\t\t    addRegexToken('e', match1to2);\n\t\t    addRegexToken('E', match1to2);\n\t\t    addRegexToken('dd', function (isStrict, locale) {\n\t\t        return locale.weekdaysMinRegex(isStrict);\n\t\t    });\n\t\t    addRegexToken('ddd', function (isStrict, locale) {\n\t\t        return locale.weekdaysShortRegex(isStrict);\n\t\t    });\n\t\t    addRegexToken('dddd', function (isStrict, locale) {\n\t\t        return locale.weekdaysRegex(isStrict);\n\t\t    });\n\n\t\t    addWeekParseToken(['dd', 'ddd', 'dddd'], function (input, week, config, token) {\n\t\t        var weekday = config._locale.weekdaysParse(input, token, config._strict);\n\t\t        // if we didn't get a weekday name, mark the date as invalid\n\t\t        if (weekday != null) {\n\t\t            week.d = weekday;\n\t\t        } else {\n\t\t            getParsingFlags(config).invalidWeekday = input;\n\t\t        }\n\t\t    });\n\n\t\t    addWeekParseToken(['d', 'e', 'E'], function (input, week, config, token) {\n\t\t        week[token] = toInt(input);\n\t\t    });\n\n\t\t    // HELPERS\n\n\t\t    function parseWeekday(input, locale) {\n\t\t        if (typeof input !== 'string') {\n\t\t            return input;\n\t\t        }\n\n\t\t        if (!isNaN(input)) {\n\t\t            return parseInt(input, 10);\n\t\t        }\n\n\t\t        input = locale.weekdaysParse(input);\n\t\t        if (typeof input === 'number') {\n\t\t            return input;\n\t\t        }\n\n\t\t        return null;\n\t\t    }\n\n\t\t    function parseIsoWeekday(input, locale) {\n\t\t        if (typeof input === 'string') {\n\t\t            return locale.weekdaysParse(input) % 7 || 7;\n\t\t        }\n\t\t        return isNaN(input) ? null : input;\n\t\t    }\n\n\t\t    // LOCALES\n\t\t    function shiftWeekdays(ws, n) {\n\t\t        return ws.slice(n, 7).concat(ws.slice(0, n));\n\t\t    }\n\n\t\t    var defaultLocaleWeekdays =\n\t\t            'Sunday_Monday_Tuesday_Wednesday_Thursday_Friday_Saturday'.split('_'),\n\t\t        defaultLocaleWeekdaysShort = 'Sun_Mon_Tue_Wed_Thu_Fri_Sat'.split('_'),\n\t\t        defaultLocaleWeekdaysMin = 'Su_Mo_Tu_We_Th_Fr_Sa'.split('_'),\n\t\t        defaultWeekdaysRegex = matchWord,\n\t\t        defaultWeekdaysShortRegex = matchWord,\n\t\t        defaultWeekdaysMinRegex = matchWord;\n\n\t\t    function localeWeekdays(m, format) {\n\t\t        var weekdays = isArray(this._weekdays)\n\t\t            ? this._weekdays\n\t\t            : this._weekdays[\n\t\t                  m && m !== true && this._weekdays.isFormat.test(format)\n\t\t                      ? 'format'\n\t\t                      : 'standalone'\n\t\t              ];\n\t\t        return m === true\n\t\t            ? shiftWeekdays(weekdays, this._week.dow)\n\t\t            : m\n\t\t            ? weekdays[m.day()]\n\t\t            : weekdays;\n\t\t    }\n\n\t\t    function localeWeekdaysShort(m) {\n\t\t        return m === true\n\t\t            ? shiftWeekdays(this._weekdaysShort, this._week.dow)\n\t\t            : m\n\t\t            ? this._weekdaysShort[m.day()]\n\t\t            : this._weekdaysShort;\n\t\t    }\n\n\t\t    function localeWeekdaysMin(m) {\n\t\t        return m === true\n\t\t            ? shiftWeekdays(this._weekdaysMin, this._week.dow)\n\t\t            : m\n\t\t            ? this._weekdaysMin[m.day()]\n\t\t            : this._weekdaysMin;\n\t\t    }\n\n\t\t    function handleStrictParse$1(weekdayName, format, strict) {\n\t\t        var i,\n\t\t            ii,\n\t\t            mom,\n\t\t            llc = weekdayName.toLocaleLowerCase();\n\t\t        if (!this._weekdaysParse) {\n\t\t            this._weekdaysParse = [];\n\t\t            this._shortWeekdaysParse = [];\n\t\t            this._minWeekdaysParse = [];\n\n\t\t            for (i = 0; i < 7; ++i) {\n\t\t                mom = createUTC([2000, 1]).day(i);\n\t\t                this._minWeekdaysParse[i] = this.weekdaysMin(\n\t\t                    mom,\n\t\t                    ''\n\t\t                ).toLocaleLowerCase();\n\t\t                this._shortWeekdaysParse[i] = this.weekdaysShort(\n\t\t                    mom,\n\t\t                    ''\n\t\t                ).toLocaleLowerCase();\n\t\t                this._weekdaysParse[i] = this.weekdays(mom, '').toLocaleLowerCase();\n\t\t            }\n\t\t        }\n\n\t\t        if (strict) {\n\t\t            if (format === 'dddd') {\n\t\t                ii = indexOf.call(this._weekdaysParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            } else if (format === 'ddd') {\n\t\t                ii = indexOf.call(this._shortWeekdaysParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            } else {\n\t\t                ii = indexOf.call(this._minWeekdaysParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            }\n\t\t        } else {\n\t\t            if (format === 'dddd') {\n\t\t                ii = indexOf.call(this._weekdaysParse, llc);\n\t\t                if (ii !== -1) {\n\t\t                    return ii;\n\t\t                }\n\t\t                ii = indexOf.call(this._shortWeekdaysParse, llc);\n\t\t                if (ii !== -1) {\n\t\t                    return ii;\n\t\t                }\n\t\t                ii = indexOf.call(this._minWeekdaysParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            } else if (format === 'ddd') {\n\t\t                ii = indexOf.call(this._shortWeekdaysParse, llc);\n\t\t                if (ii !== -1) {\n\t\t                    return ii;\n\t\t                }\n\t\t                ii = indexOf.call(this._weekdaysParse, llc);\n\t\t                if (ii !== -1) {\n\t\t                    return ii;\n\t\t                }\n\t\t                ii = indexOf.call(this._minWeekdaysParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            } else {\n\t\t                ii = indexOf.call(this._minWeekdaysParse, llc);\n\t\t                if (ii !== -1) {\n\t\t                    return ii;\n\t\t                }\n\t\t                ii = indexOf.call(this._weekdaysParse, llc);\n\t\t                if (ii !== -1) {\n\t\t                    return ii;\n\t\t                }\n\t\t                ii = indexOf.call(this._shortWeekdaysParse, llc);\n\t\t                return ii !== -1 ? ii : null;\n\t\t            }\n\t\t        }\n\t\t    }\n\n\t\t    function localeWeekdaysParse(weekdayName, format, strict) {\n\t\t        var i, mom, regex;\n\n\t\t        if (this._weekdaysParseExact) {\n\t\t            return handleStrictParse$1.call(this, weekdayName, format, strict);\n\t\t        }\n\n\t\t        if (!this._weekdaysParse) {\n\t\t            this._weekdaysParse = [];\n\t\t            this._minWeekdaysParse = [];\n\t\t            this._shortWeekdaysParse = [];\n\t\t            this._fullWeekdaysParse = [];\n\t\t        }\n\n\t\t        for (i = 0; i < 7; i++) {\n\t\t            // make the regex if we don't have it already\n\n\t\t            mom = createUTC([2000, 1]).day(i);\n\t\t            if (strict && !this._fullWeekdaysParse[i]) {\n\t\t                this._fullWeekdaysParse[i] = new RegExp(\n\t\t                    '^' + this.weekdays(mom, '').replace('.', '\\\\.?') + '$',\n\t\t                    'i'\n\t\t                );\n\t\t                this._shortWeekdaysParse[i] = new RegExp(\n\t\t                    '^' + this.weekdaysShort(mom, '').replace('.', '\\\\.?') + '$',\n\t\t                    'i'\n\t\t                );\n\t\t                this._minWeekdaysParse[i] = new RegExp(\n\t\t                    '^' + this.weekdaysMin(mom, '').replace('.', '\\\\.?') + '$',\n\t\t                    'i'\n\t\t                );\n\t\t            }\n\t\t            if (!this._weekdaysParse[i]) {\n\t\t                regex =\n\t\t                    '^' +\n\t\t                    this.weekdays(mom, '') +\n\t\t                    '|^' +\n\t\t                    this.weekdaysShort(mom, '') +\n\t\t                    '|^' +\n\t\t                    this.weekdaysMin(mom, '');\n\t\t                this._weekdaysParse[i] = new RegExp(regex.replace('.', ''), 'i');\n\t\t            }\n\t\t            // test the regex\n\t\t            if (\n\t\t                strict &&\n\t\t                format === 'dddd' &&\n\t\t                this._fullWeekdaysParse[i].test(weekdayName)\n\t\t            ) {\n\t\t                return i;\n\t\t            } else if (\n\t\t                strict &&\n\t\t                format === 'ddd' &&\n\t\t                this._shortWeekdaysParse[i].test(weekdayName)\n\t\t            ) {\n\t\t                return i;\n\t\t            } else if (\n\t\t                strict &&\n\t\t                format === 'dd' &&\n\t\t                this._minWeekdaysParse[i].test(weekdayName)\n\t\t            ) {\n\t\t                return i;\n\t\t            } else if (!strict && this._weekdaysParse[i].test(weekdayName)) {\n\t\t                return i;\n\t\t            }\n\t\t        }\n\t\t    }\n\n\t\t    // MOMENTS\n\n\t\t    function getSetDayOfWeek(input) {\n\t\t        if (!this.isValid()) {\n\t\t            return input != null ? this : NaN;\n\t\t        }\n\t\t        var day = this._isUTC ? this._d.getUTCDay() : this._d.getDay();\n\t\t        if (input != null) {\n\t\t            input = parseWeekday(input, this.localeData());\n\t\t            return this.add(input - day, 'd');\n\t\t        } else {\n\t\t            return day;\n\t\t        }\n\t\t    }\n\n\t\t    function getSetLocaleDayOfWeek(input) {\n\t\t        if (!this.isValid()) {\n\t\t            return input != null ? this : NaN;\n\t\t        }\n\t\t        var weekday = (this.day() + 7 - this.localeData()._week.dow) % 7;\n\t\t        return input == null ? weekday : this.add(input - weekday, 'd');\n\t\t    }\n\n\t\t    function getSetISODayOfWeek(input) {\n\t\t        if (!this.isValid()) {\n\t\t            return input != null ? this : NaN;\n\t\t        }\n\n\t\t        // behaves the same as moment#day except\n\t\t        // as a getter, returns 7 instead of 0 (1-7 range instead of 0-6)\n\t\t        // as a setter, sunday should belong to the previous week.\n\n\t\t        if (input != null) {\n\t\t            var weekday = parseIsoWeekday(input, this.localeData());\n\t\t            return this.day(this.day() % 7 ? weekday : weekday - 7);\n\t\t        } else {\n\t\t            return this.day() || 7;\n\t\t        }\n\t\t    }\n\n\t\t    function weekdaysRegex(isStrict) {\n\t\t        if (this._weekdaysParseExact) {\n\t\t            if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t\t                computeWeekdaysParse.call(this);\n\t\t            }\n\t\t            if (isStrict) {\n\t\t                return this._weekdaysStrictRegex;\n\t\t            } else {\n\t\t                return this._weekdaysRegex;\n\t\t            }\n\t\t        } else {\n\t\t            if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t\t                this._weekdaysRegex = defaultWeekdaysRegex;\n\t\t            }\n\t\t            return this._weekdaysStrictRegex && isStrict\n\t\t                ? this._weekdaysStrictRegex\n\t\t                : this._weekdaysRegex;\n\t\t        }\n\t\t    }\n\n\t\t    function weekdaysShortRegex(isStrict) {\n\t\t        if (this._weekdaysParseExact) {\n\t\t            if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t\t                computeWeekdaysParse.call(this);\n\t\t            }\n\t\t            if (isStrict) {\n\t\t                return this._weekdaysShortStrictRegex;\n\t\t            } else {\n\t\t                return this._weekdaysShortRegex;\n\t\t            }\n\t\t        } else {\n\t\t            if (!hasOwnProp(this, '_weekdaysShortRegex')) {\n\t\t                this._weekdaysShortRegex = defaultWeekdaysShortRegex;\n\t\t            }\n\t\t            return this._weekdaysShortStrictRegex && isStrict\n\t\t                ? this._weekdaysShortStrictRegex\n\t\t                : this._weekdaysShortRegex;\n\t\t        }\n\t\t    }\n\n\t\t    function weekdaysMinRegex(isStrict) {\n\t\t        if (this._weekdaysParseExact) {\n\t\t            if (!hasOwnProp(this, '_weekdaysRegex')) {\n\t\t                computeWeekdaysParse.call(this);\n\t\t            }\n\t\t            if (isStrict) {\n\t\t                return this._weekdaysMinStrictRegex;\n\t\t            } else {\n\t\t                return this._weekdaysMinRegex;\n\t\t            }\n\t\t        } else {\n\t\t            if (!hasOwnProp(this, '_weekdaysMinRegex')) {\n\t\t                this._weekdaysMinRegex = defaultWeekdaysMinRegex;\n\t\t            }\n\t\t            return this._weekdaysMinStrictRegex && isStrict\n\t\t                ? this._weekdaysMinStrictRegex\n\t\t                : this._weekdaysMinRegex;\n\t\t        }\n\t\t    }\n\n\t\t    function computeWeekdaysParse() {\n\t\t        function cmpLenRev(a, b) {\n\t\t            return b.length - a.length;\n\t\t        }\n\n\t\t        var minPieces = [],\n\t\t            shortPieces = [],\n\t\t            longPieces = [],\n\t\t            mixedPieces = [],\n\t\t            i,\n\t\t            mom,\n\t\t            minp,\n\t\t            shortp,\n\t\t            longp;\n\t\t        for (i = 0; i < 7; i++) {\n\t\t            // make the regex if we don't have it already\n\t\t            mom = createUTC([2000, 1]).day(i);\n\t\t            minp = regexEscape(this.weekdaysMin(mom, ''));\n\t\t            shortp = regexEscape(this.weekdaysShort(mom, ''));\n\t\t            longp = regexEscape(this.weekdays(mom, ''));\n\t\t            minPieces.push(minp);\n\t\t            shortPieces.push(shortp);\n\t\t            longPieces.push(longp);\n\t\t            mixedPieces.push(minp);\n\t\t            mixedPieces.push(shortp);\n\t\t            mixedPieces.push(longp);\n\t\t        }\n\t\t        // Sorting makes sure if one weekday (or abbr) is a prefix of another it\n\t\t        // will match the longer piece.\n\t\t        minPieces.sort(cmpLenRev);\n\t\t        shortPieces.sort(cmpLenRev);\n\t\t        longPieces.sort(cmpLenRev);\n\t\t        mixedPieces.sort(cmpLenRev);\n\n\t\t        this._weekdaysRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t\t        this._weekdaysShortRegex = this._weekdaysRegex;\n\t\t        this._weekdaysMinRegex = this._weekdaysRegex;\n\n\t\t        this._weekdaysStrictRegex = new RegExp(\n\t\t            '^(' + longPieces.join('|') + ')',\n\t\t            'i'\n\t\t        );\n\t\t        this._weekdaysShortStrictRegex = new RegExp(\n\t\t            '^(' + shortPieces.join('|') + ')',\n\t\t            'i'\n\t\t        );\n\t\t        this._weekdaysMinStrictRegex = new RegExp(\n\t\t            '^(' + minPieces.join('|') + ')',\n\t\t            'i'\n\t\t        );\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    function hFormat() {\n\t\t        return this.hours() % 12 || 12;\n\t\t    }\n\n\t\t    function kFormat() {\n\t\t        return this.hours() || 24;\n\t\t    }\n\n\t\t    addFormatToken('H', ['HH', 2], 0, 'hour');\n\t\t    addFormatToken('h', ['hh', 2], 0, hFormat);\n\t\t    addFormatToken('k', ['kk', 2], 0, kFormat);\n\n\t\t    addFormatToken('hmm', 0, 0, function () {\n\t\t        return '' + hFormat.apply(this) + zeroFill(this.minutes(), 2);\n\t\t    });\n\n\t\t    addFormatToken('hmmss', 0, 0, function () {\n\t\t        return (\n\t\t            '' +\n\t\t            hFormat.apply(this) +\n\t\t            zeroFill(this.minutes(), 2) +\n\t\t            zeroFill(this.seconds(), 2)\n\t\t        );\n\t\t    });\n\n\t\t    addFormatToken('Hmm', 0, 0, function () {\n\t\t        return '' + this.hours() + zeroFill(this.minutes(), 2);\n\t\t    });\n\n\t\t    addFormatToken('Hmmss', 0, 0, function () {\n\t\t        return (\n\t\t            '' +\n\t\t            this.hours() +\n\t\t            zeroFill(this.minutes(), 2) +\n\t\t            zeroFill(this.seconds(), 2)\n\t\t        );\n\t\t    });\n\n\t\t    function meridiem(token, lowercase) {\n\t\t        addFormatToken(token, 0, 0, function () {\n\t\t            return this.localeData().meridiem(\n\t\t                this.hours(),\n\t\t                this.minutes(),\n\t\t                lowercase\n\t\t            );\n\t\t        });\n\t\t    }\n\n\t\t    meridiem('a', true);\n\t\t    meridiem('A', false);\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('hour', 'h');\n\n\t\t    // PRIORITY\n\t\t    addUnitPriority('hour', 13);\n\n\t\t    // PARSING\n\n\t\t    function matchMeridiem(isStrict, locale) {\n\t\t        return locale._meridiemParse;\n\t\t    }\n\n\t\t    addRegexToken('a', matchMeridiem);\n\t\t    addRegexToken('A', matchMeridiem);\n\t\t    addRegexToken('H', match1to2);\n\t\t    addRegexToken('h', match1to2);\n\t\t    addRegexToken('k', match1to2);\n\t\t    addRegexToken('HH', match1to2, match2);\n\t\t    addRegexToken('hh', match1to2, match2);\n\t\t    addRegexToken('kk', match1to2, match2);\n\n\t\t    addRegexToken('hmm', match3to4);\n\t\t    addRegexToken('hmmss', match5to6);\n\t\t    addRegexToken('Hmm', match3to4);\n\t\t    addRegexToken('Hmmss', match5to6);\n\n\t\t    addParseToken(['H', 'HH'], HOUR);\n\t\t    addParseToken(['k', 'kk'], function (input, array, config) {\n\t\t        var kInput = toInt(input);\n\t\t        array[HOUR] = kInput === 24 ? 0 : kInput;\n\t\t    });\n\t\t    addParseToken(['a', 'A'], function (input, array, config) {\n\t\t        config._isPm = config._locale.isPM(input);\n\t\t        config._meridiem = input;\n\t\t    });\n\t\t    addParseToken(['h', 'hh'], function (input, array, config) {\n\t\t        array[HOUR] = toInt(input);\n\t\t        getParsingFlags(config).bigHour = true;\n\t\t    });\n\t\t    addParseToken('hmm', function (input, array, config) {\n\t\t        var pos = input.length - 2;\n\t\t        array[HOUR] = toInt(input.substr(0, pos));\n\t\t        array[MINUTE] = toInt(input.substr(pos));\n\t\t        getParsingFlags(config).bigHour = true;\n\t\t    });\n\t\t    addParseToken('hmmss', function (input, array, config) {\n\t\t        var pos1 = input.length - 4,\n\t\t            pos2 = input.length - 2;\n\t\t        array[HOUR] = toInt(input.substr(0, pos1));\n\t\t        array[MINUTE] = toInt(input.substr(pos1, 2));\n\t\t        array[SECOND] = toInt(input.substr(pos2));\n\t\t        getParsingFlags(config).bigHour = true;\n\t\t    });\n\t\t    addParseToken('Hmm', function (input, array, config) {\n\t\t        var pos = input.length - 2;\n\t\t        array[HOUR] = toInt(input.substr(0, pos));\n\t\t        array[MINUTE] = toInt(input.substr(pos));\n\t\t    });\n\t\t    addParseToken('Hmmss', function (input, array, config) {\n\t\t        var pos1 = input.length - 4,\n\t\t            pos2 = input.length - 2;\n\t\t        array[HOUR] = toInt(input.substr(0, pos1));\n\t\t        array[MINUTE] = toInt(input.substr(pos1, 2));\n\t\t        array[SECOND] = toInt(input.substr(pos2));\n\t\t    });\n\n\t\t    // LOCALES\n\n\t\t    function localeIsPM(input) {\n\t\t        // IE8 Quirks Mode & IE7 Standards Mode do not allow accessing strings like arrays\n\t\t        // Using charAt should be more compatible.\n\t\t        return (input + '').toLowerCase().charAt(0) === 'p';\n\t\t    }\n\n\t\t    var defaultLocaleMeridiemParse = /[ap]\\.?m?\\.?/i,\n\t\t        // Setting the hour should keep the time, because the user explicitly\n\t\t        // specified which hour they want. So trying to maintain the same hour (in\n\t\t        // a new timezone) makes sense. Adding/subtracting hours does not follow\n\t\t        // this rule.\n\t\t        getSetHour = makeGetSet('Hours', true);\n\n\t\t    function localeMeridiem(hours, minutes, isLower) {\n\t\t        if (hours > 11) {\n\t\t            return isLower ? 'pm' : 'PM';\n\t\t        } else {\n\t\t            return isLower ? 'am' : 'AM';\n\t\t        }\n\t\t    }\n\n\t\t    var baseConfig = {\n\t\t        calendar: defaultCalendar,\n\t\t        longDateFormat: defaultLongDateFormat,\n\t\t        invalidDate: defaultInvalidDate,\n\t\t        ordinal: defaultOrdinal,\n\t\t        dayOfMonthOrdinalParse: defaultDayOfMonthOrdinalParse,\n\t\t        relativeTime: defaultRelativeTime,\n\n\t\t        months: defaultLocaleMonths,\n\t\t        monthsShort: defaultLocaleMonthsShort,\n\n\t\t        week: defaultLocaleWeek,\n\n\t\t        weekdays: defaultLocaleWeekdays,\n\t\t        weekdaysMin: defaultLocaleWeekdaysMin,\n\t\t        weekdaysShort: defaultLocaleWeekdaysShort,\n\n\t\t        meridiemParse: defaultLocaleMeridiemParse,\n\t\t    };\n\n\t\t    // internal storage for locale config files\n\t\t    var locales = {},\n\t\t        localeFamilies = {},\n\t\t        globalLocale;\n\n\t\t    function commonPrefix(arr1, arr2) {\n\t\t        var i,\n\t\t            minl = Math.min(arr1.length, arr2.length);\n\t\t        for (i = 0; i < minl; i += 1) {\n\t\t            if (arr1[i] !== arr2[i]) {\n\t\t                return i;\n\t\t            }\n\t\t        }\n\t\t        return minl;\n\t\t    }\n\n\t\t    function normalizeLocale(key) {\n\t\t        return key ? key.toLowerCase().replace('_', '-') : key;\n\t\t    }\n\n\t\t    // pick the locale from the array\n\t\t    // try ['en-au', 'en-gb'] as 'en-au', 'en-gb', 'en', as in move through the list trying each\n\t\t    // substring from most specific to least, but move to the next array item if it's a more specific variant than the current root\n\t\t    function chooseLocale(names) {\n\t\t        var i = 0,\n\t\t            j,\n\t\t            next,\n\t\t            locale,\n\t\t            split;\n\n\t\t        while (i < names.length) {\n\t\t            split = normalizeLocale(names[i]).split('-');\n\t\t            j = split.length;\n\t\t            next = normalizeLocale(names[i + 1]);\n\t\t            next = next ? next.split('-') : null;\n\t\t            while (j > 0) {\n\t\t                locale = loadLocale(split.slice(0, j).join('-'));\n\t\t                if (locale) {\n\t\t                    return locale;\n\t\t                }\n\t\t                if (\n\t\t                    next &&\n\t\t                    next.length >= j &&\n\t\t                    commonPrefix(split, next) >= j - 1\n\t\t                ) {\n\t\t                    //the next array item is better than a shallower substring of this one\n\t\t                    break;\n\t\t                }\n\t\t                j--;\n\t\t            }\n\t\t            i++;\n\t\t        }\n\t\t        return globalLocale;\n\t\t    }\n\n\t\t    function isLocaleNameSane(name) {\n\t\t        // Prevent names that look like filesystem paths, i.e contain '/' or '\\'\n\t\t        return name.match('^[^/\\\\\\\\]*$') != null;\n\t\t    }\n\n\t\t    function loadLocale(name) {\n\t\t        var oldLocale = null,\n\t\t            aliasedRequire;\n\t\t        // TODO: Find a better way to register and load all the locales in Node\n\t\t        if (\n\t\t            locales[name] === undefined &&\n\t\t            'object' !== 'undefined' &&\n\t\t            module &&\n\t\t            module.exports &&\n\t\t            isLocaleNameSane(name)\n\t\t        ) {\n\t\t            try {\n\t\t                oldLocale = globalLocale._abbr;\n\t\t                aliasedRequire = commonjsRequire;\n\t\t                aliasedRequire('./locale/' + name);\n\t\t                getSetGlobalLocale(oldLocale);\n\t\t            } catch (e) {\n\t\t                // mark as not found to avoid repeating expensive file require call causing high CPU\n\t\t                // when trying to find en-US, en_US, en-us for every format call\n\t\t                locales[name] = null; // null means not found\n\t\t            }\n\t\t        }\n\t\t        return locales[name];\n\t\t    }\n\n\t\t    // This function will load locale and then set the global locale.  If\n\t\t    // no arguments are passed in, it will simply return the current global\n\t\t    // locale key.\n\t\t    function getSetGlobalLocale(key, values) {\n\t\t        var data;\n\t\t        if (key) {\n\t\t            if (isUndefined(values)) {\n\t\t                data = getLocale(key);\n\t\t            } else {\n\t\t                data = defineLocale(key, values);\n\t\t            }\n\n\t\t            if (data) {\n\t\t                // moment.duration._locale = moment._locale = data;\n\t\t                globalLocale = data;\n\t\t            } else {\n\t\t                if (typeof console !== 'undefined' && console.warn) {\n\t\t                    //warn user if arguments are passed but the locale could not be set\n\t\t                    console.warn(\n\t\t                        'Locale ' + key + ' not found. Did you forget to load it?'\n\t\t                    );\n\t\t                }\n\t\t            }\n\t\t        }\n\n\t\t        return globalLocale._abbr;\n\t\t    }\n\n\t\t    function defineLocale(name, config) {\n\t\t        if (config !== null) {\n\t\t            var locale,\n\t\t                parentConfig = baseConfig;\n\t\t            config.abbr = name;\n\t\t            if (locales[name] != null) {\n\t\t                deprecateSimple(\n\t\t                    'defineLocaleOverride',\n\t\t                    'use moment.updateLocale(localeName, config) to change ' +\n\t\t                        'an existing locale. moment.defineLocale(localeName, ' +\n\t\t                        'config) should only be used for creating a new locale ' +\n\t\t                        'See http://momentjs.com/guides/#/warnings/define-locale/ for more info.'\n\t\t                );\n\t\t                parentConfig = locales[name]._config;\n\t\t            } else if (config.parentLocale != null) {\n\t\t                if (locales[config.parentLocale] != null) {\n\t\t                    parentConfig = locales[config.parentLocale]._config;\n\t\t                } else {\n\t\t                    locale = loadLocale(config.parentLocale);\n\t\t                    if (locale != null) {\n\t\t                        parentConfig = locale._config;\n\t\t                    } else {\n\t\t                        if (!localeFamilies[config.parentLocale]) {\n\t\t                            localeFamilies[config.parentLocale] = [];\n\t\t                        }\n\t\t                        localeFamilies[config.parentLocale].push({\n\t\t                            name: name,\n\t\t                            config: config,\n\t\t                        });\n\t\t                        return null;\n\t\t                    }\n\t\t                }\n\t\t            }\n\t\t            locales[name] = new Locale(mergeConfigs(parentConfig, config));\n\n\t\t            if (localeFamilies[name]) {\n\t\t                localeFamilies[name].forEach(function (x) {\n\t\t                    defineLocale(x.name, x.config);\n\t\t                });\n\t\t            }\n\n\t\t            // backwards compat for now: also set the locale\n\t\t            // make sure we set the locale AFTER all child locales have been\n\t\t            // created, so we won't end up with the child locale set.\n\t\t            getSetGlobalLocale(name);\n\n\t\t            return locales[name];\n\t\t        } else {\n\t\t            // useful for testing\n\t\t            delete locales[name];\n\t\t            return null;\n\t\t        }\n\t\t    }\n\n\t\t    function updateLocale(name, config) {\n\t\t        if (config != null) {\n\t\t            var locale,\n\t\t                tmpLocale,\n\t\t                parentConfig = baseConfig;\n\n\t\t            if (locales[name] != null && locales[name].parentLocale != null) {\n\t\t                // Update existing child locale in-place to avoid memory-leaks\n\t\t                locales[name].set(mergeConfigs(locales[name]._config, config));\n\t\t            } else {\n\t\t                // MERGE\n\t\t                tmpLocale = loadLocale(name);\n\t\t                if (tmpLocale != null) {\n\t\t                    parentConfig = tmpLocale._config;\n\t\t                }\n\t\t                config = mergeConfigs(parentConfig, config);\n\t\t                if (tmpLocale == null) {\n\t\t                    // updateLocale is called for creating a new locale\n\t\t                    // Set abbr so it will have a name (getters return\n\t\t                    // undefined otherwise).\n\t\t                    config.abbr = name;\n\t\t                }\n\t\t                locale = new Locale(config);\n\t\t                locale.parentLocale = locales[name];\n\t\t                locales[name] = locale;\n\t\t            }\n\n\t\t            // backwards compat for now: also set the locale\n\t\t            getSetGlobalLocale(name);\n\t\t        } else {\n\t\t            // pass null for config to unupdate, useful for tests\n\t\t            if (locales[name] != null) {\n\t\t                if (locales[name].parentLocale != null) {\n\t\t                    locales[name] = locales[name].parentLocale;\n\t\t                    if (name === getSetGlobalLocale()) {\n\t\t                        getSetGlobalLocale(name);\n\t\t                    }\n\t\t                } else if (locales[name] != null) {\n\t\t                    delete locales[name];\n\t\t                }\n\t\t            }\n\t\t        }\n\t\t        return locales[name];\n\t\t    }\n\n\t\t    // returns locale data\n\t\t    function getLocale(key) {\n\t\t        var locale;\n\n\t\t        if (key && key._locale && key._locale._abbr) {\n\t\t            key = key._locale._abbr;\n\t\t        }\n\n\t\t        if (!key) {\n\t\t            return globalLocale;\n\t\t        }\n\n\t\t        if (!isArray(key)) {\n\t\t            //short-circuit everything else\n\t\t            locale = loadLocale(key);\n\t\t            if (locale) {\n\t\t                return locale;\n\t\t            }\n\t\t            key = [key];\n\t\t        }\n\n\t\t        return chooseLocale(key);\n\t\t    }\n\n\t\t    function listLocales() {\n\t\t        return keys(locales);\n\t\t    }\n\n\t\t    function checkOverflow(m) {\n\t\t        var overflow,\n\t\t            a = m._a;\n\n\t\t        if (a && getParsingFlags(m).overflow === -2) {\n\t\t            overflow =\n\t\t                a[MONTH] < 0 || a[MONTH] > 11\n\t\t                    ? MONTH\n\t\t                    : a[DATE] < 1 || a[DATE] > daysInMonth(a[YEAR], a[MONTH])\n\t\t                    ? DATE\n\t\t                    : a[HOUR] < 0 ||\n\t\t                      a[HOUR] > 24 ||\n\t\t                      (a[HOUR] === 24 &&\n\t\t                          (a[MINUTE] !== 0 ||\n\t\t                              a[SECOND] !== 0 ||\n\t\t                              a[MILLISECOND] !== 0))\n\t\t                    ? HOUR\n\t\t                    : a[MINUTE] < 0 || a[MINUTE] > 59\n\t\t                    ? MINUTE\n\t\t                    : a[SECOND] < 0 || a[SECOND] > 59\n\t\t                    ? SECOND\n\t\t                    : a[MILLISECOND] < 0 || a[MILLISECOND] > 999\n\t\t                    ? MILLISECOND\n\t\t                    : -1;\n\n\t\t            if (\n\t\t                getParsingFlags(m)._overflowDayOfYear &&\n\t\t                (overflow < YEAR || overflow > DATE)\n\t\t            ) {\n\t\t                overflow = DATE;\n\t\t            }\n\t\t            if (getParsingFlags(m)._overflowWeeks && overflow === -1) {\n\t\t                overflow = WEEK;\n\t\t            }\n\t\t            if (getParsingFlags(m)._overflowWeekday && overflow === -1) {\n\t\t                overflow = WEEKDAY;\n\t\t            }\n\n\t\t            getParsingFlags(m).overflow = overflow;\n\t\t        }\n\n\t\t        return m;\n\t\t    }\n\n\t\t    // iso 8601 regex\n\t\t    // 0000-00-00 0000-W00 or 0000-W00-0 + T + 00 or 00:00 or 00:00:00 or 00:00:00.000 + +00:00 or +0000 or +00)\n\t\t    var extendedIsoRegex =\n\t\t            /^\\s*((?:[+-]\\d{6}|\\d{4})-(?:\\d\\d-\\d\\d|W\\d\\d-\\d|W\\d\\d|\\d\\d\\d|\\d\\d))(?:(T| )(\\d\\d(?::\\d\\d(?::\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\t\t        basicIsoRegex =\n\t\t            /^\\s*((?:[+-]\\d{6}|\\d{4})(?:\\d\\d\\d\\d|W\\d\\d\\d|W\\d\\d|\\d\\d\\d|\\d\\d|))(?:(T| )(\\d\\d(?:\\d\\d(?:\\d\\d(?:[.,]\\d+)?)?)?)([+-]\\d\\d(?::?\\d\\d)?|\\s*Z)?)?$/,\n\t\t        tzRegex = /Z|[+-]\\d\\d(?::?\\d\\d)?/,\n\t\t        isoDates = [\n\t\t            ['YYYYYY-MM-DD', /[+-]\\d{6}-\\d\\d-\\d\\d/],\n\t\t            ['YYYY-MM-DD', /\\d{4}-\\d\\d-\\d\\d/],\n\t\t            ['GGGG-[W]WW-E', /\\d{4}-W\\d\\d-\\d/],\n\t\t            ['GGGG-[W]WW', /\\d{4}-W\\d\\d/, false],\n\t\t            ['YYYY-DDD', /\\d{4}-\\d{3}/],\n\t\t            ['YYYY-MM', /\\d{4}-\\d\\d/, false],\n\t\t            ['YYYYYYMMDD', /[+-]\\d{10}/],\n\t\t            ['YYYYMMDD', /\\d{8}/],\n\t\t            ['GGGG[W]WWE', /\\d{4}W\\d{3}/],\n\t\t            ['GGGG[W]WW', /\\d{4}W\\d{2}/, false],\n\t\t            ['YYYYDDD', /\\d{7}/],\n\t\t            ['YYYYMM', /\\d{6}/, false],\n\t\t            ['YYYY', /\\d{4}/, false],\n\t\t        ],\n\t\t        // iso time formats and regexes\n\t\t        isoTimes = [\n\t\t            ['HH:mm:ss.SSSS', /\\d\\d:\\d\\d:\\d\\d\\.\\d+/],\n\t\t            ['HH:mm:ss,SSSS', /\\d\\d:\\d\\d:\\d\\d,\\d+/],\n\t\t            ['HH:mm:ss', /\\d\\d:\\d\\d:\\d\\d/],\n\t\t            ['HH:mm', /\\d\\d:\\d\\d/],\n\t\t            ['HHmmss.SSSS', /\\d\\d\\d\\d\\d\\d\\.\\d+/],\n\t\t            ['HHmmss,SSSS', /\\d\\d\\d\\d\\d\\d,\\d+/],\n\t\t            ['HHmmss', /\\d\\d\\d\\d\\d\\d/],\n\t\t            ['HHmm', /\\d\\d\\d\\d/],\n\t\t            ['HH', /\\d\\d/],\n\t\t        ],\n\t\t        aspNetJsonRegex = /^\\/?Date\\((-?\\d+)/i,\n\t\t        // RFC 2822 regex: For details see https://tools.ietf.org/html/rfc2822#section-3.3\n\t\t        rfc2822 =\n\t\t            /^(?:(Mon|Tue|Wed|Thu|Fri|Sat|Sun),?\\s)?(\\d{1,2})\\s(Jan|Feb|Mar|Apr|May|Jun|Jul|Aug|Sep|Oct|Nov|Dec)\\s(\\d{2,4})\\s(\\d\\d):(\\d\\d)(?::(\\d\\d))?\\s(?:(UT|GMT|[ECMP][SD]T)|([Zz])|([+-]\\d{4}))$/,\n\t\t        obsOffsets = {\n\t\t            UT: 0,\n\t\t            GMT: 0,\n\t\t            EDT: -4 * 60,\n\t\t            EST: -5 * 60,\n\t\t            CDT: -5 * 60,\n\t\t            CST: -6 * 60,\n\t\t            MDT: -6 * 60,\n\t\t            MST: -7 * 60,\n\t\t            PDT: -7 * 60,\n\t\t            PST: -8 * 60,\n\t\t        };\n\n\t\t    // date from iso format\n\t\t    function configFromISO(config) {\n\t\t        var i,\n\t\t            l,\n\t\t            string = config._i,\n\t\t            match = extendedIsoRegex.exec(string) || basicIsoRegex.exec(string),\n\t\t            allowTime,\n\t\t            dateFormat,\n\t\t            timeFormat,\n\t\t            tzFormat,\n\t\t            isoDatesLen = isoDates.length,\n\t\t            isoTimesLen = isoTimes.length;\n\n\t\t        if (match) {\n\t\t            getParsingFlags(config).iso = true;\n\t\t            for (i = 0, l = isoDatesLen; i < l; i++) {\n\t\t                if (isoDates[i][1].exec(match[1])) {\n\t\t                    dateFormat = isoDates[i][0];\n\t\t                    allowTime = isoDates[i][2] !== false;\n\t\t                    break;\n\t\t                }\n\t\t            }\n\t\t            if (dateFormat == null) {\n\t\t                config._isValid = false;\n\t\t                return;\n\t\t            }\n\t\t            if (match[3]) {\n\t\t                for (i = 0, l = isoTimesLen; i < l; i++) {\n\t\t                    if (isoTimes[i][1].exec(match[3])) {\n\t\t                        // match[2] should be 'T' or space\n\t\t                        timeFormat = (match[2] || ' ') + isoTimes[i][0];\n\t\t                        break;\n\t\t                    }\n\t\t                }\n\t\t                if (timeFormat == null) {\n\t\t                    config._isValid = false;\n\t\t                    return;\n\t\t                }\n\t\t            }\n\t\t            if (!allowTime && timeFormat != null) {\n\t\t                config._isValid = false;\n\t\t                return;\n\t\t            }\n\t\t            if (match[4]) {\n\t\t                if (tzRegex.exec(match[4])) {\n\t\t                    tzFormat = 'Z';\n\t\t                } else {\n\t\t                    config._isValid = false;\n\t\t                    return;\n\t\t                }\n\t\t            }\n\t\t            config._f = dateFormat + (timeFormat || '') + (tzFormat || '');\n\t\t            configFromStringAndFormat(config);\n\t\t        } else {\n\t\t            config._isValid = false;\n\t\t        }\n\t\t    }\n\n\t\t    function extractFromRFC2822Strings(\n\t\t        yearStr,\n\t\t        monthStr,\n\t\t        dayStr,\n\t\t        hourStr,\n\t\t        minuteStr,\n\t\t        secondStr\n\t\t    ) {\n\t\t        var result = [\n\t\t            untruncateYear(yearStr),\n\t\t            defaultLocaleMonthsShort.indexOf(monthStr),\n\t\t            parseInt(dayStr, 10),\n\t\t            parseInt(hourStr, 10),\n\t\t            parseInt(minuteStr, 10),\n\t\t        ];\n\n\t\t        if (secondStr) {\n\t\t            result.push(parseInt(secondStr, 10));\n\t\t        }\n\n\t\t        return result;\n\t\t    }\n\n\t\t    function untruncateYear(yearStr) {\n\t\t        var year = parseInt(yearStr, 10);\n\t\t        if (year <= 49) {\n\t\t            return 2000 + year;\n\t\t        } else if (year <= 999) {\n\t\t            return 1900 + year;\n\t\t        }\n\t\t        return year;\n\t\t    }\n\n\t\t    function preprocessRFC2822(s) {\n\t\t        // Remove comments and folding whitespace and replace multiple-spaces with a single space\n\t\t        return s\n\t\t            .replace(/\\([^()]*\\)|[\\n\\t]/g, ' ')\n\t\t            .replace(/(\\s\\s+)/g, ' ')\n\t\t            .replace(/^\\s\\s*/, '')\n\t\t            .replace(/\\s\\s*$/, '');\n\t\t    }\n\n\t\t    function checkWeekday(weekdayStr, parsedInput, config) {\n\t\t        if (weekdayStr) {\n\t\t            // TODO: Replace the vanilla JS Date object with an independent day-of-week check.\n\t\t            var weekdayProvided = defaultLocaleWeekdaysShort.indexOf(weekdayStr),\n\t\t                weekdayActual = new Date(\n\t\t                    parsedInput[0],\n\t\t                    parsedInput[1],\n\t\t                    parsedInput[2]\n\t\t                ).getDay();\n\t\t            if (weekdayProvided !== weekdayActual) {\n\t\t                getParsingFlags(config).weekdayMismatch = true;\n\t\t                config._isValid = false;\n\t\t                return false;\n\t\t            }\n\t\t        }\n\t\t        return true;\n\t\t    }\n\n\t\t    function calculateOffset(obsOffset, militaryOffset, numOffset) {\n\t\t        if (obsOffset) {\n\t\t            return obsOffsets[obsOffset];\n\t\t        } else if (militaryOffset) {\n\t\t            // the only allowed military tz is Z\n\t\t            return 0;\n\t\t        } else {\n\t\t            var hm = parseInt(numOffset, 10),\n\t\t                m = hm % 100,\n\t\t                h = (hm - m) / 100;\n\t\t            return h * 60 + m;\n\t\t        }\n\t\t    }\n\n\t\t    // date and time from ref 2822 format\n\t\t    function configFromRFC2822(config) {\n\t\t        var match = rfc2822.exec(preprocessRFC2822(config._i)),\n\t\t            parsedArray;\n\t\t        if (match) {\n\t\t            parsedArray = extractFromRFC2822Strings(\n\t\t                match[4],\n\t\t                match[3],\n\t\t                match[2],\n\t\t                match[5],\n\t\t                match[6],\n\t\t                match[7]\n\t\t            );\n\t\t            if (!checkWeekday(match[1], parsedArray, config)) {\n\t\t                return;\n\t\t            }\n\n\t\t            config._a = parsedArray;\n\t\t            config._tzm = calculateOffset(match[8], match[9], match[10]);\n\n\t\t            config._d = createUTCDate.apply(null, config._a);\n\t\t            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\n\t\t            getParsingFlags(config).rfc2822 = true;\n\t\t        } else {\n\t\t            config._isValid = false;\n\t\t        }\n\t\t    }\n\n\t\t    // date from 1) ASP.NET, 2) ISO, 3) RFC 2822 formats, or 4) optional fallback if parsing isn't strict\n\t\t    function configFromString(config) {\n\t\t        var matched = aspNetJsonRegex.exec(config._i);\n\t\t        if (matched !== null) {\n\t\t            config._d = new Date(+matched[1]);\n\t\t            return;\n\t\t        }\n\n\t\t        configFromISO(config);\n\t\t        if (config._isValid === false) {\n\t\t            delete config._isValid;\n\t\t        } else {\n\t\t            return;\n\t\t        }\n\n\t\t        configFromRFC2822(config);\n\t\t        if (config._isValid === false) {\n\t\t            delete config._isValid;\n\t\t        } else {\n\t\t            return;\n\t\t        }\n\n\t\t        if (config._strict) {\n\t\t            config._isValid = false;\n\t\t        } else {\n\t\t            // Final attempt, use Input Fallback\n\t\t            hooks.createFromInputFallback(config);\n\t\t        }\n\t\t    }\n\n\t\t    hooks.createFromInputFallback = deprecate(\n\t\t        'value provided is not in a recognized RFC2822 or ISO format. moment construction falls back to js Date(), ' +\n\t\t            'which is not reliable across all browsers and versions. Non RFC2822/ISO date formats are ' +\n\t\t            'discouraged. Please refer to http://momentjs.com/guides/#/warnings/js-date/ for more info.',\n\t\t        function (config) {\n\t\t            config._d = new Date(config._i + (config._useUTC ? ' UTC' : ''));\n\t\t        }\n\t\t    );\n\n\t\t    // Pick the first defined of two or three arguments.\n\t\t    function defaults(a, b, c) {\n\t\t        if (a != null) {\n\t\t            return a;\n\t\t        }\n\t\t        if (b != null) {\n\t\t            return b;\n\t\t        }\n\t\t        return c;\n\t\t    }\n\n\t\t    function currentDateArray(config) {\n\t\t        // hooks is actually the exported moment object\n\t\t        var nowValue = new Date(hooks.now());\n\t\t        if (config._useUTC) {\n\t\t            return [\n\t\t                nowValue.getUTCFullYear(),\n\t\t                nowValue.getUTCMonth(),\n\t\t                nowValue.getUTCDate(),\n\t\t            ];\n\t\t        }\n\t\t        return [nowValue.getFullYear(), nowValue.getMonth(), nowValue.getDate()];\n\t\t    }\n\n\t\t    // convert an array to a date.\n\t\t    // the array should mirror the parameters below\n\t\t    // note: all values past the year are optional and will default to the lowest possible value.\n\t\t    // [year, month, day , hour, minute, second, millisecond]\n\t\t    function configFromArray(config) {\n\t\t        var i,\n\t\t            date,\n\t\t            input = [],\n\t\t            currentDate,\n\t\t            expectedWeekday,\n\t\t            yearToUse;\n\n\t\t        if (config._d) {\n\t\t            return;\n\t\t        }\n\n\t\t        currentDate = currentDateArray(config);\n\n\t\t        //compute day of the year from weeks and weekdays\n\t\t        if (config._w && config._a[DATE] == null && config._a[MONTH] == null) {\n\t\t            dayOfYearFromWeekInfo(config);\n\t\t        }\n\n\t\t        //if the day of the year is set, figure out what it is\n\t\t        if (config._dayOfYear != null) {\n\t\t            yearToUse = defaults(config._a[YEAR], currentDate[YEAR]);\n\n\t\t            if (\n\t\t                config._dayOfYear > daysInYear(yearToUse) ||\n\t\t                config._dayOfYear === 0\n\t\t            ) {\n\t\t                getParsingFlags(config)._overflowDayOfYear = true;\n\t\t            }\n\n\t\t            date = createUTCDate(yearToUse, 0, config._dayOfYear);\n\t\t            config._a[MONTH] = date.getUTCMonth();\n\t\t            config._a[DATE] = date.getUTCDate();\n\t\t        }\n\n\t\t        // Default to current date.\n\t\t        // * if no year, month, day of month are given, default to today\n\t\t        // * if day of month is given, default month and year\n\t\t        // * if month is given, default only year\n\t\t        // * if year is given, don't default anything\n\t\t        for (i = 0; i < 3 && config._a[i] == null; ++i) {\n\t\t            config._a[i] = input[i] = currentDate[i];\n\t\t        }\n\n\t\t        // Zero out whatever was not defaulted, including time\n\t\t        for (; i < 7; i++) {\n\t\t            config._a[i] = input[i] =\n\t\t                config._a[i] == null ? (i === 2 ? 1 : 0) : config._a[i];\n\t\t        }\n\n\t\t        // Check for 24:00:00.000\n\t\t        if (\n\t\t            config._a[HOUR] === 24 &&\n\t\t            config._a[MINUTE] === 0 &&\n\t\t            config._a[SECOND] === 0 &&\n\t\t            config._a[MILLISECOND] === 0\n\t\t        ) {\n\t\t            config._nextDay = true;\n\t\t            config._a[HOUR] = 0;\n\t\t        }\n\n\t\t        config._d = (config._useUTC ? createUTCDate : createDate).apply(\n\t\t            null,\n\t\t            input\n\t\t        );\n\t\t        expectedWeekday = config._useUTC\n\t\t            ? config._d.getUTCDay()\n\t\t            : config._d.getDay();\n\n\t\t        // Apply timezone offset from input. The actual utcOffset can be changed\n\t\t        // with parseZone.\n\t\t        if (config._tzm != null) {\n\t\t            config._d.setUTCMinutes(config._d.getUTCMinutes() - config._tzm);\n\t\t        }\n\n\t\t        if (config._nextDay) {\n\t\t            config._a[HOUR] = 24;\n\t\t        }\n\n\t\t        // check for mismatching day of week\n\t\t        if (\n\t\t            config._w &&\n\t\t            typeof config._w.d !== 'undefined' &&\n\t\t            config._w.d !== expectedWeekday\n\t\t        ) {\n\t\t            getParsingFlags(config).weekdayMismatch = true;\n\t\t        }\n\t\t    }\n\n\t\t    function dayOfYearFromWeekInfo(config) {\n\t\t        var w, weekYear, week, weekday, dow, doy, temp, weekdayOverflow, curWeek;\n\n\t\t        w = config._w;\n\t\t        if (w.GG != null || w.W != null || w.E != null) {\n\t\t            dow = 1;\n\t\t            doy = 4;\n\n\t\t            // TODO: We need to take the current isoWeekYear, but that depends on\n\t\t            // how we interpret now (local, utc, fixed offset). So create\n\t\t            // a now version of current config (take local/utc/offset flags, and\n\t\t            // create now).\n\t\t            weekYear = defaults(\n\t\t                w.GG,\n\t\t                config._a[YEAR],\n\t\t                weekOfYear(createLocal(), 1, 4).year\n\t\t            );\n\t\t            week = defaults(w.W, 1);\n\t\t            weekday = defaults(w.E, 1);\n\t\t            if (weekday < 1 || weekday > 7) {\n\t\t                weekdayOverflow = true;\n\t\t            }\n\t\t        } else {\n\t\t            dow = config._locale._week.dow;\n\t\t            doy = config._locale._week.doy;\n\n\t\t            curWeek = weekOfYear(createLocal(), dow, doy);\n\n\t\t            weekYear = defaults(w.gg, config._a[YEAR], curWeek.year);\n\n\t\t            // Default to current week.\n\t\t            week = defaults(w.w, curWeek.week);\n\n\t\t            if (w.d != null) {\n\t\t                // weekday -- low day numbers are considered next week\n\t\t                weekday = w.d;\n\t\t                if (weekday < 0 || weekday > 6) {\n\t\t                    weekdayOverflow = true;\n\t\t                }\n\t\t            } else if (w.e != null) {\n\t\t                // local weekday -- counting starts from beginning of week\n\t\t                weekday = w.e + dow;\n\t\t                if (w.e < 0 || w.e > 6) {\n\t\t                    weekdayOverflow = true;\n\t\t                }\n\t\t            } else {\n\t\t                // default to beginning of week\n\t\t                weekday = dow;\n\t\t            }\n\t\t        }\n\t\t        if (week < 1 || week > weeksInYear(weekYear, dow, doy)) {\n\t\t            getParsingFlags(config)._overflowWeeks = true;\n\t\t        } else if (weekdayOverflow != null) {\n\t\t            getParsingFlags(config)._overflowWeekday = true;\n\t\t        } else {\n\t\t            temp = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy);\n\t\t            config._a[YEAR] = temp.year;\n\t\t            config._dayOfYear = temp.dayOfYear;\n\t\t        }\n\t\t    }\n\n\t\t    // constant that refers to the ISO standard\n\t\t    hooks.ISO_8601 = function () {};\n\n\t\t    // constant that refers to the RFC 2822 form\n\t\t    hooks.RFC_2822 = function () {};\n\n\t\t    // date from string and format string\n\t\t    function configFromStringAndFormat(config) {\n\t\t        // TODO: Move this to another part of the creation flow to prevent circular deps\n\t\t        if (config._f === hooks.ISO_8601) {\n\t\t            configFromISO(config);\n\t\t            return;\n\t\t        }\n\t\t        if (config._f === hooks.RFC_2822) {\n\t\t            configFromRFC2822(config);\n\t\t            return;\n\t\t        }\n\t\t        config._a = [];\n\t\t        getParsingFlags(config).empty = true;\n\n\t\t        // This array is used to make a Date, either with `new Date` or `Date.UTC`\n\t\t        var string = '' + config._i,\n\t\t            i,\n\t\t            parsedInput,\n\t\t            tokens,\n\t\t            token,\n\t\t            skipped,\n\t\t            stringLength = string.length,\n\t\t            totalParsedInputLength = 0,\n\t\t            era,\n\t\t            tokenLen;\n\n\t\t        tokens =\n\t\t            expandFormat(config._f, config._locale).match(formattingTokens) || [];\n\t\t        tokenLen = tokens.length;\n\t\t        for (i = 0; i < tokenLen; i++) {\n\t\t            token = tokens[i];\n\t\t            parsedInput = (string.match(getParseRegexForToken(token, config)) ||\n\t\t                [])[0];\n\t\t            if (parsedInput) {\n\t\t                skipped = string.substr(0, string.indexOf(parsedInput));\n\t\t                if (skipped.length > 0) {\n\t\t                    getParsingFlags(config).unusedInput.push(skipped);\n\t\t                }\n\t\t                string = string.slice(\n\t\t                    string.indexOf(parsedInput) + parsedInput.length\n\t\t                );\n\t\t                totalParsedInputLength += parsedInput.length;\n\t\t            }\n\t\t            // don't parse if it's not a known token\n\t\t            if (formatTokenFunctions[token]) {\n\t\t                if (parsedInput) {\n\t\t                    getParsingFlags(config).empty = false;\n\t\t                } else {\n\t\t                    getParsingFlags(config).unusedTokens.push(token);\n\t\t                }\n\t\t                addTimeToArrayFromToken(token, parsedInput, config);\n\t\t            } else if (config._strict && !parsedInput) {\n\t\t                getParsingFlags(config).unusedTokens.push(token);\n\t\t            }\n\t\t        }\n\n\t\t        // add remaining unparsed input length to the string\n\t\t        getParsingFlags(config).charsLeftOver =\n\t\t            stringLength - totalParsedInputLength;\n\t\t        if (string.length > 0) {\n\t\t            getParsingFlags(config).unusedInput.push(string);\n\t\t        }\n\n\t\t        // clear _12h flag if hour is <= 12\n\t\t        if (\n\t\t            config._a[HOUR] <= 12 &&\n\t\t            getParsingFlags(config).bigHour === true &&\n\t\t            config._a[HOUR] > 0\n\t\t        ) {\n\t\t            getParsingFlags(config).bigHour = undefined;\n\t\t        }\n\n\t\t        getParsingFlags(config).parsedDateParts = config._a.slice(0);\n\t\t        getParsingFlags(config).meridiem = config._meridiem;\n\t\t        // handle meridiem\n\t\t        config._a[HOUR] = meridiemFixWrap(\n\t\t            config._locale,\n\t\t            config._a[HOUR],\n\t\t            config._meridiem\n\t\t        );\n\n\t\t        // handle era\n\t\t        era = getParsingFlags(config).era;\n\t\t        if (era !== null) {\n\t\t            config._a[YEAR] = config._locale.erasConvertYear(era, config._a[YEAR]);\n\t\t        }\n\n\t\t        configFromArray(config);\n\t\t        checkOverflow(config);\n\t\t    }\n\n\t\t    function meridiemFixWrap(locale, hour, meridiem) {\n\t\t        var isPm;\n\n\t\t        if (meridiem == null) {\n\t\t            // nothing to do\n\t\t            return hour;\n\t\t        }\n\t\t        if (locale.meridiemHour != null) {\n\t\t            return locale.meridiemHour(hour, meridiem);\n\t\t        } else if (locale.isPM != null) {\n\t\t            // Fallback\n\t\t            isPm = locale.isPM(meridiem);\n\t\t            if (isPm && hour < 12) {\n\t\t                hour += 12;\n\t\t            }\n\t\t            if (!isPm && hour === 12) {\n\t\t                hour = 0;\n\t\t            }\n\t\t            return hour;\n\t\t        } else {\n\t\t            // this is not supposed to happen\n\t\t            return hour;\n\t\t        }\n\t\t    }\n\n\t\t    // date from string and array of format strings\n\t\t    function configFromStringAndArray(config) {\n\t\t        var tempConfig,\n\t\t            bestMoment,\n\t\t            scoreToBeat,\n\t\t            i,\n\t\t            currentScore,\n\t\t            validFormatFound,\n\t\t            bestFormatIsValid = false,\n\t\t            configfLen = config._f.length;\n\n\t\t        if (configfLen === 0) {\n\t\t            getParsingFlags(config).invalidFormat = true;\n\t\t            config._d = new Date(NaN);\n\t\t            return;\n\t\t        }\n\n\t\t        for (i = 0; i < configfLen; i++) {\n\t\t            currentScore = 0;\n\t\t            validFormatFound = false;\n\t\t            tempConfig = copyConfig({}, config);\n\t\t            if (config._useUTC != null) {\n\t\t                tempConfig._useUTC = config._useUTC;\n\t\t            }\n\t\t            tempConfig._f = config._f[i];\n\t\t            configFromStringAndFormat(tempConfig);\n\n\t\t            if (isValid(tempConfig)) {\n\t\t                validFormatFound = true;\n\t\t            }\n\n\t\t            // if there is any input that was not parsed add a penalty for that format\n\t\t            currentScore += getParsingFlags(tempConfig).charsLeftOver;\n\n\t\t            //or tokens\n\t\t            currentScore += getParsingFlags(tempConfig).unusedTokens.length * 10;\n\n\t\t            getParsingFlags(tempConfig).score = currentScore;\n\n\t\t            if (!bestFormatIsValid) {\n\t\t                if (\n\t\t                    scoreToBeat == null ||\n\t\t                    currentScore < scoreToBeat ||\n\t\t                    validFormatFound\n\t\t                ) {\n\t\t                    scoreToBeat = currentScore;\n\t\t                    bestMoment = tempConfig;\n\t\t                    if (validFormatFound) {\n\t\t                        bestFormatIsValid = true;\n\t\t                    }\n\t\t                }\n\t\t            } else {\n\t\t                if (currentScore < scoreToBeat) {\n\t\t                    scoreToBeat = currentScore;\n\t\t                    bestMoment = tempConfig;\n\t\t                }\n\t\t            }\n\t\t        }\n\n\t\t        extend(config, bestMoment || tempConfig);\n\t\t    }\n\n\t\t    function configFromObject(config) {\n\t\t        if (config._d) {\n\t\t            return;\n\t\t        }\n\n\t\t        var i = normalizeObjectUnits(config._i),\n\t\t            dayOrDate = i.day === undefined ? i.date : i.day;\n\t\t        config._a = map(\n\t\t            [i.year, i.month, dayOrDate, i.hour, i.minute, i.second, i.millisecond],\n\t\t            function (obj) {\n\t\t                return obj && parseInt(obj, 10);\n\t\t            }\n\t\t        );\n\n\t\t        configFromArray(config);\n\t\t    }\n\n\t\t    function createFromConfig(config) {\n\t\t        var res = new Moment(checkOverflow(prepareConfig(config)));\n\t\t        if (res._nextDay) {\n\t\t            // Adding is smart enough around DST\n\t\t            res.add(1, 'd');\n\t\t            res._nextDay = undefined;\n\t\t        }\n\n\t\t        return res;\n\t\t    }\n\n\t\t    function prepareConfig(config) {\n\t\t        var input = config._i,\n\t\t            format = config._f;\n\n\t\t        config._locale = config._locale || getLocale(config._l);\n\n\t\t        if (input === null || (format === undefined && input === '')) {\n\t\t            return createInvalid({ nullInput: true });\n\t\t        }\n\n\t\t        if (typeof input === 'string') {\n\t\t            config._i = input = config._locale.preparse(input);\n\t\t        }\n\n\t\t        if (isMoment(input)) {\n\t\t            return new Moment(checkOverflow(input));\n\t\t        } else if (isDate(input)) {\n\t\t            config._d = input;\n\t\t        } else if (isArray(format)) {\n\t\t            configFromStringAndArray(config);\n\t\t        } else if (format) {\n\t\t            configFromStringAndFormat(config);\n\t\t        } else {\n\t\t            configFromInput(config);\n\t\t        }\n\n\t\t        if (!isValid(config)) {\n\t\t            config._d = null;\n\t\t        }\n\n\t\t        return config;\n\t\t    }\n\n\t\t    function configFromInput(config) {\n\t\t        var input = config._i;\n\t\t        if (isUndefined(input)) {\n\t\t            config._d = new Date(hooks.now());\n\t\t        } else if (isDate(input)) {\n\t\t            config._d = new Date(input.valueOf());\n\t\t        } else if (typeof input === 'string') {\n\t\t            configFromString(config);\n\t\t        } else if (isArray(input)) {\n\t\t            config._a = map(input.slice(0), function (obj) {\n\t\t                return parseInt(obj, 10);\n\t\t            });\n\t\t            configFromArray(config);\n\t\t        } else if (isObject(input)) {\n\t\t            configFromObject(config);\n\t\t        } else if (isNumber(input)) {\n\t\t            // from milliseconds\n\t\t            config._d = new Date(input);\n\t\t        } else {\n\t\t            hooks.createFromInputFallback(config);\n\t\t        }\n\t\t    }\n\n\t\t    function createLocalOrUTC(input, format, locale, strict, isUTC) {\n\t\t        var c = {};\n\n\t\t        if (format === true || format === false) {\n\t\t            strict = format;\n\t\t            format = undefined;\n\t\t        }\n\n\t\t        if (locale === true || locale === false) {\n\t\t            strict = locale;\n\t\t            locale = undefined;\n\t\t        }\n\n\t\t        if (\n\t\t            (isObject(input) && isObjectEmpty(input)) ||\n\t\t            (isArray(input) && input.length === 0)\n\t\t        ) {\n\t\t            input = undefined;\n\t\t        }\n\t\t        // object construction must be done this way.\n\t\t        // https://github.com/moment/moment/issues/1423\n\t\t        c._isAMomentObject = true;\n\t\t        c._useUTC = c._isUTC = isUTC;\n\t\t        c._l = locale;\n\t\t        c._i = input;\n\t\t        c._f = format;\n\t\t        c._strict = strict;\n\n\t\t        return createFromConfig(c);\n\t\t    }\n\n\t\t    function createLocal(input, format, locale, strict) {\n\t\t        return createLocalOrUTC(input, format, locale, strict, false);\n\t\t    }\n\n\t\t    var prototypeMin = deprecate(\n\t\t            'moment().min is deprecated, use moment.max instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t\t            function () {\n\t\t                var other = createLocal.apply(null, arguments);\n\t\t                if (this.isValid() && other.isValid()) {\n\t\t                    return other < this ? this : other;\n\t\t                } else {\n\t\t                    return createInvalid();\n\t\t                }\n\t\t            }\n\t\t        ),\n\t\t        prototypeMax = deprecate(\n\t\t            'moment().max is deprecated, use moment.min instead. http://momentjs.com/guides/#/warnings/min-max/',\n\t\t            function () {\n\t\t                var other = createLocal.apply(null, arguments);\n\t\t                if (this.isValid() && other.isValid()) {\n\t\t                    return other > this ? this : other;\n\t\t                } else {\n\t\t                    return createInvalid();\n\t\t                }\n\t\t            }\n\t\t        );\n\n\t\t    // Pick a moment m from moments so that m[fn](other) is true for all\n\t\t    // other. This relies on the function fn to be transitive.\n\t\t    //\n\t\t    // moments should either be an array of moment objects or an array, whose\n\t\t    // first element is an array of moment objects.\n\t\t    function pickBy(fn, moments) {\n\t\t        var res, i;\n\t\t        if (moments.length === 1 && isArray(moments[0])) {\n\t\t            moments = moments[0];\n\t\t        }\n\t\t        if (!moments.length) {\n\t\t            return createLocal();\n\t\t        }\n\t\t        res = moments[0];\n\t\t        for (i = 1; i < moments.length; ++i) {\n\t\t            if (!moments[i].isValid() || moments[i][fn](res)) {\n\t\t                res = moments[i];\n\t\t            }\n\t\t        }\n\t\t        return res;\n\t\t    }\n\n\t\t    // TODO: Use [].sort instead?\n\t\t    function min() {\n\t\t        var args = [].slice.call(arguments, 0);\n\n\t\t        return pickBy('isBefore', args);\n\t\t    }\n\n\t\t    function max() {\n\t\t        var args = [].slice.call(arguments, 0);\n\n\t\t        return pickBy('isAfter', args);\n\t\t    }\n\n\t\t    var now = function () {\n\t\t        return Date.now ? Date.now() : +new Date();\n\t\t    };\n\n\t\t    var ordering = [\n\t\t        'year',\n\t\t        'quarter',\n\t\t        'month',\n\t\t        'week',\n\t\t        'day',\n\t\t        'hour',\n\t\t        'minute',\n\t\t        'second',\n\t\t        'millisecond',\n\t\t    ];\n\n\t\t    function isDurationValid(m) {\n\t\t        var key,\n\t\t            unitHasDecimal = false,\n\t\t            i,\n\t\t            orderLen = ordering.length;\n\t\t        for (key in m) {\n\t\t            if (\n\t\t                hasOwnProp(m, key) &&\n\t\t                !(\n\t\t                    indexOf.call(ordering, key) !== -1 &&\n\t\t                    (m[key] == null || !isNaN(m[key]))\n\t\t                )\n\t\t            ) {\n\t\t                return false;\n\t\t            }\n\t\t        }\n\n\t\t        for (i = 0; i < orderLen; ++i) {\n\t\t            if (m[ordering[i]]) {\n\t\t                if (unitHasDecimal) {\n\t\t                    return false; // only allow non-integers for smallest unit\n\t\t                }\n\t\t                if (parseFloat(m[ordering[i]]) !== toInt(m[ordering[i]])) {\n\t\t                    unitHasDecimal = true;\n\t\t                }\n\t\t            }\n\t\t        }\n\n\t\t        return true;\n\t\t    }\n\n\t\t    function isValid$1() {\n\t\t        return this._isValid;\n\t\t    }\n\n\t\t    function createInvalid$1() {\n\t\t        return createDuration(NaN);\n\t\t    }\n\n\t\t    function Duration(duration) {\n\t\t        var normalizedInput = normalizeObjectUnits(duration),\n\t\t            years = normalizedInput.year || 0,\n\t\t            quarters = normalizedInput.quarter || 0,\n\t\t            months = normalizedInput.month || 0,\n\t\t            weeks = normalizedInput.week || normalizedInput.isoWeek || 0,\n\t\t            days = normalizedInput.day || 0,\n\t\t            hours = normalizedInput.hour || 0,\n\t\t            minutes = normalizedInput.minute || 0,\n\t\t            seconds = normalizedInput.second || 0,\n\t\t            milliseconds = normalizedInput.millisecond || 0;\n\n\t\t        this._isValid = isDurationValid(normalizedInput);\n\n\t\t        // representation for dateAddRemove\n\t\t        this._milliseconds =\n\t\t            +milliseconds +\n\t\t            seconds * 1e3 + // 1000\n\t\t            minutes * 6e4 + // 1000 * 60\n\t\t            hours * 1000 * 60 * 60; //using 1000 * 60 * 60 instead of 36e5 to avoid floating point rounding errors https://github.com/moment/moment/issues/2978\n\t\t        // Because of dateAddRemove treats 24 hours as different from a\n\t\t        // day when working around DST, we need to store them separately\n\t\t        this._days = +days + weeks * 7;\n\t\t        // It is impossible to translate months into days without knowing\n\t\t        // which months you are are talking about, so we have to store\n\t\t        // it separately.\n\t\t        this._months = +months + quarters * 3 + years * 12;\n\n\t\t        this._data = {};\n\n\t\t        this._locale = getLocale();\n\n\t\t        this._bubble();\n\t\t    }\n\n\t\t    function isDuration(obj) {\n\t\t        return obj instanceof Duration;\n\t\t    }\n\n\t\t    function absRound(number) {\n\t\t        if (number < 0) {\n\t\t            return Math.round(-1 * number) * -1;\n\t\t        } else {\n\t\t            return Math.round(number);\n\t\t        }\n\t\t    }\n\n\t\t    // compare two arrays, return the number of differences\n\t\t    function compareArrays(array1, array2, dontConvert) {\n\t\t        var len = Math.min(array1.length, array2.length),\n\t\t            lengthDiff = Math.abs(array1.length - array2.length),\n\t\t            diffs = 0,\n\t\t            i;\n\t\t        for (i = 0; i < len; i++) {\n\t\t            if (\n\t\t                (dontConvert && array1[i] !== array2[i]) ||\n\t\t                (!dontConvert && toInt(array1[i]) !== toInt(array2[i]))\n\t\t            ) {\n\t\t                diffs++;\n\t\t            }\n\t\t        }\n\t\t        return diffs + lengthDiff;\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    function offset(token, separator) {\n\t\t        addFormatToken(token, 0, 0, function () {\n\t\t            var offset = this.utcOffset(),\n\t\t                sign = '+';\n\t\t            if (offset < 0) {\n\t\t                offset = -offset;\n\t\t                sign = '-';\n\t\t            }\n\t\t            return (\n\t\t                sign +\n\t\t                zeroFill(~~(offset / 60), 2) +\n\t\t                separator +\n\t\t                zeroFill(~~offset % 60, 2)\n\t\t            );\n\t\t        });\n\t\t    }\n\n\t\t    offset('Z', ':');\n\t\t    offset('ZZ', '');\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('Z', matchShortOffset);\n\t\t    addRegexToken('ZZ', matchShortOffset);\n\t\t    addParseToken(['Z', 'ZZ'], function (input, array, config) {\n\t\t        config._useUTC = true;\n\t\t        config._tzm = offsetFromString(matchShortOffset, input);\n\t\t    });\n\n\t\t    // HELPERS\n\n\t\t    // timezone chunker\n\t\t    // '+10:00' > ['10',  '00']\n\t\t    // '-1530'  > ['-15', '30']\n\t\t    var chunkOffset = /([\\+\\-]|\\d\\d)/gi;\n\n\t\t    function offsetFromString(matcher, string) {\n\t\t        var matches = (string || '').match(matcher),\n\t\t            chunk,\n\t\t            parts,\n\t\t            minutes;\n\n\t\t        if (matches === null) {\n\t\t            return null;\n\t\t        }\n\n\t\t        chunk = matches[matches.length - 1] || [];\n\t\t        parts = (chunk + '').match(chunkOffset) || ['-', 0, 0];\n\t\t        minutes = +(parts[1] * 60) + toInt(parts[2]);\n\n\t\t        return minutes === 0 ? 0 : parts[0] === '+' ? minutes : -minutes;\n\t\t    }\n\n\t\t    // Return a moment from input, that is local/utc/zone equivalent to model.\n\t\t    function cloneWithOffset(input, model) {\n\t\t        var res, diff;\n\t\t        if (model._isUTC) {\n\t\t            res = model.clone();\n\t\t            diff =\n\t\t                (isMoment(input) || isDate(input)\n\t\t                    ? input.valueOf()\n\t\t                    : createLocal(input).valueOf()) - res.valueOf();\n\t\t            // Use low-level api, because this fn is low-level api.\n\t\t            res._d.setTime(res._d.valueOf() + diff);\n\t\t            hooks.updateOffset(res, false);\n\t\t            return res;\n\t\t        } else {\n\t\t            return createLocal(input).local();\n\t\t        }\n\t\t    }\n\n\t\t    function getDateOffset(m) {\n\t\t        // On Firefox.24 Date#getTimezoneOffset returns a floating point.\n\t\t        // https://github.com/moment/moment/pull/1871\n\t\t        return -Math.round(m._d.getTimezoneOffset());\n\t\t    }\n\n\t\t    // HOOKS\n\n\t\t    // This function will be called whenever a moment is mutated.\n\t\t    // It is intended to keep the offset in sync with the timezone.\n\t\t    hooks.updateOffset = function () {};\n\n\t\t    // MOMENTS\n\n\t\t    // keepLocalTime = true means only change the timezone, without\n\t\t    // affecting the local hour. So 5:31:26 +0300 --[utcOffset(2, true)]-->\n\t\t    // 5:31:26 +0200 It is possible that 5:31:26 doesn't exist with offset\n\t\t    // +0200, so we adjust the time as needed, to be valid.\n\t\t    //\n\t\t    // Keeping the time actually adds/subtracts (one hour)\n\t\t    // from the actual represented time. That is why we call updateOffset\n\t\t    // a second time. In case it wants us to change the offset again\n\t\t    // _changeInProgress == true case, then we have to adjust, because\n\t\t    // there is no such time in the given timezone.\n\t\t    function getSetOffset(input, keepLocalTime, keepMinutes) {\n\t\t        var offset = this._offset || 0,\n\t\t            localAdjust;\n\t\t        if (!this.isValid()) {\n\t\t            return input != null ? this : NaN;\n\t\t        }\n\t\t        if (input != null) {\n\t\t            if (typeof input === 'string') {\n\t\t                input = offsetFromString(matchShortOffset, input);\n\t\t                if (input === null) {\n\t\t                    return this;\n\t\t                }\n\t\t            } else if (Math.abs(input) < 16 && !keepMinutes) {\n\t\t                input = input * 60;\n\t\t            }\n\t\t            if (!this._isUTC && keepLocalTime) {\n\t\t                localAdjust = getDateOffset(this);\n\t\t            }\n\t\t            this._offset = input;\n\t\t            this._isUTC = true;\n\t\t            if (localAdjust != null) {\n\t\t                this.add(localAdjust, 'm');\n\t\t            }\n\t\t            if (offset !== input) {\n\t\t                if (!keepLocalTime || this._changeInProgress) {\n\t\t                    addSubtract(\n\t\t                        this,\n\t\t                        createDuration(input - offset, 'm'),\n\t\t                        1,\n\t\t                        false\n\t\t                    );\n\t\t                } else if (!this._changeInProgress) {\n\t\t                    this._changeInProgress = true;\n\t\t                    hooks.updateOffset(this, true);\n\t\t                    this._changeInProgress = null;\n\t\t                }\n\t\t            }\n\t\t            return this;\n\t\t        } else {\n\t\t            return this._isUTC ? offset : getDateOffset(this);\n\t\t        }\n\t\t    }\n\n\t\t    function getSetZone(input, keepLocalTime) {\n\t\t        if (input != null) {\n\t\t            if (typeof input !== 'string') {\n\t\t                input = -input;\n\t\t            }\n\n\t\t            this.utcOffset(input, keepLocalTime);\n\n\t\t            return this;\n\t\t        } else {\n\t\t            return -this.utcOffset();\n\t\t        }\n\t\t    }\n\n\t\t    function setOffsetToUTC(keepLocalTime) {\n\t\t        return this.utcOffset(0, keepLocalTime);\n\t\t    }\n\n\t\t    function setOffsetToLocal(keepLocalTime) {\n\t\t        if (this._isUTC) {\n\t\t            this.utcOffset(0, keepLocalTime);\n\t\t            this._isUTC = false;\n\n\t\t            if (keepLocalTime) {\n\t\t                this.subtract(getDateOffset(this), 'm');\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    }\n\n\t\t    function setOffsetToParsedOffset() {\n\t\t        if (this._tzm != null) {\n\t\t            this.utcOffset(this._tzm, false, true);\n\t\t        } else if (typeof this._i === 'string') {\n\t\t            var tZone = offsetFromString(matchOffset, this._i);\n\t\t            if (tZone != null) {\n\t\t                this.utcOffset(tZone);\n\t\t            } else {\n\t\t                this.utcOffset(0, true);\n\t\t            }\n\t\t        }\n\t\t        return this;\n\t\t    }\n\n\t\t    function hasAlignedHourOffset(input) {\n\t\t        if (!this.isValid()) {\n\t\t            return false;\n\t\t        }\n\t\t        input = input ? createLocal(input).utcOffset() : 0;\n\n\t\t        return (this.utcOffset() - input) % 60 === 0;\n\t\t    }\n\n\t\t    function isDaylightSavingTime() {\n\t\t        return (\n\t\t            this.utcOffset() > this.clone().month(0).utcOffset() ||\n\t\t            this.utcOffset() > this.clone().month(5).utcOffset()\n\t\t        );\n\t\t    }\n\n\t\t    function isDaylightSavingTimeShifted() {\n\t\t        if (!isUndefined(this._isDSTShifted)) {\n\t\t            return this._isDSTShifted;\n\t\t        }\n\n\t\t        var c = {},\n\t\t            other;\n\n\t\t        copyConfig(c, this);\n\t\t        c = prepareConfig(c);\n\n\t\t        if (c._a) {\n\t\t            other = c._isUTC ? createUTC(c._a) : createLocal(c._a);\n\t\t            this._isDSTShifted =\n\t\t                this.isValid() && compareArrays(c._a, other.toArray()) > 0;\n\t\t        } else {\n\t\t            this._isDSTShifted = false;\n\t\t        }\n\n\t\t        return this._isDSTShifted;\n\t\t    }\n\n\t\t    function isLocal() {\n\t\t        return this.isValid() ? !this._isUTC : false;\n\t\t    }\n\n\t\t    function isUtcOffset() {\n\t\t        return this.isValid() ? this._isUTC : false;\n\t\t    }\n\n\t\t    function isUtc() {\n\t\t        return this.isValid() ? this._isUTC && this._offset === 0 : false;\n\t\t    }\n\n\t\t    // ASP.NET json date format regex\n\t\t    var aspNetRegex = /^(-|\\+)?(?:(\\d*)[. ])?(\\d+):(\\d+)(?::(\\d+)(\\.\\d*)?)?$/,\n\t\t        // from http://docs.closure-library.googlecode.com/git/closure_goog_date_date.js.source.html\n\t\t        // somewhat more in line with 4.4.3.2 2004 spec, but allows decimal anywhere\n\t\t        // and further modified to allow for strings containing both week and day\n\t\t        isoRegex =\n\t\t            /^(-|\\+)?P(?:([-+]?[0-9,.]*)Y)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)W)?(?:([-+]?[0-9,.]*)D)?(?:T(?:([-+]?[0-9,.]*)H)?(?:([-+]?[0-9,.]*)M)?(?:([-+]?[0-9,.]*)S)?)?$/;\n\n\t\t    function createDuration(input, key) {\n\t\t        var duration = input,\n\t\t            // matching against regexp is expensive, do it on demand\n\t\t            match = null,\n\t\t            sign,\n\t\t            ret,\n\t\t            diffRes;\n\n\t\t        if (isDuration(input)) {\n\t\t            duration = {\n\t\t                ms: input._milliseconds,\n\t\t                d: input._days,\n\t\t                M: input._months,\n\t\t            };\n\t\t        } else if (isNumber(input) || !isNaN(+input)) {\n\t\t            duration = {};\n\t\t            if (key) {\n\t\t                duration[key] = +input;\n\t\t            } else {\n\t\t                duration.milliseconds = +input;\n\t\t            }\n\t\t        } else if ((match = aspNetRegex.exec(input))) {\n\t\t            sign = match[1] === '-' ? -1 : 1;\n\t\t            duration = {\n\t\t                y: 0,\n\t\t                d: toInt(match[DATE]) * sign,\n\t\t                h: toInt(match[HOUR]) * sign,\n\t\t                m: toInt(match[MINUTE]) * sign,\n\t\t                s: toInt(match[SECOND]) * sign,\n\t\t                ms: toInt(absRound(match[MILLISECOND] * 1000)) * sign, // the millisecond decimal point is included in the match\n\t\t            };\n\t\t        } else if ((match = isoRegex.exec(input))) {\n\t\t            sign = match[1] === '-' ? -1 : 1;\n\t\t            duration = {\n\t\t                y: parseIso(match[2], sign),\n\t\t                M: parseIso(match[3], sign),\n\t\t                w: parseIso(match[4], sign),\n\t\t                d: parseIso(match[5], sign),\n\t\t                h: parseIso(match[6], sign),\n\t\t                m: parseIso(match[7], sign),\n\t\t                s: parseIso(match[8], sign),\n\t\t            };\n\t\t        } else if (duration == null) {\n\t\t            // checks for null or undefined\n\t\t            duration = {};\n\t\t        } else if (\n\t\t            typeof duration === 'object' &&\n\t\t            ('from' in duration || 'to' in duration)\n\t\t        ) {\n\t\t            diffRes = momentsDifference(\n\t\t                createLocal(duration.from),\n\t\t                createLocal(duration.to)\n\t\t            );\n\n\t\t            duration = {};\n\t\t            duration.ms = diffRes.milliseconds;\n\t\t            duration.M = diffRes.months;\n\t\t        }\n\n\t\t        ret = new Duration(duration);\n\n\t\t        if (isDuration(input) && hasOwnProp(input, '_locale')) {\n\t\t            ret._locale = input._locale;\n\t\t        }\n\n\t\t        if (isDuration(input) && hasOwnProp(input, '_isValid')) {\n\t\t            ret._isValid = input._isValid;\n\t\t        }\n\n\t\t        return ret;\n\t\t    }\n\n\t\t    createDuration.fn = Duration.prototype;\n\t\t    createDuration.invalid = createInvalid$1;\n\n\t\t    function parseIso(inp, sign) {\n\t\t        // We'd normally use ~~inp for this, but unfortunately it also\n\t\t        // converts floats to ints.\n\t\t        // inp may be undefined, so careful calling replace on it.\n\t\t        var res = inp && parseFloat(inp.replace(',', '.'));\n\t\t        // apply sign while we're at it\n\t\t        return (isNaN(res) ? 0 : res) * sign;\n\t\t    }\n\n\t\t    function positiveMomentsDifference(base, other) {\n\t\t        var res = {};\n\n\t\t        res.months =\n\t\t            other.month() - base.month() + (other.year() - base.year()) * 12;\n\t\t        if (base.clone().add(res.months, 'M').isAfter(other)) {\n\t\t            --res.months;\n\t\t        }\n\n\t\t        res.milliseconds = +other - +base.clone().add(res.months, 'M');\n\n\t\t        return res;\n\t\t    }\n\n\t\t    function momentsDifference(base, other) {\n\t\t        var res;\n\t\t        if (!(base.isValid() && other.isValid())) {\n\t\t            return { milliseconds: 0, months: 0 };\n\t\t        }\n\n\t\t        other = cloneWithOffset(other, base);\n\t\t        if (base.isBefore(other)) {\n\t\t            res = positiveMomentsDifference(base, other);\n\t\t        } else {\n\t\t            res = positiveMomentsDifference(other, base);\n\t\t            res.milliseconds = -res.milliseconds;\n\t\t            res.months = -res.months;\n\t\t        }\n\n\t\t        return res;\n\t\t    }\n\n\t\t    // TODO: remove 'name' arg after deprecation is removed\n\t\t    function createAdder(direction, name) {\n\t\t        return function (val, period) {\n\t\t            var dur, tmp;\n\t\t            //invert the arguments, but complain about it\n\t\t            if (period !== null && !isNaN(+period)) {\n\t\t                deprecateSimple(\n\t\t                    name,\n\t\t                    'moment().' +\n\t\t                        name +\n\t\t                        '(period, number) is deprecated. Please use moment().' +\n\t\t                        name +\n\t\t                        '(number, period). ' +\n\t\t                        'See http://momentjs.com/guides/#/warnings/add-inverted-param/ for more info.'\n\t\t                );\n\t\t                tmp = val;\n\t\t                val = period;\n\t\t                period = tmp;\n\t\t            }\n\n\t\t            dur = createDuration(val, period);\n\t\t            addSubtract(this, dur, direction);\n\t\t            return this;\n\t\t        };\n\t\t    }\n\n\t\t    function addSubtract(mom, duration, isAdding, updateOffset) {\n\t\t        var milliseconds = duration._milliseconds,\n\t\t            days = absRound(duration._days),\n\t\t            months = absRound(duration._months);\n\n\t\t        if (!mom.isValid()) {\n\t\t            // No op\n\t\t            return;\n\t\t        }\n\n\t\t        updateOffset = updateOffset == null ? true : updateOffset;\n\n\t\t        if (months) {\n\t\t            setMonth(mom, get(mom, 'Month') + months * isAdding);\n\t\t        }\n\t\t        if (days) {\n\t\t            set$1(mom, 'Date', get(mom, 'Date') + days * isAdding);\n\t\t        }\n\t\t        if (milliseconds) {\n\t\t            mom._d.setTime(mom._d.valueOf() + milliseconds * isAdding);\n\t\t        }\n\t\t        if (updateOffset) {\n\t\t            hooks.updateOffset(mom, days || months);\n\t\t        }\n\t\t    }\n\n\t\t    var add = createAdder(1, 'add'),\n\t\t        subtract = createAdder(-1, 'subtract');\n\n\t\t    function isString(input) {\n\t\t        return typeof input === 'string' || input instanceof String;\n\t\t    }\n\n\t\t    // type MomentInput = Moment | Date | string | number | (number | string)[] | MomentInputObject | void; // null | undefined\n\t\t    function isMomentInput(input) {\n\t\t        return (\n\t\t            isMoment(input) ||\n\t\t            isDate(input) ||\n\t\t            isString(input) ||\n\t\t            isNumber(input) ||\n\t\t            isNumberOrStringArray(input) ||\n\t\t            isMomentInputObject(input) ||\n\t\t            input === null ||\n\t\t            input === undefined\n\t\t        );\n\t\t    }\n\n\t\t    function isMomentInputObject(input) {\n\t\t        var objectTest = isObject(input) && !isObjectEmpty(input),\n\t\t            propertyTest = false,\n\t\t            properties = [\n\t\t                'years',\n\t\t                'year',\n\t\t                'y',\n\t\t                'months',\n\t\t                'month',\n\t\t                'M',\n\t\t                'days',\n\t\t                'day',\n\t\t                'd',\n\t\t                'dates',\n\t\t                'date',\n\t\t                'D',\n\t\t                'hours',\n\t\t                'hour',\n\t\t                'h',\n\t\t                'minutes',\n\t\t                'minute',\n\t\t                'm',\n\t\t                'seconds',\n\t\t                'second',\n\t\t                's',\n\t\t                'milliseconds',\n\t\t                'millisecond',\n\t\t                'ms',\n\t\t            ],\n\t\t            i,\n\t\t            property,\n\t\t            propertyLen = properties.length;\n\n\t\t        for (i = 0; i < propertyLen; i += 1) {\n\t\t            property = properties[i];\n\t\t            propertyTest = propertyTest || hasOwnProp(input, property);\n\t\t        }\n\n\t\t        return objectTest && propertyTest;\n\t\t    }\n\n\t\t    function isNumberOrStringArray(input) {\n\t\t        var arrayTest = isArray(input),\n\t\t            dataTypeTest = false;\n\t\t        if (arrayTest) {\n\t\t            dataTypeTest =\n\t\t                input.filter(function (item) {\n\t\t                    return !isNumber(item) && isString(input);\n\t\t                }).length === 0;\n\t\t        }\n\t\t        return arrayTest && dataTypeTest;\n\t\t    }\n\n\t\t    function isCalendarSpec(input) {\n\t\t        var objectTest = isObject(input) && !isObjectEmpty(input),\n\t\t            propertyTest = false,\n\t\t            properties = [\n\t\t                'sameDay',\n\t\t                'nextDay',\n\t\t                'lastDay',\n\t\t                'nextWeek',\n\t\t                'lastWeek',\n\t\t                'sameElse',\n\t\t            ],\n\t\t            i,\n\t\t            property;\n\n\t\t        for (i = 0; i < properties.length; i += 1) {\n\t\t            property = properties[i];\n\t\t            propertyTest = propertyTest || hasOwnProp(input, property);\n\t\t        }\n\n\t\t        return objectTest && propertyTest;\n\t\t    }\n\n\t\t    function getCalendarFormat(myMoment, now) {\n\t\t        var diff = myMoment.diff(now, 'days', true);\n\t\t        return diff < -6\n\t\t            ? 'sameElse'\n\t\t            : diff < -1\n\t\t            ? 'lastWeek'\n\t\t            : diff < 0\n\t\t            ? 'lastDay'\n\t\t            : diff < 1\n\t\t            ? 'sameDay'\n\t\t            : diff < 2\n\t\t            ? 'nextDay'\n\t\t            : diff < 7\n\t\t            ? 'nextWeek'\n\t\t            : 'sameElse';\n\t\t    }\n\n\t\t    function calendar$1(time, formats) {\n\t\t        // Support for single parameter, formats only overload to the calendar function\n\t\t        if (arguments.length === 1) {\n\t\t            if (!arguments[0]) {\n\t\t                time = undefined;\n\t\t                formats = undefined;\n\t\t            } else if (isMomentInput(arguments[0])) {\n\t\t                time = arguments[0];\n\t\t                formats = undefined;\n\t\t            } else if (isCalendarSpec(arguments[0])) {\n\t\t                formats = arguments[0];\n\t\t                time = undefined;\n\t\t            }\n\t\t        }\n\t\t        // We want to compare the start of today, vs this.\n\t\t        // Getting start-of-today depends on whether we're local/utc/offset or not.\n\t\t        var now = time || createLocal(),\n\t\t            sod = cloneWithOffset(now, this).startOf('day'),\n\t\t            format = hooks.calendarFormat(this, sod) || 'sameElse',\n\t\t            output =\n\t\t                formats &&\n\t\t                (isFunction(formats[format])\n\t\t                    ? formats[format].call(this, now)\n\t\t                    : formats[format]);\n\n\t\t        return this.format(\n\t\t            output || this.localeData().calendar(format, this, createLocal(now))\n\t\t        );\n\t\t    }\n\n\t\t    function clone() {\n\t\t        return new Moment(this);\n\t\t    }\n\n\t\t    function isAfter(input, units) {\n\t\t        var localInput = isMoment(input) ? input : createLocal(input);\n\t\t        if (!(this.isValid() && localInput.isValid())) {\n\t\t            return false;\n\t\t        }\n\t\t        units = normalizeUnits(units) || 'millisecond';\n\t\t        if (units === 'millisecond') {\n\t\t            return this.valueOf() > localInput.valueOf();\n\t\t        } else {\n\t\t            return localInput.valueOf() < this.clone().startOf(units).valueOf();\n\t\t        }\n\t\t    }\n\n\t\t    function isBefore(input, units) {\n\t\t        var localInput = isMoment(input) ? input : createLocal(input);\n\t\t        if (!(this.isValid() && localInput.isValid())) {\n\t\t            return false;\n\t\t        }\n\t\t        units = normalizeUnits(units) || 'millisecond';\n\t\t        if (units === 'millisecond') {\n\t\t            return this.valueOf() < localInput.valueOf();\n\t\t        } else {\n\t\t            return this.clone().endOf(units).valueOf() < localInput.valueOf();\n\t\t        }\n\t\t    }\n\n\t\t    function isBetween(from, to, units, inclusivity) {\n\t\t        var localFrom = isMoment(from) ? from : createLocal(from),\n\t\t            localTo = isMoment(to) ? to : createLocal(to);\n\t\t        if (!(this.isValid() && localFrom.isValid() && localTo.isValid())) {\n\t\t            return false;\n\t\t        }\n\t\t        inclusivity = inclusivity || '()';\n\t\t        return (\n\t\t            (inclusivity[0] === '('\n\t\t                ? this.isAfter(localFrom, units)\n\t\t                : !this.isBefore(localFrom, units)) &&\n\t\t            (inclusivity[1] === ')'\n\t\t                ? this.isBefore(localTo, units)\n\t\t                : !this.isAfter(localTo, units))\n\t\t        );\n\t\t    }\n\n\t\t    function isSame(input, units) {\n\t\t        var localInput = isMoment(input) ? input : createLocal(input),\n\t\t            inputMs;\n\t\t        if (!(this.isValid() && localInput.isValid())) {\n\t\t            return false;\n\t\t        }\n\t\t        units = normalizeUnits(units) || 'millisecond';\n\t\t        if (units === 'millisecond') {\n\t\t            return this.valueOf() === localInput.valueOf();\n\t\t        } else {\n\t\t            inputMs = localInput.valueOf();\n\t\t            return (\n\t\t                this.clone().startOf(units).valueOf() <= inputMs &&\n\t\t                inputMs <= this.clone().endOf(units).valueOf()\n\t\t            );\n\t\t        }\n\t\t    }\n\n\t\t    function isSameOrAfter(input, units) {\n\t\t        return this.isSame(input, units) || this.isAfter(input, units);\n\t\t    }\n\n\t\t    function isSameOrBefore(input, units) {\n\t\t        return this.isSame(input, units) || this.isBefore(input, units);\n\t\t    }\n\n\t\t    function diff(input, units, asFloat) {\n\t\t        var that, zoneDelta, output;\n\n\t\t        if (!this.isValid()) {\n\t\t            return NaN;\n\t\t        }\n\n\t\t        that = cloneWithOffset(input, this);\n\n\t\t        if (!that.isValid()) {\n\t\t            return NaN;\n\t\t        }\n\n\t\t        zoneDelta = (that.utcOffset() - this.utcOffset()) * 6e4;\n\n\t\t        units = normalizeUnits(units);\n\n\t\t        switch (units) {\n\t\t            case 'year':\n\t\t                output = monthDiff(this, that) / 12;\n\t\t                break;\n\t\t            case 'month':\n\t\t                output = monthDiff(this, that);\n\t\t                break;\n\t\t            case 'quarter':\n\t\t                output = monthDiff(this, that) / 3;\n\t\t                break;\n\t\t            case 'second':\n\t\t                output = (this - that) / 1e3;\n\t\t                break; // 1000\n\t\t            case 'minute':\n\t\t                output = (this - that) / 6e4;\n\t\t                break; // 1000 * 60\n\t\t            case 'hour':\n\t\t                output = (this - that) / 36e5;\n\t\t                break; // 1000 * 60 * 60\n\t\t            case 'day':\n\t\t                output = (this - that - zoneDelta) / 864e5;\n\t\t                break; // 1000 * 60 * 60 * 24, negate dst\n\t\t            case 'week':\n\t\t                output = (this - that - zoneDelta) / 6048e5;\n\t\t                break; // 1000 * 60 * 60 * 24 * 7, negate dst\n\t\t            default:\n\t\t                output = this - that;\n\t\t        }\n\n\t\t        return asFloat ? output : absFloor(output);\n\t\t    }\n\n\t\t    function monthDiff(a, b) {\n\t\t        if (a.date() < b.date()) {\n\t\t            // end-of-month calculations work correct when the start month has more\n\t\t            // days than the end month.\n\t\t            return -monthDiff(b, a);\n\t\t        }\n\t\t        // difference in months\n\t\t        var wholeMonthDiff = (b.year() - a.year()) * 12 + (b.month() - a.month()),\n\t\t            // b is in (anchor - 1 month, anchor + 1 month)\n\t\t            anchor = a.clone().add(wholeMonthDiff, 'months'),\n\t\t            anchor2,\n\t\t            adjust;\n\n\t\t        if (b - anchor < 0) {\n\t\t            anchor2 = a.clone().add(wholeMonthDiff - 1, 'months');\n\t\t            // linear across the month\n\t\t            adjust = (b - anchor) / (anchor - anchor2);\n\t\t        } else {\n\t\t            anchor2 = a.clone().add(wholeMonthDiff + 1, 'months');\n\t\t            // linear across the month\n\t\t            adjust = (b - anchor) / (anchor2 - anchor);\n\t\t        }\n\n\t\t        //check for negative zero, return zero if negative zero\n\t\t        return -(wholeMonthDiff + adjust) || 0;\n\t\t    }\n\n\t\t    hooks.defaultFormat = 'YYYY-MM-DDTHH:mm:ssZ';\n\t\t    hooks.defaultFormatUtc = 'YYYY-MM-DDTHH:mm:ss[Z]';\n\n\t\t    function toString() {\n\t\t        return this.clone().locale('en').format('ddd MMM DD YYYY HH:mm:ss [GMT]ZZ');\n\t\t    }\n\n\t\t    function toISOString(keepOffset) {\n\t\t        if (!this.isValid()) {\n\t\t            return null;\n\t\t        }\n\t\t        var utc = keepOffset !== true,\n\t\t            m = utc ? this.clone().utc() : this;\n\t\t        if (m.year() < 0 || m.year() > 9999) {\n\t\t            return formatMoment(\n\t\t                m,\n\t\t                utc\n\t\t                    ? 'YYYYYY-MM-DD[T]HH:mm:ss.SSS[Z]'\n\t\t                    : 'YYYYYY-MM-DD[T]HH:mm:ss.SSSZ'\n\t\t            );\n\t\t        }\n\t\t        if (isFunction(Date.prototype.toISOString)) {\n\t\t            // native implementation is ~50x faster, use it when we can\n\t\t            if (utc) {\n\t\t                return this.toDate().toISOString();\n\t\t            } else {\n\t\t                return new Date(this.valueOf() + this.utcOffset() * 60 * 1000)\n\t\t                    .toISOString()\n\t\t                    .replace('Z', formatMoment(m, 'Z'));\n\t\t            }\n\t\t        }\n\t\t        return formatMoment(\n\t\t            m,\n\t\t            utc ? 'YYYY-MM-DD[T]HH:mm:ss.SSS[Z]' : 'YYYY-MM-DD[T]HH:mm:ss.SSSZ'\n\t\t        );\n\t\t    }\n\n\t\t    /**\n\t\t     * Return a human readable representation of a moment that can\n\t\t     * also be evaluated to get a new moment which is the same\n\t\t     *\n\t\t     * @link https://nodejs.org/dist/latest/docs/api/util.html#util_custom_inspect_function_on_objects\n\t\t     */\n\t\t    function inspect() {\n\t\t        if (!this.isValid()) {\n\t\t            return 'moment.invalid(/* ' + this._i + ' */)';\n\t\t        }\n\t\t        var func = 'moment',\n\t\t            zone = '',\n\t\t            prefix,\n\t\t            year,\n\t\t            datetime,\n\t\t            suffix;\n\t\t        if (!this.isLocal()) {\n\t\t            func = this.utcOffset() === 0 ? 'moment.utc' : 'moment.parseZone';\n\t\t            zone = 'Z';\n\t\t        }\n\t\t        prefix = '[' + func + '(\"]';\n\t\t        year = 0 <= this.year() && this.year() <= 9999 ? 'YYYY' : 'YYYYYY';\n\t\t        datetime = '-MM-DD[T]HH:mm:ss.SSS';\n\t\t        suffix = zone + '[\")]';\n\n\t\t        return this.format(prefix + year + datetime + suffix);\n\t\t    }\n\n\t\t    function format(inputString) {\n\t\t        if (!inputString) {\n\t\t            inputString = this.isUtc()\n\t\t                ? hooks.defaultFormatUtc\n\t\t                : hooks.defaultFormat;\n\t\t        }\n\t\t        var output = formatMoment(this, inputString);\n\t\t        return this.localeData().postformat(output);\n\t\t    }\n\n\t\t    function from(time, withoutSuffix) {\n\t\t        if (\n\t\t            this.isValid() &&\n\t\t            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n\t\t        ) {\n\t\t            return createDuration({ to: this, from: time })\n\t\t                .locale(this.locale())\n\t\t                .humanize(!withoutSuffix);\n\t\t        } else {\n\t\t            return this.localeData().invalidDate();\n\t\t        }\n\t\t    }\n\n\t\t    function fromNow(withoutSuffix) {\n\t\t        return this.from(createLocal(), withoutSuffix);\n\t\t    }\n\n\t\t    function to(time, withoutSuffix) {\n\t\t        if (\n\t\t            this.isValid() &&\n\t\t            ((isMoment(time) && time.isValid()) || createLocal(time).isValid())\n\t\t        ) {\n\t\t            return createDuration({ from: this, to: time })\n\t\t                .locale(this.locale())\n\t\t                .humanize(!withoutSuffix);\n\t\t        } else {\n\t\t            return this.localeData().invalidDate();\n\t\t        }\n\t\t    }\n\n\t\t    function toNow(withoutSuffix) {\n\t\t        return this.to(createLocal(), withoutSuffix);\n\t\t    }\n\n\t\t    // If passed a locale key, it will set the locale for this\n\t\t    // instance.  Otherwise, it will return the locale configuration\n\t\t    // variables for this instance.\n\t\t    function locale(key) {\n\t\t        var newLocaleData;\n\n\t\t        if (key === undefined) {\n\t\t            return this._locale._abbr;\n\t\t        } else {\n\t\t            newLocaleData = getLocale(key);\n\t\t            if (newLocaleData != null) {\n\t\t                this._locale = newLocaleData;\n\t\t            }\n\t\t            return this;\n\t\t        }\n\t\t    }\n\n\t\t    var lang = deprecate(\n\t\t        'moment().lang() is deprecated. Instead, use moment().localeData() to get the language configuration. Use moment().locale() to change languages.',\n\t\t        function (key) {\n\t\t            if (key === undefined) {\n\t\t                return this.localeData();\n\t\t            } else {\n\t\t                return this.locale(key);\n\t\t            }\n\t\t        }\n\t\t    );\n\n\t\t    function localeData() {\n\t\t        return this._locale;\n\t\t    }\n\n\t\t    var MS_PER_SECOND = 1000,\n\t\t        MS_PER_MINUTE = 60 * MS_PER_SECOND,\n\t\t        MS_PER_HOUR = 60 * MS_PER_MINUTE,\n\t\t        MS_PER_400_YEARS = (365 * 400 + 97) * 24 * MS_PER_HOUR;\n\n\t\t    // actual modulo - handles negative numbers (for dates before 1970):\n\t\t    function mod$1(dividend, divisor) {\n\t\t        return ((dividend % divisor) + divisor) % divisor;\n\t\t    }\n\n\t\t    function localStartOfDate(y, m, d) {\n\t\t        // the date constructor remaps years 0-99 to 1900-1999\n\t\t        if (y < 100 && y >= 0) {\n\t\t            // preserve leap years using a full 400 year cycle, then reset\n\t\t            return new Date(y + 400, m, d) - MS_PER_400_YEARS;\n\t\t        } else {\n\t\t            return new Date(y, m, d).valueOf();\n\t\t        }\n\t\t    }\n\n\t\t    function utcStartOfDate(y, m, d) {\n\t\t        // Date.UTC remaps years 0-99 to 1900-1999\n\t\t        if (y < 100 && y >= 0) {\n\t\t            // preserve leap years using a full 400 year cycle, then reset\n\t\t            return Date.UTC(y + 400, m, d) - MS_PER_400_YEARS;\n\t\t        } else {\n\t\t            return Date.UTC(y, m, d);\n\t\t        }\n\t\t    }\n\n\t\t    function startOf(units) {\n\t\t        var time, startOfDate;\n\t\t        units = normalizeUnits(units);\n\t\t        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n\t\t            return this;\n\t\t        }\n\n\t\t        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n\t\t        switch (units) {\n\t\t            case 'year':\n\t\t                time = startOfDate(this.year(), 0, 1);\n\t\t                break;\n\t\t            case 'quarter':\n\t\t                time = startOfDate(\n\t\t                    this.year(),\n\t\t                    this.month() - (this.month() % 3),\n\t\t                    1\n\t\t                );\n\t\t                break;\n\t\t            case 'month':\n\t\t                time = startOfDate(this.year(), this.month(), 1);\n\t\t                break;\n\t\t            case 'week':\n\t\t                time = startOfDate(\n\t\t                    this.year(),\n\t\t                    this.month(),\n\t\t                    this.date() - this.weekday()\n\t\t                );\n\t\t                break;\n\t\t            case 'isoWeek':\n\t\t                time = startOfDate(\n\t\t                    this.year(),\n\t\t                    this.month(),\n\t\t                    this.date() - (this.isoWeekday() - 1)\n\t\t                );\n\t\t                break;\n\t\t            case 'day':\n\t\t            case 'date':\n\t\t                time = startOfDate(this.year(), this.month(), this.date());\n\t\t                break;\n\t\t            case 'hour':\n\t\t                time = this._d.valueOf();\n\t\t                time -= mod$1(\n\t\t                    time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n\t\t                    MS_PER_HOUR\n\t\t                );\n\t\t                break;\n\t\t            case 'minute':\n\t\t                time = this._d.valueOf();\n\t\t                time -= mod$1(time, MS_PER_MINUTE);\n\t\t                break;\n\t\t            case 'second':\n\t\t                time = this._d.valueOf();\n\t\t                time -= mod$1(time, MS_PER_SECOND);\n\t\t                break;\n\t\t        }\n\n\t\t        this._d.setTime(time);\n\t\t        hooks.updateOffset(this, true);\n\t\t        return this;\n\t\t    }\n\n\t\t    function endOf(units) {\n\t\t        var time, startOfDate;\n\t\t        units = normalizeUnits(units);\n\t\t        if (units === undefined || units === 'millisecond' || !this.isValid()) {\n\t\t            return this;\n\t\t        }\n\n\t\t        startOfDate = this._isUTC ? utcStartOfDate : localStartOfDate;\n\n\t\t        switch (units) {\n\t\t            case 'year':\n\t\t                time = startOfDate(this.year() + 1, 0, 1) - 1;\n\t\t                break;\n\t\t            case 'quarter':\n\t\t                time =\n\t\t                    startOfDate(\n\t\t                        this.year(),\n\t\t                        this.month() - (this.month() % 3) + 3,\n\t\t                        1\n\t\t                    ) - 1;\n\t\t                break;\n\t\t            case 'month':\n\t\t                time = startOfDate(this.year(), this.month() + 1, 1) - 1;\n\t\t                break;\n\t\t            case 'week':\n\t\t                time =\n\t\t                    startOfDate(\n\t\t                        this.year(),\n\t\t                        this.month(),\n\t\t                        this.date() - this.weekday() + 7\n\t\t                    ) - 1;\n\t\t                break;\n\t\t            case 'isoWeek':\n\t\t                time =\n\t\t                    startOfDate(\n\t\t                        this.year(),\n\t\t                        this.month(),\n\t\t                        this.date() - (this.isoWeekday() - 1) + 7\n\t\t                    ) - 1;\n\t\t                break;\n\t\t            case 'day':\n\t\t            case 'date':\n\t\t                time = startOfDate(this.year(), this.month(), this.date() + 1) - 1;\n\t\t                break;\n\t\t            case 'hour':\n\t\t                time = this._d.valueOf();\n\t\t                time +=\n\t\t                    MS_PER_HOUR -\n\t\t                    mod$1(\n\t\t                        time + (this._isUTC ? 0 : this.utcOffset() * MS_PER_MINUTE),\n\t\t                        MS_PER_HOUR\n\t\t                    ) -\n\t\t                    1;\n\t\t                break;\n\t\t            case 'minute':\n\t\t                time = this._d.valueOf();\n\t\t                time += MS_PER_MINUTE - mod$1(time, MS_PER_MINUTE) - 1;\n\t\t                break;\n\t\t            case 'second':\n\t\t                time = this._d.valueOf();\n\t\t                time += MS_PER_SECOND - mod$1(time, MS_PER_SECOND) - 1;\n\t\t                break;\n\t\t        }\n\n\t\t        this._d.setTime(time);\n\t\t        hooks.updateOffset(this, true);\n\t\t        return this;\n\t\t    }\n\n\t\t    function valueOf() {\n\t\t        return this._d.valueOf() - (this._offset || 0) * 60000;\n\t\t    }\n\n\t\t    function unix() {\n\t\t        return Math.floor(this.valueOf() / 1000);\n\t\t    }\n\n\t\t    function toDate() {\n\t\t        return new Date(this.valueOf());\n\t\t    }\n\n\t\t    function toArray() {\n\t\t        var m = this;\n\t\t        return [\n\t\t            m.year(),\n\t\t            m.month(),\n\t\t            m.date(),\n\t\t            m.hour(),\n\t\t            m.minute(),\n\t\t            m.second(),\n\t\t            m.millisecond(),\n\t\t        ];\n\t\t    }\n\n\t\t    function toObject() {\n\t\t        var m = this;\n\t\t        return {\n\t\t            years: m.year(),\n\t\t            months: m.month(),\n\t\t            date: m.date(),\n\t\t            hours: m.hours(),\n\t\t            minutes: m.minutes(),\n\t\t            seconds: m.seconds(),\n\t\t            milliseconds: m.milliseconds(),\n\t\t        };\n\t\t    }\n\n\t\t    function toJSON() {\n\t\t        // new Date(NaN).toJSON() === null\n\t\t        return this.isValid() ? this.toISOString() : null;\n\t\t    }\n\n\t\t    function isValid$2() {\n\t\t        return isValid(this);\n\t\t    }\n\n\t\t    function parsingFlags() {\n\t\t        return extend({}, getParsingFlags(this));\n\t\t    }\n\n\t\t    function invalidAt() {\n\t\t        return getParsingFlags(this).overflow;\n\t\t    }\n\n\t\t    function creationData() {\n\t\t        return {\n\t\t            input: this._i,\n\t\t            format: this._f,\n\t\t            locale: this._locale,\n\t\t            isUTC: this._isUTC,\n\t\t            strict: this._strict,\n\t\t        };\n\t\t    }\n\n\t\t    addFormatToken('N', 0, 0, 'eraAbbr');\n\t\t    addFormatToken('NN', 0, 0, 'eraAbbr');\n\t\t    addFormatToken('NNN', 0, 0, 'eraAbbr');\n\t\t    addFormatToken('NNNN', 0, 0, 'eraName');\n\t\t    addFormatToken('NNNNN', 0, 0, 'eraNarrow');\n\n\t\t    addFormatToken('y', ['y', 1], 'yo', 'eraYear');\n\t\t    addFormatToken('y', ['yy', 2], 0, 'eraYear');\n\t\t    addFormatToken('y', ['yyy', 3], 0, 'eraYear');\n\t\t    addFormatToken('y', ['yyyy', 4], 0, 'eraYear');\n\n\t\t    addRegexToken('N', matchEraAbbr);\n\t\t    addRegexToken('NN', matchEraAbbr);\n\t\t    addRegexToken('NNN', matchEraAbbr);\n\t\t    addRegexToken('NNNN', matchEraName);\n\t\t    addRegexToken('NNNNN', matchEraNarrow);\n\n\t\t    addParseToken(\n\t\t        ['N', 'NN', 'NNN', 'NNNN', 'NNNNN'],\n\t\t        function (input, array, config, token) {\n\t\t            var era = config._locale.erasParse(input, token, config._strict);\n\t\t            if (era) {\n\t\t                getParsingFlags(config).era = era;\n\t\t            } else {\n\t\t                getParsingFlags(config).invalidEra = input;\n\t\t            }\n\t\t        }\n\t\t    );\n\n\t\t    addRegexToken('y', matchUnsigned);\n\t\t    addRegexToken('yy', matchUnsigned);\n\t\t    addRegexToken('yyy', matchUnsigned);\n\t\t    addRegexToken('yyyy', matchUnsigned);\n\t\t    addRegexToken('yo', matchEraYearOrdinal);\n\n\t\t    addParseToken(['y', 'yy', 'yyy', 'yyyy'], YEAR);\n\t\t    addParseToken(['yo'], function (input, array, config, token) {\n\t\t        var match;\n\t\t        if (config._locale._eraYearOrdinalRegex) {\n\t\t            match = input.match(config._locale._eraYearOrdinalRegex);\n\t\t        }\n\n\t\t        if (config._locale.eraYearOrdinalParse) {\n\t\t            array[YEAR] = config._locale.eraYearOrdinalParse(input, match);\n\t\t        } else {\n\t\t            array[YEAR] = parseInt(input, 10);\n\t\t        }\n\t\t    });\n\n\t\t    function localeEras(m, format) {\n\t\t        var i,\n\t\t            l,\n\t\t            date,\n\t\t            eras = this._eras || getLocale('en')._eras;\n\t\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t\t            switch (typeof eras[i].since) {\n\t\t                case 'string':\n\t\t                    // truncate time\n\t\t                    date = hooks(eras[i].since).startOf('day');\n\t\t                    eras[i].since = date.valueOf();\n\t\t                    break;\n\t\t            }\n\n\t\t            switch (typeof eras[i].until) {\n\t\t                case 'undefined':\n\t\t                    eras[i].until = +Infinity;\n\t\t                    break;\n\t\t                case 'string':\n\t\t                    // truncate time\n\t\t                    date = hooks(eras[i].until).startOf('day').valueOf();\n\t\t                    eras[i].until = date.valueOf();\n\t\t                    break;\n\t\t            }\n\t\t        }\n\t\t        return eras;\n\t\t    }\n\n\t\t    function localeErasParse(eraName, format, strict) {\n\t\t        var i,\n\t\t            l,\n\t\t            eras = this.eras(),\n\t\t            name,\n\t\t            abbr,\n\t\t            narrow;\n\t\t        eraName = eraName.toUpperCase();\n\n\t\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t\t            name = eras[i].name.toUpperCase();\n\t\t            abbr = eras[i].abbr.toUpperCase();\n\t\t            narrow = eras[i].narrow.toUpperCase();\n\n\t\t            if (strict) {\n\t\t                switch (format) {\n\t\t                    case 'N':\n\t\t                    case 'NN':\n\t\t                    case 'NNN':\n\t\t                        if (abbr === eraName) {\n\t\t                            return eras[i];\n\t\t                        }\n\t\t                        break;\n\n\t\t                    case 'NNNN':\n\t\t                        if (name === eraName) {\n\t\t                            return eras[i];\n\t\t                        }\n\t\t                        break;\n\n\t\t                    case 'NNNNN':\n\t\t                        if (narrow === eraName) {\n\t\t                            return eras[i];\n\t\t                        }\n\t\t                        break;\n\t\t                }\n\t\t            } else if ([name, abbr, narrow].indexOf(eraName) >= 0) {\n\t\t                return eras[i];\n\t\t            }\n\t\t        }\n\t\t    }\n\n\t\t    function localeErasConvertYear(era, year) {\n\t\t        var dir = era.since <= era.until ? +1 : -1;\n\t\t        if (year === undefined) {\n\t\t            return hooks(era.since).year();\n\t\t        } else {\n\t\t            return hooks(era.since).year() + (year - era.offset) * dir;\n\t\t        }\n\t\t    }\n\n\t\t    function getEraName() {\n\t\t        var i,\n\t\t            l,\n\t\t            val,\n\t\t            eras = this.localeData().eras();\n\t\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t\t            // truncate time\n\t\t            val = this.clone().startOf('day').valueOf();\n\n\t\t            if (eras[i].since <= val && val <= eras[i].until) {\n\t\t                return eras[i].name;\n\t\t            }\n\t\t            if (eras[i].until <= val && val <= eras[i].since) {\n\t\t                return eras[i].name;\n\t\t            }\n\t\t        }\n\n\t\t        return '';\n\t\t    }\n\n\t\t    function getEraNarrow() {\n\t\t        var i,\n\t\t            l,\n\t\t            val,\n\t\t            eras = this.localeData().eras();\n\t\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t\t            // truncate time\n\t\t            val = this.clone().startOf('day').valueOf();\n\n\t\t            if (eras[i].since <= val && val <= eras[i].until) {\n\t\t                return eras[i].narrow;\n\t\t            }\n\t\t            if (eras[i].until <= val && val <= eras[i].since) {\n\t\t                return eras[i].narrow;\n\t\t            }\n\t\t        }\n\n\t\t        return '';\n\t\t    }\n\n\t\t    function getEraAbbr() {\n\t\t        var i,\n\t\t            l,\n\t\t            val,\n\t\t            eras = this.localeData().eras();\n\t\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t\t            // truncate time\n\t\t            val = this.clone().startOf('day').valueOf();\n\n\t\t            if (eras[i].since <= val && val <= eras[i].until) {\n\t\t                return eras[i].abbr;\n\t\t            }\n\t\t            if (eras[i].until <= val && val <= eras[i].since) {\n\t\t                return eras[i].abbr;\n\t\t            }\n\t\t        }\n\n\t\t        return '';\n\t\t    }\n\n\t\t    function getEraYear() {\n\t\t        var i,\n\t\t            l,\n\t\t            dir,\n\t\t            val,\n\t\t            eras = this.localeData().eras();\n\t\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t\t            dir = eras[i].since <= eras[i].until ? +1 : -1;\n\n\t\t            // truncate time\n\t\t            val = this.clone().startOf('day').valueOf();\n\n\t\t            if (\n\t\t                (eras[i].since <= val && val <= eras[i].until) ||\n\t\t                (eras[i].until <= val && val <= eras[i].since)\n\t\t            ) {\n\t\t                return (\n\t\t                    (this.year() - hooks(eras[i].since).year()) * dir +\n\t\t                    eras[i].offset\n\t\t                );\n\t\t            }\n\t\t        }\n\n\t\t        return this.year();\n\t\t    }\n\n\t\t    function erasNameRegex(isStrict) {\n\t\t        if (!hasOwnProp(this, '_erasNameRegex')) {\n\t\t            computeErasParse.call(this);\n\t\t        }\n\t\t        return isStrict ? this._erasNameRegex : this._erasRegex;\n\t\t    }\n\n\t\t    function erasAbbrRegex(isStrict) {\n\t\t        if (!hasOwnProp(this, '_erasAbbrRegex')) {\n\t\t            computeErasParse.call(this);\n\t\t        }\n\t\t        return isStrict ? this._erasAbbrRegex : this._erasRegex;\n\t\t    }\n\n\t\t    function erasNarrowRegex(isStrict) {\n\t\t        if (!hasOwnProp(this, '_erasNarrowRegex')) {\n\t\t            computeErasParse.call(this);\n\t\t        }\n\t\t        return isStrict ? this._erasNarrowRegex : this._erasRegex;\n\t\t    }\n\n\t\t    function matchEraAbbr(isStrict, locale) {\n\t\t        return locale.erasAbbrRegex(isStrict);\n\t\t    }\n\n\t\t    function matchEraName(isStrict, locale) {\n\t\t        return locale.erasNameRegex(isStrict);\n\t\t    }\n\n\t\t    function matchEraNarrow(isStrict, locale) {\n\t\t        return locale.erasNarrowRegex(isStrict);\n\t\t    }\n\n\t\t    function matchEraYearOrdinal(isStrict, locale) {\n\t\t        return locale._eraYearOrdinalRegex || matchUnsigned;\n\t\t    }\n\n\t\t    function computeErasParse() {\n\t\t        var abbrPieces = [],\n\t\t            namePieces = [],\n\t\t            narrowPieces = [],\n\t\t            mixedPieces = [],\n\t\t            i,\n\t\t            l,\n\t\t            eras = this.eras();\n\n\t\t        for (i = 0, l = eras.length; i < l; ++i) {\n\t\t            namePieces.push(regexEscape(eras[i].name));\n\t\t            abbrPieces.push(regexEscape(eras[i].abbr));\n\t\t            narrowPieces.push(regexEscape(eras[i].narrow));\n\n\t\t            mixedPieces.push(regexEscape(eras[i].name));\n\t\t            mixedPieces.push(regexEscape(eras[i].abbr));\n\t\t            mixedPieces.push(regexEscape(eras[i].narrow));\n\t\t        }\n\n\t\t        this._erasRegex = new RegExp('^(' + mixedPieces.join('|') + ')', 'i');\n\t\t        this._erasNameRegex = new RegExp('^(' + namePieces.join('|') + ')', 'i');\n\t\t        this._erasAbbrRegex = new RegExp('^(' + abbrPieces.join('|') + ')', 'i');\n\t\t        this._erasNarrowRegex = new RegExp(\n\t\t            '^(' + narrowPieces.join('|') + ')',\n\t\t            'i'\n\t\t        );\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken(0, ['gg', 2], 0, function () {\n\t\t        return this.weekYear() % 100;\n\t\t    });\n\n\t\t    addFormatToken(0, ['GG', 2], 0, function () {\n\t\t        return this.isoWeekYear() % 100;\n\t\t    });\n\n\t\t    function addWeekYearFormatToken(token, getter) {\n\t\t        addFormatToken(0, [token, token.length], 0, getter);\n\t\t    }\n\n\t\t    addWeekYearFormatToken('gggg', 'weekYear');\n\t\t    addWeekYearFormatToken('ggggg', 'weekYear');\n\t\t    addWeekYearFormatToken('GGGG', 'isoWeekYear');\n\t\t    addWeekYearFormatToken('GGGGG', 'isoWeekYear');\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('weekYear', 'gg');\n\t\t    addUnitAlias('isoWeekYear', 'GG');\n\n\t\t    // PRIORITY\n\n\t\t    addUnitPriority('weekYear', 1);\n\t\t    addUnitPriority('isoWeekYear', 1);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('G', matchSigned);\n\t\t    addRegexToken('g', matchSigned);\n\t\t    addRegexToken('GG', match1to2, match2);\n\t\t    addRegexToken('gg', match1to2, match2);\n\t\t    addRegexToken('GGGG', match1to4, match4);\n\t\t    addRegexToken('gggg', match1to4, match4);\n\t\t    addRegexToken('GGGGG', match1to6, match6);\n\t\t    addRegexToken('ggggg', match1to6, match6);\n\n\t\t    addWeekParseToken(\n\t\t        ['gggg', 'ggggg', 'GGGG', 'GGGGG'],\n\t\t        function (input, week, config, token) {\n\t\t            week[token.substr(0, 2)] = toInt(input);\n\t\t        }\n\t\t    );\n\n\t\t    addWeekParseToken(['gg', 'GG'], function (input, week, config, token) {\n\t\t        week[token] = hooks.parseTwoDigitYear(input);\n\t\t    });\n\n\t\t    // MOMENTS\n\n\t\t    function getSetWeekYear(input) {\n\t\t        return getSetWeekYearHelper.call(\n\t\t            this,\n\t\t            input,\n\t\t            this.week(),\n\t\t            this.weekday(),\n\t\t            this.localeData()._week.dow,\n\t\t            this.localeData()._week.doy\n\t\t        );\n\t\t    }\n\n\t\t    function getSetISOWeekYear(input) {\n\t\t        return getSetWeekYearHelper.call(\n\t\t            this,\n\t\t            input,\n\t\t            this.isoWeek(),\n\t\t            this.isoWeekday(),\n\t\t            1,\n\t\t            4\n\t\t        );\n\t\t    }\n\n\t\t    function getISOWeeksInYear() {\n\t\t        return weeksInYear(this.year(), 1, 4);\n\t\t    }\n\n\t\t    function getISOWeeksInISOWeekYear() {\n\t\t        return weeksInYear(this.isoWeekYear(), 1, 4);\n\t\t    }\n\n\t\t    function getWeeksInYear() {\n\t\t        var weekInfo = this.localeData()._week;\n\t\t        return weeksInYear(this.year(), weekInfo.dow, weekInfo.doy);\n\t\t    }\n\n\t\t    function getWeeksInWeekYear() {\n\t\t        var weekInfo = this.localeData()._week;\n\t\t        return weeksInYear(this.weekYear(), weekInfo.dow, weekInfo.doy);\n\t\t    }\n\n\t\t    function getSetWeekYearHelper(input, week, weekday, dow, doy) {\n\t\t        var weeksTarget;\n\t\t        if (input == null) {\n\t\t            return weekOfYear(this, dow, doy).year;\n\t\t        } else {\n\t\t            weeksTarget = weeksInYear(input, dow, doy);\n\t\t            if (week > weeksTarget) {\n\t\t                week = weeksTarget;\n\t\t            }\n\t\t            return setWeekAll.call(this, input, week, weekday, dow, doy);\n\t\t        }\n\t\t    }\n\n\t\t    function setWeekAll(weekYear, week, weekday, dow, doy) {\n\t\t        var dayOfYearData = dayOfYearFromWeeks(weekYear, week, weekday, dow, doy),\n\t\t            date = createUTCDate(dayOfYearData.year, 0, dayOfYearData.dayOfYear);\n\n\t\t        this.year(date.getUTCFullYear());\n\t\t        this.month(date.getUTCMonth());\n\t\t        this.date(date.getUTCDate());\n\t\t        return this;\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('Q', 0, 'Qo', 'quarter');\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('quarter', 'Q');\n\n\t\t    // PRIORITY\n\n\t\t    addUnitPriority('quarter', 7);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('Q', match1);\n\t\t    addParseToken('Q', function (input, array) {\n\t\t        array[MONTH] = (toInt(input) - 1) * 3;\n\t\t    });\n\n\t\t    // MOMENTS\n\n\t\t    function getSetQuarter(input) {\n\t\t        return input == null\n\t\t            ? Math.ceil((this.month() + 1) / 3)\n\t\t            : this.month((input - 1) * 3 + (this.month() % 3));\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('D', ['DD', 2], 'Do', 'date');\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('date', 'D');\n\n\t\t    // PRIORITY\n\t\t    addUnitPriority('date', 9);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('D', match1to2);\n\t\t    addRegexToken('DD', match1to2, match2);\n\t\t    addRegexToken('Do', function (isStrict, locale) {\n\t\t        // TODO: Remove \"ordinalParse\" fallback in next major release.\n\t\t        return isStrict\n\t\t            ? locale._dayOfMonthOrdinalParse || locale._ordinalParse\n\t\t            : locale._dayOfMonthOrdinalParseLenient;\n\t\t    });\n\n\t\t    addParseToken(['D', 'DD'], DATE);\n\t\t    addParseToken('Do', function (input, array) {\n\t\t        array[DATE] = toInt(input.match(match1to2)[0]);\n\t\t    });\n\n\t\t    // MOMENTS\n\n\t\t    var getSetDayOfMonth = makeGetSet('Date', true);\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('DDD', ['DDDD', 3], 'DDDo', 'dayOfYear');\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('dayOfYear', 'DDD');\n\n\t\t    // PRIORITY\n\t\t    addUnitPriority('dayOfYear', 4);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('DDD', match1to3);\n\t\t    addRegexToken('DDDD', match3);\n\t\t    addParseToken(['DDD', 'DDDD'], function (input, array, config) {\n\t\t        config._dayOfYear = toInt(input);\n\t\t    });\n\n\t\t    // HELPERS\n\n\t\t    // MOMENTS\n\n\t\t    function getSetDayOfYear(input) {\n\t\t        var dayOfYear =\n\t\t            Math.round(\n\t\t                (this.clone().startOf('day') - this.clone().startOf('year')) / 864e5\n\t\t            ) + 1;\n\t\t        return input == null ? dayOfYear : this.add(input - dayOfYear, 'd');\n\t\t    }\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('m', ['mm', 2], 0, 'minute');\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('minute', 'm');\n\n\t\t    // PRIORITY\n\n\t\t    addUnitPriority('minute', 14);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('m', match1to2);\n\t\t    addRegexToken('mm', match1to2, match2);\n\t\t    addParseToken(['m', 'mm'], MINUTE);\n\n\t\t    // MOMENTS\n\n\t\t    var getSetMinute = makeGetSet('Minutes', false);\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('s', ['ss', 2], 0, 'second');\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('second', 's');\n\n\t\t    // PRIORITY\n\n\t\t    addUnitPriority('second', 15);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('s', match1to2);\n\t\t    addRegexToken('ss', match1to2, match2);\n\t\t    addParseToken(['s', 'ss'], SECOND);\n\n\t\t    // MOMENTS\n\n\t\t    var getSetSecond = makeGetSet('Seconds', false);\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('S', 0, 0, function () {\n\t\t        return ~~(this.millisecond() / 100);\n\t\t    });\n\n\t\t    addFormatToken(0, ['SS', 2], 0, function () {\n\t\t        return ~~(this.millisecond() / 10);\n\t\t    });\n\n\t\t    addFormatToken(0, ['SSS', 3], 0, 'millisecond');\n\t\t    addFormatToken(0, ['SSSS', 4], 0, function () {\n\t\t        return this.millisecond() * 10;\n\t\t    });\n\t\t    addFormatToken(0, ['SSSSS', 5], 0, function () {\n\t\t        return this.millisecond() * 100;\n\t\t    });\n\t\t    addFormatToken(0, ['SSSSSS', 6], 0, function () {\n\t\t        return this.millisecond() * 1000;\n\t\t    });\n\t\t    addFormatToken(0, ['SSSSSSS', 7], 0, function () {\n\t\t        return this.millisecond() * 10000;\n\t\t    });\n\t\t    addFormatToken(0, ['SSSSSSSS', 8], 0, function () {\n\t\t        return this.millisecond() * 100000;\n\t\t    });\n\t\t    addFormatToken(0, ['SSSSSSSSS', 9], 0, function () {\n\t\t        return this.millisecond() * 1000000;\n\t\t    });\n\n\t\t    // ALIASES\n\n\t\t    addUnitAlias('millisecond', 'ms');\n\n\t\t    // PRIORITY\n\n\t\t    addUnitPriority('millisecond', 16);\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('S', match1to3, match1);\n\t\t    addRegexToken('SS', match1to3, match2);\n\t\t    addRegexToken('SSS', match1to3, match3);\n\n\t\t    var token, getSetMillisecond;\n\t\t    for (token = 'SSSS'; token.length <= 9; token += 'S') {\n\t\t        addRegexToken(token, matchUnsigned);\n\t\t    }\n\n\t\t    function parseMs(input, array) {\n\t\t        array[MILLISECOND] = toInt(('0.' + input) * 1000);\n\t\t    }\n\n\t\t    for (token = 'S'; token.length <= 9; token += 'S') {\n\t\t        addParseToken(token, parseMs);\n\t\t    }\n\n\t\t    getSetMillisecond = makeGetSet('Milliseconds', false);\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('z', 0, 0, 'zoneAbbr');\n\t\t    addFormatToken('zz', 0, 0, 'zoneName');\n\n\t\t    // MOMENTS\n\n\t\t    function getZoneAbbr() {\n\t\t        return this._isUTC ? 'UTC' : '';\n\t\t    }\n\n\t\t    function getZoneName() {\n\t\t        return this._isUTC ? 'Coordinated Universal Time' : '';\n\t\t    }\n\n\t\t    var proto = Moment.prototype;\n\n\t\t    proto.add = add;\n\t\t    proto.calendar = calendar$1;\n\t\t    proto.clone = clone;\n\t\t    proto.diff = diff;\n\t\t    proto.endOf = endOf;\n\t\t    proto.format = format;\n\t\t    proto.from = from;\n\t\t    proto.fromNow = fromNow;\n\t\t    proto.to = to;\n\t\t    proto.toNow = toNow;\n\t\t    proto.get = stringGet;\n\t\t    proto.invalidAt = invalidAt;\n\t\t    proto.isAfter = isAfter;\n\t\t    proto.isBefore = isBefore;\n\t\t    proto.isBetween = isBetween;\n\t\t    proto.isSame = isSame;\n\t\t    proto.isSameOrAfter = isSameOrAfter;\n\t\t    proto.isSameOrBefore = isSameOrBefore;\n\t\t    proto.isValid = isValid$2;\n\t\t    proto.lang = lang;\n\t\t    proto.locale = locale;\n\t\t    proto.localeData = localeData;\n\t\t    proto.max = prototypeMax;\n\t\t    proto.min = prototypeMin;\n\t\t    proto.parsingFlags = parsingFlags;\n\t\t    proto.set = stringSet;\n\t\t    proto.startOf = startOf;\n\t\t    proto.subtract = subtract;\n\t\t    proto.toArray = toArray;\n\t\t    proto.toObject = toObject;\n\t\t    proto.toDate = toDate;\n\t\t    proto.toISOString = toISOString;\n\t\t    proto.inspect = inspect;\n\t\t    if (typeof Symbol !== 'undefined' && Symbol.for != null) {\n\t\t        proto[Symbol.for('nodejs.util.inspect.custom')] = function () {\n\t\t            return 'Moment<' + this.format() + '>';\n\t\t        };\n\t\t    }\n\t\t    proto.toJSON = toJSON;\n\t\t    proto.toString = toString;\n\t\t    proto.unix = unix;\n\t\t    proto.valueOf = valueOf;\n\t\t    proto.creationData = creationData;\n\t\t    proto.eraName = getEraName;\n\t\t    proto.eraNarrow = getEraNarrow;\n\t\t    proto.eraAbbr = getEraAbbr;\n\t\t    proto.eraYear = getEraYear;\n\t\t    proto.year = getSetYear;\n\t\t    proto.isLeapYear = getIsLeapYear;\n\t\t    proto.weekYear = getSetWeekYear;\n\t\t    proto.isoWeekYear = getSetISOWeekYear;\n\t\t    proto.quarter = proto.quarters = getSetQuarter;\n\t\t    proto.month = getSetMonth;\n\t\t    proto.daysInMonth = getDaysInMonth;\n\t\t    proto.week = proto.weeks = getSetWeek;\n\t\t    proto.isoWeek = proto.isoWeeks = getSetISOWeek;\n\t\t    proto.weeksInYear = getWeeksInYear;\n\t\t    proto.weeksInWeekYear = getWeeksInWeekYear;\n\t\t    proto.isoWeeksInYear = getISOWeeksInYear;\n\t\t    proto.isoWeeksInISOWeekYear = getISOWeeksInISOWeekYear;\n\t\t    proto.date = getSetDayOfMonth;\n\t\t    proto.day = proto.days = getSetDayOfWeek;\n\t\t    proto.weekday = getSetLocaleDayOfWeek;\n\t\t    proto.isoWeekday = getSetISODayOfWeek;\n\t\t    proto.dayOfYear = getSetDayOfYear;\n\t\t    proto.hour = proto.hours = getSetHour;\n\t\t    proto.minute = proto.minutes = getSetMinute;\n\t\t    proto.second = proto.seconds = getSetSecond;\n\t\t    proto.millisecond = proto.milliseconds = getSetMillisecond;\n\t\t    proto.utcOffset = getSetOffset;\n\t\t    proto.utc = setOffsetToUTC;\n\t\t    proto.local = setOffsetToLocal;\n\t\t    proto.parseZone = setOffsetToParsedOffset;\n\t\t    proto.hasAlignedHourOffset = hasAlignedHourOffset;\n\t\t    proto.isDST = isDaylightSavingTime;\n\t\t    proto.isLocal = isLocal;\n\t\t    proto.isUtcOffset = isUtcOffset;\n\t\t    proto.isUtc = isUtc;\n\t\t    proto.isUTC = isUtc;\n\t\t    proto.zoneAbbr = getZoneAbbr;\n\t\t    proto.zoneName = getZoneName;\n\t\t    proto.dates = deprecate(\n\t\t        'dates accessor is deprecated. Use date instead.',\n\t\t        getSetDayOfMonth\n\t\t    );\n\t\t    proto.months = deprecate(\n\t\t        'months accessor is deprecated. Use month instead',\n\t\t        getSetMonth\n\t\t    );\n\t\t    proto.years = deprecate(\n\t\t        'years accessor is deprecated. Use year instead',\n\t\t        getSetYear\n\t\t    );\n\t\t    proto.zone = deprecate(\n\t\t        'moment().zone is deprecated, use moment().utcOffset instead. http://momentjs.com/guides/#/warnings/zone/',\n\t\t        getSetZone\n\t\t    );\n\t\t    proto.isDSTShifted = deprecate(\n\t\t        'isDSTShifted is deprecated. See http://momentjs.com/guides/#/warnings/dst-shifted/ for more information',\n\t\t        isDaylightSavingTimeShifted\n\t\t    );\n\n\t\t    function createUnix(input) {\n\t\t        return createLocal(input * 1000);\n\t\t    }\n\n\t\t    function createInZone() {\n\t\t        return createLocal.apply(null, arguments).parseZone();\n\t\t    }\n\n\t\t    function preParsePostFormat(string) {\n\t\t        return string;\n\t\t    }\n\n\t\t    var proto$1 = Locale.prototype;\n\n\t\t    proto$1.calendar = calendar;\n\t\t    proto$1.longDateFormat = longDateFormat;\n\t\t    proto$1.invalidDate = invalidDate;\n\t\t    proto$1.ordinal = ordinal;\n\t\t    proto$1.preparse = preParsePostFormat;\n\t\t    proto$1.postformat = preParsePostFormat;\n\t\t    proto$1.relativeTime = relativeTime;\n\t\t    proto$1.pastFuture = pastFuture;\n\t\t    proto$1.set = set;\n\t\t    proto$1.eras = localeEras;\n\t\t    proto$1.erasParse = localeErasParse;\n\t\t    proto$1.erasConvertYear = localeErasConvertYear;\n\t\t    proto$1.erasAbbrRegex = erasAbbrRegex;\n\t\t    proto$1.erasNameRegex = erasNameRegex;\n\t\t    proto$1.erasNarrowRegex = erasNarrowRegex;\n\n\t\t    proto$1.months = localeMonths;\n\t\t    proto$1.monthsShort = localeMonthsShort;\n\t\t    proto$1.monthsParse = localeMonthsParse;\n\t\t    proto$1.monthsRegex = monthsRegex;\n\t\t    proto$1.monthsShortRegex = monthsShortRegex;\n\t\t    proto$1.week = localeWeek;\n\t\t    proto$1.firstDayOfYear = localeFirstDayOfYear;\n\t\t    proto$1.firstDayOfWeek = localeFirstDayOfWeek;\n\n\t\t    proto$1.weekdays = localeWeekdays;\n\t\t    proto$1.weekdaysMin = localeWeekdaysMin;\n\t\t    proto$1.weekdaysShort = localeWeekdaysShort;\n\t\t    proto$1.weekdaysParse = localeWeekdaysParse;\n\n\t\t    proto$1.weekdaysRegex = weekdaysRegex;\n\t\t    proto$1.weekdaysShortRegex = weekdaysShortRegex;\n\t\t    proto$1.weekdaysMinRegex = weekdaysMinRegex;\n\n\t\t    proto$1.isPM = localeIsPM;\n\t\t    proto$1.meridiem = localeMeridiem;\n\n\t\t    function get$1(format, index, field, setter) {\n\t\t        var locale = getLocale(),\n\t\t            utc = createUTC().set(setter, index);\n\t\t        return locale[field](utc, format);\n\t\t    }\n\n\t\t    function listMonthsImpl(format, index, field) {\n\t\t        if (isNumber(format)) {\n\t\t            index = format;\n\t\t            format = undefined;\n\t\t        }\n\n\t\t        format = format || '';\n\n\t\t        if (index != null) {\n\t\t            return get$1(format, index, field, 'month');\n\t\t        }\n\n\t\t        var i,\n\t\t            out = [];\n\t\t        for (i = 0; i < 12; i++) {\n\t\t            out[i] = get$1(format, i, field, 'month');\n\t\t        }\n\t\t        return out;\n\t\t    }\n\n\t\t    // ()\n\t\t    // (5)\n\t\t    // (fmt, 5)\n\t\t    // (fmt)\n\t\t    // (true)\n\t\t    // (true, 5)\n\t\t    // (true, fmt, 5)\n\t\t    // (true, fmt)\n\t\t    function listWeekdaysImpl(localeSorted, format, index, field) {\n\t\t        if (typeof localeSorted === 'boolean') {\n\t\t            if (isNumber(format)) {\n\t\t                index = format;\n\t\t                format = undefined;\n\t\t            }\n\n\t\t            format = format || '';\n\t\t        } else {\n\t\t            format = localeSorted;\n\t\t            index = format;\n\t\t            localeSorted = false;\n\n\t\t            if (isNumber(format)) {\n\t\t                index = format;\n\t\t                format = undefined;\n\t\t            }\n\n\t\t            format = format || '';\n\t\t        }\n\n\t\t        var locale = getLocale(),\n\t\t            shift = localeSorted ? locale._week.dow : 0,\n\t\t            i,\n\t\t            out = [];\n\n\t\t        if (index != null) {\n\t\t            return get$1(format, (index + shift) % 7, field, 'day');\n\t\t        }\n\n\t\t        for (i = 0; i < 7; i++) {\n\t\t            out[i] = get$1(format, (i + shift) % 7, field, 'day');\n\t\t        }\n\t\t        return out;\n\t\t    }\n\n\t\t    function listMonths(format, index) {\n\t\t        return listMonthsImpl(format, index, 'months');\n\t\t    }\n\n\t\t    function listMonthsShort(format, index) {\n\t\t        return listMonthsImpl(format, index, 'monthsShort');\n\t\t    }\n\n\t\t    function listWeekdays(localeSorted, format, index) {\n\t\t        return listWeekdaysImpl(localeSorted, format, index, 'weekdays');\n\t\t    }\n\n\t\t    function listWeekdaysShort(localeSorted, format, index) {\n\t\t        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysShort');\n\t\t    }\n\n\t\t    function listWeekdaysMin(localeSorted, format, index) {\n\t\t        return listWeekdaysImpl(localeSorted, format, index, 'weekdaysMin');\n\t\t    }\n\n\t\t    getSetGlobalLocale('en', {\n\t\t        eras: [\n\t\t            {\n\t\t                since: '0001-01-01',\n\t\t                until: +Infinity,\n\t\t                offset: 1,\n\t\t                name: 'Anno Domini',\n\t\t                narrow: 'AD',\n\t\t                abbr: 'AD',\n\t\t            },\n\t\t            {\n\t\t                since: '0000-12-31',\n\t\t                until: -Infinity,\n\t\t                offset: 1,\n\t\t                name: 'Before Christ',\n\t\t                narrow: 'BC',\n\t\t                abbr: 'BC',\n\t\t            },\n\t\t        ],\n\t\t        dayOfMonthOrdinalParse: /\\d{1,2}(th|st|nd|rd)/,\n\t\t        ordinal: function (number) {\n\t\t            var b = number % 10,\n\t\t                output =\n\t\t                    toInt((number % 100) / 10) === 1\n\t\t                        ? 'th'\n\t\t                        : b === 1\n\t\t                        ? 'st'\n\t\t                        : b === 2\n\t\t                        ? 'nd'\n\t\t                        : b === 3\n\t\t                        ? 'rd'\n\t\t                        : 'th';\n\t\t            return number + output;\n\t\t        },\n\t\t    });\n\n\t\t    // Side effect imports\n\n\t\t    hooks.lang = deprecate(\n\t\t        'moment.lang is deprecated. Use moment.locale instead.',\n\t\t        getSetGlobalLocale\n\t\t    );\n\t\t    hooks.langData = deprecate(\n\t\t        'moment.langData is deprecated. Use moment.localeData instead.',\n\t\t        getLocale\n\t\t    );\n\n\t\t    var mathAbs = Math.abs;\n\n\t\t    function abs() {\n\t\t        var data = this._data;\n\n\t\t        this._milliseconds = mathAbs(this._milliseconds);\n\t\t        this._days = mathAbs(this._days);\n\t\t        this._months = mathAbs(this._months);\n\n\t\t        data.milliseconds = mathAbs(data.milliseconds);\n\t\t        data.seconds = mathAbs(data.seconds);\n\t\t        data.minutes = mathAbs(data.minutes);\n\t\t        data.hours = mathAbs(data.hours);\n\t\t        data.months = mathAbs(data.months);\n\t\t        data.years = mathAbs(data.years);\n\n\t\t        return this;\n\t\t    }\n\n\t\t    function addSubtract$1(duration, input, value, direction) {\n\t\t        var other = createDuration(input, value);\n\n\t\t        duration._milliseconds += direction * other._milliseconds;\n\t\t        duration._days += direction * other._days;\n\t\t        duration._months += direction * other._months;\n\n\t\t        return duration._bubble();\n\t\t    }\n\n\t\t    // supports only 2.0-style add(1, 's') or add(duration)\n\t\t    function add$1(input, value) {\n\t\t        return addSubtract$1(this, input, value, 1);\n\t\t    }\n\n\t\t    // supports only 2.0-style subtract(1, 's') or subtract(duration)\n\t\t    function subtract$1(input, value) {\n\t\t        return addSubtract$1(this, input, value, -1);\n\t\t    }\n\n\t\t    function absCeil(number) {\n\t\t        if (number < 0) {\n\t\t            return Math.floor(number);\n\t\t        } else {\n\t\t            return Math.ceil(number);\n\t\t        }\n\t\t    }\n\n\t\t    function bubble() {\n\t\t        var milliseconds = this._milliseconds,\n\t\t            days = this._days,\n\t\t            months = this._months,\n\t\t            data = this._data,\n\t\t            seconds,\n\t\t            minutes,\n\t\t            hours,\n\t\t            years,\n\t\t            monthsFromDays;\n\n\t\t        // if we have a mix of positive and negative values, bubble down first\n\t\t        // check: https://github.com/moment/moment/issues/2166\n\t\t        if (\n\t\t            !(\n\t\t                (milliseconds >= 0 && days >= 0 && months >= 0) ||\n\t\t                (milliseconds <= 0 && days <= 0 && months <= 0)\n\t\t            )\n\t\t        ) {\n\t\t            milliseconds += absCeil(monthsToDays(months) + days) * 864e5;\n\t\t            days = 0;\n\t\t            months = 0;\n\t\t        }\n\n\t\t        // The following code bubbles up values, see the tests for\n\t\t        // examples of what that means.\n\t\t        data.milliseconds = milliseconds % 1000;\n\n\t\t        seconds = absFloor(milliseconds / 1000);\n\t\t        data.seconds = seconds % 60;\n\n\t\t        minutes = absFloor(seconds / 60);\n\t\t        data.minutes = minutes % 60;\n\n\t\t        hours = absFloor(minutes / 60);\n\t\t        data.hours = hours % 24;\n\n\t\t        days += absFloor(hours / 24);\n\n\t\t        // convert days to months\n\t\t        monthsFromDays = absFloor(daysToMonths(days));\n\t\t        months += monthsFromDays;\n\t\t        days -= absCeil(monthsToDays(monthsFromDays));\n\n\t\t        // 12 months -> 1 year\n\t\t        years = absFloor(months / 12);\n\t\t        months %= 12;\n\n\t\t        data.days = days;\n\t\t        data.months = months;\n\t\t        data.years = years;\n\n\t\t        return this;\n\t\t    }\n\n\t\t    function daysToMonths(days) {\n\t\t        // 400 years have 146097 days (taking into account leap year rules)\n\t\t        // 400 years have 12 months === 4800\n\t\t        return (days * 4800) / 146097;\n\t\t    }\n\n\t\t    function monthsToDays(months) {\n\t\t        // the reverse of daysToMonths\n\t\t        return (months * 146097) / 4800;\n\t\t    }\n\n\t\t    function as(units) {\n\t\t        if (!this.isValid()) {\n\t\t            return NaN;\n\t\t        }\n\t\t        var days,\n\t\t            months,\n\t\t            milliseconds = this._milliseconds;\n\n\t\t        units = normalizeUnits(units);\n\n\t\t        if (units === 'month' || units === 'quarter' || units === 'year') {\n\t\t            days = this._days + milliseconds / 864e5;\n\t\t            months = this._months + daysToMonths(days);\n\t\t            switch (units) {\n\t\t                case 'month':\n\t\t                    return months;\n\t\t                case 'quarter':\n\t\t                    return months / 3;\n\t\t                case 'year':\n\t\t                    return months / 12;\n\t\t            }\n\t\t        } else {\n\t\t            // handle milliseconds separately because of floating point math errors (issue #1867)\n\t\t            days = this._days + Math.round(monthsToDays(this._months));\n\t\t            switch (units) {\n\t\t                case 'week':\n\t\t                    return days / 7 + milliseconds / 6048e5;\n\t\t                case 'day':\n\t\t                    return days + milliseconds / 864e5;\n\t\t                case 'hour':\n\t\t                    return days * 24 + milliseconds / 36e5;\n\t\t                case 'minute':\n\t\t                    return days * 1440 + milliseconds / 6e4;\n\t\t                case 'second':\n\t\t                    return days * 86400 + milliseconds / 1000;\n\t\t                // Math.floor prevents floating point math errors here\n\t\t                case 'millisecond':\n\t\t                    return Math.floor(days * 864e5) + milliseconds;\n\t\t                default:\n\t\t                    throw new Error('Unknown unit ' + units);\n\t\t            }\n\t\t        }\n\t\t    }\n\n\t\t    // TODO: Use this.as('ms')?\n\t\t    function valueOf$1() {\n\t\t        if (!this.isValid()) {\n\t\t            return NaN;\n\t\t        }\n\t\t        return (\n\t\t            this._milliseconds +\n\t\t            this._days * 864e5 +\n\t\t            (this._months % 12) * 2592e6 +\n\t\t            toInt(this._months / 12) * 31536e6\n\t\t        );\n\t\t    }\n\n\t\t    function makeAs(alias) {\n\t\t        return function () {\n\t\t            return this.as(alias);\n\t\t        };\n\t\t    }\n\n\t\t    var asMilliseconds = makeAs('ms'),\n\t\t        asSeconds = makeAs('s'),\n\t\t        asMinutes = makeAs('m'),\n\t\t        asHours = makeAs('h'),\n\t\t        asDays = makeAs('d'),\n\t\t        asWeeks = makeAs('w'),\n\t\t        asMonths = makeAs('M'),\n\t\t        asQuarters = makeAs('Q'),\n\t\t        asYears = makeAs('y');\n\n\t\t    function clone$1() {\n\t\t        return createDuration(this);\n\t\t    }\n\n\t\t    function get$2(units) {\n\t\t        units = normalizeUnits(units);\n\t\t        return this.isValid() ? this[units + 's']() : NaN;\n\t\t    }\n\n\t\t    function makeGetter(name) {\n\t\t        return function () {\n\t\t            return this.isValid() ? this._data[name] : NaN;\n\t\t        };\n\t\t    }\n\n\t\t    var milliseconds = makeGetter('milliseconds'),\n\t\t        seconds = makeGetter('seconds'),\n\t\t        minutes = makeGetter('minutes'),\n\t\t        hours = makeGetter('hours'),\n\t\t        days = makeGetter('days'),\n\t\t        months = makeGetter('months'),\n\t\t        years = makeGetter('years');\n\n\t\t    function weeks() {\n\t\t        return absFloor(this.days() / 7);\n\t\t    }\n\n\t\t    var round = Math.round,\n\t\t        thresholds = {\n\t\t            ss: 44, // a few seconds to seconds\n\t\t            s: 45, // seconds to minute\n\t\t            m: 45, // minutes to hour\n\t\t            h: 22, // hours to day\n\t\t            d: 26, // days to month/week\n\t\t            w: null, // weeks to month\n\t\t            M: 11, // months to year\n\t\t        };\n\n\t\t    // helper function for moment.fn.from, moment.fn.fromNow, and moment.duration.fn.humanize\n\t\t    function substituteTimeAgo(string, number, withoutSuffix, isFuture, locale) {\n\t\t        return locale.relativeTime(number || 1, !!withoutSuffix, string, isFuture);\n\t\t    }\n\n\t\t    function relativeTime$1(posNegDuration, withoutSuffix, thresholds, locale) {\n\t\t        var duration = createDuration(posNegDuration).abs(),\n\t\t            seconds = round(duration.as('s')),\n\t\t            minutes = round(duration.as('m')),\n\t\t            hours = round(duration.as('h')),\n\t\t            days = round(duration.as('d')),\n\t\t            months = round(duration.as('M')),\n\t\t            weeks = round(duration.as('w')),\n\t\t            years = round(duration.as('y')),\n\t\t            a =\n\t\t                (seconds <= thresholds.ss && ['s', seconds]) ||\n\t\t                (seconds < thresholds.s && ['ss', seconds]) ||\n\t\t                (minutes <= 1 && ['m']) ||\n\t\t                (minutes < thresholds.m && ['mm', minutes]) ||\n\t\t                (hours <= 1 && ['h']) ||\n\t\t                (hours < thresholds.h && ['hh', hours]) ||\n\t\t                (days <= 1 && ['d']) ||\n\t\t                (days < thresholds.d && ['dd', days]);\n\n\t\t        if (thresholds.w != null) {\n\t\t            a =\n\t\t                a ||\n\t\t                (weeks <= 1 && ['w']) ||\n\t\t                (weeks < thresholds.w && ['ww', weeks]);\n\t\t        }\n\t\t        a = a ||\n\t\t            (months <= 1 && ['M']) ||\n\t\t            (months < thresholds.M && ['MM', months]) ||\n\t\t            (years <= 1 && ['y']) || ['yy', years];\n\n\t\t        a[2] = withoutSuffix;\n\t\t        a[3] = +posNegDuration > 0;\n\t\t        a[4] = locale;\n\t\t        return substituteTimeAgo.apply(null, a);\n\t\t    }\n\n\t\t    // This function allows you to set the rounding function for relative time strings\n\t\t    function getSetRelativeTimeRounding(roundingFunction) {\n\t\t        if (roundingFunction === undefined) {\n\t\t            return round;\n\t\t        }\n\t\t        if (typeof roundingFunction === 'function') {\n\t\t            round = roundingFunction;\n\t\t            return true;\n\t\t        }\n\t\t        return false;\n\t\t    }\n\n\t\t    // This function allows you to set a threshold for relative time strings\n\t\t    function getSetRelativeTimeThreshold(threshold, limit) {\n\t\t        if (thresholds[threshold] === undefined) {\n\t\t            return false;\n\t\t        }\n\t\t        if (limit === undefined) {\n\t\t            return thresholds[threshold];\n\t\t        }\n\t\t        thresholds[threshold] = limit;\n\t\t        if (threshold === 's') {\n\t\t            thresholds.ss = limit - 1;\n\t\t        }\n\t\t        return true;\n\t\t    }\n\n\t\t    function humanize(argWithSuffix, argThresholds) {\n\t\t        if (!this.isValid()) {\n\t\t            return this.localeData().invalidDate();\n\t\t        }\n\n\t\t        var withSuffix = false,\n\t\t            th = thresholds,\n\t\t            locale,\n\t\t            output;\n\n\t\t        if (typeof argWithSuffix === 'object') {\n\t\t            argThresholds = argWithSuffix;\n\t\t            argWithSuffix = false;\n\t\t        }\n\t\t        if (typeof argWithSuffix === 'boolean') {\n\t\t            withSuffix = argWithSuffix;\n\t\t        }\n\t\t        if (typeof argThresholds === 'object') {\n\t\t            th = Object.assign({}, thresholds, argThresholds);\n\t\t            if (argThresholds.s != null && argThresholds.ss == null) {\n\t\t                th.ss = argThresholds.s - 1;\n\t\t            }\n\t\t        }\n\n\t\t        locale = this.localeData();\n\t\t        output = relativeTime$1(this, !withSuffix, th, locale);\n\n\t\t        if (withSuffix) {\n\t\t            output = locale.pastFuture(+this, output);\n\t\t        }\n\n\t\t        return locale.postformat(output);\n\t\t    }\n\n\t\t    var abs$1 = Math.abs;\n\n\t\t    function sign(x) {\n\t\t        return (x > 0) - (x < 0) || +x;\n\t\t    }\n\n\t\t    function toISOString$1() {\n\t\t        // for ISO strings we do not use the normal bubbling rules:\n\t\t        //  * milliseconds bubble up until they become hours\n\t\t        //  * days do not bubble at all\n\t\t        //  * months bubble up until they become years\n\t\t        // This is because there is no context-free conversion between hours and days\n\t\t        // (think of clock changes)\n\t\t        // and also not between days and months (28-31 days per month)\n\t\t        if (!this.isValid()) {\n\t\t            return this.localeData().invalidDate();\n\t\t        }\n\n\t\t        var seconds = abs$1(this._milliseconds) / 1000,\n\t\t            days = abs$1(this._days),\n\t\t            months = abs$1(this._months),\n\t\t            minutes,\n\t\t            hours,\n\t\t            years,\n\t\t            s,\n\t\t            total = this.asSeconds(),\n\t\t            totalSign,\n\t\t            ymSign,\n\t\t            daysSign,\n\t\t            hmsSign;\n\n\t\t        if (!total) {\n\t\t            // this is the same as C#'s (Noda) and python (isodate)...\n\t\t            // but not other JS (goog.date)\n\t\t            return 'P0D';\n\t\t        }\n\n\t\t        // 3600 seconds -> 60 minutes -> 1 hour\n\t\t        minutes = absFloor(seconds / 60);\n\t\t        hours = absFloor(minutes / 60);\n\t\t        seconds %= 60;\n\t\t        minutes %= 60;\n\n\t\t        // 12 months -> 1 year\n\t\t        years = absFloor(months / 12);\n\t\t        months %= 12;\n\n\t\t        // inspired by https://github.com/dordille/moment-isoduration/blob/master/moment.isoduration.js\n\t\t        s = seconds ? seconds.toFixed(3).replace(/\\.?0+$/, '') : '';\n\n\t\t        totalSign = total < 0 ? '-' : '';\n\t\t        ymSign = sign(this._months) !== sign(total) ? '-' : '';\n\t\t        daysSign = sign(this._days) !== sign(total) ? '-' : '';\n\t\t        hmsSign = sign(this._milliseconds) !== sign(total) ? '-' : '';\n\n\t\t        return (\n\t\t            totalSign +\n\t\t            'P' +\n\t\t            (years ? ymSign + years + 'Y' : '') +\n\t\t            (months ? ymSign + months + 'M' : '') +\n\t\t            (days ? daysSign + days + 'D' : '') +\n\t\t            (hours || minutes || seconds ? 'T' : '') +\n\t\t            (hours ? hmsSign + hours + 'H' : '') +\n\t\t            (minutes ? hmsSign + minutes + 'M' : '') +\n\t\t            (seconds ? hmsSign + s + 'S' : '')\n\t\t        );\n\t\t    }\n\n\t\t    var proto$2 = Duration.prototype;\n\n\t\t    proto$2.isValid = isValid$1;\n\t\t    proto$2.abs = abs;\n\t\t    proto$2.add = add$1;\n\t\t    proto$2.subtract = subtract$1;\n\t\t    proto$2.as = as;\n\t\t    proto$2.asMilliseconds = asMilliseconds;\n\t\t    proto$2.asSeconds = asSeconds;\n\t\t    proto$2.asMinutes = asMinutes;\n\t\t    proto$2.asHours = asHours;\n\t\t    proto$2.asDays = asDays;\n\t\t    proto$2.asWeeks = asWeeks;\n\t\t    proto$2.asMonths = asMonths;\n\t\t    proto$2.asQuarters = asQuarters;\n\t\t    proto$2.asYears = asYears;\n\t\t    proto$2.valueOf = valueOf$1;\n\t\t    proto$2._bubble = bubble;\n\t\t    proto$2.clone = clone$1;\n\t\t    proto$2.get = get$2;\n\t\t    proto$2.milliseconds = milliseconds;\n\t\t    proto$2.seconds = seconds;\n\t\t    proto$2.minutes = minutes;\n\t\t    proto$2.hours = hours;\n\t\t    proto$2.days = days;\n\t\t    proto$2.weeks = weeks;\n\t\t    proto$2.months = months;\n\t\t    proto$2.years = years;\n\t\t    proto$2.humanize = humanize;\n\t\t    proto$2.toISOString = toISOString$1;\n\t\t    proto$2.toString = toISOString$1;\n\t\t    proto$2.toJSON = toISOString$1;\n\t\t    proto$2.locale = locale;\n\t\t    proto$2.localeData = localeData;\n\n\t\t    proto$2.toIsoString = deprecate(\n\t\t        'toIsoString() is deprecated. Please use toISOString() instead (notice the capitals)',\n\t\t        toISOString$1\n\t\t    );\n\t\t    proto$2.lang = lang;\n\n\t\t    // FORMATTING\n\n\t\t    addFormatToken('X', 0, 0, 'unix');\n\t\t    addFormatToken('x', 0, 0, 'valueOf');\n\n\t\t    // PARSING\n\n\t\t    addRegexToken('x', matchSigned);\n\t\t    addRegexToken('X', matchTimestamp);\n\t\t    addParseToken('X', function (input, array, config) {\n\t\t        config._d = new Date(parseFloat(input) * 1000);\n\t\t    });\n\t\t    addParseToken('x', function (input, array, config) {\n\t\t        config._d = new Date(toInt(input));\n\t\t    });\n\n\t\t    //! moment.js\n\n\t\t    hooks.version = '2.29.4';\n\n\t\t    setHookCallback(createLocal);\n\n\t\t    hooks.fn = proto;\n\t\t    hooks.min = min;\n\t\t    hooks.max = max;\n\t\t    hooks.now = now;\n\t\t    hooks.utc = createUTC;\n\t\t    hooks.unix = createUnix;\n\t\t    hooks.months = listMonths;\n\t\t    hooks.isDate = isDate;\n\t\t    hooks.locale = getSetGlobalLocale;\n\t\t    hooks.invalid = createInvalid;\n\t\t    hooks.duration = createDuration;\n\t\t    hooks.isMoment = isMoment;\n\t\t    hooks.weekdays = listWeekdays;\n\t\t    hooks.parseZone = createInZone;\n\t\t    hooks.localeData = getLocale;\n\t\t    hooks.isDuration = isDuration;\n\t\t    hooks.monthsShort = listMonthsShort;\n\t\t    hooks.weekdaysMin = listWeekdaysMin;\n\t\t    hooks.defineLocale = defineLocale;\n\t\t    hooks.updateLocale = updateLocale;\n\t\t    hooks.locales = listLocales;\n\t\t    hooks.weekdaysShort = listWeekdaysShort;\n\t\t    hooks.normalizeUnits = normalizeUnits;\n\t\t    hooks.relativeTimeRounding = getSetRelativeTimeRounding;\n\t\t    hooks.relativeTimeThreshold = getSetRelativeTimeThreshold;\n\t\t    hooks.calendarFormat = getCalendarFormat;\n\t\t    hooks.prototype = proto;\n\n\t\t    // currently HTML5 input type only supports 24-hour formats\n\t\t    hooks.HTML5_FMT = {\n\t\t        DATETIME_LOCAL: 'YYYY-MM-DDTHH:mm', // <input type=\"datetime-local\" />\n\t\t        DATETIME_LOCAL_SECONDS: 'YYYY-MM-DDTHH:mm:ss', // <input type=\"datetime-local\" step=\"1\" />\n\t\t        DATETIME_LOCAL_MS: 'YYYY-MM-DDTHH:mm:ss.SSS', // <input type=\"datetime-local\" step=\"0.001\" />\n\t\t        DATE: 'YYYY-MM-DD', // <input type=\"date\" />\n\t\t        TIME: 'HH:mm', // <input type=\"time\" />\n\t\t        TIME_SECONDS: 'HH:mm:ss', // <input type=\"time\" step=\"1\" />\n\t\t        TIME_MS: 'HH:mm:ss.SSS', // <input type=\"time\" step=\"0.001\" />\n\t\t        WEEK: 'GGGG-[W]WW', // <input type=\"week\" />\n\t\t        MONTH: 'YYYY-MM', // <input type=\"month\" />\n\t\t    };\n\n\t\t    return hooks;\n\n\t\t}))); \n\t} (moment$5));\n\treturn moment$5.exports;\n}\n\n(function (module, exports) {\n(function (global, factory) {\n\t   typeof commonjsRequire === 'function' ? factory(requireMoment()) :\n\t   factory(global.moment);\n\t}(commonjsGlobal, (function (moment) {\n\t    //! moment.js locale configuration\n\n\t    function processRelativeTime(number, withoutSuffix, key, isFuture) {\n\t        var format = {\n\t            m: ['eine Minute', 'einer Minute'],\n\t            h: ['eine Stunde', 'einer Stunde'],\n\t            d: ['ein Tag', 'einem Tag'],\n\t            dd: [number + ' Tage', number + ' Tagen'],\n\t            w: ['eine Woche', 'einer Woche'],\n\t            M: ['ein Monat', 'einem Monat'],\n\t            MM: [number + ' Monate', number + ' Monaten'],\n\t            y: ['ein Jahr', 'einem Jahr'],\n\t            yy: [number + ' Jahre', number + ' Jahren'],\n\t        };\n\t        return withoutSuffix ? format[key][0] : format[key][1];\n\t    }\n\n\t    var de = moment.defineLocale('de', {\n\t        months: 'Januar_Februar_März_April_Mai_Juni_Juli_August_September_Oktober_November_Dezember'.split(\n\t            '_'\n\t        ),\n\t        monthsShort:\n\t            'Jan._Feb._März_Apr._Mai_Juni_Juli_Aug._Sep._Okt._Nov._Dez.'.split('_'),\n\t        monthsParseExact: true,\n\t        weekdays:\n\t            'Sonntag_Montag_Dienstag_Mittwoch_Donnerstag_Freitag_Samstag'.split(\n\t                '_'\n\t            ),\n\t        weekdaysShort: 'So._Mo._Di._Mi._Do._Fr._Sa.'.split('_'),\n\t        weekdaysMin: 'So_Mo_Di_Mi_Do_Fr_Sa'.split('_'),\n\t        weekdaysParseExact: true,\n\t        longDateFormat: {\n\t            LT: 'HH:mm',\n\t            LTS: 'HH:mm:ss',\n\t            L: 'DD.MM.YYYY',\n\t            LL: 'D. MMMM YYYY',\n\t            LLL: 'D. MMMM YYYY HH:mm',\n\t            LLLL: 'dddd, D. MMMM YYYY HH:mm',\n\t        },\n\t        calendar: {\n\t            sameDay: '[heute um] LT [Uhr]',\n\t            sameElse: 'L',\n\t            nextDay: '[morgen um] LT [Uhr]',\n\t            nextWeek: 'dddd [um] LT [Uhr]',\n\t            lastDay: '[gestern um] LT [Uhr]',\n\t            lastWeek: '[letzten] dddd [um] LT [Uhr]',\n\t        },\n\t        relativeTime: {\n\t            future: 'in %s',\n\t            past: 'vor %s',\n\t            s: 'ein paar Sekunden',\n\t            ss: '%d Sekunden',\n\t            m: processRelativeTime,\n\t            mm: '%d Minuten',\n\t            h: processRelativeTime,\n\t            hh: '%d Stunden',\n\t            d: processRelativeTime,\n\t            dd: processRelativeTime,\n\t            w: processRelativeTime,\n\t            ww: '%d Wochen',\n\t            M: processRelativeTime,\n\t            MM: processRelativeTime,\n\t            y: processRelativeTime,\n\t            yy: processRelativeTime,\n\t        },\n\t        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n\t        ordinal: '%d.',\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 4, // The week that contains Jan 4th is the first week of the year.\n\t        },\n\t    });\n\n\t    return de;\n\n\t}))); \n} ());\n\n(function (module, exports) {\n(function (global, factory) {\n\t   typeof commonjsRequire === 'function' ? factory(requireMoment()) :\n\t   factory(global.moment);\n\t}(commonjsGlobal, (function (moment) {\n\t    //! moment.js locale configuration\n\n\t    var monthsShortDot =\n\t            'ene._feb._mar._abr._may._jun._jul._ago._sep._oct._nov._dic.'.split(\n\t                '_'\n\t            ),\n\t        monthsShort = 'ene_feb_mar_abr_may_jun_jul_ago_sep_oct_nov_dic'.split('_'),\n\t        monthsParse = [\n\t            /^ene/i,\n\t            /^feb/i,\n\t            /^mar/i,\n\t            /^abr/i,\n\t            /^may/i,\n\t            /^jun/i,\n\t            /^jul/i,\n\t            /^ago/i,\n\t            /^sep/i,\n\t            /^oct/i,\n\t            /^nov/i,\n\t            /^dic/i,\n\t        ],\n\t        monthsRegex =\n\t            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre|ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i;\n\n\t    var es = moment.defineLocale('es', {\n\t        months: 'enero_febrero_marzo_abril_mayo_junio_julio_agosto_septiembre_octubre_noviembre_diciembre'.split(\n\t            '_'\n\t        ),\n\t        monthsShort: function (m, format) {\n\t            if (!m) {\n\t                return monthsShortDot;\n\t            } else if (/-MMM-/.test(format)) {\n\t                return monthsShort[m.month()];\n\t            } else {\n\t                return monthsShortDot[m.month()];\n\t            }\n\t        },\n\t        monthsRegex: monthsRegex,\n\t        monthsShortRegex: monthsRegex,\n\t        monthsStrictRegex:\n\t            /^(enero|febrero|marzo|abril|mayo|junio|julio|agosto|septiembre|octubre|noviembre|diciembre)/i,\n\t        monthsShortStrictRegex:\n\t            /^(ene\\.?|feb\\.?|mar\\.?|abr\\.?|may\\.?|jun\\.?|jul\\.?|ago\\.?|sep\\.?|oct\\.?|nov\\.?|dic\\.?)/i,\n\t        monthsParse: monthsParse,\n\t        longMonthsParse: monthsParse,\n\t        shortMonthsParse: monthsParse,\n\t        weekdays: 'domingo_lunes_martes_miércoles_jueves_viernes_sábado'.split('_'),\n\t        weekdaysShort: 'dom._lun._mar._mié._jue._vie._sáb.'.split('_'),\n\t        weekdaysMin: 'do_lu_ma_mi_ju_vi_sá'.split('_'),\n\t        weekdaysParseExact: true,\n\t        longDateFormat: {\n\t            LT: 'H:mm',\n\t            LTS: 'H:mm:ss',\n\t            L: 'DD/MM/YYYY',\n\t            LL: 'D [de] MMMM [de] YYYY',\n\t            LLL: 'D [de] MMMM [de] YYYY H:mm',\n\t            LLLL: 'dddd, D [de] MMMM [de] YYYY H:mm',\n\t        },\n\t        calendar: {\n\t            sameDay: function () {\n\t                return '[hoy a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n\t            },\n\t            nextDay: function () {\n\t                return '[mañana a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n\t            },\n\t            nextWeek: function () {\n\t                return 'dddd [a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n\t            },\n\t            lastDay: function () {\n\t                return '[ayer a la' + (this.hours() !== 1 ? 's' : '') + '] LT';\n\t            },\n\t            lastWeek: function () {\n\t                return (\n\t                    '[el] dddd [pasado a la' +\n\t                    (this.hours() !== 1 ? 's' : '') +\n\t                    '] LT'\n\t                );\n\t            },\n\t            sameElse: 'L',\n\t        },\n\t        relativeTime: {\n\t            future: 'en %s',\n\t            past: 'hace %s',\n\t            s: 'unos segundos',\n\t            ss: '%d segundos',\n\t            m: 'un minuto',\n\t            mm: '%d minutos',\n\t            h: 'una hora',\n\t            hh: '%d horas',\n\t            d: 'un día',\n\t            dd: '%d días',\n\t            w: 'una semana',\n\t            ww: '%d semanas',\n\t            M: 'un mes',\n\t            MM: '%d meses',\n\t            y: 'un año',\n\t            yy: '%d años',\n\t        },\n\t        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n\t        ordinal: '%dº',\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 4, // The week that contains Jan 4th is the first week of the year.\n\t        },\n\t        invalidDate: 'Fecha inválida',\n\t    });\n\n\t    return es;\n\n\t}))); \n} ());\n\n(function (module, exports) {\n(function (global, factory) {\n\t   typeof commonjsRequire === 'function' ? factory(requireMoment()) :\n\t   factory(global.moment);\n\t}(commonjsGlobal, (function (moment) {\n\t    //! moment.js locale configuration\n\n\t    var monthsStrictRegex =\n\t            /^(janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n\t        monthsShortStrictRegex =\n\t            /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?)/i,\n\t        monthsRegex =\n\t            /(janv\\.?|févr\\.?|mars|avr\\.?|mai|juin|juil\\.?|août|sept\\.?|oct\\.?|nov\\.?|déc\\.?|janvier|février|mars|avril|mai|juin|juillet|août|septembre|octobre|novembre|décembre)/i,\n\t        monthsParse = [\n\t            /^janv/i,\n\t            /^févr/i,\n\t            /^mars/i,\n\t            /^avr/i,\n\t            /^mai/i,\n\t            /^juin/i,\n\t            /^juil/i,\n\t            /^août/i,\n\t            /^sept/i,\n\t            /^oct/i,\n\t            /^nov/i,\n\t            /^déc/i,\n\t        ];\n\n\t    var fr = moment.defineLocale('fr', {\n\t        months: 'janvier_février_mars_avril_mai_juin_juillet_août_septembre_octobre_novembre_décembre'.split(\n\t            '_'\n\t        ),\n\t        monthsShort:\n\t            'janv._févr._mars_avr._mai_juin_juil._août_sept._oct._nov._déc.'.split(\n\t                '_'\n\t            ),\n\t        monthsRegex: monthsRegex,\n\t        monthsShortRegex: monthsRegex,\n\t        monthsStrictRegex: monthsStrictRegex,\n\t        monthsShortStrictRegex: monthsShortStrictRegex,\n\t        monthsParse: monthsParse,\n\t        longMonthsParse: monthsParse,\n\t        shortMonthsParse: monthsParse,\n\t        weekdays: 'dimanche_lundi_mardi_mercredi_jeudi_vendredi_samedi'.split('_'),\n\t        weekdaysShort: 'dim._lun._mar._mer._jeu._ven._sam.'.split('_'),\n\t        weekdaysMin: 'di_lu_ma_me_je_ve_sa'.split('_'),\n\t        weekdaysParseExact: true,\n\t        longDateFormat: {\n\t            LT: 'HH:mm',\n\t            LTS: 'HH:mm:ss',\n\t            L: 'DD/MM/YYYY',\n\t            LL: 'D MMMM YYYY',\n\t            LLL: 'D MMMM YYYY HH:mm',\n\t            LLLL: 'dddd D MMMM YYYY HH:mm',\n\t        },\n\t        calendar: {\n\t            sameDay: '[Aujourd’hui à] LT',\n\t            nextDay: '[Demain à] LT',\n\t            nextWeek: 'dddd [à] LT',\n\t            lastDay: '[Hier à] LT',\n\t            lastWeek: 'dddd [dernier à] LT',\n\t            sameElse: 'L',\n\t        },\n\t        relativeTime: {\n\t            future: 'dans %s',\n\t            past: 'il y a %s',\n\t            s: 'quelques secondes',\n\t            ss: '%d secondes',\n\t            m: 'une minute',\n\t            mm: '%d minutes',\n\t            h: 'une heure',\n\t            hh: '%d heures',\n\t            d: 'un jour',\n\t            dd: '%d jours',\n\t            w: 'une semaine',\n\t            ww: '%d semaines',\n\t            M: 'un mois',\n\t            MM: '%d mois',\n\t            y: 'un an',\n\t            yy: '%d ans',\n\t        },\n\t        dayOfMonthOrdinalParse: /\\d{1,2}(er|)/,\n\t        ordinal: function (number, period) {\n\t            switch (period) {\n\t                // TODO: Return 'e' when day of month > 1. Move this case inside\n\t                // block for masculine words below.\n\t                // See https://github.com/moment/moment/issues/3375\n\t                case 'D':\n\t                    return number + (number === 1 ? 'er' : '');\n\n\t                // Words with masculine grammatical gender: mois, trimestre, jour\n\t                default:\n\t                case 'M':\n\t                case 'Q':\n\t                case 'DDD':\n\t                case 'd':\n\t                    return number + (number === 1 ? 'er' : 'e');\n\n\t                // Words with feminine grammatical gender: semaine\n\t                case 'w':\n\t                case 'W':\n\t                    return number + (number === 1 ? 're' : 'e');\n\t            }\n\t        },\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 4, // The week that contains Jan 4th is the first week of the year.\n\t        },\n\t    });\n\n\t    return fr;\n\n\t}))); \n} ());\n\n(function (module, exports) {\n(function (global, factory) {\n\t   typeof commonjsRequire === 'function' ? factory(requireMoment()) :\n\t   factory(global.moment);\n\t}(commonjsGlobal, (function (moment) {\n\t    //! moment.js locale configuration\n\n\t    var it = moment.defineLocale('it', {\n\t        months: 'gennaio_febbraio_marzo_aprile_maggio_giugno_luglio_agosto_settembre_ottobre_novembre_dicembre'.split(\n\t            '_'\n\t        ),\n\t        monthsShort: 'gen_feb_mar_apr_mag_giu_lug_ago_set_ott_nov_dic'.split('_'),\n\t        weekdays: 'domenica_lunedì_martedì_mercoledì_giovedì_venerdì_sabato'.split(\n\t            '_'\n\t        ),\n\t        weekdaysShort: 'dom_lun_mar_mer_gio_ven_sab'.split('_'),\n\t        weekdaysMin: 'do_lu_ma_me_gi_ve_sa'.split('_'),\n\t        longDateFormat: {\n\t            LT: 'HH:mm',\n\t            LTS: 'HH:mm:ss',\n\t            L: 'DD/MM/YYYY',\n\t            LL: 'D MMMM YYYY',\n\t            LLL: 'D MMMM YYYY HH:mm',\n\t            LLLL: 'dddd D MMMM YYYY HH:mm',\n\t        },\n\t        calendar: {\n\t            sameDay: function () {\n\t                return (\n\t                    '[Oggi a' +\n\t                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n\t                    ']LT'\n\t                );\n\t            },\n\t            nextDay: function () {\n\t                return (\n\t                    '[Domani a' +\n\t                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n\t                    ']LT'\n\t                );\n\t            },\n\t            nextWeek: function () {\n\t                return (\n\t                    'dddd [a' +\n\t                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n\t                    ']LT'\n\t                );\n\t            },\n\t            lastDay: function () {\n\t                return (\n\t                    '[Ieri a' +\n\t                    (this.hours() > 1 ? 'lle ' : this.hours() === 0 ? ' ' : \"ll'\") +\n\t                    ']LT'\n\t                );\n\t            },\n\t            lastWeek: function () {\n\t                switch (this.day()) {\n\t                    case 0:\n\t                        return (\n\t                            '[La scorsa] dddd [a' +\n\t                            (this.hours() > 1\n\t                                ? 'lle '\n\t                                : this.hours() === 0\n\t                                ? ' '\n\t                                : \"ll'\") +\n\t                            ']LT'\n\t                        );\n\t                    default:\n\t                        return (\n\t                            '[Lo scorso] dddd [a' +\n\t                            (this.hours() > 1\n\t                                ? 'lle '\n\t                                : this.hours() === 0\n\t                                ? ' '\n\t                                : \"ll'\") +\n\t                            ']LT'\n\t                        );\n\t                }\n\t            },\n\t            sameElse: 'L',\n\t        },\n\t        relativeTime: {\n\t            future: 'tra %s',\n\t            past: '%s fa',\n\t            s: 'alcuni secondi',\n\t            ss: '%d secondi',\n\t            m: 'un minuto',\n\t            mm: '%d minuti',\n\t            h: \"un'ora\",\n\t            hh: '%d ore',\n\t            d: 'un giorno',\n\t            dd: '%d giorni',\n\t            w: 'una settimana',\n\t            ww: '%d settimane',\n\t            M: 'un mese',\n\t            MM: '%d mesi',\n\t            y: 'un anno',\n\t            yy: '%d anni',\n\t        },\n\t        dayOfMonthOrdinalParse: /\\d{1,2}º/,\n\t        ordinal: '%dº',\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 4, // The week that contains Jan 4th is the first week of the year.\n\t        },\n\t    });\n\n\t    return it;\n\n\t}))); \n} ());\n\n(function (module, exports) {\n(function (global, factory) {\n\t   typeof commonjsRequire === 'function' ? factory(requireMoment()) :\n\t   factory(global.moment);\n\t}(commonjsGlobal, (function (moment) {\n\t    //! moment.js locale configuration\n\n\t    var ja = moment.defineLocale('ja', {\n\t        eras: [\n\t            {\n\t                since: '2019-05-01',\n\t                offset: 1,\n\t                name: '令和',\n\t                narrow: '㋿',\n\t                abbr: 'R',\n\t            },\n\t            {\n\t                since: '1989-01-08',\n\t                until: '2019-04-30',\n\t                offset: 1,\n\t                name: '平成',\n\t                narrow: '㍻',\n\t                abbr: 'H',\n\t            },\n\t            {\n\t                since: '1926-12-25',\n\t                until: '1989-01-07',\n\t                offset: 1,\n\t                name: '昭和',\n\t                narrow: '㍼',\n\t                abbr: 'S',\n\t            },\n\t            {\n\t                since: '1912-07-30',\n\t                until: '1926-12-24',\n\t                offset: 1,\n\t                name: '大正',\n\t                narrow: '㍽',\n\t                abbr: 'T',\n\t            },\n\t            {\n\t                since: '1873-01-01',\n\t                until: '1912-07-29',\n\t                offset: 6,\n\t                name: '明治',\n\t                narrow: '㍾',\n\t                abbr: 'M',\n\t            },\n\t            {\n\t                since: '0001-01-01',\n\t                until: '1873-12-31',\n\t                offset: 1,\n\t                name: '西暦',\n\t                narrow: 'AD',\n\t                abbr: 'AD',\n\t            },\n\t            {\n\t                since: '0000-12-31',\n\t                until: -Infinity,\n\t                offset: 1,\n\t                name: '紀元前',\n\t                narrow: 'BC',\n\t                abbr: 'BC',\n\t            },\n\t        ],\n\t        eraYearOrdinalRegex: /(元|\\d+)年/,\n\t        eraYearOrdinalParse: function (input, match) {\n\t            return match[1] === '元' ? 1 : parseInt(match[1] || input, 10);\n\t        },\n\t        months: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split('_'),\n\t        monthsShort: '1月_2月_3月_4月_5月_6月_7月_8月_9月_10月_11月_12月'.split(\n\t            '_'\n\t        ),\n\t        weekdays: '日曜日_月曜日_火曜日_水曜日_木曜日_金曜日_土曜日'.split('_'),\n\t        weekdaysShort: '日_月_火_水_木_金_土'.split('_'),\n\t        weekdaysMin: '日_月_火_水_木_金_土'.split('_'),\n\t        longDateFormat: {\n\t            LT: 'HH:mm',\n\t            LTS: 'HH:mm:ss',\n\t            L: 'YYYY/MM/DD',\n\t            LL: 'YYYY年M月D日',\n\t            LLL: 'YYYY年M月D日 HH:mm',\n\t            LLLL: 'YYYY年M月D日 dddd HH:mm',\n\t            l: 'YYYY/MM/DD',\n\t            ll: 'YYYY年M月D日',\n\t            lll: 'YYYY年M月D日 HH:mm',\n\t            llll: 'YYYY年M月D日(ddd) HH:mm',\n\t        },\n\t        meridiemParse: /午前|午後/i,\n\t        isPM: function (input) {\n\t            return input === '午後';\n\t        },\n\t        meridiem: function (hour, minute, isLower) {\n\t            if (hour < 12) {\n\t                return '午前';\n\t            } else {\n\t                return '午後';\n\t            }\n\t        },\n\t        calendar: {\n\t            sameDay: '[今日] LT',\n\t            nextDay: '[明日] LT',\n\t            nextWeek: function (now) {\n\t                if (now.week() !== this.week()) {\n\t                    return '[来週]dddd LT';\n\t                } else {\n\t                    return 'dddd LT';\n\t                }\n\t            },\n\t            lastDay: '[昨日] LT',\n\t            lastWeek: function (now) {\n\t                if (this.week() !== now.week()) {\n\t                    return '[先週]dddd LT';\n\t                } else {\n\t                    return 'dddd LT';\n\t                }\n\t            },\n\t            sameElse: 'L',\n\t        },\n\t        dayOfMonthOrdinalParse: /\\d{1,2}日/,\n\t        ordinal: function (number, period) {\n\t            switch (period) {\n\t                case 'y':\n\t                    return number === 1 ? '元年' : number + '年';\n\t                case 'd':\n\t                case 'D':\n\t                case 'DDD':\n\t                    return number + '日';\n\t                default:\n\t                    return number;\n\t            }\n\t        },\n\t        relativeTime: {\n\t            future: '%s後',\n\t            past: '%s前',\n\t            s: '数秒',\n\t            ss: '%d秒',\n\t            m: '1分',\n\t            mm: '%d分',\n\t            h: '1時間',\n\t            hh: '%d時間',\n\t            d: '1日',\n\t            dd: '%d日',\n\t            M: '1ヶ月',\n\t            MM: '%dヶ月',\n\t            y: '1年',\n\t            yy: '%d年',\n\t        },\n\t    });\n\n\t    return ja;\n\n\t}))); \n} ());\n\n(function (module, exports) {\n(function (global, factory) {\n\t   typeof commonjsRequire === 'function' ? factory(requireMoment()) :\n\t   factory(global.moment);\n\t}(commonjsGlobal, (function (moment) {\n\t    //! moment.js locale configuration\n\n\t    var monthsShortWithDots =\n\t            'jan._feb._mrt._apr._mei_jun._jul._aug._sep._okt._nov._dec.'.split('_'),\n\t        monthsShortWithoutDots =\n\t            'jan_feb_mrt_apr_mei_jun_jul_aug_sep_okt_nov_dec'.split('_'),\n\t        monthsParse = [\n\t            /^jan/i,\n\t            /^feb/i,\n\t            /^maart|mrt.?$/i,\n\t            /^apr/i,\n\t            /^mei$/i,\n\t            /^jun[i.]?$/i,\n\t            /^jul[i.]?$/i,\n\t            /^aug/i,\n\t            /^sep/i,\n\t            /^okt/i,\n\t            /^nov/i,\n\t            /^dec/i,\n\t        ],\n\t        monthsRegex =\n\t            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december|jan\\.?|feb\\.?|mrt\\.?|apr\\.?|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i;\n\n\t    var nl = moment.defineLocale('nl', {\n\t        months: 'januari_februari_maart_april_mei_juni_juli_augustus_september_oktober_november_december'.split(\n\t            '_'\n\t        ),\n\t        monthsShort: function (m, format) {\n\t            if (!m) {\n\t                return monthsShortWithDots;\n\t            } else if (/-MMM-/.test(format)) {\n\t                return monthsShortWithoutDots[m.month()];\n\t            } else {\n\t                return monthsShortWithDots[m.month()];\n\t            }\n\t        },\n\n\t        monthsRegex: monthsRegex,\n\t        monthsShortRegex: monthsRegex,\n\t        monthsStrictRegex:\n\t            /^(januari|februari|maart|april|mei|ju[nl]i|augustus|september|oktober|november|december)/i,\n\t        monthsShortStrictRegex:\n\t            /^(jan\\.?|feb\\.?|mrt\\.?|apr\\.?|mei|ju[nl]\\.?|aug\\.?|sep\\.?|okt\\.?|nov\\.?|dec\\.?)/i,\n\n\t        monthsParse: monthsParse,\n\t        longMonthsParse: monthsParse,\n\t        shortMonthsParse: monthsParse,\n\n\t        weekdays:\n\t            'zondag_maandag_dinsdag_woensdag_donderdag_vrijdag_zaterdag'.split('_'),\n\t        weekdaysShort: 'zo._ma._di._wo._do._vr._za.'.split('_'),\n\t        weekdaysMin: 'zo_ma_di_wo_do_vr_za'.split('_'),\n\t        weekdaysParseExact: true,\n\t        longDateFormat: {\n\t            LT: 'HH:mm',\n\t            LTS: 'HH:mm:ss',\n\t            L: 'DD-MM-YYYY',\n\t            LL: 'D MMMM YYYY',\n\t            LLL: 'D MMMM YYYY HH:mm',\n\t            LLLL: 'dddd D MMMM YYYY HH:mm',\n\t        },\n\t        calendar: {\n\t            sameDay: '[vandaag om] LT',\n\t            nextDay: '[morgen om] LT',\n\t            nextWeek: 'dddd [om] LT',\n\t            lastDay: '[gisteren om] LT',\n\t            lastWeek: '[afgelopen] dddd [om] LT',\n\t            sameElse: 'L',\n\t        },\n\t        relativeTime: {\n\t            future: 'over %s',\n\t            past: '%s geleden',\n\t            s: 'een paar seconden',\n\t            ss: '%d seconden',\n\t            m: 'één minuut',\n\t            mm: '%d minuten',\n\t            h: 'één uur',\n\t            hh: '%d uur',\n\t            d: 'één dag',\n\t            dd: '%d dagen',\n\t            w: 'één week',\n\t            ww: '%d weken',\n\t            M: 'één maand',\n\t            MM: '%d maanden',\n\t            y: 'één jaar',\n\t            yy: '%d jaar',\n\t        },\n\t        dayOfMonthOrdinalParse: /\\d{1,2}(ste|de)/,\n\t        ordinal: function (number) {\n\t            return (\n\t                number +\n\t                (number === 1 || number === 8 || number >= 20 ? 'ste' : 'de')\n\t            );\n\t        },\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 4, // The week that contains Jan 4th is the first week of the year.\n\t        },\n\t    });\n\n\t    return nl;\n\n\t}))); \n} ());\n\n(function (module, exports) {\n(function (global, factory) {\n\t   typeof commonjsRequire === 'function' ? factory(requireMoment()) :\n\t   factory(global.moment);\n\t}(commonjsGlobal, (function (moment) {\n\t    //! moment.js locale configuration\n\n\t    var monthsNominative =\n\t            'styczeń_luty_marzec_kwiecień_maj_czerwiec_lipiec_sierpień_wrzesień_październik_listopad_grudzień'.split(\n\t                '_'\n\t            ),\n\t        monthsSubjective =\n\t            'stycznia_lutego_marca_kwietnia_maja_czerwca_lipca_sierpnia_września_października_listopada_grudnia'.split(\n\t                '_'\n\t            ),\n\t        monthsParse = [\n\t            /^sty/i,\n\t            /^lut/i,\n\t            /^mar/i,\n\t            /^kwi/i,\n\t            /^maj/i,\n\t            /^cze/i,\n\t            /^lip/i,\n\t            /^sie/i,\n\t            /^wrz/i,\n\t            /^paź/i,\n\t            /^lis/i,\n\t            /^gru/i,\n\t        ];\n\t    function plural(n) {\n\t        return n % 10 < 5 && n % 10 > 1 && ~~(n / 10) % 10 !== 1;\n\t    }\n\t    function translate(number, withoutSuffix, key) {\n\t        var result = number + ' ';\n\t        switch (key) {\n\t            case 'ss':\n\t                return result + (plural(number) ? 'sekundy' : 'sekund');\n\t            case 'm':\n\t                return withoutSuffix ? 'minuta' : 'minutę';\n\t            case 'mm':\n\t                return result + (plural(number) ? 'minuty' : 'minut');\n\t            case 'h':\n\t                return withoutSuffix ? 'godzina' : 'godzinę';\n\t            case 'hh':\n\t                return result + (plural(number) ? 'godziny' : 'godzin');\n\t            case 'ww':\n\t                return result + (plural(number) ? 'tygodnie' : 'tygodni');\n\t            case 'MM':\n\t                return result + (plural(number) ? 'miesiące' : 'miesięcy');\n\t            case 'yy':\n\t                return result + (plural(number) ? 'lata' : 'lat');\n\t        }\n\t    }\n\n\t    var pl = moment.defineLocale('pl', {\n\t        months: function (momentToFormat, format) {\n\t            if (!momentToFormat) {\n\t                return monthsNominative;\n\t            } else if (/D MMMM/.test(format)) {\n\t                return monthsSubjective[momentToFormat.month()];\n\t            } else {\n\t                return monthsNominative[momentToFormat.month()];\n\t            }\n\t        },\n\t        monthsShort: 'sty_lut_mar_kwi_maj_cze_lip_sie_wrz_paź_lis_gru'.split('_'),\n\t        monthsParse: monthsParse,\n\t        longMonthsParse: monthsParse,\n\t        shortMonthsParse: monthsParse,\n\t        weekdays:\n\t            'niedziela_poniedziałek_wtorek_środa_czwartek_piątek_sobota'.split('_'),\n\t        weekdaysShort: 'ndz_pon_wt_śr_czw_pt_sob'.split('_'),\n\t        weekdaysMin: 'Nd_Pn_Wt_Śr_Cz_Pt_So'.split('_'),\n\t        longDateFormat: {\n\t            LT: 'HH:mm',\n\t            LTS: 'HH:mm:ss',\n\t            L: 'DD.MM.YYYY',\n\t            LL: 'D MMMM YYYY',\n\t            LLL: 'D MMMM YYYY HH:mm',\n\t            LLLL: 'dddd, D MMMM YYYY HH:mm',\n\t        },\n\t        calendar: {\n\t            sameDay: '[Dziś o] LT',\n\t            nextDay: '[Jutro o] LT',\n\t            nextWeek: function () {\n\t                switch (this.day()) {\n\t                    case 0:\n\t                        return '[W niedzielę o] LT';\n\n\t                    case 2:\n\t                        return '[We wtorek o] LT';\n\n\t                    case 3:\n\t                        return '[W środę o] LT';\n\n\t                    case 6:\n\t                        return '[W sobotę o] LT';\n\n\t                    default:\n\t                        return '[W] dddd [o] LT';\n\t                }\n\t            },\n\t            lastDay: '[Wczoraj o] LT',\n\t            lastWeek: function () {\n\t                switch (this.day()) {\n\t                    case 0:\n\t                        return '[W zeszłą niedzielę o] LT';\n\t                    case 3:\n\t                        return '[W zeszłą środę o] LT';\n\t                    case 6:\n\t                        return '[W zeszłą sobotę o] LT';\n\t                    default:\n\t                        return '[W zeszły] dddd [o] LT';\n\t                }\n\t            },\n\t            sameElse: 'L',\n\t        },\n\t        relativeTime: {\n\t            future: 'za %s',\n\t            past: '%s temu',\n\t            s: 'kilka sekund',\n\t            ss: translate,\n\t            m: translate,\n\t            mm: translate,\n\t            h: translate,\n\t            hh: translate,\n\t            d: '1 dzień',\n\t            dd: '%d dni',\n\t            w: 'tydzień',\n\t            ww: translate,\n\t            M: 'miesiąc',\n\t            MM: translate,\n\t            y: 'rok',\n\t            yy: translate,\n\t        },\n\t        dayOfMonthOrdinalParse: /\\d{1,2}\\./,\n\t        ordinal: '%d.',\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 4, // The week that contains Jan 4th is the first week of the year.\n\t        },\n\t    });\n\n\t    return pl;\n\n\t}))); \n} ());\n\n(function (module, exports) {\n(function (global, factory) {\n\t   typeof commonjsRequire === 'function' ? factory(requireMoment()) :\n\t   factory(global.moment);\n\t}(commonjsGlobal, (function (moment) {\n\t    //! moment.js locale configuration\n\n\t    function plural(word, num) {\n\t        var forms = word.split('_');\n\t        return num % 10 === 1 && num % 100 !== 11\n\t            ? forms[0]\n\t            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n\t            ? forms[1]\n\t            : forms[2];\n\t    }\n\t    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\t        var format = {\n\t            ss: withoutSuffix ? 'секунда_секунды_секунд' : 'секунду_секунды_секунд',\n\t            mm: withoutSuffix ? 'минута_минуты_минут' : 'минуту_минуты_минут',\n\t            hh: 'час_часа_часов',\n\t            dd: 'день_дня_дней',\n\t            ww: 'неделя_недели_недель',\n\t            MM: 'месяц_месяца_месяцев',\n\t            yy: 'год_года_лет',\n\t        };\n\t        if (key === 'm') {\n\t            return withoutSuffix ? 'минута' : 'минуту';\n\t        } else {\n\t            return number + ' ' + plural(format[key], +number);\n\t        }\n\t    }\n\t    var monthsParse = [\n\t        /^янв/i,\n\t        /^фев/i,\n\t        /^мар/i,\n\t        /^апр/i,\n\t        /^ма[йя]/i,\n\t        /^июн/i,\n\t        /^июл/i,\n\t        /^авг/i,\n\t        /^сен/i,\n\t        /^окт/i,\n\t        /^ноя/i,\n\t        /^дек/i,\n\t    ];\n\n\t    // http://new.gramota.ru/spravka/rules/139-prop : § 103\n\t    // Сокращения месяцев: http://new.gramota.ru/spravka/buro/search-answer?s=242637\n\t    // CLDR data:          http://www.unicode.org/cldr/charts/28/summary/ru.html#1753\n\t    var ru = moment.defineLocale('ru', {\n\t        months: {\n\t            format: 'января_февраля_марта_апреля_мая_июня_июля_августа_сентября_октября_ноября_декабря'.split(\n\t                '_'\n\t            ),\n\t            standalone:\n\t                'январь_февраль_март_апрель_май_июнь_июль_август_сентябрь_октябрь_ноябрь_декабрь'.split(\n\t                    '_'\n\t                ),\n\t        },\n\t        monthsShort: {\n\t            // по CLDR именно \"июл.\" и \"июн.\", но какой смысл менять букву на точку?\n\t            format: 'янв._февр._мар._апр._мая_июня_июля_авг._сент._окт._нояб._дек.'.split(\n\t                '_'\n\t            ),\n\t            standalone:\n\t                'янв._февр._март_апр._май_июнь_июль_авг._сент._окт._нояб._дек.'.split(\n\t                    '_'\n\t                ),\n\t        },\n\t        weekdays: {\n\t            standalone:\n\t                'воскресенье_понедельник_вторник_среда_четверг_пятница_суббота'.split(\n\t                    '_'\n\t                ),\n\t            format: 'воскресенье_понедельник_вторник_среду_четверг_пятницу_субботу'.split(\n\t                '_'\n\t            ),\n\t            isFormat: /\\[ ?[Вв] ?(?:прошлую|следующую|эту)? ?] ?dddd/,\n\t        },\n\t        weekdaysShort: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n\t        weekdaysMin: 'вс_пн_вт_ср_чт_пт_сб'.split('_'),\n\t        monthsParse: monthsParse,\n\t        longMonthsParse: monthsParse,\n\t        shortMonthsParse: monthsParse,\n\n\t        // полные названия с падежами, по три буквы, для некоторых, по 4 буквы, сокращения с точкой и без точки\n\t        monthsRegex:\n\t            /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n\t        // копия предыдущего\n\t        monthsShortRegex:\n\t            /^(январ[ья]|янв\\.?|феврал[ья]|февр?\\.?|марта?|мар\\.?|апрел[ья]|апр\\.?|ма[йя]|июн[ья]|июн\\.?|июл[ья]|июл\\.?|августа?|авг\\.?|сентябр[ья]|сент?\\.?|октябр[ья]|окт\\.?|ноябр[ья]|нояб?\\.?|декабр[ья]|дек\\.?)/i,\n\n\t        // полные названия с падежами\n\t        monthsStrictRegex:\n\t            /^(январ[яь]|феврал[яь]|марта?|апрел[яь]|ма[яй]|июн[яь]|июл[яь]|августа?|сентябр[яь]|октябр[яь]|ноябр[яь]|декабр[яь])/i,\n\n\t        // Выражение, которое соответствует только сокращённым формам\n\t        monthsShortStrictRegex:\n\t            /^(янв\\.|февр?\\.|мар[т.]|апр\\.|ма[яй]|июн[ья.]|июл[ья.]|авг\\.|сент?\\.|окт\\.|нояб?\\.|дек\\.)/i,\n\t        longDateFormat: {\n\t            LT: 'H:mm',\n\t            LTS: 'H:mm:ss',\n\t            L: 'DD.MM.YYYY',\n\t            LL: 'D MMMM YYYY г.',\n\t            LLL: 'D MMMM YYYY г., H:mm',\n\t            LLLL: 'dddd, D MMMM YYYY г., H:mm',\n\t        },\n\t        calendar: {\n\t            sameDay: '[Сегодня, в] LT',\n\t            nextDay: '[Завтра, в] LT',\n\t            lastDay: '[Вчера, в] LT',\n\t            nextWeek: function (now) {\n\t                if (now.week() !== this.week()) {\n\t                    switch (this.day()) {\n\t                        case 0:\n\t                            return '[В следующее] dddd, [в] LT';\n\t                        case 1:\n\t                        case 2:\n\t                        case 4:\n\t                            return '[В следующий] dddd, [в] LT';\n\t                        case 3:\n\t                        case 5:\n\t                        case 6:\n\t                            return '[В следующую] dddd, [в] LT';\n\t                    }\n\t                } else {\n\t                    if (this.day() === 2) {\n\t                        return '[Во] dddd, [в] LT';\n\t                    } else {\n\t                        return '[В] dddd, [в] LT';\n\t                    }\n\t                }\n\t            },\n\t            lastWeek: function (now) {\n\t                if (now.week() !== this.week()) {\n\t                    switch (this.day()) {\n\t                        case 0:\n\t                            return '[В прошлое] dddd, [в] LT';\n\t                        case 1:\n\t                        case 2:\n\t                        case 4:\n\t                            return '[В прошлый] dddd, [в] LT';\n\t                        case 3:\n\t                        case 5:\n\t                        case 6:\n\t                            return '[В прошлую] dddd, [в] LT';\n\t                    }\n\t                } else {\n\t                    if (this.day() === 2) {\n\t                        return '[Во] dddd, [в] LT';\n\t                    } else {\n\t                        return '[В] dddd, [в] LT';\n\t                    }\n\t                }\n\t            },\n\t            sameElse: 'L',\n\t        },\n\t        relativeTime: {\n\t            future: 'через %s',\n\t            past: '%s назад',\n\t            s: 'несколько секунд',\n\t            ss: relativeTimeWithPlural,\n\t            m: relativeTimeWithPlural,\n\t            mm: relativeTimeWithPlural,\n\t            h: 'час',\n\t            hh: relativeTimeWithPlural,\n\t            d: 'день',\n\t            dd: relativeTimeWithPlural,\n\t            w: 'неделя',\n\t            ww: relativeTimeWithPlural,\n\t            M: 'месяц',\n\t            MM: relativeTimeWithPlural,\n\t            y: 'год',\n\t            yy: relativeTimeWithPlural,\n\t        },\n\t        meridiemParse: /ночи|утра|дня|вечера/i,\n\t        isPM: function (input) {\n\t            return /^(дня|вечера)$/.test(input);\n\t        },\n\t        meridiem: function (hour, minute, isLower) {\n\t            if (hour < 4) {\n\t                return 'ночи';\n\t            } else if (hour < 12) {\n\t                return 'утра';\n\t            } else if (hour < 17) {\n\t                return 'дня';\n\t            } else {\n\t                return 'вечера';\n\t            }\n\t        },\n\t        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го|я)/,\n\t        ordinal: function (number, period) {\n\t            switch (period) {\n\t                case 'M':\n\t                case 'd':\n\t                case 'DDD':\n\t                    return number + '-й';\n\t                case 'D':\n\t                    return number + '-го';\n\t                case 'w':\n\t                case 'W':\n\t                    return number + '-я';\n\t                default:\n\t                    return number;\n\t            }\n\t        },\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 4, // The week that contains Jan 4th is the first week of the year.\n\t        },\n\t    });\n\n\t    return ru;\n\n\t}))); \n} ());\n\n(function (module, exports) {\n(function (global, factory) {\n\t   typeof commonjsRequire === 'function' ? factory(requireMoment()) :\n\t   factory(global.moment);\n\t}(commonjsGlobal, (function (moment) {\n\t    //! moment.js locale configuration\n\n\t    function plural(word, num) {\n\t        var forms = word.split('_');\n\t        return num % 10 === 1 && num % 100 !== 11\n\t            ? forms[0]\n\t            : num % 10 >= 2 && num % 10 <= 4 && (num % 100 < 10 || num % 100 >= 20)\n\t            ? forms[1]\n\t            : forms[2];\n\t    }\n\t    function relativeTimeWithPlural(number, withoutSuffix, key) {\n\t        var format = {\n\t            ss: withoutSuffix ? 'секунда_секунди_секунд' : 'секунду_секунди_секунд',\n\t            mm: withoutSuffix ? 'хвилина_хвилини_хвилин' : 'хвилину_хвилини_хвилин',\n\t            hh: withoutSuffix ? 'година_години_годин' : 'годину_години_годин',\n\t            dd: 'день_дні_днів',\n\t            MM: 'місяць_місяці_місяців',\n\t            yy: 'рік_роки_років',\n\t        };\n\t        if (key === 'm') {\n\t            return withoutSuffix ? 'хвилина' : 'хвилину';\n\t        } else if (key === 'h') {\n\t            return withoutSuffix ? 'година' : 'годину';\n\t        } else {\n\t            return number + ' ' + plural(format[key], +number);\n\t        }\n\t    }\n\t    function weekdaysCaseReplace(m, format) {\n\t        var weekdays = {\n\t                nominative:\n\t                    'неділя_понеділок_вівторок_середа_четвер_п’ятниця_субота'.split(\n\t                        '_'\n\t                    ),\n\t                accusative:\n\t                    'неділю_понеділок_вівторок_середу_четвер_п’ятницю_суботу'.split(\n\t                        '_'\n\t                    ),\n\t                genitive:\n\t                    'неділі_понеділка_вівторка_середи_четверга_п’ятниці_суботи'.split(\n\t                        '_'\n\t                    ),\n\t            },\n\t            nounCase;\n\n\t        if (m === true) {\n\t            return weekdays['nominative']\n\t                .slice(1, 7)\n\t                .concat(weekdays['nominative'].slice(0, 1));\n\t        }\n\t        if (!m) {\n\t            return weekdays['nominative'];\n\t        }\n\n\t        nounCase = /(\\[[ВвУу]\\]) ?dddd/.test(format)\n\t            ? 'accusative'\n\t            : /\\[?(?:минулої|наступної)? ?\\] ?dddd/.test(format)\n\t            ? 'genitive'\n\t            : 'nominative';\n\t        return weekdays[nounCase][m.day()];\n\t    }\n\t    function processHoursFunction(str) {\n\t        return function () {\n\t            return str + 'о' + (this.hours() === 11 ? 'б' : '') + '] LT';\n\t        };\n\t    }\n\n\t    var uk = moment.defineLocale('uk', {\n\t        months: {\n\t            format: 'січня_лютого_березня_квітня_травня_червня_липня_серпня_вересня_жовтня_листопада_грудня'.split(\n\t                '_'\n\t            ),\n\t            standalone:\n\t                'січень_лютий_березень_квітень_травень_червень_липень_серпень_вересень_жовтень_листопад_грудень'.split(\n\t                    '_'\n\t                ),\n\t        },\n\t        monthsShort: 'січ_лют_бер_квіт_трав_черв_лип_серп_вер_жовт_лист_груд'.split(\n\t            '_'\n\t        ),\n\t        weekdays: weekdaysCaseReplace,\n\t        weekdaysShort: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n\t        weekdaysMin: 'нд_пн_вт_ср_чт_пт_сб'.split('_'),\n\t        longDateFormat: {\n\t            LT: 'HH:mm',\n\t            LTS: 'HH:mm:ss',\n\t            L: 'DD.MM.YYYY',\n\t            LL: 'D MMMM YYYY р.',\n\t            LLL: 'D MMMM YYYY р., HH:mm',\n\t            LLLL: 'dddd, D MMMM YYYY р., HH:mm',\n\t        },\n\t        calendar: {\n\t            sameDay: processHoursFunction('[Сьогодні '),\n\t            nextDay: processHoursFunction('[Завтра '),\n\t            lastDay: processHoursFunction('[Вчора '),\n\t            nextWeek: processHoursFunction('[У] dddd ['),\n\t            lastWeek: function () {\n\t                switch (this.day()) {\n\t                    case 0:\n\t                    case 3:\n\t                    case 5:\n\t                    case 6:\n\t                        return processHoursFunction('[Минулої] dddd [').call(this);\n\t                    case 1:\n\t                    case 2:\n\t                    case 4:\n\t                        return processHoursFunction('[Минулого] dddd [').call(this);\n\t                }\n\t            },\n\t            sameElse: 'L',\n\t        },\n\t        relativeTime: {\n\t            future: 'за %s',\n\t            past: '%s тому',\n\t            s: 'декілька секунд',\n\t            ss: relativeTimeWithPlural,\n\t            m: relativeTimeWithPlural,\n\t            mm: relativeTimeWithPlural,\n\t            h: 'годину',\n\t            hh: relativeTimeWithPlural,\n\t            d: 'день',\n\t            dd: relativeTimeWithPlural,\n\t            M: 'місяць',\n\t            MM: relativeTimeWithPlural,\n\t            y: 'рік',\n\t            yy: relativeTimeWithPlural,\n\t        },\n\t        // M. E.: those two are virtually unused but a user might want to implement them for his/her website for some reason\n\t        meridiemParse: /ночі|ранку|дня|вечора/,\n\t        isPM: function (input) {\n\t            return /^(дня|вечора)$/.test(input);\n\t        },\n\t        meridiem: function (hour, minute, isLower) {\n\t            if (hour < 4) {\n\t                return 'ночі';\n\t            } else if (hour < 12) {\n\t                return 'ранку';\n\t            } else if (hour < 17) {\n\t                return 'дня';\n\t            } else {\n\t                return 'вечора';\n\t            }\n\t        },\n\t        dayOfMonthOrdinalParse: /\\d{1,2}-(й|го)/,\n\t        ordinal: function (number, period) {\n\t            switch (period) {\n\t                case 'M':\n\t                case 'd':\n\t                case 'DDD':\n\t                case 'w':\n\t                case 'W':\n\t                    return number + '-й';\n\t                case 'D':\n\t                    return number + '-го';\n\t                default:\n\t                    return number;\n\t            }\n\t        },\n\t        week: {\n\t            dow: 1, // Monday is the first day of the week.\n\t            doy: 7, // The week that contains Jan 7th is the first week of the year.\n\t        },\n\t    });\n\n\t    return uk;\n\n\t}))); \n} ());\n\nvar fails$y = function (exec) {\n  try {\n    return !!exec();\n  } catch (error) {\n    return true;\n  }\n};\n\nvar fails$x = fails$y;\n\nvar functionBindNative = !fails$x(function () {\n  // eslint-disable-next-line es/no-function-prototype-bind -- safe\n  var test = (function () { /* empty */ }).bind();\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return typeof test != 'function' || test.hasOwnProperty('prototype');\n});\n\nvar NATIVE_BIND$4 = functionBindNative;\n\nvar FunctionPrototype$4 = Function.prototype;\nvar call$k = FunctionPrototype$4.call;\nvar uncurryThisWithBind = NATIVE_BIND$4 && FunctionPrototype$4.bind.bind(call$k, call$k);\n\nvar functionUncurryThis = NATIVE_BIND$4 ? uncurryThisWithBind : function (fn) {\n  return function () {\n    return call$k.apply(fn, arguments);\n  };\n};\n\nvar ceil = Math.ceil;\nvar floor$1 = Math.floor;\n\n// `Math.trunc` method\n// https://tc39.es/ecma262/#sec-math.trunc\n// eslint-disable-next-line es/no-math-trunc -- safe\nvar mathTrunc = Math.trunc || function trunc(x) {\n  var n = +x;\n  return (n > 0 ? floor$1 : ceil)(n);\n};\n\nvar trunc = mathTrunc;\n\n// `ToIntegerOrInfinity` abstract operation\n// https://tc39.es/ecma262/#sec-tointegerorinfinity\nvar toIntegerOrInfinity$5 = function (argument) {\n  var number = +argument;\n  // eslint-disable-next-line no-self-compare -- NaN check\n  return number !== number || number === 0 ? 0 : trunc(number);\n};\n\nvar check = function (it) {\n  return it && it.Math === Math && it;\n};\n\n// https://github.com/zloirock/core-js/issues/86#issuecomment-115759028\nvar global$q =\n  // eslint-disable-next-line es/no-global-this -- safe\n  check(typeof globalThis == 'object' && globalThis) ||\n  check(typeof window == 'object' && window) ||\n  // eslint-disable-next-line no-restricted-globals -- safe\n  check(typeof self == 'object' && self) ||\n  check(typeof commonjsGlobal == 'object' && commonjsGlobal) ||\n  // eslint-disable-next-line no-new-func -- fallback\n  (function () { return this; })() || commonjsGlobal || Function('return this')();\n\nvar shared$7 = {exports: {}};\n\nvar isPure = true;\n\nvar global$p = global$q;\n\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar defineProperty$f = Object.defineProperty;\n\nvar defineGlobalProperty$1 = function (key, value) {\n  try {\n    defineProperty$f(global$p, key, { value: value, configurable: true, writable: true });\n  } catch (error) {\n    global$p[key] = value;\n  } return value;\n};\n\nvar global$o = global$q;\nvar defineGlobalProperty = defineGlobalProperty$1;\n\nvar SHARED = '__core-js_shared__';\nvar store$3 = global$o[SHARED] || defineGlobalProperty(SHARED, {});\n\nvar sharedStore = store$3;\n\nvar store$2 = sharedStore;\n\n(shared$7.exports = function (key, value) {\n  return store$2[key] || (store$2[key] = value !== undefined ? value : {});\n})('versions', []).push({\n  version: '3.33.0',\n  mode: 'pure' ,\n  copyright: '© 2014-2023 Denis Pushkarev (zloirock.ru)',\n  license: 'https://github.com/zloirock/core-js/blob/v3.33.0/LICENSE',\n  source: 'https://github.com/zloirock/core-js'\n});\n\nvar sharedExports = shared$7.exports;\n\n// we can't use just `it == null` since of `document.all` special case\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot-aec\nvar isNullOrUndefined$6 = function (it) {\n  return it === null || it === undefined;\n};\n\nvar isNullOrUndefined$5 = isNullOrUndefined$6;\n\nvar $TypeError$h = TypeError;\n\n// `RequireObjectCoercible` abstract operation\n// https://tc39.es/ecma262/#sec-requireobjectcoercible\nvar requireObjectCoercible$6 = function (it) {\n  if (isNullOrUndefined$5(it)) throw new $TypeError$h(\"Can't call method on \" + it);\n  return it;\n};\n\nvar requireObjectCoercible$5 = requireObjectCoercible$6;\n\nvar $Object$4 = Object;\n\n// `ToObject` abstract operation\n// https://tc39.es/ecma262/#sec-toobject\nvar toObject$f = function (argument) {\n  return $Object$4(requireObjectCoercible$5(argument));\n};\n\nvar uncurryThis$x = functionUncurryThis;\nvar toObject$e = toObject$f;\n\nvar hasOwnProperty = uncurryThis$x({}.hasOwnProperty);\n\n// `HasOwnProperty` abstract operation\n// https://tc39.es/ecma262/#sec-hasownproperty\n// eslint-disable-next-line es/no-object-hasown -- safe\nvar hasOwnProperty_1 = Object.hasOwn || function hasOwn(it, key) {\n  return hasOwnProperty(toObject$e(it), key);\n};\n\nvar uncurryThis$w = functionUncurryThis;\n\nvar id$1 = 0;\nvar postfix = Math.random();\nvar toString$e = uncurryThis$w(1.0.toString);\n\nvar uid$4 = function (key) {\n  return 'Symbol(' + (key === undefined ? '' : key) + ')_' + toString$e(++id$1 + postfix, 36);\n};\n\nvar engineUserAgent = typeof navigator != 'undefined' && String(navigator.userAgent) || '';\n\nvar global$n = global$q;\nvar userAgent$5 = engineUserAgent;\n\nvar process$3 = global$n.process;\nvar Deno$1 = global$n.Deno;\nvar versions = process$3 && process$3.versions || Deno$1 && Deno$1.version;\nvar v8 = versions && versions.v8;\nvar match, version;\n\nif (v8) {\n  match = v8.split('.');\n  // in old Chrome, versions of V8 isn't V8 = Chrome / 10\n  // but their correct versions are not interesting for us\n  version = match[0] > 0 && match[0] < 4 ? 1 : +(match[0] + match[1]);\n}\n\n// BrowserFS NodeJS `process` polyfill incorrectly set `.v8` to `0.0`\n// so check `userAgent` even if `.v8` exists, but 0\nif (!version && userAgent$5) {\n  match = userAgent$5.match(/Edge\\/(\\d+)/);\n  if (!match || match[1] >= 74) {\n    match = userAgent$5.match(/Chrome\\/(\\d+)/);\n    if (match) version = +match[1];\n  }\n}\n\nvar engineV8Version = version;\n\n/* eslint-disable es/no-symbol -- required for testing */\nvar V8_VERSION$3 = engineV8Version;\nvar fails$w = fails$y;\nvar global$m = global$q;\n\nvar $String$5 = global$m.String;\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- required for testing\nvar symbolConstructorDetection = !!Object.getOwnPropertySymbols && !fails$w(function () {\n  var symbol = Symbol('symbol detection');\n  // Chrome 38 Symbol has incorrect toString conversion\n  // `get-own-property-symbols` polyfill symbols converted to object are not Symbol instances\n  // nb: Do not call `String` directly to avoid this being optimized out to `symbol+''` which will,\n  // of course, fail.\n  return !$String$5(symbol) || !(Object(symbol) instanceof Symbol) ||\n    // Chrome 38-40 symbols are not inherited from DOM collections prototypes to instances\n    !Symbol.sham && V8_VERSION$3 && V8_VERSION$3 < 41;\n});\n\n/* eslint-disable es/no-symbol -- required for testing */\nvar NATIVE_SYMBOL$5 = symbolConstructorDetection;\n\nvar useSymbolAsUid = NATIVE_SYMBOL$5\n  && !Symbol.sham\n  && typeof Symbol.iterator == 'symbol';\n\nvar global$l = global$q;\nvar shared$6 = sharedExports;\nvar hasOwn$j = hasOwnProperty_1;\nvar uid$3 = uid$4;\nvar NATIVE_SYMBOL$4 = symbolConstructorDetection;\nvar USE_SYMBOL_AS_UID$1 = useSymbolAsUid;\n\nvar Symbol$5 = global$l.Symbol;\nvar WellKnownSymbolsStore$2 = shared$6('wks');\nvar createWellKnownSymbol = USE_SYMBOL_AS_UID$1 ? Symbol$5['for'] || Symbol$5 : Symbol$5 && Symbol$5.withoutSetter || uid$3;\n\nvar wellKnownSymbol$p = function (name) {\n  if (!hasOwn$j(WellKnownSymbolsStore$2, name)) {\n    WellKnownSymbolsStore$2[name] = NATIVE_SYMBOL$4 && hasOwn$j(Symbol$5, name)\n      ? Symbol$5[name]\n      : createWellKnownSymbol('Symbol.' + name);\n  } return WellKnownSymbolsStore$2[name];\n};\n\nvar wellKnownSymbol$o = wellKnownSymbol$p;\n\nvar TO_STRING_TAG$4 = wellKnownSymbol$o('toStringTag');\nvar test$2 = {};\n\ntest$2[TO_STRING_TAG$4] = 'z';\n\nvar toStringTagSupport = String(test$2) === '[object z]';\n\nvar documentAll$2 = typeof document == 'object' && document.all;\n\n// https://tc39.es/ecma262/#sec-IsHTMLDDA-internal-slot\n// eslint-disable-next-line unicorn/no-typeof-undefined -- required for testing\nvar IS_HTMLDDA = typeof documentAll$2 == 'undefined' && documentAll$2 !== undefined;\n\nvar documentAll_1 = {\n  all: documentAll$2,\n  IS_HTMLDDA: IS_HTMLDDA\n};\n\nvar $documentAll$1 = documentAll_1;\n\nvar documentAll$1 = $documentAll$1.all;\n\n// `IsCallable` abstract operation\n// https://tc39.es/ecma262/#sec-iscallable\nvar isCallable$m = $documentAll$1.IS_HTMLDDA ? function (argument) {\n  return typeof argument == 'function' || argument === documentAll$1;\n} : function (argument) {\n  return typeof argument == 'function';\n};\n\nvar uncurryThis$v = functionUncurryThis;\n\nvar toString$d = uncurryThis$v({}.toString);\nvar stringSlice$1 = uncurryThis$v(''.slice);\n\nvar classofRaw$2 = function (it) {\n  return stringSlice$1(toString$d(it), 8, -1);\n};\n\nvar TO_STRING_TAG_SUPPORT$2 = toStringTagSupport;\nvar isCallable$l = isCallable$m;\nvar classofRaw$1 = classofRaw$2;\nvar wellKnownSymbol$n = wellKnownSymbol$p;\n\nvar TO_STRING_TAG$3 = wellKnownSymbol$n('toStringTag');\nvar $Object$3 = Object;\n\n// ES3 wrong here\nvar CORRECT_ARGUMENTS = classofRaw$1(function () { return arguments; }()) === 'Arguments';\n\n// fallback for IE11 Script Access Denied error\nvar tryGet = function (it, key) {\n  try {\n    return it[key];\n  } catch (error) { /* empty */ }\n};\n\n// getting tag from ES6+ `Object.prototype.toString`\nvar classof$g = TO_STRING_TAG_SUPPORT$2 ? classofRaw$1 : function (it) {\n  var O, tag, result;\n  return it === undefined ? 'Undefined' : it === null ? 'Null'\n    // @@toStringTag case\n    : typeof (tag = tryGet(O = $Object$3(it), TO_STRING_TAG$3)) == 'string' ? tag\n    // builtinTag case\n    : CORRECT_ARGUMENTS ? classofRaw$1(O)\n    // ES3 arguments fallback\n    : (result = classofRaw$1(O)) === 'Object' && isCallable$l(O.callee) ? 'Arguments' : result;\n};\n\nvar classof$f = classof$g;\n\nvar $String$4 = String;\n\nvar toString$c = function (argument) {\n  if (classof$f(argument) === 'Symbol') throw new TypeError('Cannot convert a Symbol value to a string');\n  return $String$4(argument);\n};\n\nvar uncurryThis$u = functionUncurryThis;\nvar toIntegerOrInfinity$4 = toIntegerOrInfinity$5;\nvar toString$b = toString$c;\nvar requireObjectCoercible$4 = requireObjectCoercible$6;\n\nvar charAt$3 = uncurryThis$u(''.charAt);\nvar charCodeAt$1 = uncurryThis$u(''.charCodeAt);\nvar stringSlice = uncurryThis$u(''.slice);\n\nvar createMethod$5 = function (CONVERT_TO_STRING) {\n  return function ($this, pos) {\n    var S = toString$b(requireObjectCoercible$4($this));\n    var position = toIntegerOrInfinity$4(pos);\n    var size = S.length;\n    var first, second;\n    if (position < 0 || position >= size) return CONVERT_TO_STRING ? '' : undefined;\n    first = charCodeAt$1(S, position);\n    return first < 0xD800 || first > 0xDBFF || position + 1 === size\n      || (second = charCodeAt$1(S, position + 1)) < 0xDC00 || second > 0xDFFF\n        ? CONVERT_TO_STRING\n          ? charAt$3(S, position)\n          : first\n        : CONVERT_TO_STRING\n          ? stringSlice(S, position, position + 2)\n          : (first - 0xD800 << 10) + (second - 0xDC00) + 0x10000;\n  };\n};\n\nvar stringMultibyte = {\n  // `String.prototype.codePointAt` method\n  // https://tc39.es/ecma262/#sec-string.prototype.codepointat\n  codeAt: createMethod$5(false),\n  // `String.prototype.at` method\n  // https://github.com/mathiasbynens/String.prototype.at\n  charAt: createMethod$5(true)\n};\n\nvar global$k = global$q;\nvar isCallable$k = isCallable$m;\n\nvar WeakMap$1 = global$k.WeakMap;\n\nvar weakMapBasicDetection = isCallable$k(WeakMap$1) && /native code/.test(String(WeakMap$1));\n\nvar isCallable$j = isCallable$m;\nvar $documentAll = documentAll_1;\n\nvar documentAll = $documentAll.all;\n\nvar isObject$j = $documentAll.IS_HTMLDDA ? function (it) {\n  return typeof it == 'object' ? it !== null : isCallable$j(it) || it === documentAll;\n} : function (it) {\n  return typeof it == 'object' ? it !== null : isCallable$j(it);\n};\n\nvar fails$v = fails$y;\n\n// Detect IE8's incomplete defineProperty implementation\nvar descriptors = !fails$v(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty({}, 1, { get: function () { return 7; } })[1] !== 7;\n});\n\nvar objectDefineProperty = {};\n\nvar global$j = global$q;\nvar isObject$i = isObject$j;\n\nvar document$3 = global$j.document;\n// typeof document.createElement is 'object' in old IE\nvar EXISTS$1 = isObject$i(document$3) && isObject$i(document$3.createElement);\n\nvar documentCreateElement$1 = function (it) {\n  return EXISTS$1 ? document$3.createElement(it) : {};\n};\n\nvar DESCRIPTORS$i = descriptors;\nvar fails$u = fails$y;\nvar createElement$1 = documentCreateElement$1;\n\n// Thanks to IE8 for its funny defineProperty\nvar ie8DomDefine = !DESCRIPTORS$i && !fails$u(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(createElement$1('div'), 'a', {\n    get: function () { return 7; }\n  }).a !== 7;\n});\n\nvar DESCRIPTORS$h = descriptors;\nvar fails$t = fails$y;\n\n// V8 ~ Chrome 36-\n// https://bugs.chromium.org/p/v8/issues/detail?id=3334\nvar v8PrototypeDefineBug = DESCRIPTORS$h && fails$t(function () {\n  // eslint-disable-next-line es/no-object-defineproperty -- required for testing\n  return Object.defineProperty(function () { /* empty */ }, 'prototype', {\n    value: 42,\n    writable: false\n  }).prototype !== 42;\n});\n\nvar isObject$h = isObject$j;\n\nvar $String$3 = String;\nvar $TypeError$g = TypeError;\n\n// `Assert: Type(argument) is Object`\nvar anObject$d = function (argument) {\n  if (isObject$h(argument)) return argument;\n  throw new $TypeError$g($String$3(argument) + ' is not an object');\n};\n\nvar NATIVE_BIND$3 = functionBindNative;\n\nvar call$j = Function.prototype.call;\n\nvar functionCall = NATIVE_BIND$3 ? call$j.bind(call$j) : function () {\n  return call$j.apply(call$j, arguments);\n};\n\nvar path$u = {};\n\nvar path$t = path$u;\nvar global$i = global$q;\nvar isCallable$i = isCallable$m;\n\nvar aFunction = function (variable) {\n  return isCallable$i(variable) ? variable : undefined;\n};\n\nvar getBuiltIn$f = function (namespace, method) {\n  return arguments.length < 2 ? aFunction(path$t[namespace]) || aFunction(global$i[namespace])\n    : path$t[namespace] && path$t[namespace][method] || global$i[namespace] && global$i[namespace][method];\n};\n\nvar uncurryThis$t = functionUncurryThis;\n\nvar objectIsPrototypeOf = uncurryThis$t({}.isPrototypeOf);\n\nvar getBuiltIn$e = getBuiltIn$f;\nvar isCallable$h = isCallable$m;\nvar isPrototypeOf$r = objectIsPrototypeOf;\nvar USE_SYMBOL_AS_UID = useSymbolAsUid;\n\nvar $Object$2 = Object;\n\nvar isSymbol$5 = USE_SYMBOL_AS_UID ? function (it) {\n  return typeof it == 'symbol';\n} : function (it) {\n  var $Symbol = getBuiltIn$e('Symbol');\n  return isCallable$h($Symbol) && isPrototypeOf$r($Symbol.prototype, $Object$2(it));\n};\n\nvar $String$2 = String;\n\nvar tryToString$6 = function (argument) {\n  try {\n    return $String$2(argument);\n  } catch (error) {\n    return 'Object';\n  }\n};\n\nvar isCallable$g = isCallable$m;\nvar tryToString$5 = tryToString$6;\n\nvar $TypeError$f = TypeError;\n\n// `Assert: IsCallable(argument) is true`\nvar aCallable$e = function (argument) {\n  if (isCallable$g(argument)) return argument;\n  throw new $TypeError$f(tryToString$5(argument) + ' is not a function');\n};\n\nvar aCallable$d = aCallable$e;\nvar isNullOrUndefined$4 = isNullOrUndefined$6;\n\n// `GetMethod` abstract operation\n// https://tc39.es/ecma262/#sec-getmethod\nvar getMethod$3 = function (V, P) {\n  var func = V[P];\n  return isNullOrUndefined$4(func) ? undefined : aCallable$d(func);\n};\n\nvar call$i = functionCall;\nvar isCallable$f = isCallable$m;\nvar isObject$g = isObject$j;\n\nvar $TypeError$e = TypeError;\n\n// `OrdinaryToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-ordinarytoprimitive\nvar ordinaryToPrimitive$1 = function (input, pref) {\n  var fn, val;\n  if (pref === 'string' && isCallable$f(fn = input.toString) && !isObject$g(val = call$i(fn, input))) return val;\n  if (isCallable$f(fn = input.valueOf) && !isObject$g(val = call$i(fn, input))) return val;\n  if (pref !== 'string' && isCallable$f(fn = input.toString) && !isObject$g(val = call$i(fn, input))) return val;\n  throw new $TypeError$e(\"Can't convert object to primitive value\");\n};\n\nvar call$h = functionCall;\nvar isObject$f = isObject$j;\nvar isSymbol$4 = isSymbol$5;\nvar getMethod$2 = getMethod$3;\nvar ordinaryToPrimitive = ordinaryToPrimitive$1;\nvar wellKnownSymbol$m = wellKnownSymbol$p;\n\nvar $TypeError$d = TypeError;\nvar TO_PRIMITIVE = wellKnownSymbol$m('toPrimitive');\n\n// `ToPrimitive` abstract operation\n// https://tc39.es/ecma262/#sec-toprimitive\nvar toPrimitive$6 = function (input, pref) {\n  if (!isObject$f(input) || isSymbol$4(input)) return input;\n  var exoticToPrim = getMethod$2(input, TO_PRIMITIVE);\n  var result;\n  if (exoticToPrim) {\n    if (pref === undefined) pref = 'default';\n    result = call$h(exoticToPrim, input, pref);\n    if (!isObject$f(result) || isSymbol$4(result)) return result;\n    throw new $TypeError$d(\"Can't convert object to primitive value\");\n  }\n  if (pref === undefined) pref = 'number';\n  return ordinaryToPrimitive(input, pref);\n};\n\nvar toPrimitive$5 = toPrimitive$6;\nvar isSymbol$3 = isSymbol$5;\n\n// `ToPropertyKey` abstract operation\n// https://tc39.es/ecma262/#sec-topropertykey\nvar toPropertyKey$4 = function (argument) {\n  var key = toPrimitive$5(argument, 'string');\n  return isSymbol$3(key) ? key : key + '';\n};\n\nvar DESCRIPTORS$g = descriptors;\nvar IE8_DOM_DEFINE$1 = ie8DomDefine;\nvar V8_PROTOTYPE_DEFINE_BUG$1 = v8PrototypeDefineBug;\nvar anObject$c = anObject$d;\nvar toPropertyKey$3 = toPropertyKey$4;\n\nvar $TypeError$c = TypeError;\n// eslint-disable-next-line es/no-object-defineproperty -- safe\nvar $defineProperty$1 = Object.defineProperty;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor$2 = Object.getOwnPropertyDescriptor;\nvar ENUMERABLE = 'enumerable';\nvar CONFIGURABLE$1 = 'configurable';\nvar WRITABLE = 'writable';\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\nobjectDefineProperty.f = DESCRIPTORS$g ? V8_PROTOTYPE_DEFINE_BUG$1 ? function defineProperty(O, P, Attributes) {\n  anObject$c(O);\n  P = toPropertyKey$3(P);\n  anObject$c(Attributes);\n  if (typeof O === 'function' && P === 'prototype' && 'value' in Attributes && WRITABLE in Attributes && !Attributes[WRITABLE]) {\n    var current = $getOwnPropertyDescriptor$2(O, P);\n    if (current && current[WRITABLE]) {\n      O[P] = Attributes.value;\n      Attributes = {\n        configurable: CONFIGURABLE$1 in Attributes ? Attributes[CONFIGURABLE$1] : current[CONFIGURABLE$1],\n        enumerable: ENUMERABLE in Attributes ? Attributes[ENUMERABLE] : current[ENUMERABLE],\n        writable: false\n      };\n    }\n  } return $defineProperty$1(O, P, Attributes);\n} : $defineProperty$1 : function defineProperty(O, P, Attributes) {\n  anObject$c(O);\n  P = toPropertyKey$3(P);\n  anObject$c(Attributes);\n  if (IE8_DOM_DEFINE$1) try {\n    return $defineProperty$1(O, P, Attributes);\n  } catch (error) { /* empty */ }\n  if ('get' in Attributes || 'set' in Attributes) throw new $TypeError$c('Accessors not supported');\n  if ('value' in Attributes) O[P] = Attributes.value;\n  return O;\n};\n\nvar createPropertyDescriptor$7 = function (bitmap, value) {\n  return {\n    enumerable: !(bitmap & 1),\n    configurable: !(bitmap & 2),\n    writable: !(bitmap & 4),\n    value: value\n  };\n};\n\nvar DESCRIPTORS$f = descriptors;\nvar definePropertyModule$4 = objectDefineProperty;\nvar createPropertyDescriptor$6 = createPropertyDescriptor$7;\n\nvar createNonEnumerableProperty$9 = DESCRIPTORS$f ? function (object, key, value) {\n  return definePropertyModule$4.f(object, key, createPropertyDescriptor$6(1, value));\n} : function (object, key, value) {\n  object[key] = value;\n  return object;\n};\n\nvar shared$5 = sharedExports;\nvar uid$2 = uid$4;\n\nvar keys$7 = shared$5('keys');\n\nvar sharedKey$4 = function (key) {\n  return keys$7[key] || (keys$7[key] = uid$2(key));\n};\n\nvar hiddenKeys$6 = {};\n\nvar NATIVE_WEAK_MAP = weakMapBasicDetection;\nvar global$h = global$q;\nvar isObject$e = isObject$j;\nvar createNonEnumerableProperty$8 = createNonEnumerableProperty$9;\nvar hasOwn$i = hasOwnProperty_1;\nvar shared$4 = sharedStore;\nvar sharedKey$3 = sharedKey$4;\nvar hiddenKeys$5 = hiddenKeys$6;\n\nvar OBJECT_ALREADY_INITIALIZED = 'Object already initialized';\nvar TypeError$3 = global$h.TypeError;\nvar WeakMap = global$h.WeakMap;\nvar set$4, get, has;\n\nvar enforce = function (it) {\n  return has(it) ? get(it) : set$4(it, {});\n};\n\nvar getterFor = function (TYPE) {\n  return function (it) {\n    var state;\n    if (!isObject$e(it) || (state = get(it)).type !== TYPE) {\n      throw new TypeError$3('Incompatible receiver, ' + TYPE + ' required');\n    } return state;\n  };\n};\n\nif (NATIVE_WEAK_MAP || shared$4.state) {\n  var store$1 = shared$4.state || (shared$4.state = new WeakMap());\n  /* eslint-disable no-self-assign -- prototype methods protection */\n  store$1.get = store$1.get;\n  store$1.has = store$1.has;\n  store$1.set = store$1.set;\n  /* eslint-enable no-self-assign -- prototype methods protection */\n  set$4 = function (it, metadata) {\n    if (store$1.has(it)) throw new TypeError$3(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    store$1.set(it, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return store$1.get(it) || {};\n  };\n  has = function (it) {\n    return store$1.has(it);\n  };\n} else {\n  var STATE = sharedKey$3('state');\n  hiddenKeys$5[STATE] = true;\n  set$4 = function (it, metadata) {\n    if (hasOwn$i(it, STATE)) throw new TypeError$3(OBJECT_ALREADY_INITIALIZED);\n    metadata.facade = it;\n    createNonEnumerableProperty$8(it, STATE, metadata);\n    return metadata;\n  };\n  get = function (it) {\n    return hasOwn$i(it, STATE) ? it[STATE] : {};\n  };\n  has = function (it) {\n    return hasOwn$i(it, STATE);\n  };\n}\n\nvar internalState = {\n  set: set$4,\n  get: get,\n  has: has,\n  enforce: enforce,\n  getterFor: getterFor\n};\n\nvar NATIVE_BIND$2 = functionBindNative;\n\nvar FunctionPrototype$3 = Function.prototype;\nvar apply$6 = FunctionPrototype$3.apply;\nvar call$g = FunctionPrototype$3.call;\n\n// eslint-disable-next-line es/no-reflect -- safe\nvar functionApply = typeof Reflect == 'object' && Reflect.apply || (NATIVE_BIND$2 ? call$g.bind(apply$6) : function () {\n  return call$g.apply(apply$6, arguments);\n});\n\nvar classofRaw = classofRaw$2;\nvar uncurryThis$s = functionUncurryThis;\n\nvar functionUncurryThisClause = function (fn) {\n  // Nashorn bug:\n  //   https://github.com/zloirock/core-js/issues/1128\n  //   https://github.com/zloirock/core-js/issues/1130\n  if (classofRaw(fn) === 'Function') return uncurryThis$s(fn);\n};\n\nvar objectGetOwnPropertyDescriptor = {};\n\nvar objectPropertyIsEnumerable = {};\n\nvar $propertyIsEnumerable$2 = {}.propertyIsEnumerable;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor$7 = Object.getOwnPropertyDescriptor;\n\n// Nashorn ~ JDK8 bug\nvar NASHORN_BUG = getOwnPropertyDescriptor$7 && !$propertyIsEnumerable$2.call({ 1: 2 }, 1);\n\n// `Object.prototype.propertyIsEnumerable` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.propertyisenumerable\nobjectPropertyIsEnumerable.f = NASHORN_BUG ? function propertyIsEnumerable(V) {\n  var descriptor = getOwnPropertyDescriptor$7(this, V);\n  return !!descriptor && descriptor.enumerable;\n} : $propertyIsEnumerable$2;\n\nvar uncurryThis$r = functionUncurryThis;\nvar fails$s = fails$y;\nvar classof$e = classofRaw$2;\n\nvar $Object$1 = Object;\nvar split = uncurryThis$r(''.split);\n\n// fallback for non-array-like ES3 and non-enumerable old V8 strings\nvar indexedObject = fails$s(function () {\n  // throws an error in rhino, see https://github.com/mozilla/rhino/issues/346\n  // eslint-disable-next-line no-prototype-builtins -- safe\n  return !$Object$1('z').propertyIsEnumerable(0);\n}) ? function (it) {\n  return classof$e(it) === 'String' ? split(it, '') : $Object$1(it);\n} : $Object$1;\n\n// toObject with fallback for non-array-like ES3 strings\nvar IndexedObject$3 = indexedObject;\nvar requireObjectCoercible$3 = requireObjectCoercible$6;\n\nvar toIndexedObject$b = function (it) {\n  return IndexedObject$3(requireObjectCoercible$3(it));\n};\n\nvar DESCRIPTORS$e = descriptors;\nvar call$f = functionCall;\nvar propertyIsEnumerableModule$2 = objectPropertyIsEnumerable;\nvar createPropertyDescriptor$5 = createPropertyDescriptor$7;\nvar toIndexedObject$a = toIndexedObject$b;\nvar toPropertyKey$2 = toPropertyKey$4;\nvar hasOwn$h = hasOwnProperty_1;\nvar IE8_DOM_DEFINE = ie8DomDefine;\n\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar $getOwnPropertyDescriptor$1 = Object.getOwnPropertyDescriptor;\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\nobjectGetOwnPropertyDescriptor.f = DESCRIPTORS$e ? $getOwnPropertyDescriptor$1 : function getOwnPropertyDescriptor(O, P) {\n  O = toIndexedObject$a(O);\n  P = toPropertyKey$2(P);\n  if (IE8_DOM_DEFINE) try {\n    return $getOwnPropertyDescriptor$1(O, P);\n  } catch (error) { /* empty */ }\n  if (hasOwn$h(O, P)) return createPropertyDescriptor$5(!call$f(propertyIsEnumerableModule$2.f, O, P), O[P]);\n};\n\nvar fails$r = fails$y;\nvar isCallable$e = isCallable$m;\n\nvar replacement = /#|\\.prototype\\./;\n\nvar isForced$2 = function (feature, detection) {\n  var value = data[normalize(feature)];\n  return value === POLYFILL ? true\n    : value === NATIVE ? false\n    : isCallable$e(detection) ? fails$r(detection)\n    : !!detection;\n};\n\nvar normalize = isForced$2.normalize = function (string) {\n  return String(string).replace(replacement, '.').toLowerCase();\n};\n\nvar data = isForced$2.data = {};\nvar NATIVE = isForced$2.NATIVE = 'N';\nvar POLYFILL = isForced$2.POLYFILL = 'P';\n\nvar isForced_1 = isForced$2;\n\nvar uncurryThis$q = functionUncurryThisClause;\nvar aCallable$c = aCallable$e;\nvar NATIVE_BIND$1 = functionBindNative;\n\nvar bind$i = uncurryThis$q(uncurryThis$q.bind);\n\n// optional / simple context binding\nvar functionBindContext = function (fn, that) {\n  aCallable$c(fn);\n  return that === undefined ? fn : NATIVE_BIND$1 ? bind$i(fn, that) : function (/* ...args */) {\n    return fn.apply(that, arguments);\n  };\n};\n\nvar global$g = global$q;\nvar apply$5 = functionApply;\nvar uncurryThis$p = functionUncurryThisClause;\nvar isCallable$d = isCallable$m;\nvar getOwnPropertyDescriptor$6 = objectGetOwnPropertyDescriptor.f;\nvar isForced$1 = isForced_1;\nvar path$s = path$u;\nvar bind$h = functionBindContext;\nvar createNonEnumerableProperty$7 = createNonEnumerableProperty$9;\nvar hasOwn$g = hasOwnProperty_1;\n\nvar wrapConstructor = function (NativeConstructor) {\n  var Wrapper = function (a, b, c) {\n    if (this instanceof Wrapper) {\n      switch (arguments.length) {\n        case 0: return new NativeConstructor();\n        case 1: return new NativeConstructor(a);\n        case 2: return new NativeConstructor(a, b);\n      } return new NativeConstructor(a, b, c);\n    } return apply$5(NativeConstructor, this, arguments);\n  };\n  Wrapper.prototype = NativeConstructor.prototype;\n  return Wrapper;\n};\n\n/*\n  options.target         - name of the target object\n  options.global         - target is the global object\n  options.stat           - export as static methods of target\n  options.proto          - export as prototype methods of target\n  options.real           - real prototype method for the `pure` version\n  options.forced         - export even if the native feature is available\n  options.bind           - bind methods to the target, required for the `pure` version\n  options.wrap           - wrap constructors to preventing global pollution, required for the `pure` version\n  options.unsafe         - use the simple assignment of property instead of delete + defineProperty\n  options.sham           - add a flag to not completely full polyfills\n  options.enumerable     - export as enumerable property\n  options.dontCallGetSet - prevent calling a getter on target\n  options.name           - the .name of the function if it does not match the key\n*/\nvar _export = function (options, source) {\n  var TARGET = options.target;\n  var GLOBAL = options.global;\n  var STATIC = options.stat;\n  var PROTO = options.proto;\n\n  var nativeSource = GLOBAL ? global$g : STATIC ? global$g[TARGET] : (global$g[TARGET] || {}).prototype;\n\n  var target = GLOBAL ? path$s : path$s[TARGET] || createNonEnumerableProperty$7(path$s, TARGET, {})[TARGET];\n  var targetPrototype = target.prototype;\n\n  var FORCED, USE_NATIVE, VIRTUAL_PROTOTYPE;\n  var key, sourceProperty, targetProperty, nativeProperty, resultProperty, descriptor;\n\n  for (key in source) {\n    FORCED = isForced$1(GLOBAL ? key : TARGET + (STATIC ? '.' : '#') + key, options.forced);\n    // contains in native\n    USE_NATIVE = !FORCED && nativeSource && hasOwn$g(nativeSource, key);\n\n    targetProperty = target[key];\n\n    if (USE_NATIVE) if (options.dontCallGetSet) {\n      descriptor = getOwnPropertyDescriptor$6(nativeSource, key);\n      nativeProperty = descriptor && descriptor.value;\n    } else nativeProperty = nativeSource[key];\n\n    // export native or implementation\n    sourceProperty = (USE_NATIVE && nativeProperty) ? nativeProperty : source[key];\n\n    if (USE_NATIVE && typeof targetProperty == typeof sourceProperty) continue;\n\n    // bind methods to global for calling from export context\n    if (options.bind && USE_NATIVE) resultProperty = bind$h(sourceProperty, global$g);\n    // wrap global constructors for prevent changes in this version\n    else if (options.wrap && USE_NATIVE) resultProperty = wrapConstructor(sourceProperty);\n    // make static versions for prototype methods\n    else if (PROTO && isCallable$d(sourceProperty)) resultProperty = uncurryThis$p(sourceProperty);\n    // default case\n    else resultProperty = sourceProperty;\n\n    // add a flag to not completely full polyfills\n    if (options.sham || (sourceProperty && sourceProperty.sham) || (targetProperty && targetProperty.sham)) {\n      createNonEnumerableProperty$7(resultProperty, 'sham', true);\n    }\n\n    createNonEnumerableProperty$7(target, key, resultProperty);\n\n    if (PROTO) {\n      VIRTUAL_PROTOTYPE = TARGET + 'Prototype';\n      if (!hasOwn$g(path$s, VIRTUAL_PROTOTYPE)) {\n        createNonEnumerableProperty$7(path$s, VIRTUAL_PROTOTYPE, {});\n      }\n      // export virtual prototype methods\n      createNonEnumerableProperty$7(path$s[VIRTUAL_PROTOTYPE], key, sourceProperty);\n      // export real prototype methods\n      if (options.real && targetPrototype && (FORCED || !targetPrototype[key])) {\n        createNonEnumerableProperty$7(targetPrototype, key, sourceProperty);\n      }\n    }\n  }\n};\n\nvar DESCRIPTORS$d = descriptors;\nvar hasOwn$f = hasOwnProperty_1;\n\nvar FunctionPrototype$2 = Function.prototype;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getDescriptor = DESCRIPTORS$d && Object.getOwnPropertyDescriptor;\n\nvar EXISTS = hasOwn$f(FunctionPrototype$2, 'name');\n// additional protection from minified / mangled / dropped function names\nvar PROPER = EXISTS && (function something() { /* empty */ }).name === 'something';\nvar CONFIGURABLE = EXISTS && (!DESCRIPTORS$d || (DESCRIPTORS$d && getDescriptor(FunctionPrototype$2, 'name').configurable));\n\nvar functionName = {\n  EXISTS: EXISTS,\n  PROPER: PROPER,\n  CONFIGURABLE: CONFIGURABLE\n};\n\nvar objectDefineProperties = {};\n\nvar toIntegerOrInfinity$3 = toIntegerOrInfinity$5;\n\nvar max$3 = Math.max;\nvar min$2 = Math.min;\n\n// Helper for a popular repeating case of the spec:\n// Let integer be ? ToInteger(index).\n// If integer < 0, let result be max((length + integer), 0); else let result be min(integer, length).\nvar toAbsoluteIndex$5 = function (index, length) {\n  var integer = toIntegerOrInfinity$3(index);\n  return integer < 0 ? max$3(integer + length, 0) : min$2(integer, length);\n};\n\nvar toIntegerOrInfinity$2 = toIntegerOrInfinity$5;\n\nvar min$1 = Math.min;\n\n// `ToLength` abstract operation\n// https://tc39.es/ecma262/#sec-tolength\nvar toLength$1 = function (argument) {\n  return argument > 0 ? min$1(toIntegerOrInfinity$2(argument), 0x1FFFFFFFFFFFFF) : 0; // 2 ** 53 - 1 == 9007199254740991\n};\n\nvar toLength = toLength$1;\n\n// `LengthOfArrayLike` abstract operation\n// https://tc39.es/ecma262/#sec-lengthofarraylike\nvar lengthOfArrayLike$e = function (obj) {\n  return toLength(obj.length);\n};\n\nvar toIndexedObject$9 = toIndexedObject$b;\nvar toAbsoluteIndex$4 = toAbsoluteIndex$5;\nvar lengthOfArrayLike$d = lengthOfArrayLike$e;\n\n// `Array.prototype.{ indexOf, includes }` methods implementation\nvar createMethod$4 = function (IS_INCLUDES) {\n  return function ($this, el, fromIndex) {\n    var O = toIndexedObject$9($this);\n    var length = lengthOfArrayLike$d(O);\n    var index = toAbsoluteIndex$4(fromIndex, length);\n    var value;\n    // Array#includes uses SameValueZero equality algorithm\n    // eslint-disable-next-line no-self-compare -- NaN check\n    if (IS_INCLUDES && el !== el) while (length > index) {\n      value = O[index++];\n      // eslint-disable-next-line no-self-compare -- NaN check\n      if (value !== value) return true;\n    // Array#indexOf ignores holes, Array#includes - not\n    } else for (;length > index; index++) {\n      if ((IS_INCLUDES || index in O) && O[index] === el) return IS_INCLUDES || index || 0;\n    } return !IS_INCLUDES && -1;\n  };\n};\n\nvar arrayIncludes = {\n  // `Array.prototype.includes` method\n  // https://tc39.es/ecma262/#sec-array.prototype.includes\n  includes: createMethod$4(true),\n  // `Array.prototype.indexOf` method\n  // https://tc39.es/ecma262/#sec-array.prototype.indexof\n  indexOf: createMethod$4(false)\n};\n\nvar uncurryThis$o = functionUncurryThis;\nvar hasOwn$e = hasOwnProperty_1;\nvar toIndexedObject$8 = toIndexedObject$b;\nvar indexOf$4 = arrayIncludes.indexOf;\nvar hiddenKeys$4 = hiddenKeys$6;\n\nvar push$d = uncurryThis$o([].push);\n\nvar objectKeysInternal = function (object, names) {\n  var O = toIndexedObject$8(object);\n  var i = 0;\n  var result = [];\n  var key;\n  for (key in O) !hasOwn$e(hiddenKeys$4, key) && hasOwn$e(O, key) && push$d(result, key);\n  // Don't enum bug & hidden keys\n  while (names.length > i) if (hasOwn$e(O, key = names[i++])) {\n    ~indexOf$4(result, key) || push$d(result, key);\n  }\n  return result;\n};\n\n// IE8- don't enum bug keys\nvar enumBugKeys$3 = [\n  'constructor',\n  'hasOwnProperty',\n  'isPrototypeOf',\n  'propertyIsEnumerable',\n  'toLocaleString',\n  'toString',\n  'valueOf'\n];\n\nvar internalObjectKeys$1 = objectKeysInternal;\nvar enumBugKeys$2 = enumBugKeys$3;\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n// eslint-disable-next-line es/no-object-keys -- safe\nvar objectKeys$4 = Object.keys || function keys(O) {\n  return internalObjectKeys$1(O, enumBugKeys$2);\n};\n\nvar DESCRIPTORS$c = descriptors;\nvar V8_PROTOTYPE_DEFINE_BUG = v8PrototypeDefineBug;\nvar definePropertyModule$3 = objectDefineProperty;\nvar anObject$b = anObject$d;\nvar toIndexedObject$7 = toIndexedObject$b;\nvar objectKeys$3 = objectKeys$4;\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\nobjectDefineProperties.f = DESCRIPTORS$c && !V8_PROTOTYPE_DEFINE_BUG ? Object.defineProperties : function defineProperties(O, Properties) {\n  anObject$b(O);\n  var props = toIndexedObject$7(Properties);\n  var keys = objectKeys$3(Properties);\n  var length = keys.length;\n  var index = 0;\n  var key;\n  while (length > index) definePropertyModule$3.f(O, key = keys[index++], props[key]);\n  return O;\n};\n\nvar getBuiltIn$d = getBuiltIn$f;\n\nvar html$2 = getBuiltIn$d('document', 'documentElement');\n\n/* global ActiveXObject -- old IE, WSH */\nvar anObject$a = anObject$d;\nvar definePropertiesModule$1 = objectDefineProperties;\nvar enumBugKeys$1 = enumBugKeys$3;\nvar hiddenKeys$3 = hiddenKeys$6;\nvar html$1 = html$2;\nvar documentCreateElement = documentCreateElement$1;\nvar sharedKey$2 = sharedKey$4;\n\nvar GT = '>';\nvar LT = '<';\nvar PROTOTYPE$1 = 'prototype';\nvar SCRIPT = 'script';\nvar IE_PROTO$1 = sharedKey$2('IE_PROTO');\n\nvar EmptyConstructor = function () { /* empty */ };\n\nvar scriptTag = function (content) {\n  return LT + SCRIPT + GT + content + LT + '/' + SCRIPT + GT;\n};\n\n// Create object with fake `null` prototype: use ActiveX Object with cleared prototype\nvar NullProtoObjectViaActiveX = function (activeXDocument) {\n  activeXDocument.write(scriptTag(''));\n  activeXDocument.close();\n  var temp = activeXDocument.parentWindow.Object;\n  activeXDocument = null; // avoid memory leak\n  return temp;\n};\n\n// Create object with fake `null` prototype: use iframe Object with cleared prototype\nvar NullProtoObjectViaIFrame = function () {\n  // Thrash, waste and sodomy: IE GC bug\n  var iframe = documentCreateElement('iframe');\n  var JS = 'java' + SCRIPT + ':';\n  var iframeDocument;\n  iframe.style.display = 'none';\n  html$1.appendChild(iframe);\n  // https://github.com/zloirock/core-js/issues/475\n  iframe.src = String(JS);\n  iframeDocument = iframe.contentWindow.document;\n  iframeDocument.open();\n  iframeDocument.write(scriptTag('document.F=Object'));\n  iframeDocument.close();\n  return iframeDocument.F;\n};\n\n// Check for document.domain and active x support\n// No need to use active x approach when document.domain is not set\n// see https://github.com/es-shims/es5-shim/issues/150\n// variation of https://github.com/kitcambridge/es5-shim/commit/4f738ac066346\n// avoid IE GC bug\nvar activeXDocument;\nvar NullProtoObject = function () {\n  try {\n    activeXDocument = new ActiveXObject('htmlfile');\n  } catch (error) { /* ignore */ }\n  NullProtoObject = typeof document != 'undefined'\n    ? document.domain && activeXDocument\n      ? NullProtoObjectViaActiveX(activeXDocument) // old IE\n      : NullProtoObjectViaIFrame()\n    : NullProtoObjectViaActiveX(activeXDocument); // WSH\n  var length = enumBugKeys$1.length;\n  while (length--) delete NullProtoObject[PROTOTYPE$1][enumBugKeys$1[length]];\n  return NullProtoObject();\n};\n\nhiddenKeys$3[IE_PROTO$1] = true;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n// eslint-disable-next-line es/no-object-create -- safe\nvar objectCreate = Object.create || function create(O, Properties) {\n  var result;\n  if (O !== null) {\n    EmptyConstructor[PROTOTYPE$1] = anObject$a(O);\n    result = new EmptyConstructor();\n    EmptyConstructor[PROTOTYPE$1] = null;\n    // add \"__proto__\" for Object.getPrototypeOf polyfill\n    result[IE_PROTO$1] = O;\n  } else result = NullProtoObject();\n  return Properties === undefined ? result : definePropertiesModule$1.f(result, Properties);\n};\n\nvar fails$q = fails$y;\n\nvar correctPrototypeGetter = !fails$q(function () {\n  function F() { /* empty */ }\n  F.prototype.constructor = null;\n  // eslint-disable-next-line es/no-object-getprototypeof -- required for testing\n  return Object.getPrototypeOf(new F()) !== F.prototype;\n});\n\nvar hasOwn$d = hasOwnProperty_1;\nvar isCallable$c = isCallable$m;\nvar toObject$d = toObject$f;\nvar sharedKey$1 = sharedKey$4;\nvar CORRECT_PROTOTYPE_GETTER$1 = correctPrototypeGetter;\n\nvar IE_PROTO = sharedKey$1('IE_PROTO');\nvar $Object = Object;\nvar ObjectPrototype$2 = $Object.prototype;\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n// eslint-disable-next-line es/no-object-getprototypeof -- safe\nvar objectGetPrototypeOf$1 = CORRECT_PROTOTYPE_GETTER$1 ? $Object.getPrototypeOf : function (O) {\n  var object = toObject$d(O);\n  if (hasOwn$d(object, IE_PROTO)) return object[IE_PROTO];\n  var constructor = object.constructor;\n  if (isCallable$c(constructor) && object instanceof constructor) {\n    return constructor.prototype;\n  } return object instanceof $Object ? ObjectPrototype$2 : null;\n};\n\nvar createNonEnumerableProperty$6 = createNonEnumerableProperty$9;\n\nvar defineBuiltIn$6 = function (target, key, value, options) {\n  if (options && options.enumerable) target[key] = value;\n  else createNonEnumerableProperty$6(target, key, value);\n  return target;\n};\n\nvar fails$p = fails$y;\nvar isCallable$b = isCallable$m;\nvar isObject$d = isObject$j;\nvar create$b = objectCreate;\nvar getPrototypeOf$8 = objectGetPrototypeOf$1;\nvar defineBuiltIn$5 = defineBuiltIn$6;\nvar wellKnownSymbol$l = wellKnownSymbol$p;\n\nvar ITERATOR$6 = wellKnownSymbol$l('iterator');\nvar BUGGY_SAFARI_ITERATORS$1 = false;\n\n// `%IteratorPrototype%` object\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-object\nvar IteratorPrototype$1, PrototypeOfArrayIteratorPrototype, arrayIterator;\n\n/* eslint-disable es/no-array-prototype-keys -- safe */\nif ([].keys) {\n  arrayIterator = [].keys();\n  // Safari 8 has buggy iterators w/o `next`\n  if (!('next' in arrayIterator)) BUGGY_SAFARI_ITERATORS$1 = true;\n  else {\n    PrototypeOfArrayIteratorPrototype = getPrototypeOf$8(getPrototypeOf$8(arrayIterator));\n    if (PrototypeOfArrayIteratorPrototype !== Object.prototype) IteratorPrototype$1 = PrototypeOfArrayIteratorPrototype;\n  }\n}\n\nvar NEW_ITERATOR_PROTOTYPE = !isObject$d(IteratorPrototype$1) || fails$p(function () {\n  var test = {};\n  // FF44- legacy iterators case\n  return IteratorPrototype$1[ITERATOR$6].call(test) !== test;\n});\n\nif (NEW_ITERATOR_PROTOTYPE) IteratorPrototype$1 = {};\nelse IteratorPrototype$1 = create$b(IteratorPrototype$1);\n\n// `%IteratorPrototype%[@@iterator]()` method\n// https://tc39.es/ecma262/#sec-%iteratorprototype%-@@iterator\nif (!isCallable$b(IteratorPrototype$1[ITERATOR$6])) {\n  defineBuiltIn$5(IteratorPrototype$1, ITERATOR$6, function () {\n    return this;\n  });\n}\n\nvar iteratorsCore = {\n  IteratorPrototype: IteratorPrototype$1,\n  BUGGY_SAFARI_ITERATORS: BUGGY_SAFARI_ITERATORS$1\n};\n\nvar TO_STRING_TAG_SUPPORT$1 = toStringTagSupport;\nvar classof$d = classof$g;\n\n// `Object.prototype.toString` method implementation\n// https://tc39.es/ecma262/#sec-object.prototype.tostring\nvar objectToString = TO_STRING_TAG_SUPPORT$1 ? {}.toString : function toString() {\n  return '[object ' + classof$d(this) + ']';\n};\n\nvar TO_STRING_TAG_SUPPORT = toStringTagSupport;\nvar defineProperty$e = objectDefineProperty.f;\nvar createNonEnumerableProperty$5 = createNonEnumerableProperty$9;\nvar hasOwn$c = hasOwnProperty_1;\nvar toString$a = objectToString;\nvar wellKnownSymbol$k = wellKnownSymbol$p;\n\nvar TO_STRING_TAG$2 = wellKnownSymbol$k('toStringTag');\n\nvar setToStringTag$7 = function (it, TAG, STATIC, SET_METHOD) {\n  if (it) {\n    var target = STATIC ? it : it.prototype;\n    if (!hasOwn$c(target, TO_STRING_TAG$2)) {\n      defineProperty$e(target, TO_STRING_TAG$2, { configurable: true, value: TAG });\n    }\n    if (SET_METHOD && !TO_STRING_TAG_SUPPORT) {\n      createNonEnumerableProperty$5(target, 'toString', toString$a);\n    }\n  }\n};\n\nvar iterators = {};\n\nvar IteratorPrototype = iteratorsCore.IteratorPrototype;\nvar create$a = objectCreate;\nvar createPropertyDescriptor$4 = createPropertyDescriptor$7;\nvar setToStringTag$6 = setToStringTag$7;\nvar Iterators$5 = iterators;\n\nvar returnThis$1 = function () { return this; };\n\nvar iteratorCreateConstructor = function (IteratorConstructor, NAME, next, ENUMERABLE_NEXT) {\n  var TO_STRING_TAG = NAME + ' Iterator';\n  IteratorConstructor.prototype = create$a(IteratorPrototype, { next: createPropertyDescriptor$4(+!ENUMERABLE_NEXT, next) });\n  setToStringTag$6(IteratorConstructor, TO_STRING_TAG, false, true);\n  Iterators$5[TO_STRING_TAG] = returnThis$1;\n  return IteratorConstructor;\n};\n\nvar uncurryThis$n = functionUncurryThis;\nvar aCallable$b = aCallable$e;\n\nvar functionUncurryThisAccessor = function (object, key, method) {\n  try {\n    // eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\n    return uncurryThis$n(aCallable$b(Object.getOwnPropertyDescriptor(object, key)[method]));\n  } catch (error) { /* empty */ }\n};\n\nvar isCallable$a = isCallable$m;\n\nvar $String$1 = String;\nvar $TypeError$b = TypeError;\n\nvar aPossiblePrototype$1 = function (argument) {\n  if (typeof argument == 'object' || isCallable$a(argument)) return argument;\n  throw new $TypeError$b(\"Can't set \" + $String$1(argument) + ' as a prototype');\n};\n\n/* eslint-disable no-proto -- safe */\nvar uncurryThisAccessor = functionUncurryThisAccessor;\nvar anObject$9 = anObject$d;\nvar aPossiblePrototype = aPossiblePrototype$1;\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n// Works with __proto__ only. Old v8 can't work with null proto objects.\n// eslint-disable-next-line es/no-object-setprototypeof -- safe\nvar objectSetPrototypeOf = Object.setPrototypeOf || ('__proto__' in {} ? function () {\n  var CORRECT_SETTER = false;\n  var test = {};\n  var setter;\n  try {\n    setter = uncurryThisAccessor(Object.prototype, '__proto__', 'set');\n    setter(test, []);\n    CORRECT_SETTER = test instanceof Array;\n  } catch (error) { /* empty */ }\n  return function setPrototypeOf(O, proto) {\n    anObject$9(O);\n    aPossiblePrototype(proto);\n    if (CORRECT_SETTER) setter(O, proto);\n    else O.__proto__ = proto;\n    return O;\n  };\n}() : undefined);\n\nvar $$10 = _export;\nvar call$e = functionCall;\nvar FunctionName = functionName;\nvar createIteratorConstructor = iteratorCreateConstructor;\nvar getPrototypeOf$7 = objectGetPrototypeOf$1;\nvar setToStringTag$5 = setToStringTag$7;\nvar defineBuiltIn$4 = defineBuiltIn$6;\nvar wellKnownSymbol$j = wellKnownSymbol$p;\nvar Iterators$4 = iterators;\nvar IteratorsCore = iteratorsCore;\n\nvar PROPER_FUNCTION_NAME = FunctionName.PROPER;\nFunctionName.CONFIGURABLE;\nIteratorsCore.IteratorPrototype;\nvar BUGGY_SAFARI_ITERATORS = IteratorsCore.BUGGY_SAFARI_ITERATORS;\nvar ITERATOR$5 = wellKnownSymbol$j('iterator');\nvar KEYS = 'keys';\nvar VALUES = 'values';\nvar ENTRIES = 'entries';\n\nvar returnThis = function () { return this; };\n\nvar iteratorDefine = function (Iterable, NAME, IteratorConstructor, next, DEFAULT, IS_SET, FORCED) {\n  createIteratorConstructor(IteratorConstructor, NAME, next);\n\n  var getIterationMethod = function (KIND) {\n    if (KIND === DEFAULT && defaultIterator) return defaultIterator;\n    if (!BUGGY_SAFARI_ITERATORS && KIND && KIND in IterablePrototype) return IterablePrototype[KIND];\n\n    switch (KIND) {\n      case KEYS: return function keys() { return new IteratorConstructor(this, KIND); };\n      case VALUES: return function values() { return new IteratorConstructor(this, KIND); };\n      case ENTRIES: return function entries() { return new IteratorConstructor(this, KIND); };\n    }\n\n    return function () { return new IteratorConstructor(this); };\n  };\n\n  var TO_STRING_TAG = NAME + ' Iterator';\n  var INCORRECT_VALUES_NAME = false;\n  var IterablePrototype = Iterable.prototype;\n  var nativeIterator = IterablePrototype[ITERATOR$5]\n    || IterablePrototype['@@iterator']\n    || DEFAULT && IterablePrototype[DEFAULT];\n  var defaultIterator = !BUGGY_SAFARI_ITERATORS && nativeIterator || getIterationMethod(DEFAULT);\n  var anyNativeIterator = NAME === 'Array' ? IterablePrototype.entries || nativeIterator : nativeIterator;\n  var CurrentIteratorPrototype, methods, KEY;\n\n  // fix native\n  if (anyNativeIterator) {\n    CurrentIteratorPrototype = getPrototypeOf$7(anyNativeIterator.call(new Iterable()));\n    if (CurrentIteratorPrototype !== Object.prototype && CurrentIteratorPrototype.next) {\n      // Set @@toStringTag to native iterators\n      setToStringTag$5(CurrentIteratorPrototype, TO_STRING_TAG, true, true);\n      Iterators$4[TO_STRING_TAG] = returnThis;\n    }\n  }\n\n  // fix Array.prototype.{ values, @@iterator }.name in V8 / FF\n  if (PROPER_FUNCTION_NAME && DEFAULT === VALUES && nativeIterator && nativeIterator.name !== VALUES) {\n    {\n      INCORRECT_VALUES_NAME = true;\n      defaultIterator = function values() { return call$e(nativeIterator, this); };\n    }\n  }\n\n  // export additional methods\n  if (DEFAULT) {\n    methods = {\n      values: getIterationMethod(VALUES),\n      keys: IS_SET ? defaultIterator : getIterationMethod(KEYS),\n      entries: getIterationMethod(ENTRIES)\n    };\n    if (FORCED) for (KEY in methods) {\n      if (BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME || !(KEY in IterablePrototype)) {\n        defineBuiltIn$4(IterablePrototype, KEY, methods[KEY]);\n      }\n    } else $$10({ target: NAME, proto: true, forced: BUGGY_SAFARI_ITERATORS || INCORRECT_VALUES_NAME }, methods);\n  }\n\n  // define iterator\n  if ((FORCED) && IterablePrototype[ITERATOR$5] !== defaultIterator) {\n    defineBuiltIn$4(IterablePrototype, ITERATOR$5, defaultIterator, { name: DEFAULT });\n  }\n  Iterators$4[NAME] = defaultIterator;\n\n  return methods;\n};\n\n// `CreateIterResultObject` abstract operation\n// https://tc39.es/ecma262/#sec-createiterresultobject\nvar createIterResultObject$3 = function (value, done) {\n  return { value: value, done: done };\n};\n\nvar charAt$2 = stringMultibyte.charAt;\nvar toString$9 = toString$c;\nvar InternalStateModule$5 = internalState;\nvar defineIterator$2 = iteratorDefine;\nvar createIterResultObject$2 = createIterResultObject$3;\n\nvar STRING_ITERATOR = 'String Iterator';\nvar setInternalState$5 = InternalStateModule$5.set;\nvar getInternalState$2 = InternalStateModule$5.getterFor(STRING_ITERATOR);\n\n// `String.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-string.prototype-@@iterator\ndefineIterator$2(String, 'String', function (iterated) {\n  setInternalState$5(this, {\n    type: STRING_ITERATOR,\n    string: toString$9(iterated),\n    index: 0\n  });\n// `%StringIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%stringiteratorprototype%.next\n}, function next() {\n  var state = getInternalState$2(this);\n  var string = state.string;\n  var index = state.index;\n  var point;\n  if (index >= string.length) return createIterResultObject$2(undefined, true);\n  point = charAt$2(string, index);\n  state.index += point.length;\n  return createIterResultObject$2(point, false);\n});\n\nvar call$d = functionCall;\nvar anObject$8 = anObject$d;\nvar getMethod$1 = getMethod$3;\n\nvar iteratorClose$2 = function (iterator, kind, value) {\n  var innerResult, innerError;\n  anObject$8(iterator);\n  try {\n    innerResult = getMethod$1(iterator, 'return');\n    if (!innerResult) {\n      if (kind === 'throw') throw value;\n      return value;\n    }\n    innerResult = call$d(innerResult, iterator);\n  } catch (error) {\n    innerError = true;\n    innerResult = error;\n  }\n  if (kind === 'throw') throw value;\n  if (innerError) throw innerResult;\n  anObject$8(innerResult);\n  return value;\n};\n\nvar anObject$7 = anObject$d;\nvar iteratorClose$1 = iteratorClose$2;\n\n// call something on iterator step with safe closing on error\nvar callWithSafeIterationClosing$1 = function (iterator, fn, value, ENTRIES) {\n  try {\n    return ENTRIES ? fn(anObject$7(value)[0], value[1]) : fn(value);\n  } catch (error) {\n    iteratorClose$1(iterator, 'throw', error);\n  }\n};\n\nvar wellKnownSymbol$i = wellKnownSymbol$p;\nvar Iterators$3 = iterators;\n\nvar ITERATOR$4 = wellKnownSymbol$i('iterator');\nvar ArrayPrototype$l = Array.prototype;\n\n// check on default Array iterator\nvar isArrayIteratorMethod$2 = function (it) {\n  return it !== undefined && (Iterators$3.Array === it || ArrayPrototype$l[ITERATOR$4] === it);\n};\n\nvar uncurryThis$m = functionUncurryThis;\nvar isCallable$9 = isCallable$m;\nvar store = sharedStore;\n\nvar functionToString = uncurryThis$m(Function.toString);\n\n// this helper broken in `core-js@3.4.1-3.4.4`, so we can't use `shared` helper\nif (!isCallable$9(store.inspectSource)) {\n  store.inspectSource = function (it) {\n    return functionToString(it);\n  };\n}\n\nvar inspectSource$2 = store.inspectSource;\n\nvar uncurryThis$l = functionUncurryThis;\nvar fails$o = fails$y;\nvar isCallable$8 = isCallable$m;\nvar classof$c = classof$g;\nvar getBuiltIn$c = getBuiltIn$f;\nvar inspectSource$1 = inspectSource$2;\n\nvar noop = function () { /* empty */ };\nvar empty = [];\nvar construct$4 = getBuiltIn$c('Reflect', 'construct');\nvar constructorRegExp = /^\\s*(?:class|function)\\b/;\nvar exec$2 = uncurryThis$l(constructorRegExp.exec);\nvar INCORRECT_TO_STRING = !constructorRegExp.test(noop);\n\nvar isConstructorModern = function isConstructor(argument) {\n  if (!isCallable$8(argument)) return false;\n  try {\n    construct$4(noop, empty, argument);\n    return true;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar isConstructorLegacy = function isConstructor(argument) {\n  if (!isCallable$8(argument)) return false;\n  switch (classof$c(argument)) {\n    case 'AsyncFunction':\n    case 'GeneratorFunction':\n    case 'AsyncGeneratorFunction': return false;\n  }\n  try {\n    // we can't check .prototype since constructors produced by .bind haven't it\n    // `Function#toString` throws on some built-it function in some legacy engines\n    // (for example, `DOMQuad` and similar in FF41-)\n    return INCORRECT_TO_STRING || !!exec$2(constructorRegExp, inspectSource$1(argument));\n  } catch (error) {\n    return true;\n  }\n};\n\nisConstructorLegacy.sham = true;\n\n// `IsConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-isconstructor\nvar isConstructor$4 = !construct$4 || fails$o(function () {\n  var called;\n  return isConstructorModern(isConstructorModern.call)\n    || !isConstructorModern(Object)\n    || !isConstructorModern(function () { called = true; })\n    || called;\n}) ? isConstructorLegacy : isConstructorModern;\n\nvar toPropertyKey$1 = toPropertyKey$4;\nvar definePropertyModule$2 = objectDefineProperty;\nvar createPropertyDescriptor$3 = createPropertyDescriptor$7;\n\nvar createProperty$6 = function (object, key, value) {\n  var propertyKey = toPropertyKey$1(key);\n  if (propertyKey in object) definePropertyModule$2.f(object, propertyKey, createPropertyDescriptor$3(0, value));\n  else object[propertyKey] = value;\n};\n\nvar classof$b = classof$g;\nvar getMethod = getMethod$3;\nvar isNullOrUndefined$3 = isNullOrUndefined$6;\nvar Iterators$2 = iterators;\nvar wellKnownSymbol$h = wellKnownSymbol$p;\n\nvar ITERATOR$3 = wellKnownSymbol$h('iterator');\n\nvar getIteratorMethod$9 = function (it) {\n  if (!isNullOrUndefined$3(it)) return getMethod(it, ITERATOR$3)\n    || getMethod(it, '@@iterator')\n    || Iterators$2[classof$b(it)];\n};\n\nvar call$c = functionCall;\nvar aCallable$a = aCallable$e;\nvar anObject$6 = anObject$d;\nvar tryToString$4 = tryToString$6;\nvar getIteratorMethod$8 = getIteratorMethod$9;\n\nvar $TypeError$a = TypeError;\n\nvar getIterator$8 = function (argument, usingIterator) {\n  var iteratorMethod = arguments.length < 2 ? getIteratorMethod$8(argument) : usingIterator;\n  if (aCallable$a(iteratorMethod)) return anObject$6(call$c(iteratorMethod, argument));\n  throw new $TypeError$a(tryToString$4(argument) + ' is not iterable');\n};\n\nvar bind$g = functionBindContext;\nvar call$b = functionCall;\nvar toObject$c = toObject$f;\nvar callWithSafeIterationClosing = callWithSafeIterationClosing$1;\nvar isArrayIteratorMethod$1 = isArrayIteratorMethod$2;\nvar isConstructor$3 = isConstructor$4;\nvar lengthOfArrayLike$c = lengthOfArrayLike$e;\nvar createProperty$5 = createProperty$6;\nvar getIterator$7 = getIterator$8;\nvar getIteratorMethod$7 = getIteratorMethod$9;\n\nvar $Array$3 = Array;\n\n// `Array.from` method implementation\n// https://tc39.es/ecma262/#sec-array.from\nvar arrayFrom = function from(arrayLike /* , mapfn = undefined, thisArg = undefined */) {\n  var O = toObject$c(arrayLike);\n  var IS_CONSTRUCTOR = isConstructor$3(this);\n  var argumentsLength = arguments.length;\n  var mapfn = argumentsLength > 1 ? arguments[1] : undefined;\n  var mapping = mapfn !== undefined;\n  if (mapping) mapfn = bind$g(mapfn, argumentsLength > 2 ? arguments[2] : undefined);\n  var iteratorMethod = getIteratorMethod$7(O);\n  var index = 0;\n  var length, result, step, iterator, next, value;\n  // if the target is not iterable or it's an array with the default iterator - use a simple case\n  if (iteratorMethod && !(this === $Array$3 && isArrayIteratorMethod$1(iteratorMethod))) {\n    iterator = getIterator$7(O, iteratorMethod);\n    next = iterator.next;\n    result = IS_CONSTRUCTOR ? new this() : [];\n    for (;!(step = call$b(next, iterator)).done; index++) {\n      value = mapping ? callWithSafeIterationClosing(iterator, mapfn, [step.value, index], true) : step.value;\n      createProperty$5(result, index, value);\n    }\n  } else {\n    length = lengthOfArrayLike$c(O);\n    result = IS_CONSTRUCTOR ? new this(length) : $Array$3(length);\n    for (;length > index; index++) {\n      value = mapping ? mapfn(O[index], index) : O[index];\n      createProperty$5(result, index, value);\n    }\n  }\n  result.length = index;\n  return result;\n};\n\nvar wellKnownSymbol$g = wellKnownSymbol$p;\n\nvar ITERATOR$2 = wellKnownSymbol$g('iterator');\nvar SAFE_CLOSING = false;\n\ntry {\n  var called = 0;\n  var iteratorWithReturn = {\n    next: function () {\n      return { done: !!called++ };\n    },\n    'return': function () {\n      SAFE_CLOSING = true;\n    }\n  };\n  iteratorWithReturn[ITERATOR$2] = function () {\n    return this;\n  };\n  // eslint-disable-next-line es/no-array-from, no-throw-literal -- required for testing\n  Array.from(iteratorWithReturn, function () { throw 2; });\n} catch (error) { /* empty */ }\n\nvar checkCorrectnessOfIteration$2 = function (exec, SKIP_CLOSING) {\n  try {\n    if (!SKIP_CLOSING && !SAFE_CLOSING) return false;\n  } catch (error) { return false; } // workaround of old WebKit + `eval` bug\n  var ITERATION_SUPPORT = false;\n  try {\n    var object = {};\n    object[ITERATOR$2] = function () {\n      return {\n        next: function () {\n          return { done: ITERATION_SUPPORT = true };\n        }\n      };\n    };\n    exec(object);\n  } catch (error) { /* empty */ }\n  return ITERATION_SUPPORT;\n};\n\nvar $$$ = _export;\nvar from$6 = arrayFrom;\nvar checkCorrectnessOfIteration$1 = checkCorrectnessOfIteration$2;\n\nvar INCORRECT_ITERATION = !checkCorrectnessOfIteration$1(function (iterable) {\n  // eslint-disable-next-line es/no-array-from -- required for testing\n  Array.from(iterable);\n});\n\n// `Array.from` method\n// https://tc39.es/ecma262/#sec-array.from\n$$$({ target: 'Array', stat: true, forced: INCORRECT_ITERATION }, {\n  from: from$6\n});\n\nvar path$r = path$u;\n\nvar from$5 = path$r.Array.from;\n\nvar parent$1k = from$5;\n\nvar from$4 = parent$1k;\n\nvar from$3 = from$4;\n\nvar _Array$from$1 = /*@__PURE__*/getDefaultExportFromCjs(from$3);\n\nvar toIndexedObject$6 = toIndexedObject$b;\nvar Iterators$1 = iterators;\nvar InternalStateModule$4 = internalState;\nobjectDefineProperty.f;\nvar defineIterator$1 = iteratorDefine;\nvar createIterResultObject$1 = createIterResultObject$3;\n\nvar ARRAY_ITERATOR = 'Array Iterator';\nvar setInternalState$4 = InternalStateModule$4.set;\nvar getInternalState$1 = InternalStateModule$4.getterFor(ARRAY_ITERATOR);\n\n// `Array.prototype.entries` method\n// https://tc39.es/ecma262/#sec-array.prototype.entries\n// `Array.prototype.keys` method\n// https://tc39.es/ecma262/#sec-array.prototype.keys\n// `Array.prototype.values` method\n// https://tc39.es/ecma262/#sec-array.prototype.values\n// `Array.prototype[@@iterator]` method\n// https://tc39.es/ecma262/#sec-array.prototype-@@iterator\n// `CreateArrayIterator` internal method\n// https://tc39.es/ecma262/#sec-createarrayiterator\ndefineIterator$1(Array, 'Array', function (iterated, kind) {\n  setInternalState$4(this, {\n    type: ARRAY_ITERATOR,\n    target: toIndexedObject$6(iterated), // target\n    index: 0,                          // next index\n    kind: kind                         // kind\n  });\n// `%ArrayIteratorPrototype%.next` method\n// https://tc39.es/ecma262/#sec-%arrayiteratorprototype%.next\n}, function () {\n  var state = getInternalState$1(this);\n  var target = state.target;\n  var kind = state.kind;\n  var index = state.index++;\n  if (!target || index >= target.length) {\n    state.target = undefined;\n    return createIterResultObject$1(undefined, true);\n  }\n  switch (kind) {\n    case 'keys': return createIterResultObject$1(index, false);\n    case 'values': return createIterResultObject$1(target[index], false);\n  } return createIterResultObject$1([index, target[index]], false);\n}, 'values');\n\n// argumentsList[@@iterator] is %ArrayProto_values%\n// https://tc39.es/ecma262/#sec-createunmappedargumentsobject\n// https://tc39.es/ecma262/#sec-createmappedargumentsobject\nIterators$1.Arguments = Iterators$1.Array;\n\nvar getIteratorMethod$6 = getIteratorMethod$9;\n\nvar getIteratorMethod_1 = getIteratorMethod$6;\n\n// iterable DOM collections\n// flag - `iterable` interface - 'entries', 'keys', 'values', 'forEach' methods\nvar domIterables = {\n  CSSRuleList: 0,\n  CSSStyleDeclaration: 0,\n  CSSValueList: 0,\n  ClientRectList: 0,\n  DOMRectList: 0,\n  DOMStringList: 0,\n  DOMTokenList: 1,\n  DataTransferItemList: 0,\n  FileList: 0,\n  HTMLAllCollection: 0,\n  HTMLCollection: 0,\n  HTMLFormElement: 0,\n  HTMLSelectElement: 0,\n  MediaList: 0,\n  MimeTypeArray: 0,\n  NamedNodeMap: 0,\n  NodeList: 1,\n  PaintRequestList: 0,\n  Plugin: 0,\n  PluginArray: 0,\n  SVGLengthList: 0,\n  SVGNumberList: 0,\n  SVGPathSegList: 0,\n  SVGPointList: 0,\n  SVGStringList: 0,\n  SVGTransformList: 0,\n  SourceBufferList: 0,\n  StyleSheetList: 0,\n  TextTrackCueList: 0,\n  TextTrackList: 0,\n  TouchList: 0\n};\n\nvar DOMIterables$4 = domIterables;\nvar global$f = global$q;\nvar classof$a = classof$g;\nvar createNonEnumerableProperty$4 = createNonEnumerableProperty$9;\nvar Iterators = iterators;\nvar wellKnownSymbol$f = wellKnownSymbol$p;\n\nvar TO_STRING_TAG$1 = wellKnownSymbol$f('toStringTag');\n\nfor (var COLLECTION_NAME in DOMIterables$4) {\n  var Collection = global$f[COLLECTION_NAME];\n  var CollectionPrototype = Collection && Collection.prototype;\n  if (CollectionPrototype && classof$a(CollectionPrototype) !== TO_STRING_TAG$1) {\n    createNonEnumerableProperty$4(CollectionPrototype, TO_STRING_TAG$1, COLLECTION_NAME);\n  }\n  Iterators[COLLECTION_NAME] = Iterators.Array;\n}\n\nvar parent$1j = getIteratorMethod_1;\n\n\nvar getIteratorMethod$5 = parent$1j;\n\nvar parent$1i = getIteratorMethod$5;\n\nvar getIteratorMethod$4 = parent$1i;\n\nvar parent$1h = getIteratorMethod$4;\n\nvar getIteratorMethod$3 = parent$1h;\n\nvar getIteratorMethod$2 = getIteratorMethod$3;\n\nvar _getIteratorMethod$1 = /*@__PURE__*/getDefaultExportFromCjs(getIteratorMethod$2);\n\nvar getIteratorMethod$1 = getIteratorMethod$2;\n\nvar _getIteratorMethod = /*@__PURE__*/getDefaultExportFromCjs(getIteratorMethod$1);\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nvar defineProperty$d = {exports: {}};\n\nvar $$_ = _export;\nvar DESCRIPTORS$b = descriptors;\nvar defineProperty$c = objectDefineProperty.f;\n\n// `Object.defineProperty` method\n// https://tc39.es/ecma262/#sec-object.defineproperty\n// eslint-disable-next-line es/no-object-defineproperty -- safe\n$$_({ target: 'Object', stat: true, forced: Object.defineProperty !== defineProperty$c, sham: !DESCRIPTORS$b }, {\n  defineProperty: defineProperty$c\n});\n\nvar path$q = path$u;\n\nvar Object$4 = path$q.Object;\n\nvar defineProperty$b = defineProperty$d.exports = function defineProperty(it, key, desc) {\n  return Object$4.defineProperty(it, key, desc);\n};\n\nif (Object$4.defineProperty.sham) defineProperty$b.sham = true;\n\nvar definePropertyExports = defineProperty$d.exports;\n\nvar parent$1g = definePropertyExports;\n\nvar defineProperty$a = parent$1g;\n\nvar parent$1f = defineProperty$a;\n\nvar defineProperty$9 = parent$1f;\n\nvar parent$1e = defineProperty$9;\n\nvar defineProperty$8 = parent$1e;\n\nvar defineProperty$7 = defineProperty$8;\n\nvar _Object$defineProperty$1 = /*@__PURE__*/getDefaultExportFromCjs(defineProperty$7);\n\nvar classof$9 = classofRaw$2;\n\n// `IsArray` abstract operation\n// https://tc39.es/ecma262/#sec-isarray\n// eslint-disable-next-line es/no-array-isarray -- safe\nvar isArray$e = Array.isArray || function isArray(argument) {\n  return classof$9(argument) === 'Array';\n};\n\nvar $TypeError$9 = TypeError;\nvar MAX_SAFE_INTEGER = 0x1FFFFFFFFFFFFF; // 2 ** 53 - 1 == 9007199254740991\n\nvar doesNotExceedSafeInteger$4 = function (it) {\n  if (it > MAX_SAFE_INTEGER) throw $TypeError$9('Maximum allowed index exceeded');\n  return it;\n};\n\nvar isArray$d = isArray$e;\nvar isConstructor$2 = isConstructor$4;\nvar isObject$c = isObject$j;\nvar wellKnownSymbol$e = wellKnownSymbol$p;\n\nvar SPECIES$5 = wellKnownSymbol$e('species');\nvar $Array$2 = Array;\n\n// a part of `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nvar arraySpeciesConstructor$1 = function (originalArray) {\n  var C;\n  if (isArray$d(originalArray)) {\n    C = originalArray.constructor;\n    // cross-realm fallback\n    if (isConstructor$2(C) && (C === $Array$2 || isArray$d(C.prototype))) C = undefined;\n    else if (isObject$c(C)) {\n      C = C[SPECIES$5];\n      if (C === null) C = undefined;\n    }\n  } return C === undefined ? $Array$2 : C;\n};\n\nvar arraySpeciesConstructor = arraySpeciesConstructor$1;\n\n// `ArraySpeciesCreate` abstract operation\n// https://tc39.es/ecma262/#sec-arrayspeciescreate\nvar arraySpeciesCreate$4 = function (originalArray, length) {\n  return new (arraySpeciesConstructor(originalArray))(length === 0 ? 0 : length);\n};\n\nvar fails$n = fails$y;\nvar wellKnownSymbol$d = wellKnownSymbol$p;\nvar V8_VERSION$2 = engineV8Version;\n\nvar SPECIES$4 = wellKnownSymbol$d('species');\n\nvar arrayMethodHasSpeciesSupport$5 = function (METHOD_NAME) {\n  // We can't use this feature detection in V8 since it causes\n  // deoptimization and serious performance degradation\n  // https://github.com/zloirock/core-js/issues/677\n  return V8_VERSION$2 >= 51 || !fails$n(function () {\n    var array = [];\n    var constructor = array.constructor = {};\n    constructor[SPECIES$4] = function () {\n      return { foo: 1 };\n    };\n    return array[METHOD_NAME](Boolean).foo !== 1;\n  });\n};\n\nvar $$Z = _export;\nvar fails$m = fails$y;\nvar isArray$c = isArray$e;\nvar isObject$b = isObject$j;\nvar toObject$b = toObject$f;\nvar lengthOfArrayLike$b = lengthOfArrayLike$e;\nvar doesNotExceedSafeInteger$3 = doesNotExceedSafeInteger$4;\nvar createProperty$4 = createProperty$6;\nvar arraySpeciesCreate$3 = arraySpeciesCreate$4;\nvar arrayMethodHasSpeciesSupport$4 = arrayMethodHasSpeciesSupport$5;\nvar wellKnownSymbol$c = wellKnownSymbol$p;\nvar V8_VERSION$1 = engineV8Version;\n\nvar IS_CONCAT_SPREADABLE = wellKnownSymbol$c('isConcatSpreadable');\n\n// We can't use this feature detection in V8 since it causes\n// deoptimization and serious performance degradation\n// https://github.com/zloirock/core-js/issues/679\nvar IS_CONCAT_SPREADABLE_SUPPORT = V8_VERSION$1 >= 51 || !fails$m(function () {\n  var array = [];\n  array[IS_CONCAT_SPREADABLE] = false;\n  return array.concat()[0] !== array;\n});\n\nvar isConcatSpreadable = function (O) {\n  if (!isObject$b(O)) return false;\n  var spreadable = O[IS_CONCAT_SPREADABLE];\n  return spreadable !== undefined ? !!spreadable : isArray$c(O);\n};\n\nvar FORCED$9 = !IS_CONCAT_SPREADABLE_SUPPORT || !arrayMethodHasSpeciesSupport$4('concat');\n\n// `Array.prototype.concat` method\n// https://tc39.es/ecma262/#sec-array.prototype.concat\n// with adding support of @@isConcatSpreadable and @@species\n$$Z({ target: 'Array', proto: true, arity: 1, forced: FORCED$9 }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  concat: function concat(arg) {\n    var O = toObject$b(this);\n    var A = arraySpeciesCreate$3(O, 0);\n    var n = 0;\n    var i, k, length, len, E;\n    for (i = -1, length = arguments.length; i < length; i++) {\n      E = i === -1 ? O : arguments[i];\n      if (isConcatSpreadable(E)) {\n        len = lengthOfArrayLike$b(E);\n        doesNotExceedSafeInteger$3(n + len);\n        for (k = 0; k < len; k++, n++) if (k in E) createProperty$4(A, n, E[k]);\n      } else {\n        doesNotExceedSafeInteger$3(n + 1);\n        createProperty$4(A, n++, E);\n      }\n    }\n    A.length = n;\n    return A;\n  }\n});\n\nvar objectGetOwnPropertyNames = {};\n\nvar internalObjectKeys = objectKeysInternal;\nvar enumBugKeys = enumBugKeys$3;\n\nvar hiddenKeys$2 = enumBugKeys.concat('length', 'prototype');\n\n// `Object.getOwnPropertyNames` method\n// https://tc39.es/ecma262/#sec-object.getownpropertynames\n// eslint-disable-next-line es/no-object-getownpropertynames -- safe\nobjectGetOwnPropertyNames.f = Object.getOwnPropertyNames || function getOwnPropertyNames(O) {\n  return internalObjectKeys(O, hiddenKeys$2);\n};\n\nvar objectGetOwnPropertyNamesExternal = {};\n\nvar toAbsoluteIndex$3 = toAbsoluteIndex$5;\nvar lengthOfArrayLike$a = lengthOfArrayLike$e;\nvar createProperty$3 = createProperty$6;\n\nvar $Array$1 = Array;\nvar max$2 = Math.max;\n\nvar arraySliceSimple = function (O, start, end) {\n  var length = lengthOfArrayLike$a(O);\n  var k = toAbsoluteIndex$3(start, length);\n  var fin = toAbsoluteIndex$3(end === undefined ? length : end, length);\n  var result = $Array$1(max$2(fin - k, 0));\n  var n = 0;\n  for (; k < fin; k++, n++) createProperty$3(result, n, O[k]);\n  result.length = n;\n  return result;\n};\n\n/* eslint-disable es/no-object-getownpropertynames -- safe */\nvar classof$8 = classofRaw$2;\nvar toIndexedObject$5 = toIndexedObject$b;\nvar $getOwnPropertyNames$1 = objectGetOwnPropertyNames.f;\nvar arraySlice$6 = arraySliceSimple;\n\nvar windowNames = typeof window == 'object' && window && Object.getOwnPropertyNames\n  ? Object.getOwnPropertyNames(window) : [];\n\nvar getWindowNames = function (it) {\n  try {\n    return $getOwnPropertyNames$1(it);\n  } catch (error) {\n    return arraySlice$6(windowNames);\n  }\n};\n\n// fallback for IE11 buggy Object.getOwnPropertyNames with iframe and window\nobjectGetOwnPropertyNamesExternal.f = function getOwnPropertyNames(it) {\n  return windowNames && classof$8(it) === 'Window'\n    ? getWindowNames(it)\n    : $getOwnPropertyNames$1(toIndexedObject$5(it));\n};\n\nvar objectGetOwnPropertySymbols = {};\n\n// eslint-disable-next-line es/no-object-getownpropertysymbols -- safe\nobjectGetOwnPropertySymbols.f = Object.getOwnPropertySymbols;\n\nvar defineProperty$6 = objectDefineProperty;\n\nvar defineBuiltInAccessor$3 = function (target, name, descriptor) {\n  return defineProperty$6.f(target, name, descriptor);\n};\n\nvar wellKnownSymbolWrapped = {};\n\nvar wellKnownSymbol$b = wellKnownSymbol$p;\n\nwellKnownSymbolWrapped.f = wellKnownSymbol$b;\n\nvar path$p = path$u;\nvar hasOwn$b = hasOwnProperty_1;\nvar wrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;\nvar defineProperty$5 = objectDefineProperty.f;\n\nvar wellKnownSymbolDefine = function (NAME) {\n  var Symbol = path$p.Symbol || (path$p.Symbol = {});\n  if (!hasOwn$b(Symbol, NAME)) defineProperty$5(Symbol, NAME, {\n    value: wrappedWellKnownSymbolModule$1.f(NAME)\n  });\n};\n\nvar call$a = functionCall;\nvar getBuiltIn$b = getBuiltIn$f;\nvar wellKnownSymbol$a = wellKnownSymbol$p;\nvar defineBuiltIn$3 = defineBuiltIn$6;\n\nvar symbolDefineToPrimitive = function () {\n  var Symbol = getBuiltIn$b('Symbol');\n  var SymbolPrototype = Symbol && Symbol.prototype;\n  var valueOf = SymbolPrototype && SymbolPrototype.valueOf;\n  var TO_PRIMITIVE = wellKnownSymbol$a('toPrimitive');\n\n  if (SymbolPrototype && !SymbolPrototype[TO_PRIMITIVE]) {\n    // `Symbol.prototype[@@toPrimitive]` method\n    // https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\n    // eslint-disable-next-line no-unused-vars -- required for .length\n    defineBuiltIn$3(SymbolPrototype, TO_PRIMITIVE, function (hint) {\n      return call$a(valueOf, this);\n    }, { arity: 1 });\n  }\n};\n\nvar bind$f = functionBindContext;\nvar uncurryThis$k = functionUncurryThis;\nvar IndexedObject$2 = indexedObject;\nvar toObject$a = toObject$f;\nvar lengthOfArrayLike$9 = lengthOfArrayLike$e;\nvar arraySpeciesCreate$2 = arraySpeciesCreate$4;\n\nvar push$c = uncurryThis$k([].push);\n\n// `Array.prototype.{ forEach, map, filter, some, every, find, findIndex, filterReject }` methods implementation\nvar createMethod$3 = function (TYPE) {\n  var IS_MAP = TYPE === 1;\n  var IS_FILTER = TYPE === 2;\n  var IS_SOME = TYPE === 3;\n  var IS_EVERY = TYPE === 4;\n  var IS_FIND_INDEX = TYPE === 6;\n  var IS_FILTER_REJECT = TYPE === 7;\n  var NO_HOLES = TYPE === 5 || IS_FIND_INDEX;\n  return function ($this, callbackfn, that, specificCreate) {\n    var O = toObject$a($this);\n    var self = IndexedObject$2(O);\n    var boundFunction = bind$f(callbackfn, that);\n    var length = lengthOfArrayLike$9(self);\n    var index = 0;\n    var create = specificCreate || arraySpeciesCreate$2;\n    var target = IS_MAP ? create($this, length) : IS_FILTER || IS_FILTER_REJECT ? create($this, 0) : undefined;\n    var value, result;\n    for (;length > index; index++) if (NO_HOLES || index in self) {\n      value = self[index];\n      result = boundFunction(value, index, O);\n      if (TYPE) {\n        if (IS_MAP) target[index] = result; // map\n        else if (result) switch (TYPE) {\n          case 3: return true;              // some\n          case 5: return value;             // find\n          case 6: return index;             // findIndex\n          case 2: push$c(target, value);      // filter\n        } else switch (TYPE) {\n          case 4: return false;             // every\n          case 7: push$c(target, value);      // filterReject\n        }\n      }\n    }\n    return IS_FIND_INDEX ? -1 : IS_SOME || IS_EVERY ? IS_EVERY : target;\n  };\n};\n\nvar arrayIteration = {\n  // `Array.prototype.forEach` method\n  // https://tc39.es/ecma262/#sec-array.prototype.foreach\n  forEach: createMethod$3(0),\n  // `Array.prototype.map` method\n  // https://tc39.es/ecma262/#sec-array.prototype.map\n  map: createMethod$3(1),\n  // `Array.prototype.filter` method\n  // https://tc39.es/ecma262/#sec-array.prototype.filter\n  filter: createMethod$3(2),\n  // `Array.prototype.some` method\n  // https://tc39.es/ecma262/#sec-array.prototype.some\n  some: createMethod$3(3),\n  // `Array.prototype.every` method\n  // https://tc39.es/ecma262/#sec-array.prototype.every\n  every: createMethod$3(4),\n  // `Array.prototype.find` method\n  // https://tc39.es/ecma262/#sec-array.prototype.find\n  find: createMethod$3(5),\n  // `Array.prototype.findIndex` method\n  // https://tc39.es/ecma262/#sec-array.prototype.findIndex\n  findIndex: createMethod$3(6),\n  // `Array.prototype.filterReject` method\n  // https://github.com/tc39/proposal-array-filtering\n  filterReject: createMethod$3(7)\n};\n\nvar $$Y = _export;\nvar global$e = global$q;\nvar call$9 = functionCall;\nvar uncurryThis$j = functionUncurryThis;\nvar DESCRIPTORS$a = descriptors;\nvar NATIVE_SYMBOL$3 = symbolConstructorDetection;\nvar fails$l = fails$y;\nvar hasOwn$a = hasOwnProperty_1;\nvar isPrototypeOf$q = objectIsPrototypeOf;\nvar anObject$5 = anObject$d;\nvar toIndexedObject$4 = toIndexedObject$b;\nvar toPropertyKey = toPropertyKey$4;\nvar $toString = toString$c;\nvar createPropertyDescriptor$2 = createPropertyDescriptor$7;\nvar nativeObjectCreate = objectCreate;\nvar objectKeys$2 = objectKeys$4;\nvar getOwnPropertyNamesModule$2 = objectGetOwnPropertyNames;\nvar getOwnPropertyNamesExternal = objectGetOwnPropertyNamesExternal;\nvar getOwnPropertySymbolsModule$3 = objectGetOwnPropertySymbols;\nvar getOwnPropertyDescriptorModule$2 = objectGetOwnPropertyDescriptor;\nvar definePropertyModule$1 = objectDefineProperty;\nvar definePropertiesModule = objectDefineProperties;\nvar propertyIsEnumerableModule$1 = objectPropertyIsEnumerable;\nvar defineBuiltIn$2 = defineBuiltIn$6;\nvar defineBuiltInAccessor$2 = defineBuiltInAccessor$3;\nvar shared$3 = sharedExports;\nvar sharedKey = sharedKey$4;\nvar hiddenKeys$1 = hiddenKeys$6;\nvar uid$1 = uid$4;\nvar wellKnownSymbol$9 = wellKnownSymbol$p;\nvar wrappedWellKnownSymbolModule = wellKnownSymbolWrapped;\nvar defineWellKnownSymbol$l = wellKnownSymbolDefine;\nvar defineSymbolToPrimitive$1 = symbolDefineToPrimitive;\nvar setToStringTag$4 = setToStringTag$7;\nvar InternalStateModule$3 = internalState;\nvar $forEach$1 = arrayIteration.forEach;\n\nvar HIDDEN = sharedKey('hidden');\nvar SYMBOL = 'Symbol';\nvar PROTOTYPE = 'prototype';\n\nvar setInternalState$3 = InternalStateModule$3.set;\nvar getInternalState = InternalStateModule$3.getterFor(SYMBOL);\n\nvar ObjectPrototype$1 = Object[PROTOTYPE];\nvar $Symbol = global$e.Symbol;\nvar SymbolPrototype = $Symbol && $Symbol[PROTOTYPE];\nvar RangeError$1 = global$e.RangeError;\nvar TypeError$2 = global$e.TypeError;\nvar QObject = global$e.QObject;\nvar nativeGetOwnPropertyDescriptor$1 = getOwnPropertyDescriptorModule$2.f;\nvar nativeDefineProperty = definePropertyModule$1.f;\nvar nativeGetOwnPropertyNames = getOwnPropertyNamesExternal.f;\nvar nativePropertyIsEnumerable = propertyIsEnumerableModule$1.f;\nvar push$b = uncurryThis$j([].push);\n\nvar AllSymbols = shared$3('symbols');\nvar ObjectPrototypeSymbols = shared$3('op-symbols');\nvar WellKnownSymbolsStore$1 = shared$3('wks');\n\n// Don't use setters in Qt Script, https://github.com/zloirock/core-js/issues/173\nvar USE_SETTER = !QObject || !QObject[PROTOTYPE] || !QObject[PROTOTYPE].findChild;\n\n// fallback for old Android, https://code.google.com/p/v8/issues/detail?id=687\nvar fallbackDefineProperty = function (O, P, Attributes) {\n  var ObjectPrototypeDescriptor = nativeGetOwnPropertyDescriptor$1(ObjectPrototype$1, P);\n  if (ObjectPrototypeDescriptor) delete ObjectPrototype$1[P];\n  nativeDefineProperty(O, P, Attributes);\n  if (ObjectPrototypeDescriptor && O !== ObjectPrototype$1) {\n    nativeDefineProperty(ObjectPrototype$1, P, ObjectPrototypeDescriptor);\n  }\n};\n\nvar setSymbolDescriptor = DESCRIPTORS$a && fails$l(function () {\n  return nativeObjectCreate(nativeDefineProperty({}, 'a', {\n    get: function () { return nativeDefineProperty(this, 'a', { value: 7 }).a; }\n  })).a !== 7;\n}) ? fallbackDefineProperty : nativeDefineProperty;\n\nvar wrap = function (tag, description) {\n  var symbol = AllSymbols[tag] = nativeObjectCreate(SymbolPrototype);\n  setInternalState$3(symbol, {\n    type: SYMBOL,\n    tag: tag,\n    description: description\n  });\n  if (!DESCRIPTORS$a) symbol.description = description;\n  return symbol;\n};\n\nvar $defineProperty = function defineProperty(O, P, Attributes) {\n  if (O === ObjectPrototype$1) $defineProperty(ObjectPrototypeSymbols, P, Attributes);\n  anObject$5(O);\n  var key = toPropertyKey(P);\n  anObject$5(Attributes);\n  if (hasOwn$a(AllSymbols, key)) {\n    if (!Attributes.enumerable) {\n      if (!hasOwn$a(O, HIDDEN)) nativeDefineProperty(O, HIDDEN, createPropertyDescriptor$2(1, {}));\n      O[HIDDEN][key] = true;\n    } else {\n      if (hasOwn$a(O, HIDDEN) && O[HIDDEN][key]) O[HIDDEN][key] = false;\n      Attributes = nativeObjectCreate(Attributes, { enumerable: createPropertyDescriptor$2(0, false) });\n    } return setSymbolDescriptor(O, key, Attributes);\n  } return nativeDefineProperty(O, key, Attributes);\n};\n\nvar $defineProperties = function defineProperties(O, Properties) {\n  anObject$5(O);\n  var properties = toIndexedObject$4(Properties);\n  var keys = objectKeys$2(properties).concat($getOwnPropertySymbols(properties));\n  $forEach$1(keys, function (key) {\n    if (!DESCRIPTORS$a || call$9($propertyIsEnumerable$1, properties, key)) $defineProperty(O, key, properties[key]);\n  });\n  return O;\n};\n\nvar $create = function create(O, Properties) {\n  return Properties === undefined ? nativeObjectCreate(O) : $defineProperties(nativeObjectCreate(O), Properties);\n};\n\nvar $propertyIsEnumerable$1 = function propertyIsEnumerable(V) {\n  var P = toPropertyKey(V);\n  var enumerable = call$9(nativePropertyIsEnumerable, this, P);\n  if (this === ObjectPrototype$1 && hasOwn$a(AllSymbols, P) && !hasOwn$a(ObjectPrototypeSymbols, P)) return false;\n  return enumerable || !hasOwn$a(this, P) || !hasOwn$a(AllSymbols, P) || hasOwn$a(this, HIDDEN) && this[HIDDEN][P]\n    ? enumerable : true;\n};\n\nvar $getOwnPropertyDescriptor = function getOwnPropertyDescriptor(O, P) {\n  var it = toIndexedObject$4(O);\n  var key = toPropertyKey(P);\n  if (it === ObjectPrototype$1 && hasOwn$a(AllSymbols, key) && !hasOwn$a(ObjectPrototypeSymbols, key)) return;\n  var descriptor = nativeGetOwnPropertyDescriptor$1(it, key);\n  if (descriptor && hasOwn$a(AllSymbols, key) && !(hasOwn$a(it, HIDDEN) && it[HIDDEN][key])) {\n    descriptor.enumerable = true;\n  }\n  return descriptor;\n};\n\nvar $getOwnPropertyNames = function getOwnPropertyNames(O) {\n  var names = nativeGetOwnPropertyNames(toIndexedObject$4(O));\n  var result = [];\n  $forEach$1(names, function (key) {\n    if (!hasOwn$a(AllSymbols, key) && !hasOwn$a(hiddenKeys$1, key)) push$b(result, key);\n  });\n  return result;\n};\n\nvar $getOwnPropertySymbols = function (O) {\n  var IS_OBJECT_PROTOTYPE = O === ObjectPrototype$1;\n  var names = nativeGetOwnPropertyNames(IS_OBJECT_PROTOTYPE ? ObjectPrototypeSymbols : toIndexedObject$4(O));\n  var result = [];\n  $forEach$1(names, function (key) {\n    if (hasOwn$a(AllSymbols, key) && (!IS_OBJECT_PROTOTYPE || hasOwn$a(ObjectPrototype$1, key))) {\n      push$b(result, AllSymbols[key]);\n    }\n  });\n  return result;\n};\n\n// `Symbol` constructor\n// https://tc39.es/ecma262/#sec-symbol-constructor\nif (!NATIVE_SYMBOL$3) {\n  $Symbol = function Symbol() {\n    if (isPrototypeOf$q(SymbolPrototype, this)) throw new TypeError$2('Symbol is not a constructor');\n    var description = !arguments.length || arguments[0] === undefined ? undefined : $toString(arguments[0]);\n    var tag = uid$1(description);\n    var setter = function (value) {\n      if (this === ObjectPrototype$1) call$9(setter, ObjectPrototypeSymbols, value);\n      if (hasOwn$a(this, HIDDEN) && hasOwn$a(this[HIDDEN], tag)) this[HIDDEN][tag] = false;\n      var descriptor = createPropertyDescriptor$2(1, value);\n      try {\n        setSymbolDescriptor(this, tag, descriptor);\n      } catch (error) {\n        if (!(error instanceof RangeError$1)) throw error;\n        fallbackDefineProperty(this, tag, descriptor);\n      }\n    };\n    if (DESCRIPTORS$a && USE_SETTER) setSymbolDescriptor(ObjectPrototype$1, tag, { configurable: true, set: setter });\n    return wrap(tag, description);\n  };\n\n  SymbolPrototype = $Symbol[PROTOTYPE];\n\n  defineBuiltIn$2(SymbolPrototype, 'toString', function toString() {\n    return getInternalState(this).tag;\n  });\n\n  defineBuiltIn$2($Symbol, 'withoutSetter', function (description) {\n    return wrap(uid$1(description), description);\n  });\n\n  propertyIsEnumerableModule$1.f = $propertyIsEnumerable$1;\n  definePropertyModule$1.f = $defineProperty;\n  definePropertiesModule.f = $defineProperties;\n  getOwnPropertyDescriptorModule$2.f = $getOwnPropertyDescriptor;\n  getOwnPropertyNamesModule$2.f = getOwnPropertyNamesExternal.f = $getOwnPropertyNames;\n  getOwnPropertySymbolsModule$3.f = $getOwnPropertySymbols;\n\n  wrappedWellKnownSymbolModule.f = function (name) {\n    return wrap(wellKnownSymbol$9(name), name);\n  };\n\n  if (DESCRIPTORS$a) {\n    // https://github.com/tc39/proposal-Symbol-description\n    defineBuiltInAccessor$2(SymbolPrototype, 'description', {\n      configurable: true,\n      get: function description() {\n        return getInternalState(this).description;\n      }\n    });\n  }\n}\n\n$$Y({ global: true, constructor: true, wrap: true, forced: !NATIVE_SYMBOL$3, sham: !NATIVE_SYMBOL$3 }, {\n  Symbol: $Symbol\n});\n\n$forEach$1(objectKeys$2(WellKnownSymbolsStore$1), function (name) {\n  defineWellKnownSymbol$l(name);\n});\n\n$$Y({ target: SYMBOL, stat: true, forced: !NATIVE_SYMBOL$3 }, {\n  useSetter: function () { USE_SETTER = true; },\n  useSimple: function () { USE_SETTER = false; }\n});\n\n$$Y({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL$3, sham: !DESCRIPTORS$a }, {\n  // `Object.create` method\n  // https://tc39.es/ecma262/#sec-object.create\n  create: $create,\n  // `Object.defineProperty` method\n  // https://tc39.es/ecma262/#sec-object.defineproperty\n  defineProperty: $defineProperty,\n  // `Object.defineProperties` method\n  // https://tc39.es/ecma262/#sec-object.defineproperties\n  defineProperties: $defineProperties,\n  // `Object.getOwnPropertyDescriptor` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n  getOwnPropertyDescriptor: $getOwnPropertyDescriptor\n});\n\n$$Y({ target: 'Object', stat: true, forced: !NATIVE_SYMBOL$3 }, {\n  // `Object.getOwnPropertyNames` method\n  // https://tc39.es/ecma262/#sec-object.getownpropertynames\n  getOwnPropertyNames: $getOwnPropertyNames\n});\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive$1();\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag$4($Symbol, SYMBOL);\n\nhiddenKeys$1[HIDDEN] = true;\n\nvar NATIVE_SYMBOL$2 = symbolConstructorDetection;\n\n/* eslint-disable es/no-symbol -- safe */\nvar symbolRegistryDetection = NATIVE_SYMBOL$2 && !!Symbol['for'] && !!Symbol.keyFor;\n\nvar $$X = _export;\nvar getBuiltIn$a = getBuiltIn$f;\nvar hasOwn$9 = hasOwnProperty_1;\nvar toString$8 = toString$c;\nvar shared$2 = sharedExports;\nvar NATIVE_SYMBOL_REGISTRY$1 = symbolRegistryDetection;\n\nvar StringToSymbolRegistry = shared$2('string-to-symbol-registry');\nvar SymbolToStringRegistry$1 = shared$2('symbol-to-string-registry');\n\n// `Symbol.for` method\n// https://tc39.es/ecma262/#sec-symbol.for\n$$X({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY$1 }, {\n  'for': function (key) {\n    var string = toString$8(key);\n    if (hasOwn$9(StringToSymbolRegistry, string)) return StringToSymbolRegistry[string];\n    var symbol = getBuiltIn$a('Symbol')(string);\n    StringToSymbolRegistry[string] = symbol;\n    SymbolToStringRegistry$1[symbol] = string;\n    return symbol;\n  }\n});\n\nvar $$W = _export;\nvar hasOwn$8 = hasOwnProperty_1;\nvar isSymbol$2 = isSymbol$5;\nvar tryToString$3 = tryToString$6;\nvar shared$1 = sharedExports;\nvar NATIVE_SYMBOL_REGISTRY = symbolRegistryDetection;\n\nvar SymbolToStringRegistry = shared$1('symbol-to-string-registry');\n\n// `Symbol.keyFor` method\n// https://tc39.es/ecma262/#sec-symbol.keyfor\n$$W({ target: 'Symbol', stat: true, forced: !NATIVE_SYMBOL_REGISTRY }, {\n  keyFor: function keyFor(sym) {\n    if (!isSymbol$2(sym)) throw new TypeError(tryToString$3(sym) + ' is not a symbol');\n    if (hasOwn$8(SymbolToStringRegistry, sym)) return SymbolToStringRegistry[sym];\n  }\n});\n\nvar uncurryThis$i = functionUncurryThis;\n\nvar arraySlice$5 = uncurryThis$i([].slice);\n\nvar uncurryThis$h = functionUncurryThis;\nvar isArray$b = isArray$e;\nvar isCallable$7 = isCallable$m;\nvar classof$7 = classofRaw$2;\nvar toString$7 = toString$c;\n\nvar push$a = uncurryThis$h([].push);\n\nvar getJsonReplacerFunction = function (replacer) {\n  if (isCallable$7(replacer)) return replacer;\n  if (!isArray$b(replacer)) return;\n  var rawLength = replacer.length;\n  var keys = [];\n  for (var i = 0; i < rawLength; i++) {\n    var element = replacer[i];\n    if (typeof element == 'string') push$a(keys, element);\n    else if (typeof element == 'number' || classof$7(element) === 'Number' || classof$7(element) === 'String') push$a(keys, toString$7(element));\n  }\n  var keysLength = keys.length;\n  var root = true;\n  return function (key, value) {\n    if (root) {\n      root = false;\n      return value;\n    }\n    if (isArray$b(this)) return value;\n    for (var j = 0; j < keysLength; j++) if (keys[j] === key) return value;\n  };\n};\n\nvar $$V = _export;\nvar getBuiltIn$9 = getBuiltIn$f;\nvar apply$4 = functionApply;\nvar call$8 = functionCall;\nvar uncurryThis$g = functionUncurryThis;\nvar fails$k = fails$y;\nvar isCallable$6 = isCallable$m;\nvar isSymbol$1 = isSymbol$5;\nvar arraySlice$4 = arraySlice$5;\nvar getReplacerFunction = getJsonReplacerFunction;\nvar NATIVE_SYMBOL$1 = symbolConstructorDetection;\n\nvar $String = String;\nvar $stringify = getBuiltIn$9('JSON', 'stringify');\nvar exec$1 = uncurryThis$g(/./.exec);\nvar charAt$1 = uncurryThis$g(''.charAt);\nvar charCodeAt = uncurryThis$g(''.charCodeAt);\nvar replace$2 = uncurryThis$g(''.replace);\nvar numberToString = uncurryThis$g(1.0.toString);\n\nvar tester = /[\\uD800-\\uDFFF]/g;\nvar low = /^[\\uD800-\\uDBFF]$/;\nvar hi = /^[\\uDC00-\\uDFFF]$/;\n\nvar WRONG_SYMBOLS_CONVERSION = !NATIVE_SYMBOL$1 || fails$k(function () {\n  var symbol = getBuiltIn$9('Symbol')('stringify detection');\n  // MS Edge converts symbol values to JSON as {}\n  return $stringify([symbol]) !== '[null]'\n    // WebKit converts symbol values to JSON as null\n    || $stringify({ a: symbol }) !== '{}'\n    // V8 throws on boxed symbols\n    || $stringify(Object(symbol)) !== '{}';\n});\n\n// https://github.com/tc39/proposal-well-formed-stringify\nvar ILL_FORMED_UNICODE = fails$k(function () {\n  return $stringify('\\uDF06\\uD834') !== '\"\\\\udf06\\\\ud834\"'\n    || $stringify('\\uDEAD') !== '\"\\\\udead\"';\n});\n\nvar stringifyWithSymbolsFix = function (it, replacer) {\n  var args = arraySlice$4(arguments);\n  var $replacer = getReplacerFunction(replacer);\n  if (!isCallable$6($replacer) && (it === undefined || isSymbol$1(it))) return; // IE8 returns string on undefined\n  args[1] = function (key, value) {\n    // some old implementations (like WebKit) could pass numbers as keys\n    if (isCallable$6($replacer)) value = call$8($replacer, this, $String(key), value);\n    if (!isSymbol$1(value)) return value;\n  };\n  return apply$4($stringify, null, args);\n};\n\nvar fixIllFormed = function (match, offset, string) {\n  var prev = charAt$1(string, offset - 1);\n  var next = charAt$1(string, offset + 1);\n  if ((exec$1(low, match) && !exec$1(hi, next)) || (exec$1(hi, match) && !exec$1(low, prev))) {\n    return '\\\\u' + numberToString(charCodeAt(match, 0), 16);\n  } return match;\n};\n\nif ($stringify) {\n  // `JSON.stringify` method\n  // https://tc39.es/ecma262/#sec-json.stringify\n  $$V({ target: 'JSON', stat: true, arity: 3, forced: WRONG_SYMBOLS_CONVERSION || ILL_FORMED_UNICODE }, {\n    // eslint-disable-next-line no-unused-vars -- required for `.length`\n    stringify: function stringify(it, replacer, space) {\n      var args = arraySlice$4(arguments);\n      var result = apply$4(WRONG_SYMBOLS_CONVERSION ? stringifyWithSymbolsFix : $stringify, null, args);\n      return ILL_FORMED_UNICODE && typeof result == 'string' ? replace$2(result, tester, fixIllFormed) : result;\n    }\n  });\n}\n\nvar $$U = _export;\nvar NATIVE_SYMBOL = symbolConstructorDetection;\nvar fails$j = fails$y;\nvar getOwnPropertySymbolsModule$2 = objectGetOwnPropertySymbols;\nvar toObject$9 = toObject$f;\n\n// V8 ~ Chrome 38 and 39 `Object.getOwnPropertySymbols` fails on primitives\n// https://bugs.chromium.org/p/v8/issues/detail?id=3443\nvar FORCED$8 = !NATIVE_SYMBOL || fails$j(function () { getOwnPropertySymbolsModule$2.f(1); });\n\n// `Object.getOwnPropertySymbols` method\n// https://tc39.es/ecma262/#sec-object.getownpropertysymbols\n$$U({ target: 'Object', stat: true, forced: FORCED$8 }, {\n  getOwnPropertySymbols: function getOwnPropertySymbols(it) {\n    var $getOwnPropertySymbols = getOwnPropertySymbolsModule$2.f;\n    return $getOwnPropertySymbols ? $getOwnPropertySymbols(toObject$9(it)) : [];\n  }\n});\n\nvar defineWellKnownSymbol$k = wellKnownSymbolDefine;\n\n// `Symbol.asyncIterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.asynciterator\ndefineWellKnownSymbol$k('asyncIterator');\n\nvar defineWellKnownSymbol$j = wellKnownSymbolDefine;\n\n// `Symbol.hasInstance` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.hasinstance\ndefineWellKnownSymbol$j('hasInstance');\n\nvar defineWellKnownSymbol$i = wellKnownSymbolDefine;\n\n// `Symbol.isConcatSpreadable` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.isconcatspreadable\ndefineWellKnownSymbol$i('isConcatSpreadable');\n\nvar defineWellKnownSymbol$h = wellKnownSymbolDefine;\n\n// `Symbol.iterator` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.iterator\ndefineWellKnownSymbol$h('iterator');\n\nvar defineWellKnownSymbol$g = wellKnownSymbolDefine;\n\n// `Symbol.match` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.match\ndefineWellKnownSymbol$g('match');\n\nvar defineWellKnownSymbol$f = wellKnownSymbolDefine;\n\n// `Symbol.matchAll` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.matchall\ndefineWellKnownSymbol$f('matchAll');\n\nvar defineWellKnownSymbol$e = wellKnownSymbolDefine;\n\n// `Symbol.replace` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.replace\ndefineWellKnownSymbol$e('replace');\n\nvar defineWellKnownSymbol$d = wellKnownSymbolDefine;\n\n// `Symbol.search` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.search\ndefineWellKnownSymbol$d('search');\n\nvar defineWellKnownSymbol$c = wellKnownSymbolDefine;\n\n// `Symbol.species` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.species\ndefineWellKnownSymbol$c('species');\n\nvar defineWellKnownSymbol$b = wellKnownSymbolDefine;\n\n// `Symbol.split` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.split\ndefineWellKnownSymbol$b('split');\n\nvar defineWellKnownSymbol$a = wellKnownSymbolDefine;\nvar defineSymbolToPrimitive = symbolDefineToPrimitive;\n\n// `Symbol.toPrimitive` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.toprimitive\ndefineWellKnownSymbol$a('toPrimitive');\n\n// `Symbol.prototype[@@toPrimitive]` method\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@toprimitive\ndefineSymbolToPrimitive();\n\nvar getBuiltIn$8 = getBuiltIn$f;\nvar defineWellKnownSymbol$9 = wellKnownSymbolDefine;\nvar setToStringTag$3 = setToStringTag$7;\n\n// `Symbol.toStringTag` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.tostringtag\ndefineWellKnownSymbol$9('toStringTag');\n\n// `Symbol.prototype[@@toStringTag]` property\n// https://tc39.es/ecma262/#sec-symbol.prototype-@@tostringtag\nsetToStringTag$3(getBuiltIn$8('Symbol'), 'Symbol');\n\nvar defineWellKnownSymbol$8 = wellKnownSymbolDefine;\n\n// `Symbol.unscopables` well-known symbol\n// https://tc39.es/ecma262/#sec-symbol.unscopables\ndefineWellKnownSymbol$8('unscopables');\n\nvar global$d = global$q;\nvar setToStringTag$2 = setToStringTag$7;\n\n// JSON[@@toStringTag] property\n// https://tc39.es/ecma262/#sec-json-@@tostringtag\nsetToStringTag$2(global$d.JSON, 'JSON', true);\n\nvar path$o = path$u;\n\nvar symbol$5 = path$o.Symbol;\n\nvar parent$1d = symbol$5;\n\n\nvar symbol$4 = parent$1d;\n\nvar wellKnownSymbol$8 = wellKnownSymbol$p;\nvar defineProperty$4 = objectDefineProperty.f;\n\nvar METADATA$1 = wellKnownSymbol$8('metadata');\nvar FunctionPrototype$1 = Function.prototype;\n\n// Function.prototype[@@metadata]\n// https://github.com/tc39/proposal-decorator-metadata\nif (FunctionPrototype$1[METADATA$1] === undefined) {\n  defineProperty$4(FunctionPrototype$1, METADATA$1, {\n    value: null\n  });\n}\n\nvar defineWellKnownSymbol$7 = wellKnownSymbolDefine;\n\n// `Symbol.asyncDispose` well-known symbol\n// https://github.com/tc39/proposal-async-explicit-resource-management\ndefineWellKnownSymbol$7('asyncDispose');\n\nvar defineWellKnownSymbol$6 = wellKnownSymbolDefine;\n\n// `Symbol.dispose` well-known symbol\n// https://github.com/tc39/proposal-explicit-resource-management\ndefineWellKnownSymbol$6('dispose');\n\n// TODO: Remove from `core-js@4`\nvar defineWellKnownSymbol$5 = wellKnownSymbolDefine;\n\n// `Symbol.metadata` well-known symbol\n// https://github.com/tc39/proposal-decorators\ndefineWellKnownSymbol$5('metadata');\n\nvar parent$1c = symbol$4;\n\n\n\n\n\n\nvar symbol$3 = parent$1c;\n\nvar getBuiltIn$7 = getBuiltIn$f;\nvar uncurryThis$f = functionUncurryThis;\n\nvar Symbol$4 = getBuiltIn$7('Symbol');\nvar keyFor = Symbol$4.keyFor;\nvar thisSymbolValue$1 = uncurryThis$f(Symbol$4.prototype.valueOf);\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\nvar symbolIsRegistered = Symbol$4.isRegisteredSymbol || function isRegisteredSymbol(value) {\n  try {\n    return keyFor(thisSymbolValue$1(value)) !== undefined;\n  } catch (error) {\n    return false;\n  }\n};\n\nvar $$T = _export;\nvar isRegisteredSymbol$1 = symbolIsRegistered;\n\n// `Symbol.isRegisteredSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$$T({ target: 'Symbol', stat: true }, {\n  isRegisteredSymbol: isRegisteredSymbol$1\n});\n\nvar shared = sharedExports;\nvar getBuiltIn$6 = getBuiltIn$f;\nvar uncurryThis$e = functionUncurryThis;\nvar isSymbol = isSymbol$5;\nvar wellKnownSymbol$7 = wellKnownSymbol$p;\n\nvar Symbol$3 = getBuiltIn$6('Symbol');\nvar $isWellKnownSymbol = Symbol$3.isWellKnownSymbol;\nvar getOwnPropertyNames = getBuiltIn$6('Object', 'getOwnPropertyNames');\nvar thisSymbolValue = uncurryThis$e(Symbol$3.prototype.valueOf);\nvar WellKnownSymbolsStore = shared('wks');\n\nfor (var i$1 = 0, symbolKeys = getOwnPropertyNames(Symbol$3), symbolKeysLength = symbolKeys.length; i$1 < symbolKeysLength; i$1++) {\n  // some old engines throws on access to some keys like `arguments` or `caller`\n  try {\n    var symbolKey = symbolKeys[i$1];\n    if (isSymbol(Symbol$3[symbolKey])) wellKnownSymbol$7(symbolKey);\n  } catch (error) { /* empty */ }\n}\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\nvar symbolIsWellKnown = function isWellKnownSymbol(value) {\n  if ($isWellKnownSymbol && $isWellKnownSymbol(value)) return true;\n  try {\n    var symbol = thisSymbolValue(value);\n    for (var j = 0, keys = getOwnPropertyNames(WellKnownSymbolsStore), keysLength = keys.length; j < keysLength; j++) {\n      // eslint-disable-next-line eqeqeq -- polyfilled symbols case\n      if (WellKnownSymbolsStore[keys[j]] == symbol) return true;\n    }\n  } catch (error) { /* empty */ }\n  return false;\n};\n\nvar $$S = _export;\nvar isWellKnownSymbol$1 = symbolIsWellKnown;\n\n// `Symbol.isWellKnownSymbol` method\n// https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$$S({ target: 'Symbol', stat: true, forced: true }, {\n  isWellKnownSymbol: isWellKnownSymbol$1\n});\n\nvar defineWellKnownSymbol$4 = wellKnownSymbolDefine;\n\n// `Symbol.matcher` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol$4('matcher');\n\nvar defineWellKnownSymbol$3 = wellKnownSymbolDefine;\n\n// `Symbol.observable` well-known symbol\n// https://github.com/tc39/proposal-observable\ndefineWellKnownSymbol$3('observable');\n\nvar $$R = _export;\nvar isRegisteredSymbol = symbolIsRegistered;\n\n// `Symbol.isRegistered` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-isregisteredsymbol\n$$R({ target: 'Symbol', stat: true, name: 'isRegisteredSymbol' }, {\n  isRegistered: isRegisteredSymbol\n});\n\nvar $$Q = _export;\nvar isWellKnownSymbol = symbolIsWellKnown;\n\n// `Symbol.isWellKnown` method\n// obsolete version of https://tc39.es/proposal-symbol-predicates/#sec-symbol-iswellknownsymbol\n// We should patch it for newly added well-known symbols. If it's not required, this module just will not be injected\n$$Q({ target: 'Symbol', stat: true, name: 'isWellKnownSymbol', forced: true }, {\n  isWellKnown: isWellKnownSymbol\n});\n\nvar defineWellKnownSymbol$2 = wellKnownSymbolDefine;\n\n// `Symbol.metadataKey` well-known symbol\n// https://github.com/tc39/proposal-decorator-metadata\ndefineWellKnownSymbol$2('metadataKey');\n\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol$1 = wellKnownSymbolDefine;\n\n// `Symbol.patternMatch` well-known symbol\n// https://github.com/tc39/proposal-pattern-matching\ndefineWellKnownSymbol$1('patternMatch');\n\n// TODO: remove from `core-js@4`\nvar defineWellKnownSymbol = wellKnownSymbolDefine;\n\ndefineWellKnownSymbol('replaceAll');\n\nvar parent$1b = symbol$3;\n\n\n\n\n// TODO: Remove from `core-js@4`\n\n\n\n\n\n\nvar symbol$2 = parent$1b;\n\nvar symbol$1 = symbol$2;\n\nvar _Symbol$1 = /*@__PURE__*/getDefaultExportFromCjs(symbol$1);\n\nvar WrappedWellKnownSymbolModule$1 = wellKnownSymbolWrapped;\n\nvar iterator$5 = WrappedWellKnownSymbolModule$1.f('iterator');\n\nvar parent$1a = iterator$5;\n\n\nvar iterator$4 = parent$1a;\n\nvar parent$19 = iterator$4;\n\nvar iterator$3 = parent$19;\n\nvar parent$18 = iterator$3;\n\nvar iterator$2 = parent$18;\n\nvar iterator$1 = iterator$2;\n\nvar _Symbol$iterator$1 = /*@__PURE__*/getDefaultExportFromCjs(iterator$1);\n\nfunction _typeof$1(o) {\n  \"@babel/helpers - typeof\";\n\n  return _typeof$1 = \"function\" == typeof _Symbol$1 && \"symbol\" == typeof _Symbol$iterator$1 ? function (o) {\n    return typeof o;\n  } : function (o) {\n    return o && \"function\" == typeof _Symbol$1 && o.constructor === _Symbol$1 && o !== _Symbol$1.prototype ? \"symbol\" : typeof o;\n  }, _typeof$1(o);\n}\n\nvar WrappedWellKnownSymbolModule = wellKnownSymbolWrapped;\n\nvar toPrimitive$4 = WrappedWellKnownSymbolModule.f('toPrimitive');\n\nvar parent$17 = toPrimitive$4;\n\nvar toPrimitive$3 = parent$17;\n\nvar parent$16 = toPrimitive$3;\n\nvar toPrimitive$2 = parent$16;\n\nvar parent$15 = toPrimitive$2;\n\nvar toPrimitive$1 = parent$15;\n\nvar toPrimitive = toPrimitive$1;\n\nvar _Symbol$toPrimitive = /*@__PURE__*/getDefaultExportFromCjs(toPrimitive);\n\nfunction _toPrimitive(input, hint) {\n  if (_typeof$1(input) !== \"object\" || input === null) return input;\n  var prim = input[_Symbol$toPrimitive];\n  if (prim !== undefined) {\n    var res = prim.call(input, hint || \"default\");\n    if (_typeof$1(res) !== \"object\") return res;\n    throw new TypeError(\"@@toPrimitive must return a primitive value.\");\n  }\n  return (hint === \"string\" ? String : Number)(input);\n}\n\nfunction _toPropertyKey(arg) {\n  var key = _toPrimitive(arg, \"string\");\n  return _typeof$1(key) === \"symbol\" ? key : String(key);\n}\n\nfunction _defineProperties(target, props) {\n  for (var i = 0; i < props.length; i++) {\n    var descriptor = props[i];\n    descriptor.enumerable = descriptor.enumerable || false;\n    descriptor.configurable = true;\n    if (\"value\" in descriptor) descriptor.writable = true;\n    _Object$defineProperty$1(target, _toPropertyKey(descriptor.key), descriptor);\n  }\n}\nfunction _createClass(Constructor, protoProps, staticProps) {\n  if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n  if (staticProps) _defineProperties(Constructor, staticProps);\n  _Object$defineProperty$1(Constructor, \"prototype\", {\n    writable: false\n  });\n  return Constructor;\n}\n\nvar $$P = _export;\nvar isArray$a = isArray$e;\n\n// `Array.isArray` method\n// https://tc39.es/ecma262/#sec-array.isarray\n$$P({ target: 'Array', stat: true }, {\n  isArray: isArray$a\n});\n\nvar path$n = path$u;\n\nvar isArray$9 = path$n.Array.isArray;\n\nvar parent$14 = isArray$9;\n\nvar isArray$8 = parent$14;\n\nvar parent$13 = isArray$8;\n\nvar isArray$7 = parent$13;\n\nvar parent$12 = isArray$7;\n\nvar isArray$6 = parent$12;\n\nvar isArray$5 = isArray$6;\n\nvar _Array$isArray$1 = /*@__PURE__*/getDefaultExportFromCjs(isArray$5);\n\nfunction _arrayWithHoles(arr) {\n  if (_Array$isArray$1(arr)) return arr;\n}\n\nvar DESCRIPTORS$9 = descriptors;\nvar isArray$4 = isArray$e;\n\nvar $TypeError$8 = TypeError;\n// eslint-disable-next-line es/no-object-getownpropertydescriptor -- safe\nvar getOwnPropertyDescriptor$5 = Object.getOwnPropertyDescriptor;\n\n// Safari < 13 does not throw an error in this case\nvar SILENT_ON_NON_WRITABLE_LENGTH_SET = DESCRIPTORS$9 && !function () {\n  // makes no sense without proper strict mode support\n  if (this !== undefined) return true;\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).length = 1;\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n}();\n\nvar arraySetLength = SILENT_ON_NON_WRITABLE_LENGTH_SET ? function (O, length) {\n  if (isArray$4(O) && !getOwnPropertyDescriptor$5(O, 'length').writable) {\n    throw new $TypeError$8('Cannot set read only .length');\n  } return O.length = length;\n} : function (O, length) {\n  return O.length = length;\n};\n\nvar $$O = _export;\nvar toObject$8 = toObject$f;\nvar lengthOfArrayLike$8 = lengthOfArrayLike$e;\nvar setArrayLength$1 = arraySetLength;\nvar doesNotExceedSafeInteger$2 = doesNotExceedSafeInteger$4;\nvar fails$i = fails$y;\n\nvar INCORRECT_TO_LENGTH = fails$i(function () {\n  return [].push.call({ length: 0x100000000 }, 1) !== 4294967297;\n});\n\n// V8 and Safari <= 15.4, FF < 23 throws InternalError\n// https://bugs.chromium.org/p/v8/issues/detail?id=12681\nvar properErrorOnNonWritableLength = function () {\n  try {\n    // eslint-disable-next-line es/no-object-defineproperty -- safe\n    Object.defineProperty([], 'length', { writable: false }).push();\n  } catch (error) {\n    return error instanceof TypeError;\n  }\n};\n\nvar FORCED$7 = INCORRECT_TO_LENGTH || !properErrorOnNonWritableLength();\n\n// `Array.prototype.push` method\n// https://tc39.es/ecma262/#sec-array.prototype.push\n$$O({ target: 'Array', proto: true, arity: 1, forced: FORCED$7 }, {\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  push: function push(item) {\n    var O = toObject$8(this);\n    var len = lengthOfArrayLike$8(O);\n    var argCount = arguments.length;\n    doesNotExceedSafeInteger$2(len + argCount);\n    for (var i = 0; i < argCount; i++) {\n      O[len] = arguments[i];\n      len++;\n    }\n    setArrayLength$1(O, len);\n    return len;\n  }\n});\n\nvar path$m = path$u;\n\nvar entryVirtual$o = function (CONSTRUCTOR) {\n  return path$m[CONSTRUCTOR + 'Prototype'];\n};\n\nvar entryVirtual$n = entryVirtual$o;\n\nvar push$9 = entryVirtual$n('Array').push;\n\nvar isPrototypeOf$p = objectIsPrototypeOf;\nvar method$l = push$9;\n\nvar ArrayPrototype$k = Array.prototype;\n\nvar push$8 = function (it) {\n  var own = it.push;\n  return it === ArrayPrototype$k || (isPrototypeOf$p(ArrayPrototype$k, it) && own === ArrayPrototype$k.push) ? method$l : own;\n};\n\nvar parent$11 = push$8;\n\nvar push$7 = parent$11;\n\nvar parent$10 = push$7;\n\nvar push$6 = parent$10;\n\nvar parent$$ = push$6;\n\nvar push$5 = parent$$;\n\nvar push$4 = push$5;\n\nvar _pushInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(push$4);\n\nfunction _iterableToArrayLimit(r, l) {\n  var t = null == r ? null : \"undefined\" != typeof _Symbol$1 && _getIteratorMethod$1(r) || r[\"@@iterator\"];\n  if (null != t) {\n    var e,\n      n,\n      i,\n      u,\n      a = [],\n      f = !0,\n      o = !1;\n    try {\n      if (i = (t = t.call(r)).next, 0 === l) {\n        if (Object(t) !== t) return;\n        f = !1;\n      } else for (; !(f = (e = i.call(t)).done) && (_pushInstanceProperty(a).call(a, e.value), a.length !== l); f = !0);\n    } catch (r) {\n      o = !0, n = r;\n    } finally {\n      try {\n        if (!f && null != t[\"return\"] && (u = t[\"return\"](), Object(u) !== u)) return;\n      } finally {\n        if (o) throw n;\n      }\n    }\n    return a;\n  }\n}\n\nvar $$N = _export;\nvar isArray$3 = isArray$e;\nvar isConstructor$1 = isConstructor$4;\nvar isObject$a = isObject$j;\nvar toAbsoluteIndex$2 = toAbsoluteIndex$5;\nvar lengthOfArrayLike$7 = lengthOfArrayLike$e;\nvar toIndexedObject$3 = toIndexedObject$b;\nvar createProperty$2 = createProperty$6;\nvar wellKnownSymbol$6 = wellKnownSymbol$p;\nvar arrayMethodHasSpeciesSupport$3 = arrayMethodHasSpeciesSupport$5;\nvar nativeSlice = arraySlice$5;\n\nvar HAS_SPECIES_SUPPORT$3 = arrayMethodHasSpeciesSupport$3('slice');\n\nvar SPECIES$3 = wellKnownSymbol$6('species');\nvar $Array = Array;\nvar max$1 = Math.max;\n\n// `Array.prototype.slice` method\n// https://tc39.es/ecma262/#sec-array.prototype.slice\n// fallback for not array-like ES3 strings and DOM objects\n$$N({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$3 }, {\n  slice: function slice(start, end) {\n    var O = toIndexedObject$3(this);\n    var length = lengthOfArrayLike$7(O);\n    var k = toAbsoluteIndex$2(start, length);\n    var fin = toAbsoluteIndex$2(end === undefined ? length : end, length);\n    // inline `ArraySpeciesCreate` for usage native `Array#slice` where it's possible\n    var Constructor, result, n;\n    if (isArray$3(O)) {\n      Constructor = O.constructor;\n      // cross-realm fallback\n      if (isConstructor$1(Constructor) && (Constructor === $Array || isArray$3(Constructor.prototype))) {\n        Constructor = undefined;\n      } else if (isObject$a(Constructor)) {\n        Constructor = Constructor[SPECIES$3];\n        if (Constructor === null) Constructor = undefined;\n      }\n      if (Constructor === $Array || Constructor === undefined) {\n        return nativeSlice(O, k, fin);\n      }\n    }\n    result = new (Constructor === undefined ? $Array : Constructor)(max$1(fin - k, 0));\n    for (n = 0; k < fin; k++, n++) if (k in O) createProperty$2(result, n, O[k]);\n    result.length = n;\n    return result;\n  }\n});\n\nvar entryVirtual$m = entryVirtual$o;\n\nvar slice$6 = entryVirtual$m('Array').slice;\n\nvar isPrototypeOf$o = objectIsPrototypeOf;\nvar method$k = slice$6;\n\nvar ArrayPrototype$j = Array.prototype;\n\nvar slice$5 = function (it) {\n  var own = it.slice;\n  return it === ArrayPrototype$j || (isPrototypeOf$o(ArrayPrototype$j, it) && own === ArrayPrototype$j.slice) ? method$k : own;\n};\n\nvar parent$_ = slice$5;\n\nvar slice$4 = parent$_;\n\nvar parent$Z = slice$4;\n\nvar slice$3 = parent$Z;\n\nvar parent$Y = slice$3;\n\nvar slice$2 = parent$Y;\n\nvar slice$1 = slice$2;\n\nvar _sliceInstanceProperty$1 = /*@__PURE__*/getDefaultExportFromCjs(slice$1);\n\nvar parent$X = from$4;\n\nvar from$2 = parent$X;\n\nvar parent$W = from$2;\n\nvar from$1 = parent$W;\n\nvar from = from$1;\n\nvar _Array$from = /*@__PURE__*/getDefaultExportFromCjs(from);\n\nfunction _arrayLikeToArray$8(arr, len) {\n  if (len == null || len > arr.length) len = arr.length;\n  for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n  return arr2;\n}\n\nfunction _unsupportedIterableToArray$8(o, minLen) {\n  var _context;\n  if (!o) return;\n  if (typeof o === \"string\") return _arrayLikeToArray$8(o, minLen);\n  var n = _sliceInstanceProperty$1(_context = Object.prototype.toString.call(o)).call(_context, 8, -1);\n  if (n === \"Object\" && o.constructor) n = o.constructor.name;\n  if (n === \"Map\" || n === \"Set\") return _Array$from(o);\n  if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$8(o, minLen);\n}\n\nfunction _nonIterableRest() {\n  throw new TypeError(\"Invalid attempt to destructure non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _slicedToArray(arr, i) {\n  return _arrayWithHoles(arr) || _iterableToArrayLimit(arr, i) || _unsupportedIterableToArray$8(arr, i) || _nonIterableRest();\n}\n\nfunction _arrayWithoutHoles(arr) {\n  if (_Array$isArray$1(arr)) return _arrayLikeToArray$8(arr);\n}\n\nfunction _iterableToArray(iter) {\n  if (typeof _Symbol$1 !== \"undefined\" && _getIteratorMethod$1(iter) != null || iter[\"@@iterator\"] != null) return _Array$from(iter);\n}\n\nfunction _nonIterableSpread() {\n  throw new TypeError(\"Invalid attempt to spread non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n}\n\nfunction _toConsumableArray(arr) {\n  return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _unsupportedIterableToArray$8(arr) || _nonIterableSpread();\n}\n\nvar symbol = symbol$4;\n\nvar _Symbol = /*@__PURE__*/getDefaultExportFromCjs(symbol);\n\nvar entryVirtual$l = entryVirtual$o;\n\nvar concat$6 = entryVirtual$l('Array').concat;\n\nvar isPrototypeOf$n = objectIsPrototypeOf;\nvar method$j = concat$6;\n\nvar ArrayPrototype$i = Array.prototype;\n\nvar concat$5 = function (it) {\n  var own = it.concat;\n  return it === ArrayPrototype$i || (isPrototypeOf$n(ArrayPrototype$i, it) && own === ArrayPrototype$i.concat) ? method$j : own;\n};\n\nvar parent$V = concat$5;\n\nvar concat$4 = parent$V;\n\nvar concat$3 = concat$4;\n\nvar _concatInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(concat$3);\n\nvar slice = slice$4;\n\nvar _sliceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(slice);\n\nvar getBuiltIn$5 = getBuiltIn$f;\nvar uncurryThis$d = functionUncurryThis;\nvar getOwnPropertyNamesModule$1 = objectGetOwnPropertyNames;\nvar getOwnPropertySymbolsModule$1 = objectGetOwnPropertySymbols;\nvar anObject$4 = anObject$d;\n\nvar concat$2 = uncurryThis$d([].concat);\n\n// all object keys, includes non-enumerable and symbols\nvar ownKeys$8 = getBuiltIn$5('Reflect', 'ownKeys') || function ownKeys(it) {\n  var keys = getOwnPropertyNamesModule$1.f(anObject$4(it));\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule$1.f;\n  return getOwnPropertySymbols ? concat$2(keys, getOwnPropertySymbols(it)) : keys;\n};\n\nvar $$M = _export;\nvar ownKeys$7 = ownKeys$8;\n\n// `Reflect.ownKeys` method\n// https://tc39.es/ecma262/#sec-reflect.ownkeys\n$$M({ target: 'Reflect', stat: true }, {\n  ownKeys: ownKeys$7\n});\n\nvar path$l = path$u;\n\nvar ownKeys$6 = path$l.Reflect.ownKeys;\n\nvar parent$U = ownKeys$6;\n\nvar ownKeys$5 = parent$U;\n\nvar ownKeys$4 = ownKeys$5;\n\nvar _Reflect$ownKeys = /*@__PURE__*/getDefaultExportFromCjs(ownKeys$4);\n\nvar isArray$2 = isArray$8;\n\nvar _Array$isArray = /*@__PURE__*/getDefaultExportFromCjs(isArray$2);\n\nvar $$L = _export;\nvar $map = arrayIteration.map;\nvar arrayMethodHasSpeciesSupport$2 = arrayMethodHasSpeciesSupport$5;\n\nvar HAS_SPECIES_SUPPORT$2 = arrayMethodHasSpeciesSupport$2('map');\n\n// `Array.prototype.map` method\n// https://tc39.es/ecma262/#sec-array.prototype.map\n// with adding support of @@species\n$$L({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$2 }, {\n  map: function map(callbackfn /* , thisArg */) {\n    return $map(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nvar entryVirtual$k = entryVirtual$o;\n\nvar map$6 = entryVirtual$k('Array').map;\n\nvar isPrototypeOf$m = objectIsPrototypeOf;\nvar method$i = map$6;\n\nvar ArrayPrototype$h = Array.prototype;\n\nvar map$5 = function (it) {\n  var own = it.map;\n  return it === ArrayPrototype$h || (isPrototypeOf$m(ArrayPrototype$h, it) && own === ArrayPrototype$h.map) ? method$i : own;\n};\n\nvar parent$T = map$5;\n\nvar map$4 = parent$T;\n\nvar map$3 = map$4;\n\nvar _mapInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(map$3);\n\nvar $$K = _export;\nvar toObject$7 = toObject$f;\nvar nativeKeys = objectKeys$4;\nvar fails$h = fails$y;\n\nvar FAILS_ON_PRIMITIVES$2 = fails$h(function () { nativeKeys(1); });\n\n// `Object.keys` method\n// https://tc39.es/ecma262/#sec-object.keys\n$$K({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$2 }, {\n  keys: function keys(it) {\n    return nativeKeys(toObject$7(it));\n  }\n});\n\nvar path$k = path$u;\n\nvar keys$6 = path$k.Object.keys;\n\nvar parent$S = keys$6;\n\nvar keys$5 = parent$S;\n\nvar keys$4 = keys$5;\n\nvar _Object$keys = /*@__PURE__*/getDefaultExportFromCjs(keys$4);\n\n// TODO: Remove from `core-js@4`\nvar $$J = _export;\nvar uncurryThis$c = functionUncurryThis;\n\nvar $Date = Date;\nvar thisTimeValue = uncurryThis$c($Date.prototype.getTime);\n\n// `Date.now` method\n// https://tc39.es/ecma262/#sec-date.now\n$$J({ target: 'Date', stat: true }, {\n  now: function now() {\n    return thisTimeValue(new $Date());\n  }\n});\n\nvar path$j = path$u;\n\nvar now$3 = path$j.Date.now;\n\nvar parent$R = now$3;\n\nvar now$2 = parent$R;\n\nvar now$1 = now$2;\n\nvar _Date$now = /*@__PURE__*/getDefaultExportFromCjs(now$1);\n\nvar uncurryThis$b = functionUncurryThis;\nvar aCallable$9 = aCallable$e;\nvar isObject$9 = isObject$j;\nvar hasOwn$7 = hasOwnProperty_1;\nvar arraySlice$3 = arraySlice$5;\nvar NATIVE_BIND = functionBindNative;\n\nvar $Function = Function;\nvar concat$1 = uncurryThis$b([].concat);\nvar join = uncurryThis$b([].join);\nvar factories = {};\n\nvar construct$3 = function (C, argsLength, args) {\n  if (!hasOwn$7(factories, argsLength)) {\n    var list = [];\n    var i = 0;\n    for (; i < argsLength; i++) list[i] = 'a[' + i + ']';\n    factories[argsLength] = $Function('C,a', 'return new C(' + join(list, ',') + ')');\n  } return factories[argsLength](C, args);\n};\n\n// `Function.prototype.bind` method implementation\n// https://tc39.es/ecma262/#sec-function.prototype.bind\n// eslint-disable-next-line es/no-function-prototype-bind -- detection\nvar functionBind = NATIVE_BIND ? $Function.bind : function bind(that /* , ...args */) {\n  var F = aCallable$9(this);\n  var Prototype = F.prototype;\n  var partArgs = arraySlice$3(arguments, 1);\n  var boundFunction = function bound(/* args... */) {\n    var args = concat$1(partArgs, arraySlice$3(arguments));\n    return this instanceof boundFunction ? construct$3(F, args.length, args) : F.apply(that, args);\n  };\n  if (isObject$9(Prototype)) boundFunction.prototype = Prototype;\n  return boundFunction;\n};\n\n// TODO: Remove from `core-js@4`\nvar $$I = _export;\nvar bind$e = functionBind;\n\n// `Function.prototype.bind` method\n// https://tc39.es/ecma262/#sec-function.prototype.bind\n// eslint-disable-next-line es/no-function-prototype-bind -- detection\n$$I({ target: 'Function', proto: true, forced: Function.bind !== bind$e }, {\n  bind: bind$e\n});\n\nvar entryVirtual$j = entryVirtual$o;\n\nvar bind$d = entryVirtual$j('Function').bind;\n\nvar isPrototypeOf$l = objectIsPrototypeOf;\nvar method$h = bind$d;\n\nvar FunctionPrototype = Function.prototype;\n\nvar bind$c = function (it) {\n  var own = it.bind;\n  return it === FunctionPrototype || (isPrototypeOf$l(FunctionPrototype, it) && own === FunctionPrototype.bind) ? method$h : own;\n};\n\nvar parent$Q = bind$c;\n\nvar bind$b = parent$Q;\n\nvar bind$a = bind$b;\n\nvar _bindInstanceProperty$1 = /*@__PURE__*/getDefaultExportFromCjs(bind$a);\n\nvar fails$g = fails$y;\n\nvar arrayMethodIsStrict$6 = function (METHOD_NAME, argument) {\n  var method = [][METHOD_NAME];\n  return !!method && fails$g(function () {\n    // eslint-disable-next-line no-useless-call -- required for testing\n    method.call(null, argument || function () { return 1; }, 1);\n  });\n};\n\nvar $forEach = arrayIteration.forEach;\nvar arrayMethodIsStrict$5 = arrayMethodIsStrict$6;\n\nvar STRICT_METHOD$3 = arrayMethodIsStrict$5('forEach');\n\n// `Array.prototype.forEach` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\nvar arrayForEach = !STRICT_METHOD$3 ? function forEach(callbackfn /* , thisArg */) {\n  return $forEach(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n} : [].forEach;\n\nvar $$H = _export;\nvar forEach$9 = arrayForEach;\n\n// `Array.prototype.forEach` method\n// https://tc39.es/ecma262/#sec-array.prototype.foreach\n// eslint-disable-next-line es/no-array-prototype-foreach -- safe\n$$H({ target: 'Array', proto: true, forced: [].forEach !== forEach$9 }, {\n  forEach: forEach$9\n});\n\nvar entryVirtual$i = entryVirtual$o;\n\nvar forEach$8 = entryVirtual$i('Array').forEach;\n\nvar parent$P = forEach$8;\n\nvar forEach$7 = parent$P;\n\nvar classof$6 = classof$g;\nvar hasOwn$6 = hasOwnProperty_1;\nvar isPrototypeOf$k = objectIsPrototypeOf;\nvar method$g = forEach$7;\n\nvar ArrayPrototype$g = Array.prototype;\n\nvar DOMIterables$3 = {\n  DOMTokenList: true,\n  NodeList: true\n};\n\nvar forEach$6 = function (it) {\n  var own = it.forEach;\n  return it === ArrayPrototype$g || (isPrototypeOf$k(ArrayPrototype$g, it) && own === ArrayPrototype$g.forEach)\n    || hasOwn$6(DOMIterables$3, classof$6(it)) ? method$g : own;\n};\n\nvar forEach$5 = forEach$6;\n\nvar _forEachInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(forEach$5);\n\nvar $$G = _export;\nvar uncurryThis$a = functionUncurryThis;\nvar isArray$1 = isArray$e;\n\nvar nativeReverse = uncurryThis$a([].reverse);\nvar test$1 = [1, 2];\n\n// `Array.prototype.reverse` method\n// https://tc39.es/ecma262/#sec-array.prototype.reverse\n// fix for Safari 12.0 bug\n// https://bugs.webkit.org/show_bug.cgi?id=188794\n$$G({ target: 'Array', proto: true, forced: String(test$1) === String(test$1.reverse()) }, {\n  reverse: function reverse() {\n    // eslint-disable-next-line no-self-assign -- dirty hack\n    if (isArray$1(this)) this.length = this.length;\n    return nativeReverse(this);\n  }\n});\n\nvar entryVirtual$h = entryVirtual$o;\n\nvar reverse$6 = entryVirtual$h('Array').reverse;\n\nvar isPrototypeOf$j = objectIsPrototypeOf;\nvar method$f = reverse$6;\n\nvar ArrayPrototype$f = Array.prototype;\n\nvar reverse$5 = function (it) {\n  var own = it.reverse;\n  return it === ArrayPrototype$f || (isPrototypeOf$j(ArrayPrototype$f, it) && own === ArrayPrototype$f.reverse) ? method$f : own;\n};\n\nvar parent$O = reverse$5;\n\nvar reverse$4 = parent$O;\n\nvar reverse$3 = reverse$4;\n\nvar _reverseInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(reverse$3);\n\nvar tryToString$2 = tryToString$6;\n\nvar $TypeError$7 = TypeError;\n\nvar deletePropertyOrThrow$2 = function (O, P) {\n  if (!delete O[P]) throw new $TypeError$7('Cannot delete property ' + tryToString$2(P) + ' of ' + tryToString$2(O));\n};\n\nvar $$F = _export;\nvar toObject$6 = toObject$f;\nvar toAbsoluteIndex$1 = toAbsoluteIndex$5;\nvar toIntegerOrInfinity$1 = toIntegerOrInfinity$5;\nvar lengthOfArrayLike$6 = lengthOfArrayLike$e;\nvar setArrayLength = arraySetLength;\nvar doesNotExceedSafeInteger$1 = doesNotExceedSafeInteger$4;\nvar arraySpeciesCreate$1 = arraySpeciesCreate$4;\nvar createProperty$1 = createProperty$6;\nvar deletePropertyOrThrow$1 = deletePropertyOrThrow$2;\nvar arrayMethodHasSpeciesSupport$1 = arrayMethodHasSpeciesSupport$5;\n\nvar HAS_SPECIES_SUPPORT$1 = arrayMethodHasSpeciesSupport$1('splice');\n\nvar max = Math.max;\nvar min = Math.min;\n\n// `Array.prototype.splice` method\n// https://tc39.es/ecma262/#sec-array.prototype.splice\n// with adding support of @@species\n$$F({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT$1 }, {\n  splice: function splice(start, deleteCount /* , ...items */) {\n    var O = toObject$6(this);\n    var len = lengthOfArrayLike$6(O);\n    var actualStart = toAbsoluteIndex$1(start, len);\n    var argumentsLength = arguments.length;\n    var insertCount, actualDeleteCount, A, k, from, to;\n    if (argumentsLength === 0) {\n      insertCount = actualDeleteCount = 0;\n    } else if (argumentsLength === 1) {\n      insertCount = 0;\n      actualDeleteCount = len - actualStart;\n    } else {\n      insertCount = argumentsLength - 2;\n      actualDeleteCount = min(max(toIntegerOrInfinity$1(deleteCount), 0), len - actualStart);\n    }\n    doesNotExceedSafeInteger$1(len + insertCount - actualDeleteCount);\n    A = arraySpeciesCreate$1(O, actualDeleteCount);\n    for (k = 0; k < actualDeleteCount; k++) {\n      from = actualStart + k;\n      if (from in O) createProperty$1(A, k, O[from]);\n    }\n    A.length = actualDeleteCount;\n    if (insertCount < actualDeleteCount) {\n      for (k = actualStart; k < len - actualDeleteCount; k++) {\n        from = k + actualDeleteCount;\n        to = k + insertCount;\n        if (from in O) O[to] = O[from];\n        else deletePropertyOrThrow$1(O, to);\n      }\n      for (k = len; k > len - actualDeleteCount + insertCount; k--) deletePropertyOrThrow$1(O, k - 1);\n    } else if (insertCount > actualDeleteCount) {\n      for (k = len - actualDeleteCount; k > actualStart; k--) {\n        from = k + actualDeleteCount - 1;\n        to = k + insertCount - 1;\n        if (from in O) O[to] = O[from];\n        else deletePropertyOrThrow$1(O, to);\n      }\n    }\n    for (k = 0; k < insertCount; k++) {\n      O[k + actualStart] = arguments[k + 2];\n    }\n    setArrayLength(O, len - actualDeleteCount + insertCount);\n    return A;\n  }\n});\n\nvar entryVirtual$g = entryVirtual$o;\n\nvar splice$3 = entryVirtual$g('Array').splice;\n\nvar isPrototypeOf$i = objectIsPrototypeOf;\nvar method$e = splice$3;\n\nvar ArrayPrototype$e = Array.prototype;\n\nvar splice$2 = function (it) {\n  var own = it.splice;\n  return it === ArrayPrototype$e || (isPrototypeOf$i(ArrayPrototype$e, it) && own === ArrayPrototype$e.splice) ? method$e : own;\n};\n\nvar parent$N = splice$2;\n\nvar splice$1 = parent$N;\n\nvar splice = splice$1;\n\nvar _spliceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(splice);\n\nvar DESCRIPTORS$8 = descriptors;\nvar uncurryThis$9 = functionUncurryThis;\nvar call$7 = functionCall;\nvar fails$f = fails$y;\nvar objectKeys$1 = objectKeys$4;\nvar getOwnPropertySymbolsModule = objectGetOwnPropertySymbols;\nvar propertyIsEnumerableModule = objectPropertyIsEnumerable;\nvar toObject$5 = toObject$f;\nvar IndexedObject$1 = indexedObject;\n\n// eslint-disable-next-line es/no-object-assign -- safe\nvar $assign = Object.assign;\n// eslint-disable-next-line es/no-object-defineproperty -- required for testing\nvar defineProperty$3 = Object.defineProperty;\nvar concat = uncurryThis$9([].concat);\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\nvar objectAssign = !$assign || fails$f(function () {\n  // should have correct order of operations (Edge bug)\n  if (DESCRIPTORS$8 && $assign({ b: 1 }, $assign(defineProperty$3({}, 'a', {\n    enumerable: true,\n    get: function () {\n      defineProperty$3(this, 'b', {\n        value: 3,\n        enumerable: false\n      });\n    }\n  }), { b: 2 })).b !== 1) return true;\n  // should work with symbols and should have deterministic property order (V8 bug)\n  var A = {};\n  var B = {};\n  // eslint-disable-next-line es/no-symbol -- safe\n  var symbol = Symbol('assign detection');\n  var alphabet = 'abcdefghijklmnopqrst';\n  A[symbol] = 7;\n  alphabet.split('').forEach(function (chr) { B[chr] = chr; });\n  return $assign({}, A)[symbol] !== 7 || objectKeys$1($assign({}, B)).join('') !== alphabet;\n}) ? function assign(target, source) { // eslint-disable-line no-unused-vars -- required for `.length`\n  var T = toObject$5(target);\n  var argumentsLength = arguments.length;\n  var index = 1;\n  var getOwnPropertySymbols = getOwnPropertySymbolsModule.f;\n  var propertyIsEnumerable = propertyIsEnumerableModule.f;\n  while (argumentsLength > index) {\n    var S = IndexedObject$1(arguments[index++]);\n    var keys = getOwnPropertySymbols ? concat(objectKeys$1(S), getOwnPropertySymbols(S)) : objectKeys$1(S);\n    var length = keys.length;\n    var j = 0;\n    var key;\n    while (length > j) {\n      key = keys[j++];\n      if (!DESCRIPTORS$8 || call$7(propertyIsEnumerable, S, key)) T[key] = S[key];\n    }\n  } return T;\n} : $assign;\n\nvar $$E = _export;\nvar assign$5 = objectAssign;\n\n// `Object.assign` method\n// https://tc39.es/ecma262/#sec-object.assign\n// eslint-disable-next-line es/no-object-assign -- required for testing\n$$E({ target: 'Object', stat: true, arity: 2, forced: Object.assign !== assign$5 }, {\n  assign: assign$5\n});\n\nvar path$i = path$u;\n\nvar assign$4 = path$i.Object.assign;\n\nvar parent$M = assign$4;\n\nvar assign$3 = parent$M;\n\nvar assign$2 = assign$3;\n\nvar _Object$assign = /*@__PURE__*/getDefaultExportFromCjs(assign$2);\n\nvar $$D = _export;\nvar $includes = arrayIncludes.includes;\nvar fails$e = fails$y;\n\n// FF99+ bug\nvar BROKEN_ON_SPARSE = fails$e(function () {\n  // eslint-disable-next-line es/no-array-prototype-includes -- detection\n  return !Array(1).includes();\n});\n\n// `Array.prototype.includes` method\n// https://tc39.es/ecma262/#sec-array.prototype.includes\n$$D({ target: 'Array', proto: true, forced: BROKEN_ON_SPARSE }, {\n  includes: function includes(el /* , fromIndex = 0 */) {\n    return $includes(this, el, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nvar entryVirtual$f = entryVirtual$o;\n\nvar includes$4 = entryVirtual$f('Array').includes;\n\nvar isObject$8 = isObject$j;\nvar classof$5 = classofRaw$2;\nvar wellKnownSymbol$5 = wellKnownSymbol$p;\n\nvar MATCH$1 = wellKnownSymbol$5('match');\n\n// `IsRegExp` abstract operation\n// https://tc39.es/ecma262/#sec-isregexp\nvar isRegexp = function (it) {\n  var isRegExp;\n  return isObject$8(it) && ((isRegExp = it[MATCH$1]) !== undefined ? !!isRegExp : classof$5(it) === 'RegExp');\n};\n\nvar isRegExp = isRegexp;\n\nvar $TypeError$6 = TypeError;\n\nvar notARegexp = function (it) {\n  if (isRegExp(it)) {\n    throw new $TypeError$6(\"The method doesn't accept regular expressions\");\n  } return it;\n};\n\nvar wellKnownSymbol$4 = wellKnownSymbol$p;\n\nvar MATCH = wellKnownSymbol$4('match');\n\nvar correctIsRegexpLogic = function (METHOD_NAME) {\n  var regexp = /./;\n  try {\n    '/./'[METHOD_NAME](regexp);\n  } catch (error1) {\n    try {\n      regexp[MATCH] = false;\n      return '/./'[METHOD_NAME](regexp);\n    } catch (error2) { /* empty */ }\n  } return false;\n};\n\nvar $$C = _export;\nvar uncurryThis$8 = functionUncurryThis;\nvar notARegExp = notARegexp;\nvar requireObjectCoercible$2 = requireObjectCoercible$6;\nvar toString$6 = toString$c;\nvar correctIsRegExpLogic = correctIsRegexpLogic;\n\nvar stringIndexOf = uncurryThis$8(''.indexOf);\n\n// `String.prototype.includes` method\n// https://tc39.es/ecma262/#sec-string.prototype.includes\n$$C({ target: 'String', proto: true, forced: !correctIsRegExpLogic('includes') }, {\n  includes: function includes(searchString /* , position = 0 */) {\n    return !!~stringIndexOf(\n      toString$6(requireObjectCoercible$2(this)),\n      toString$6(notARegExp(searchString)),\n      arguments.length > 1 ? arguments[1] : undefined\n    );\n  }\n});\n\nvar entryVirtual$e = entryVirtual$o;\n\nvar includes$3 = entryVirtual$e('String').includes;\n\nvar isPrototypeOf$h = objectIsPrototypeOf;\nvar arrayMethod = includes$4;\nvar stringMethod = includes$3;\n\nvar ArrayPrototype$d = Array.prototype;\nvar StringPrototype$1 = String.prototype;\n\nvar includes$2 = function (it) {\n  var own = it.includes;\n  if (it === ArrayPrototype$d || (isPrototypeOf$h(ArrayPrototype$d, it) && own === ArrayPrototype$d.includes)) return arrayMethod;\n  if (typeof it == 'string' || it === StringPrototype$1 || (isPrototypeOf$h(StringPrototype$1, it) && own === StringPrototype$1.includes)) {\n    return stringMethod;\n  } return own;\n};\n\nvar parent$L = includes$2;\n\nvar includes$1 = parent$L;\n\nvar includes = includes$1;\n\nvar _includesInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(includes);\n\nvar $$B = _export;\nvar fails$d = fails$y;\nvar toObject$4 = toObject$f;\nvar nativeGetPrototypeOf = objectGetPrototypeOf$1;\nvar CORRECT_PROTOTYPE_GETTER = correctPrototypeGetter;\n\nvar FAILS_ON_PRIMITIVES$1 = fails$d(function () { nativeGetPrototypeOf(1); });\n\n// `Object.getPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.getprototypeof\n$$B({ target: 'Object', stat: true, forced: FAILS_ON_PRIMITIVES$1, sham: !CORRECT_PROTOTYPE_GETTER }, {\n  getPrototypeOf: function getPrototypeOf(it) {\n    return nativeGetPrototypeOf(toObject$4(it));\n  }\n});\n\nvar path$h = path$u;\n\nvar getPrototypeOf$6 = path$h.Object.getPrototypeOf;\n\nvar parent$K = getPrototypeOf$6;\n\nvar getPrototypeOf$5 = parent$K;\n\nvar getPrototypeOf$4 = getPrototypeOf$5;\n\nvar _Object$getPrototypeOf$1 = /*@__PURE__*/getDefaultExportFromCjs(getPrototypeOf$4);\n\nvar $$A = _export;\nvar $filter = arrayIteration.filter;\nvar arrayMethodHasSpeciesSupport = arrayMethodHasSpeciesSupport$5;\n\nvar HAS_SPECIES_SUPPORT = arrayMethodHasSpeciesSupport('filter');\n\n// `Array.prototype.filter` method\n// https://tc39.es/ecma262/#sec-array.prototype.filter\n// with adding support of @@species\n$$A({ target: 'Array', proto: true, forced: !HAS_SPECIES_SUPPORT }, {\n  filter: function filter(callbackfn /* , thisArg */) {\n    return $filter(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nvar entryVirtual$d = entryVirtual$o;\n\nvar filter$3 = entryVirtual$d('Array').filter;\n\nvar isPrototypeOf$g = objectIsPrototypeOf;\nvar method$d = filter$3;\n\nvar ArrayPrototype$c = Array.prototype;\n\nvar filter$2 = function (it) {\n  var own = it.filter;\n  return it === ArrayPrototype$c || (isPrototypeOf$g(ArrayPrototype$c, it) && own === ArrayPrototype$c.filter) ? method$d : own;\n};\n\nvar parent$J = filter$2;\n\nvar filter$1 = parent$J;\n\nvar filter = filter$1;\n\nvar _filterInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(filter);\n\nvar DESCRIPTORS$7 = descriptors;\nvar fails$c = fails$y;\nvar uncurryThis$7 = functionUncurryThis;\nvar objectGetPrototypeOf = objectGetPrototypeOf$1;\nvar objectKeys = objectKeys$4;\nvar toIndexedObject$2 = toIndexedObject$b;\nvar $propertyIsEnumerable = objectPropertyIsEnumerable.f;\n\nvar propertyIsEnumerable = uncurryThis$7($propertyIsEnumerable);\nvar push$3 = uncurryThis$7([].push);\n\n// in some IE versions, `propertyIsEnumerable` returns incorrect result on integer keys\n// of `null` prototype objects\nvar IE_BUG = DESCRIPTORS$7 && fails$c(function () {\n  // eslint-disable-next-line es/no-object-create -- safe\n  var O = Object.create(null);\n  O[2] = 2;\n  return !propertyIsEnumerable(O, 2);\n});\n\n// `Object.{ entries, values }` methods implementation\nvar createMethod$2 = function (TO_ENTRIES) {\n  return function (it) {\n    var O = toIndexedObject$2(it);\n    var keys = objectKeys(O);\n    var IE_WORKAROUND = IE_BUG && objectGetPrototypeOf(O) === null;\n    var length = keys.length;\n    var i = 0;\n    var result = [];\n    var key;\n    while (length > i) {\n      key = keys[i++];\n      if (!DESCRIPTORS$7 || (IE_WORKAROUND ? key in O : propertyIsEnumerable(O, key))) {\n        push$3(result, TO_ENTRIES ? [key, O[key]] : O[key]);\n      }\n    }\n    return result;\n  };\n};\n\nvar objectToArray = {\n  // `Object.entries` method\n  // https://tc39.es/ecma262/#sec-object.entries\n  entries: createMethod$2(true),\n  // `Object.values` method\n  // https://tc39.es/ecma262/#sec-object.values\n  values: createMethod$2(false)\n};\n\nvar $$z = _export;\nvar $values = objectToArray.values;\n\n// `Object.values` method\n// https://tc39.es/ecma262/#sec-object.values\n$$z({ target: 'Object', stat: true }, {\n  values: function values(O) {\n    return $values(O);\n  }\n});\n\nvar path$g = path$u;\n\nvar values$6 = path$g.Object.values;\n\nvar parent$I = values$6;\n\nvar values$5 = parent$I;\n\nvar values$4 = values$5;\n\nvar _Object$values2 = /*@__PURE__*/getDefaultExportFromCjs(values$4);\n\n// a string of all valid unicode whitespaces\nvar whitespaces$3 = '\\u0009\\u000A\\u000B\\u000C\\u000D\\u0020\\u00A0\\u1680\\u2000\\u2001\\u2002' +\n  '\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200A\\u202F\\u205F\\u3000\\u2028\\u2029\\uFEFF';\n\nvar uncurryThis$6 = functionUncurryThis;\nvar requireObjectCoercible$1 = requireObjectCoercible$6;\nvar toString$5 = toString$c;\nvar whitespaces$2 = whitespaces$3;\n\nvar replace$1 = uncurryThis$6(''.replace);\nvar ltrim = RegExp('^[' + whitespaces$2 + ']+');\nvar rtrim = RegExp('(^|[^' + whitespaces$2 + '])[' + whitespaces$2 + ']+$');\n\n// `String.prototype.{ trim, trimStart, trimEnd, trimLeft, trimRight }` methods implementation\nvar createMethod$1 = function (TYPE) {\n  return function ($this) {\n    var string = toString$5(requireObjectCoercible$1($this));\n    if (TYPE & 1) string = replace$1(string, ltrim, '');\n    if (TYPE & 2) string = replace$1(string, rtrim, '$1');\n    return string;\n  };\n};\n\nvar stringTrim = {\n  // `String.prototype.{ trimLeft, trimStart }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimstart\n  start: createMethod$1(1),\n  // `String.prototype.{ trimRight, trimEnd }` methods\n  // https://tc39.es/ecma262/#sec-string.prototype.trimend\n  end: createMethod$1(2),\n  // `String.prototype.trim` method\n  // https://tc39.es/ecma262/#sec-string.prototype.trim\n  trim: createMethod$1(3)\n};\n\nvar global$c = global$q;\nvar fails$b = fails$y;\nvar uncurryThis$5 = functionUncurryThis;\nvar toString$4 = toString$c;\nvar trim$1 = stringTrim.trim;\nvar whitespaces$1 = whitespaces$3;\n\nvar $parseInt$1 = global$c.parseInt;\nvar Symbol$2 = global$c.Symbol;\nvar ITERATOR$1 = Symbol$2 && Symbol$2.iterator;\nvar hex = /^[+-]?0x/i;\nvar exec = uncurryThis$5(hex.exec);\nvar FORCED$6 = $parseInt$1(whitespaces$1 + '08') !== 8 || $parseInt$1(whitespaces$1 + '0x16') !== 22\n  // MS Edge 18- broken with boxed symbols\n  || (ITERATOR$1 && !fails$b(function () { $parseInt$1(Object(ITERATOR$1)); }));\n\n// `parseInt` method\n// https://tc39.es/ecma262/#sec-parseint-string-radix\nvar numberParseInt = FORCED$6 ? function parseInt(string, radix) {\n  var S = trim$1(toString$4(string));\n  return $parseInt$1(S, (radix >>> 0) || (exec(hex, S) ? 16 : 10));\n} : $parseInt$1;\n\nvar $$y = _export;\nvar $parseInt = numberParseInt;\n\n// `parseInt` method\n// https://tc39.es/ecma262/#sec-parseint-string-radix\n$$y({ global: true, forced: parseInt !== $parseInt }, {\n  parseInt: $parseInt\n});\n\nvar path$f = path$u;\n\nvar _parseInt$3 = path$f.parseInt;\n\nvar parent$H = _parseInt$3;\n\nvar _parseInt$2 = parent$H;\n\nvar _parseInt = _parseInt$2;\n\nvar _parseInt$1 = /*@__PURE__*/getDefaultExportFromCjs(_parseInt);\n\n/* eslint-disable es/no-array-prototype-indexof -- required for testing */\nvar $$x = _export;\nvar uncurryThis$4 = functionUncurryThisClause;\nvar $indexOf = arrayIncludes.indexOf;\nvar arrayMethodIsStrict$4 = arrayMethodIsStrict$6;\n\nvar nativeIndexOf = uncurryThis$4([].indexOf);\n\nvar NEGATIVE_ZERO = !!nativeIndexOf && 1 / nativeIndexOf([1], 1, -0) < 0;\nvar FORCED$5 = NEGATIVE_ZERO || !arrayMethodIsStrict$4('indexOf');\n\n// `Array.prototype.indexOf` method\n// https://tc39.es/ecma262/#sec-array.prototype.indexof\n$$x({ target: 'Array', proto: true, forced: FORCED$5 }, {\n  indexOf: function indexOf(searchElement /* , fromIndex = 0 */) {\n    var fromIndex = arguments.length > 1 ? arguments[1] : undefined;\n    return NEGATIVE_ZERO\n      // convert -0 to +0\n      ? nativeIndexOf(this, searchElement, fromIndex) || 0\n      : $indexOf(this, searchElement, fromIndex);\n  }\n});\n\nvar entryVirtual$c = entryVirtual$o;\n\nvar indexOf$3 = entryVirtual$c('Array').indexOf;\n\nvar isPrototypeOf$f = objectIsPrototypeOf;\nvar method$c = indexOf$3;\n\nvar ArrayPrototype$b = Array.prototype;\n\nvar indexOf$2 = function (it) {\n  var own = it.indexOf;\n  return it === ArrayPrototype$b || (isPrototypeOf$f(ArrayPrototype$b, it) && own === ArrayPrototype$b.indexOf) ? method$c : own;\n};\n\nvar parent$G = indexOf$2;\n\nvar indexOf$1 = parent$G;\n\nvar indexOf = indexOf$1;\n\nvar _indexOfInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(indexOf);\n\nvar $$w = _export;\nvar $entries = objectToArray.entries;\n\n// `Object.entries` method\n// https://tc39.es/ecma262/#sec-object.entries\n$$w({ target: 'Object', stat: true }, {\n  entries: function entries(O) {\n    return $entries(O);\n  }\n});\n\nvar path$e = path$u;\n\nvar entries$6 = path$e.Object.entries;\n\nvar parent$F = entries$6;\n\nvar entries$5 = parent$F;\n\nvar entries$4 = entries$5;\n\nvar _Object$entries2 = /*@__PURE__*/getDefaultExportFromCjs(entries$4);\n\n// TODO: Remove from `core-js@4`\nvar $$v = _export;\nvar DESCRIPTORS$6 = descriptors;\nvar create$9 = objectCreate;\n\n// `Object.create` method\n// https://tc39.es/ecma262/#sec-object.create\n$$v({ target: 'Object', stat: true, sham: !DESCRIPTORS$6 }, {\n  create: create$9\n});\n\nvar path$d = path$u;\n\nvar Object$3 = path$d.Object;\n\nvar create$8 = function create(P, D) {\n  return Object$3.create(P, D);\n};\n\nvar parent$E = create$8;\n\nvar create$7 = parent$E;\n\nvar create$6 = create$7;\n\nvar _Object$create$1 = /*@__PURE__*/getDefaultExportFromCjs(create$6);\n\nvar path$c = path$u;\nvar apply$3 = functionApply;\n\n// eslint-disable-next-line es/no-json -- safe\nif (!path$c.JSON) path$c.JSON = { stringify: JSON.stringify };\n\n// eslint-disable-next-line no-unused-vars -- required for `.length`\nvar stringify$2 = function stringify(it, replacer, space) {\n  return apply$3(path$c.JSON.stringify, null, arguments);\n};\n\nvar parent$D = stringify$2;\n\nvar stringify$1 = parent$D;\n\nvar stringify = stringify$1;\n\nvar _JSON$stringify = /*@__PURE__*/getDefaultExportFromCjs(stringify);\n\n/* global Bun -- Deno case */\nvar engineIsBun = typeof Bun == 'function' && Bun && typeof Bun.version == 'string';\n\nvar $TypeError$5 = TypeError;\n\nvar validateArgumentsLength$2 = function (passed, required) {\n  if (passed < required) throw new $TypeError$5('Not enough arguments');\n  return passed;\n};\n\nvar global$b = global$q;\nvar apply$2 = functionApply;\nvar isCallable$5 = isCallable$m;\nvar ENGINE_IS_BUN = engineIsBun;\nvar USER_AGENT = engineUserAgent;\nvar arraySlice$2 = arraySlice$5;\nvar validateArgumentsLength$1 = validateArgumentsLength$2;\n\nvar Function$2 = global$b.Function;\n// dirty IE9- and Bun 0.3.0- checks\nvar WRAP = /MSIE .\\./.test(USER_AGENT) || ENGINE_IS_BUN && (function () {\n  var version = global$b.Bun.version.split('.');\n  return version.length < 3 || version[0] === '0' && (version[1] < 3 || version[1] === '3' && version[2] === '0');\n})();\n\n// IE9- / Bun 0.3.0- setTimeout / setInterval / setImmediate additional parameters fix\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#timers\n// https://github.com/oven-sh/bun/issues/1633\nvar schedulersFix$2 = function (scheduler, hasTimeArg) {\n  var firstParamIndex = hasTimeArg ? 2 : 1;\n  return WRAP ? function (handler, timeout /* , ...arguments */) {\n    var boundArgs = validateArgumentsLength$1(arguments.length, 1) > firstParamIndex;\n    var fn = isCallable$5(handler) ? handler : Function$2(handler);\n    var params = boundArgs ? arraySlice$2(arguments, firstParamIndex) : [];\n    var callback = boundArgs ? function () {\n      apply$2(fn, this, params);\n    } : fn;\n    return hasTimeArg ? scheduler(callback, timeout) : scheduler(callback);\n  } : scheduler;\n};\n\nvar $$u = _export;\nvar global$a = global$q;\nvar schedulersFix$1 = schedulersFix$2;\n\nvar setInterval$2 = schedulersFix$1(global$a.setInterval, true);\n\n// Bun / IE9- setInterval additional parameters fix\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-setinterval\n$$u({ global: true, bind: true, forced: global$a.setInterval !== setInterval$2 }, {\n  setInterval: setInterval$2\n});\n\nvar $$t = _export;\nvar global$9 = global$q;\nvar schedulersFix = schedulersFix$2;\n\nvar setTimeout$3 = schedulersFix(global$9.setTimeout, true);\n\n// Bun / IE9- setTimeout additional parameters fix\n// https://html.spec.whatwg.org/multipage/timers-and-user-prompts.html#dom-settimeout\n$$t({ global: true, bind: true, forced: global$9.setTimeout !== setTimeout$3 }, {\n  setTimeout: setTimeout$3\n});\n\nvar path$b = path$u;\n\nvar setTimeout$2 = path$b.setTimeout;\n\nvar setTimeout$1 = setTimeout$2;\n\nvar _setTimeout = /*@__PURE__*/getDefaultExportFromCjs(setTimeout$1);\n\nvar toObject$3 = toObject$f;\nvar toAbsoluteIndex = toAbsoluteIndex$5;\nvar lengthOfArrayLike$5 = lengthOfArrayLike$e;\n\n// `Array.prototype.fill` method implementation\n// https://tc39.es/ecma262/#sec-array.prototype.fill\nvar arrayFill = function fill(value /* , start = 0, end = @length */) {\n  var O = toObject$3(this);\n  var length = lengthOfArrayLike$5(O);\n  var argumentsLength = arguments.length;\n  var index = toAbsoluteIndex(argumentsLength > 1 ? arguments[1] : undefined, length);\n  var end = argumentsLength > 2 ? arguments[2] : undefined;\n  var endPos = end === undefined ? length : toAbsoluteIndex(end, length);\n  while (endPos > index) O[index++] = value;\n  return O;\n};\n\nvar $$s = _export;\nvar fill$4 = arrayFill;\n\n// `Array.prototype.fill` method\n// https://tc39.es/ecma262/#sec-array.prototype.fill\n$$s({ target: 'Array', proto: true }, {\n  fill: fill$4\n});\n\nvar entryVirtual$b = entryVirtual$o;\n\nvar fill$3 = entryVirtual$b('Array').fill;\n\nvar isPrototypeOf$e = objectIsPrototypeOf;\nvar method$b = fill$3;\n\nvar ArrayPrototype$a = Array.prototype;\n\nvar fill$2 = function (it) {\n  var own = it.fill;\n  return it === ArrayPrototype$a || (isPrototypeOf$e(ArrayPrototype$a, it) && own === ArrayPrototype$a.fill) ? method$b : own;\n};\n\nvar parent$C = fill$2;\n\nvar fill$1 = parent$C;\n\nvar fill = fill$1;\n\nvar _fillInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(fill);\n\nvar componentEmitter = {exports: {}};\n\n(function (module) {\n\t/**\r\n\t * Expose `Emitter`.\r\n\t */\r\n\r\n\t{\r\n\t  module.exports = Emitter;\r\n\t}\r\n\r\n\t/**\r\n\t * Initialize a new `Emitter`.\r\n\t *\r\n\t * @api public\r\n\t */\r\n\r\n\tfunction Emitter(obj) {\r\n\t  if (obj) return mixin(obj);\r\n\t}\r\n\t/**\r\n\t * Mixin the emitter properties.\r\n\t *\r\n\t * @param {Object} obj\r\n\t * @return {Object}\r\n\t * @api private\r\n\t */\r\n\r\n\tfunction mixin(obj) {\r\n\t  for (var key in Emitter.prototype) {\r\n\t    obj[key] = Emitter.prototype[key];\r\n\t  }\r\n\t  return obj;\r\n\t}\r\n\r\n\t/**\r\n\t * Listen on the given `event` with `fn`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\r\n\tEmitter.prototype.on =\r\n\tEmitter.prototype.addEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n\t    .push(fn);\r\n\t  return this;\r\n\t};\r\n\r\n\t/**\r\n\t * Adds an `event` listener that will be invoked a single\r\n\t * time then automatically removed.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\r\n\tEmitter.prototype.once = function(event, fn){\r\n\t  function on() {\r\n\t    this.off(event, on);\r\n\t    fn.apply(this, arguments);\r\n\t  }\r\n\r\n\t  on.fn = fn;\r\n\t  this.on(event, on);\r\n\t  return this;\r\n\t};\r\n\r\n\t/**\r\n\t * Remove the given callback for `event` or all\r\n\t * registered callbacks.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Function} fn\r\n\t * @return {Emitter}\r\n\t * @api public\r\n\t */\r\n\r\n\tEmitter.prototype.off =\r\n\tEmitter.prototype.removeListener =\r\n\tEmitter.prototype.removeAllListeners =\r\n\tEmitter.prototype.removeEventListener = function(event, fn){\r\n\t  this._callbacks = this._callbacks || {};\r\n\r\n\t  // all\r\n\t  if (0 == arguments.length) {\r\n\t    this._callbacks = {};\r\n\t    return this;\r\n\t  }\r\n\r\n\t  // specific event\r\n\t  var callbacks = this._callbacks['$' + event];\r\n\t  if (!callbacks) return this;\r\n\r\n\t  // remove all handlers\r\n\t  if (1 == arguments.length) {\r\n\t    delete this._callbacks['$' + event];\r\n\t    return this;\r\n\t  }\r\n\r\n\t  // remove specific handler\r\n\t  var cb;\r\n\t  for (var i = 0; i < callbacks.length; i++) {\r\n\t    cb = callbacks[i];\r\n\t    if (cb === fn || cb.fn === fn) {\r\n\t      callbacks.splice(i, 1);\r\n\t      break;\r\n\t    }\r\n\t  }\r\n\r\n\t  // Remove event specific arrays for event types that no\r\n\t  // one is subscribed for to avoid memory leak.\r\n\t  if (callbacks.length === 0) {\r\n\t    delete this._callbacks['$' + event];\r\n\t  }\r\n\r\n\t  return this;\r\n\t};\r\n\r\n\t/**\r\n\t * Emit `event` with the given args.\r\n\t *\r\n\t * @param {String} event\r\n\t * @param {Mixed} ...\r\n\t * @return {Emitter}\r\n\t */\r\n\r\n\tEmitter.prototype.emit = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\r\n\t  var args = new Array(arguments.length - 1)\r\n\t    , callbacks = this._callbacks['$' + event];\r\n\r\n\t  for (var i = 1; i < arguments.length; i++) {\r\n\t    args[i - 1] = arguments[i];\r\n\t  }\r\n\r\n\t  if (callbacks) {\r\n\t    callbacks = callbacks.slice(0);\r\n\t    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n\t      callbacks[i].apply(this, args);\r\n\t    }\r\n\t  }\r\n\r\n\t  return this;\r\n\t};\r\n\r\n\t/**\r\n\t * Return array of callbacks for `event`.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Array}\r\n\t * @api public\r\n\t */\r\n\r\n\tEmitter.prototype.listeners = function(event){\r\n\t  this._callbacks = this._callbacks || {};\r\n\t  return this._callbacks['$' + event] || [];\r\n\t};\r\n\r\n\t/**\r\n\t * Check if this emitter has `event` handlers.\r\n\t *\r\n\t * @param {String} event\r\n\t * @return {Boolean}\r\n\t * @api public\r\n\t */\r\n\r\n\tEmitter.prototype.hasListeners = function(event){\r\n\t  return !! this.listeners(event).length;\r\n\t}; \n} (componentEmitter));\n\nvar componentEmitterExports = componentEmitter.exports;\nvar Emitter = /*@__PURE__*/getDefaultExportFromCjs(componentEmitterExports);\n\n/*! Hammer.JS - v2.0.17-rc - 2019-12-16\n * http://naver.github.io/egjs\n *\n * Forked By Naver egjs\n * Copyright (c) hammerjs\n * Licensed under the MIT license */\nfunction _extends() {\n  _extends = Object.assign || function (target) {\n    for (var i = 1; i < arguments.length; i++) {\n      var source = arguments[i];\n\n      for (var key in source) {\n        if (Object.prototype.hasOwnProperty.call(source, key)) {\n          target[key] = source[key];\n        }\n      }\n    }\n\n    return target;\n  };\n\n  return _extends.apply(this, arguments);\n}\n\nfunction _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}\n\nfunction _assertThisInitialized$1(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} target\n * @param {...Object} objects_to_assign\n * @returns {Object} target\n */\nvar assign;\n\nif (typeof Object.assign !== 'function') {\n  assign = function assign(target) {\n    if (target === undefined || target === null) {\n      throw new TypeError('Cannot convert undefined or null to object');\n    }\n\n    var output = Object(target);\n\n    for (var index = 1; index < arguments.length; index++) {\n      var source = arguments[index];\n\n      if (source !== undefined && source !== null) {\n        for (var nextKey in source) {\n          if (source.hasOwnProperty(nextKey)) {\n            output[nextKey] = source[nextKey];\n          }\n        }\n      }\n    }\n\n    return output;\n  };\n} else {\n  assign = Object.assign;\n}\n\nvar assign$1 = assign;\n\nvar VENDOR_PREFIXES = ['', 'webkit', 'Moz', 'MS', 'ms', 'o'];\nvar TEST_ELEMENT = typeof document === \"undefined\" ? {\n  style: {}\n} : document.createElement('div');\nvar TYPE_FUNCTION = 'function';\nvar round = Math.round,\n    abs = Math.abs;\nvar now = Date.now;\n\n/**\n * @private\n * get the prefixed property\n * @param {Object} obj\n * @param {String} property\n * @returns {String|Undefined} prefixed\n */\n\nfunction prefixed(obj, property) {\n  var prefix;\n  var prop;\n  var camelProp = property[0].toUpperCase() + property.slice(1);\n  var i = 0;\n\n  while (i < VENDOR_PREFIXES.length) {\n    prefix = VENDOR_PREFIXES[i];\n    prop = prefix ? prefix + camelProp : property;\n\n    if (prop in obj) {\n      return prop;\n    }\n\n    i++;\n  }\n\n  return undefined;\n}\n\n/* eslint-disable no-new-func, no-nested-ternary */\nvar win;\n\nif (typeof window === \"undefined\") {\n  // window is undefined in node.js\n  win = {};\n} else {\n  win = window;\n}\n\nvar PREFIXED_TOUCH_ACTION = prefixed(TEST_ELEMENT.style, 'touchAction');\nvar NATIVE_TOUCH_ACTION = PREFIXED_TOUCH_ACTION !== undefined;\nfunction getTouchActionProps() {\n  if (!NATIVE_TOUCH_ACTION) {\n    return false;\n  }\n\n  var touchMap = {};\n  var cssSupports = win.CSS && win.CSS.supports;\n  ['auto', 'manipulation', 'pan-y', 'pan-x', 'pan-x pan-y', 'none'].forEach(function (val) {\n    // If css.supports is not supported but there is native touch-action assume it supports\n    // all values. This is the case for IE 10 and 11.\n    return touchMap[val] = cssSupports ? win.CSS.supports('touch-action', val) : true;\n  });\n  return touchMap;\n}\n\nvar TOUCH_ACTION_COMPUTE = 'compute';\nvar TOUCH_ACTION_AUTO = 'auto';\nvar TOUCH_ACTION_MANIPULATION = 'manipulation'; // not implemented\n\nvar TOUCH_ACTION_NONE = 'none';\nvar TOUCH_ACTION_PAN_X = 'pan-x';\nvar TOUCH_ACTION_PAN_Y = 'pan-y';\nvar TOUCH_ACTION_MAP = getTouchActionProps();\n\nvar MOBILE_REGEX = /mobile|tablet|ip(ad|hone|od)|android/i;\nvar SUPPORT_TOUCH = 'ontouchstart' in win;\nvar SUPPORT_POINTER_EVENTS = prefixed(win, 'PointerEvent') !== undefined;\nvar SUPPORT_ONLY_TOUCH = SUPPORT_TOUCH && MOBILE_REGEX.test(navigator.userAgent);\nvar INPUT_TYPE_TOUCH = 'touch';\nvar INPUT_TYPE_PEN = 'pen';\nvar INPUT_TYPE_MOUSE = 'mouse';\nvar INPUT_TYPE_KINECT = 'kinect';\nvar COMPUTE_INTERVAL = 25;\nvar INPUT_START = 1;\nvar INPUT_MOVE = 2;\nvar INPUT_END = 4;\nvar INPUT_CANCEL = 8;\nvar DIRECTION_NONE = 1;\nvar DIRECTION_LEFT = 2;\nvar DIRECTION_RIGHT = 4;\nvar DIRECTION_UP = 8;\nvar DIRECTION_DOWN = 16;\nvar DIRECTION_HORIZONTAL = DIRECTION_LEFT | DIRECTION_RIGHT;\nvar DIRECTION_VERTICAL = DIRECTION_UP | DIRECTION_DOWN;\nvar DIRECTION_ALL = DIRECTION_HORIZONTAL | DIRECTION_VERTICAL;\nvar PROPS_XY = ['x', 'y'];\nvar PROPS_CLIENT_XY = ['clientX', 'clientY'];\n\n/**\n * @private\n * walk objects and arrays\n * @param {Object} obj\n * @param {Function} iterator\n * @param {Object} context\n */\nfunction each(obj, iterator, context) {\n  var i;\n\n  if (!obj) {\n    return;\n  }\n\n  if (obj.forEach) {\n    obj.forEach(iterator, context);\n  } else if (obj.length !== undefined) {\n    i = 0;\n\n    while (i < obj.length) {\n      iterator.call(context, obj[i], i, obj);\n      i++;\n    }\n  } else {\n    for (i in obj) {\n      obj.hasOwnProperty(i) && iterator.call(context, obj[i], i, obj);\n    }\n  }\n}\n\n/**\n * @private\n * let a boolean value also be a function that must return a boolean\n * this first item in args will be used as the context\n * @param {Boolean|Function} val\n * @param {Array} [args]\n * @returns {Boolean}\n */\n\nfunction boolOrFn(val, args) {\n  if (typeof val === TYPE_FUNCTION) {\n    return val.apply(args ? args[0] || undefined : undefined, args);\n  }\n\n  return val;\n}\n\n/**\n * @private\n * small indexOf wrapper\n * @param {String} str\n * @param {String} find\n * @returns {Boolean} found\n */\nfunction inStr(str, find) {\n  return str.indexOf(find) > -1;\n}\n\n/**\n * @private\n * when the touchActions are collected they are not a valid value, so we need to clean things up. *\n * @param {String} actions\n * @returns {*}\n */\n\nfunction cleanTouchActions(actions) {\n  // none\n  if (inStr(actions, TOUCH_ACTION_NONE)) {\n    return TOUCH_ACTION_NONE;\n  }\n\n  var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X);\n  var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y); // if both pan-x and pan-y are set (different recognizers\n  // for different directions, e.g. horizontal pan but vertical swipe?)\n  // we need none (as otherwise with pan-x pan-y combined none of these\n  // recognizers will work, since the browser would handle all panning\n\n  if (hasPanX && hasPanY) {\n    return TOUCH_ACTION_NONE;\n  } // pan-x OR pan-y\n\n\n  if (hasPanX || hasPanY) {\n    return hasPanX ? TOUCH_ACTION_PAN_X : TOUCH_ACTION_PAN_Y;\n  } // manipulation\n\n\n  if (inStr(actions, TOUCH_ACTION_MANIPULATION)) {\n    return TOUCH_ACTION_MANIPULATION;\n  }\n\n  return TOUCH_ACTION_AUTO;\n}\n\n/**\n * @private\n * Touch Action\n * sets the touchAction property or uses the js alternative\n * @param {Manager} manager\n * @param {String} value\n * @constructor\n */\n\nvar TouchAction =\n/*#__PURE__*/\nfunction () {\n  function TouchAction(manager, value) {\n    this.manager = manager;\n    this.set(value);\n  }\n  /**\n   * @private\n   * set the touchAction value on the element or enable the polyfill\n   * @param {String} value\n   */\n\n\n  var _proto = TouchAction.prototype;\n\n  _proto.set = function set(value) {\n    // find out the touch-action by the event handlers\n    if (value === TOUCH_ACTION_COMPUTE) {\n      value = this.compute();\n    }\n\n    if (NATIVE_TOUCH_ACTION && this.manager.element.style && TOUCH_ACTION_MAP[value]) {\n      this.manager.element.style[PREFIXED_TOUCH_ACTION] = value;\n    }\n\n    this.actions = value.toLowerCase().trim();\n  };\n  /**\n   * @private\n   * just re-set the touchAction value\n   */\n\n\n  _proto.update = function update() {\n    this.set(this.manager.options.touchAction);\n  };\n  /**\n   * @private\n   * compute the value for the touchAction property based on the recognizer's settings\n   * @returns {String} value\n   */\n\n\n  _proto.compute = function compute() {\n    var actions = [];\n    each(this.manager.recognizers, function (recognizer) {\n      if (boolOrFn(recognizer.options.enable, [recognizer])) {\n        actions = actions.concat(recognizer.getTouchAction());\n      }\n    });\n    return cleanTouchActions(actions.join(' '));\n  };\n  /**\n   * @private\n   * this method is called on each input cycle and provides the preventing of the browser behavior\n   * @param {Object} input\n   */\n\n\n  _proto.preventDefaults = function preventDefaults(input) {\n    var srcEvent = input.srcEvent;\n    var direction = input.offsetDirection; // if the touch action did prevented once this session\n\n    if (this.manager.session.prevented) {\n      srcEvent.preventDefault();\n      return;\n    }\n\n    var actions = this.actions;\n    var hasNone = inStr(actions, TOUCH_ACTION_NONE) && !TOUCH_ACTION_MAP[TOUCH_ACTION_NONE];\n    var hasPanY = inStr(actions, TOUCH_ACTION_PAN_Y) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_Y];\n    var hasPanX = inStr(actions, TOUCH_ACTION_PAN_X) && !TOUCH_ACTION_MAP[TOUCH_ACTION_PAN_X];\n\n    if (hasNone) {\n      // do not prevent defaults if this is a tap gesture\n      var isTapPointer = input.pointers.length === 1;\n      var isTapMovement = input.distance < 2;\n      var isTapTouchTime = input.deltaTime < 250;\n\n      if (isTapPointer && isTapMovement && isTapTouchTime) {\n        return;\n      }\n    }\n\n    if (hasPanX && hasPanY) {\n      // `pan-x pan-y` means browser handles all scrolling/panning, do not prevent\n      return;\n    }\n\n    if (hasNone || hasPanY && direction & DIRECTION_HORIZONTAL || hasPanX && direction & DIRECTION_VERTICAL) {\n      return this.preventSrc(srcEvent);\n    }\n  };\n  /**\n   * @private\n   * call preventDefault to prevent the browser's default behavior (scrolling in most cases)\n   * @param {Object} srcEvent\n   */\n\n\n  _proto.preventSrc = function preventSrc(srcEvent) {\n    this.manager.session.prevented = true;\n    srcEvent.preventDefault();\n  };\n\n  return TouchAction;\n}();\n\n/**\n * @private\n * find if a node is in the given parent\n * @method hasParent\n * @param {HTMLElement} node\n * @param {HTMLElement} parent\n * @return {Boolean} found\n */\nfunction hasParent$1(node, parent) {\n  while (node) {\n    if (node === parent) {\n      return true;\n    }\n\n    node = node.parentNode;\n  }\n\n  return false;\n}\n\n/**\n * @private\n * get the center of all the pointers\n * @param {Array} pointers\n * @return {Object} center contains `x` and `y` properties\n */\n\nfunction getCenter(pointers) {\n  var pointersLength = pointers.length; // no need to loop when only one touch\n\n  if (pointersLength === 1) {\n    return {\n      x: round(pointers[0].clientX),\n      y: round(pointers[0].clientY)\n    };\n  }\n\n  var x = 0;\n  var y = 0;\n  var i = 0;\n\n  while (i < pointersLength) {\n    x += pointers[i].clientX;\n    y += pointers[i].clientY;\n    i++;\n  }\n\n  return {\n    x: round(x / pointersLength),\n    y: round(y / pointersLength)\n  };\n}\n\n/**\n * @private\n * create a simple clone from the input used for storage of firstInput and firstMultiple\n * @param {Object} input\n * @returns {Object} clonedInputData\n */\n\nfunction simpleCloneInputData(input) {\n  // make a simple copy of the pointers because we will get a reference if we don't\n  // we only need clientXY for the calculations\n  var pointers = [];\n  var i = 0;\n\n  while (i < input.pointers.length) {\n    pointers[i] = {\n      clientX: round(input.pointers[i].clientX),\n      clientY: round(input.pointers[i].clientY)\n    };\n    i++;\n  }\n\n  return {\n    timeStamp: now(),\n    pointers: pointers,\n    center: getCenter(pointers),\n    deltaX: input.deltaX,\n    deltaY: input.deltaY\n  };\n}\n\n/**\n * @private\n * calculate the absolute distance between two points\n * @param {Object} p1 {x, y}\n * @param {Object} p2 {x, y}\n * @param {Array} [props] containing x and y keys\n * @return {Number} distance\n */\n\nfunction getDistance(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n  return Math.sqrt(x * x + y * y);\n}\n\n/**\n * @private\n * calculate the angle between two coordinates\n * @param {Object} p1\n * @param {Object} p2\n * @param {Array} [props] containing x and y keys\n * @return {Number} angle\n */\n\nfunction getAngle(p1, p2, props) {\n  if (!props) {\n    props = PROPS_XY;\n  }\n\n  var x = p2[props[0]] - p1[props[0]];\n  var y = p2[props[1]] - p1[props[1]];\n  return Math.atan2(y, x) * 180 / Math.PI;\n}\n\n/**\n * @private\n * get the direction between two points\n * @param {Number} x\n * @param {Number} y\n * @return {Number} direction\n */\n\nfunction getDirection(x, y) {\n  if (x === y) {\n    return DIRECTION_NONE;\n  }\n\n  if (abs(x) >= abs(y)) {\n    return x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n  }\n\n  return y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n}\n\nfunction computeDeltaXY(session, input) {\n  var center = input.center; // let { offsetDelta:offset = {}, prevDelta = {}, prevInput = {} } = session;\n  // jscs throwing error on defalut destructured values and without defaults tests fail\n\n  var offset = session.offsetDelta || {};\n  var prevDelta = session.prevDelta || {};\n  var prevInput = session.prevInput || {};\n\n  if (input.eventType === INPUT_START || prevInput.eventType === INPUT_END) {\n    prevDelta = session.prevDelta = {\n      x: prevInput.deltaX || 0,\n      y: prevInput.deltaY || 0\n    };\n    offset = session.offsetDelta = {\n      x: center.x,\n      y: center.y\n    };\n  }\n\n  input.deltaX = prevDelta.x + (center.x - offset.x);\n  input.deltaY = prevDelta.y + (center.y - offset.y);\n}\n\n/**\n * @private\n * calculate the velocity between two points. unit is in px per ms.\n * @param {Number} deltaTime\n * @param {Number} x\n * @param {Number} y\n * @return {Object} velocity `x` and `y`\n */\nfunction getVelocity(deltaTime, x, y) {\n  return {\n    x: x / deltaTime || 0,\n    y: y / deltaTime || 0\n  };\n}\n\n/**\n * @private\n * calculate the scale factor between two pointersets\n * no scale is 1, and goes down to 0 when pinched together, and bigger when pinched out\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} scale\n */\n\nfunction getScale(start, end) {\n  return getDistance(end[0], end[1], PROPS_CLIENT_XY) / getDistance(start[0], start[1], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * calculate the rotation degrees between two pointersets\n * @param {Array} start array of pointers\n * @param {Array} end array of pointers\n * @return {Number} rotation\n */\n\nfunction getRotation(start, end) {\n  return getAngle(end[1], end[0], PROPS_CLIENT_XY) + getAngle(start[1], start[0], PROPS_CLIENT_XY);\n}\n\n/**\n * @private\n * velocity is calculated every x ms\n * @param {Object} session\n * @param {Object} input\n */\n\nfunction computeIntervalInputData(session, input) {\n  var last = session.lastInterval || input;\n  var deltaTime = input.timeStamp - last.timeStamp;\n  var velocity;\n  var velocityX;\n  var velocityY;\n  var direction;\n\n  if (input.eventType !== INPUT_CANCEL && (deltaTime > COMPUTE_INTERVAL || last.velocity === undefined)) {\n    var deltaX = input.deltaX - last.deltaX;\n    var deltaY = input.deltaY - last.deltaY;\n    var v = getVelocity(deltaTime, deltaX, deltaY);\n    velocityX = v.x;\n    velocityY = v.y;\n    velocity = abs(v.x) > abs(v.y) ? v.x : v.y;\n    direction = getDirection(deltaX, deltaY);\n    session.lastInterval = input;\n  } else {\n    // use latest velocity info if it doesn't overtake a minimum period\n    velocity = last.velocity;\n    velocityX = last.velocityX;\n    velocityY = last.velocityY;\n    direction = last.direction;\n  }\n\n  input.velocity = velocity;\n  input.velocityX = velocityX;\n  input.velocityY = velocityY;\n  input.direction = direction;\n}\n\n/**\n* @private\n * extend the data with some usable properties like scale, rotate, velocity etc\n * @param {Object} manager\n * @param {Object} input\n */\n\nfunction computeInputData(manager, input) {\n  var session = manager.session;\n  var pointers = input.pointers;\n  var pointersLength = pointers.length; // store the first input to calculate the distance and direction\n\n  if (!session.firstInput) {\n    session.firstInput = simpleCloneInputData(input);\n  } // to compute scale and rotation we need to store the multiple touches\n\n\n  if (pointersLength > 1 && !session.firstMultiple) {\n    session.firstMultiple = simpleCloneInputData(input);\n  } else if (pointersLength === 1) {\n    session.firstMultiple = false;\n  }\n\n  var firstInput = session.firstInput,\n      firstMultiple = session.firstMultiple;\n  var offsetCenter = firstMultiple ? firstMultiple.center : firstInput.center;\n  var center = input.center = getCenter(pointers);\n  input.timeStamp = now();\n  input.deltaTime = input.timeStamp - firstInput.timeStamp;\n  input.angle = getAngle(offsetCenter, center);\n  input.distance = getDistance(offsetCenter, center);\n  computeDeltaXY(session, input);\n  input.offsetDirection = getDirection(input.deltaX, input.deltaY);\n  var overallVelocity = getVelocity(input.deltaTime, input.deltaX, input.deltaY);\n  input.overallVelocityX = overallVelocity.x;\n  input.overallVelocityY = overallVelocity.y;\n  input.overallVelocity = abs(overallVelocity.x) > abs(overallVelocity.y) ? overallVelocity.x : overallVelocity.y;\n  input.scale = firstMultiple ? getScale(firstMultiple.pointers, pointers) : 1;\n  input.rotation = firstMultiple ? getRotation(firstMultiple.pointers, pointers) : 0;\n  input.maxPointers = !session.prevInput ? input.pointers.length : input.pointers.length > session.prevInput.maxPointers ? input.pointers.length : session.prevInput.maxPointers;\n  computeIntervalInputData(session, input); // find the correct target\n\n  var target = manager.element;\n  var srcEvent = input.srcEvent;\n  var srcEventTarget;\n\n  if (srcEvent.composedPath) {\n    srcEventTarget = srcEvent.composedPath()[0];\n  } else if (srcEvent.path) {\n    srcEventTarget = srcEvent.path[0];\n  } else {\n    srcEventTarget = srcEvent.target;\n  }\n\n  if (hasParent$1(srcEventTarget, target)) {\n    target = srcEventTarget;\n  }\n\n  input.target = target;\n}\n\n/**\n * @private\n * handle input events\n * @param {Manager} manager\n * @param {String} eventType\n * @param {Object} input\n */\n\nfunction inputHandler(manager, eventType, input) {\n  var pointersLen = input.pointers.length;\n  var changedPointersLen = input.changedPointers.length;\n  var isFirst = eventType & INPUT_START && pointersLen - changedPointersLen === 0;\n  var isFinal = eventType & (INPUT_END | INPUT_CANCEL) && pointersLen - changedPointersLen === 0;\n  input.isFirst = !!isFirst;\n  input.isFinal = !!isFinal;\n\n  if (isFirst) {\n    manager.session = {};\n  } // source event is the normalized value of the domEvents\n  // like 'touchstart, mouseup, pointerdown'\n\n\n  input.eventType = eventType; // compute scale, rotation etc\n\n  computeInputData(manager, input); // emit secret event\n\n  manager.emit('hammer.input', input);\n  manager.recognize(input);\n  manager.session.prevInput = input;\n}\n\n/**\n * @private\n * split string on whitespace\n * @param {String} str\n * @returns {Array} words\n */\nfunction splitStr(str) {\n  return str.trim().split(/\\s+/g);\n}\n\n/**\n * @private\n * addEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n\nfunction addEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.addEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * removeEventListener with multiple events at once\n * @param {EventTarget} target\n * @param {String} types\n * @param {Function} handler\n */\n\nfunction removeEventListeners(target, types, handler) {\n  each(splitStr(types), function (type) {\n    target.removeEventListener(type, handler, false);\n  });\n}\n\n/**\n * @private\n * get the window object of an element\n * @param {HTMLElement} element\n * @returns {DocumentView|Window}\n */\nfunction getWindowForElement(element) {\n  var doc = element.ownerDocument || element;\n  return doc.defaultView || doc.parentWindow || window;\n}\n\n/**\n * @private\n * create new input type manager\n * @param {Manager} manager\n * @param {Function} callback\n * @returns {Input}\n * @constructor\n */\n\nvar Input =\n/*#__PURE__*/\nfunction () {\n  function Input(manager, callback) {\n    var self = this;\n    this.manager = manager;\n    this.callback = callback;\n    this.element = manager.element;\n    this.target = manager.options.inputTarget; // smaller wrapper around the handler, for the scope and the enabled state of the manager,\n    // so when disabled the input events are completely bypassed.\n\n    this.domHandler = function (ev) {\n      if (boolOrFn(manager.options.enable, [manager])) {\n        self.handler(ev);\n      }\n    };\n\n    this.init();\n  }\n  /**\n   * @private\n   * should handle the inputEvent data and trigger the callback\n   * @virtual\n   */\n\n\n  var _proto = Input.prototype;\n\n  _proto.handler = function handler() {};\n  /**\n   * @private\n   * bind the events\n   */\n\n\n  _proto.init = function init() {\n    this.evEl && addEventListeners(this.element, this.evEl, this.domHandler);\n    this.evTarget && addEventListeners(this.target, this.evTarget, this.domHandler);\n    this.evWin && addEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  };\n  /**\n   * @private\n   * unbind the events\n   */\n\n\n  _proto.destroy = function destroy() {\n    this.evEl && removeEventListeners(this.element, this.evEl, this.domHandler);\n    this.evTarget && removeEventListeners(this.target, this.evTarget, this.domHandler);\n    this.evWin && removeEventListeners(getWindowForElement(this.element), this.evWin, this.domHandler);\n  };\n\n  return Input;\n}();\n\n/**\n * @private\n * find if a array contains the object using indexOf or a simple polyFill\n * @param {Array} src\n * @param {String} find\n * @param {String} [findByKey]\n * @return {Boolean|Number} false when not found, or the index\n */\nfunction inArray(src, find, findByKey) {\n  if (src.indexOf && !findByKey) {\n    return src.indexOf(find);\n  } else {\n    var i = 0;\n\n    while (i < src.length) {\n      if (findByKey && src[i][findByKey] == find || !findByKey && src[i] === find) {\n        // do not use === here, test fails\n        return i;\n      }\n\n      i++;\n    }\n\n    return -1;\n  }\n}\n\nvar POINTER_INPUT_MAP = {\n  pointerdown: INPUT_START,\n  pointermove: INPUT_MOVE,\n  pointerup: INPUT_END,\n  pointercancel: INPUT_CANCEL,\n  pointerout: INPUT_CANCEL\n}; // in IE10 the pointer types is defined as an enum\n\nvar IE10_POINTER_TYPE_ENUM = {\n  2: INPUT_TYPE_TOUCH,\n  3: INPUT_TYPE_PEN,\n  4: INPUT_TYPE_MOUSE,\n  5: INPUT_TYPE_KINECT // see https://twitter.com/jacobrossi/status/480596438489890816\n\n};\nvar POINTER_ELEMENT_EVENTS = 'pointerdown';\nvar POINTER_WINDOW_EVENTS = 'pointermove pointerup pointercancel'; // IE10 has prefixed support, and case-sensitive\n\nif (win.MSPointerEvent && !win.PointerEvent) {\n  POINTER_ELEMENT_EVENTS = 'MSPointerDown';\n  POINTER_WINDOW_EVENTS = 'MSPointerMove MSPointerUp MSPointerCancel';\n}\n/**\n * @private\n * Pointer events input\n * @constructor\n * @extends Input\n */\n\n\nvar PointerEventInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(PointerEventInput, _Input);\n\n  function PointerEventInput() {\n    var _this;\n\n    var proto = PointerEventInput.prototype;\n    proto.evEl = POINTER_ELEMENT_EVENTS;\n    proto.evWin = POINTER_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.store = _this.manager.session.pointerEvents = [];\n    return _this;\n  }\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  var _proto = PointerEventInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var store = this.store;\n    var removePointer = false;\n    var eventTypeNormalized = ev.type.toLowerCase().replace('ms', '');\n    var eventType = POINTER_INPUT_MAP[eventTypeNormalized];\n    var pointerType = IE10_POINTER_TYPE_ENUM[ev.pointerType] || ev.pointerType;\n    var isTouch = pointerType === INPUT_TYPE_TOUCH; // get index of the event in the store\n\n    var storeIndex = inArray(store, ev.pointerId, 'pointerId'); // start and mouse must be down\n\n    if (eventType & INPUT_START && (ev.button === 0 || isTouch)) {\n      if (storeIndex < 0) {\n        store.push(ev);\n        storeIndex = store.length - 1;\n      }\n    } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n      removePointer = true;\n    } // it not found, so the pointer hasn't been down (so it's probably a hover)\n\n\n    if (storeIndex < 0) {\n      return;\n    } // update the event in the store\n\n\n    store[storeIndex] = ev;\n    this.callback(this.manager, eventType, {\n      pointers: store,\n      changedPointers: [ev],\n      pointerType: pointerType,\n      srcEvent: ev\n    });\n\n    if (removePointer) {\n      // remove from the store\n      store.splice(storeIndex, 1);\n    }\n  };\n\n  return PointerEventInput;\n}(Input);\n\n/**\n * @private\n * convert array-like objects to real arrays\n * @param {Object} obj\n * @returns {Array}\n */\nfunction toArray$1(obj) {\n  return Array.prototype.slice.call(obj, 0);\n}\n\n/**\n * @private\n * unique array with objects based on a key (like 'id') or just by the array's value\n * @param {Array} src [{id:1},{id:2},{id:1}]\n * @param {String} [key]\n * @param {Boolean} [sort=False]\n * @returns {Array} [{id:1},{id:2}]\n */\n\nfunction uniqueArray(src, key, sort) {\n  var results = [];\n  var values = [];\n  var i = 0;\n\n  while (i < src.length) {\n    var val = key ? src[i][key] : src[i];\n\n    if (inArray(values, val) < 0) {\n      results.push(src[i]);\n    }\n\n    values[i] = val;\n    i++;\n  }\n\n  if (sort) {\n    if (!key) {\n      results = results.sort();\n    } else {\n      results = results.sort(function (a, b) {\n        return a[key] > b[key];\n      });\n    }\n  }\n\n  return results;\n}\n\nvar TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\nvar TOUCH_TARGET_EVENTS = 'touchstart touchmove touchend touchcancel';\n/**\n * @private\n * Multi-user touch events input\n * @constructor\n * @extends Input\n */\n\nvar TouchInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(TouchInput, _Input);\n\n  function TouchInput() {\n    var _this;\n\n    TouchInput.prototype.evTarget = TOUCH_TARGET_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.targetIds = {}; // this.evTarget = TOUCH_TARGET_EVENTS;\n\n    return _this;\n  }\n\n  var _proto = TouchInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var type = TOUCH_INPUT_MAP[ev.type];\n    var touches = getTouches.call(this, ev, type);\n\n    if (!touches) {\n      return;\n    }\n\n    this.callback(this.manager, type, {\n      pointers: touches[0],\n      changedPointers: touches[1],\n      pointerType: INPUT_TYPE_TOUCH,\n      srcEvent: ev\n    });\n  };\n\n  return TouchInput;\n}(Input);\n\nfunction getTouches(ev, type) {\n  var allTouches = toArray$1(ev.touches);\n  var targetIds = this.targetIds; // when there is only one touch, the process can be simplified\n\n  if (type & (INPUT_START | INPUT_MOVE) && allTouches.length === 1) {\n    targetIds[allTouches[0].identifier] = true;\n    return [allTouches, allTouches];\n  }\n\n  var i;\n  var targetTouches;\n  var changedTouches = toArray$1(ev.changedTouches);\n  var changedTargetTouches = [];\n  var target = this.target; // get target touches from touches\n\n  targetTouches = allTouches.filter(function (touch) {\n    return hasParent$1(touch.target, target);\n  }); // collect touches\n\n  if (type === INPUT_START) {\n    i = 0;\n\n    while (i < targetTouches.length) {\n      targetIds[targetTouches[i].identifier] = true;\n      i++;\n    }\n  } // filter changed touches to only contain touches that exist in the collected target ids\n\n\n  i = 0;\n\n  while (i < changedTouches.length) {\n    if (targetIds[changedTouches[i].identifier]) {\n      changedTargetTouches.push(changedTouches[i]);\n    } // cleanup removed touches\n\n\n    if (type & (INPUT_END | INPUT_CANCEL)) {\n      delete targetIds[changedTouches[i].identifier];\n    }\n\n    i++;\n  }\n\n  if (!changedTargetTouches.length) {\n    return;\n  }\n\n  return [// merge targetTouches with changedTargetTouches so it contains ALL touches, including 'end' and 'cancel'\n  uniqueArray(targetTouches.concat(changedTargetTouches), 'identifier', true), changedTargetTouches];\n}\n\nvar MOUSE_INPUT_MAP = {\n  mousedown: INPUT_START,\n  mousemove: INPUT_MOVE,\n  mouseup: INPUT_END\n};\nvar MOUSE_ELEMENT_EVENTS = 'mousedown';\nvar MOUSE_WINDOW_EVENTS = 'mousemove mouseup';\n/**\n * @private\n * Mouse events input\n * @constructor\n * @extends Input\n */\n\nvar MouseInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(MouseInput, _Input);\n\n  function MouseInput() {\n    var _this;\n\n    var proto = MouseInput.prototype;\n    proto.evEl = MOUSE_ELEMENT_EVENTS;\n    proto.evWin = MOUSE_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.pressed = false; // mousedown state\n\n    return _this;\n  }\n  /**\n   * @private\n   * handle mouse events\n   * @param {Object} ev\n   */\n\n\n  var _proto = MouseInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var eventType = MOUSE_INPUT_MAP[ev.type]; // on start we want to have the left mouse button down\n\n    if (eventType & INPUT_START && ev.button === 0) {\n      this.pressed = true;\n    }\n\n    if (eventType & INPUT_MOVE && ev.which !== 1) {\n      eventType = INPUT_END;\n    } // mouse must be down\n\n\n    if (!this.pressed) {\n      return;\n    }\n\n    if (eventType & INPUT_END) {\n      this.pressed = false;\n    }\n\n    this.callback(this.manager, eventType, {\n      pointers: [ev],\n      changedPointers: [ev],\n      pointerType: INPUT_TYPE_MOUSE,\n      srcEvent: ev\n    });\n  };\n\n  return MouseInput;\n}(Input);\n\n/**\n * @private\n * Combined touch and mouse input\n *\n * Touch has a higher priority then mouse, and while touching no mouse events are allowed.\n * This because touch devices also emit mouse events while doing a touch.\n *\n * @constructor\n * @extends Input\n */\n\nvar DEDUP_TIMEOUT = 2500;\nvar DEDUP_DISTANCE = 25;\n\nfunction setLastTouch(eventData) {\n  var _eventData$changedPoi = eventData.changedPointers,\n      touch = _eventData$changedPoi[0];\n\n  if (touch.identifier === this.primaryTouch) {\n    var lastTouch = {\n      x: touch.clientX,\n      y: touch.clientY\n    };\n    var lts = this.lastTouches;\n    this.lastTouches.push(lastTouch);\n\n    var removeLastTouch = function removeLastTouch() {\n      var i = lts.indexOf(lastTouch);\n\n      if (i > -1) {\n        lts.splice(i, 1);\n      }\n    };\n\n    setTimeout(removeLastTouch, DEDUP_TIMEOUT);\n  }\n}\n\nfunction recordTouches(eventType, eventData) {\n  if (eventType & INPUT_START) {\n    this.primaryTouch = eventData.changedPointers[0].identifier;\n    setLastTouch.call(this, eventData);\n  } else if (eventType & (INPUT_END | INPUT_CANCEL)) {\n    setLastTouch.call(this, eventData);\n  }\n}\n\nfunction isSyntheticEvent(eventData) {\n  var x = eventData.srcEvent.clientX;\n  var y = eventData.srcEvent.clientY;\n\n  for (var i = 0; i < this.lastTouches.length; i++) {\n    var t = this.lastTouches[i];\n    var dx = Math.abs(x - t.x);\n    var dy = Math.abs(y - t.y);\n\n    if (dx <= DEDUP_DISTANCE && dy <= DEDUP_DISTANCE) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar TouchMouseInput =\n/*#__PURE__*/\nfunction () {\n  var TouchMouseInput =\n  /*#__PURE__*/\n  function (_Input) {\n    _inheritsLoose(TouchMouseInput, _Input);\n\n    function TouchMouseInput(_manager, callback) {\n      var _this;\n\n      _this = _Input.call(this, _manager, callback) || this;\n\n      _this.handler = function (manager, inputEvent, inputData) {\n        var isTouch = inputData.pointerType === INPUT_TYPE_TOUCH;\n        var isMouse = inputData.pointerType === INPUT_TYPE_MOUSE;\n\n        if (isMouse && inputData.sourceCapabilities && inputData.sourceCapabilities.firesTouchEvents) {\n          return;\n        } // when we're in a touch event, record touches to  de-dupe synthetic mouse event\n\n\n        if (isTouch) {\n          recordTouches.call(_assertThisInitialized$1(_assertThisInitialized$1(_this)), inputEvent, inputData);\n        } else if (isMouse && isSyntheticEvent.call(_assertThisInitialized$1(_assertThisInitialized$1(_this)), inputData)) {\n          return;\n        }\n\n        _this.callback(manager, inputEvent, inputData);\n      };\n\n      _this.touch = new TouchInput(_this.manager, _this.handler);\n      _this.mouse = new MouseInput(_this.manager, _this.handler);\n      _this.primaryTouch = null;\n      _this.lastTouches = [];\n      return _this;\n    }\n    /**\n     * @private\n     * handle mouse and touch events\n     * @param {Hammer} manager\n     * @param {String} inputEvent\n     * @param {Object} inputData\n     */\n\n\n    var _proto = TouchMouseInput.prototype;\n\n    /**\n     * @private\n     * remove the event listeners\n     */\n    _proto.destroy = function destroy() {\n      this.touch.destroy();\n      this.mouse.destroy();\n    };\n\n    return TouchMouseInput;\n  }(Input);\n\n  return TouchMouseInput;\n}();\n\n/**\n * @private\n * create new input type manager\n * called by the Manager constructor\n * @param {Hammer} manager\n * @returns {Input}\n */\n\nfunction createInputInstance(manager) {\n  var Type; // let inputClass = manager.options.inputClass;\n\n  var inputClass = manager.options.inputClass;\n\n  if (inputClass) {\n    Type = inputClass;\n  } else if (SUPPORT_POINTER_EVENTS) {\n    Type = PointerEventInput;\n  } else if (SUPPORT_ONLY_TOUCH) {\n    Type = TouchInput;\n  } else if (!SUPPORT_TOUCH) {\n    Type = MouseInput;\n  } else {\n    Type = TouchMouseInput;\n  }\n\n  return new Type(manager, inputHandler);\n}\n\n/**\n * @private\n * if the argument is an array, we want to execute the fn on each entry\n * if it aint an array we don't want to do a thing.\n * this is used by all the methods that accept a single and array argument.\n * @param {*|Array} arg\n * @param {String} fn\n * @param {Object} [context]\n * @returns {Boolean}\n */\n\nfunction invokeArrayArg(arg, fn, context) {\n  if (Array.isArray(arg)) {\n    each(arg, context[fn], context);\n    return true;\n  }\n\n  return false;\n}\n\nvar STATE_POSSIBLE = 1;\nvar STATE_BEGAN = 2;\nvar STATE_CHANGED = 4;\nvar STATE_ENDED = 8;\nvar STATE_RECOGNIZED = STATE_ENDED;\nvar STATE_CANCELLED = 16;\nvar STATE_FAILED = 32;\n\n/**\n * @private\n * get a unique id\n * @returns {number} uniqueId\n */\nvar _uniqueId = 1;\nfunction uniqueId() {\n  return _uniqueId++;\n}\n\n/**\n * @private\n * get a recognizer by name if it is bound to a manager\n * @param {Recognizer|String} otherRecognizer\n * @param {Recognizer} recognizer\n * @returns {Recognizer}\n */\nfunction getRecognizerByNameIfManager(otherRecognizer, recognizer) {\n  var manager = recognizer.manager;\n\n  if (manager) {\n    return manager.get(otherRecognizer);\n  }\n\n  return otherRecognizer;\n}\n\n/**\n * @private\n * get a usable string, used as event postfix\n * @param {constant} state\n * @returns {String} state\n */\n\nfunction stateStr(state) {\n  if (state & STATE_CANCELLED) {\n    return 'cancel';\n  } else if (state & STATE_ENDED) {\n    return 'end';\n  } else if (state & STATE_CHANGED) {\n    return 'move';\n  } else if (state & STATE_BEGAN) {\n    return 'start';\n  }\n\n  return '';\n}\n\n/**\n * @private\n * Recognizer flow explained; *\n * All recognizers have the initial state of POSSIBLE when a input session starts.\n * The definition of a input session is from the first input until the last input, with all it's movement in it. *\n * Example session for mouse-input: mousedown -> mousemove -> mouseup\n *\n * On each recognizing cycle (see Manager.recognize) the .recognize() method is executed\n * which determines with state it should be.\n *\n * If the recognizer has the state FAILED, CANCELLED or RECOGNIZED (equals ENDED), it is reset to\n * POSSIBLE to give it another change on the next cycle.\n *\n *               Possible\n *                  |\n *            +-----+---------------+\n *            |                     |\n *      +-----+-----+               |\n *      |           |               |\n *   Failed      Cancelled          |\n *                          +-------+------+\n *                          |              |\n *                      Recognized       Began\n *                                         |\n *                                      Changed\n *                                         |\n *                                  Ended/Recognized\n */\n\n/**\n * @private\n * Recognizer\n * Every recognizer needs to extend from this class.\n * @constructor\n * @param {Object} options\n */\n\nvar Recognizer =\n/*#__PURE__*/\nfunction () {\n  function Recognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    this.options = _extends({\n      enable: true\n    }, options);\n    this.id = uniqueId();\n    this.manager = null; // default is enable true\n\n    this.state = STATE_POSSIBLE;\n    this.simultaneous = {};\n    this.requireFail = [];\n  }\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @return {Recognizer}\n   */\n\n\n  var _proto = Recognizer.prototype;\n\n  _proto.set = function set(options) {\n    assign$1(this.options, options); // also update the touchAction, in case something changed about the directions/enabled state\n\n    this.manager && this.manager.touchAction.update();\n    return this;\n  };\n  /**\n   * @private\n   * recognize simultaneous with an other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.recognizeWith = function recognizeWith(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'recognizeWith', this)) {\n      return this;\n    }\n\n    var simultaneous = this.simultaneous;\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n    if (!simultaneous[otherRecognizer.id]) {\n      simultaneous[otherRecognizer.id] = otherRecognizer;\n      otherRecognizer.recognizeWith(this);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * drop the simultaneous link. it doesnt remove the link on the other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.dropRecognizeWith = function dropRecognizeWith(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'dropRecognizeWith', this)) {\n      return this;\n    }\n\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n    delete this.simultaneous[otherRecognizer.id];\n    return this;\n  };\n  /**\n   * @private\n   * recognizer can only run when an other is failing\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.requireFailure = function requireFailure(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'requireFailure', this)) {\n      return this;\n    }\n\n    var requireFail = this.requireFail;\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n\n    if (inArray(requireFail, otherRecognizer) === -1) {\n      requireFail.push(otherRecognizer);\n      otherRecognizer.requireFailure(this);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * drop the requireFailure link. it does not remove the link on the other recognizer.\n   * @param {Recognizer} otherRecognizer\n   * @returns {Recognizer} this\n   */\n\n\n  _proto.dropRequireFailure = function dropRequireFailure(otherRecognizer) {\n    if (invokeArrayArg(otherRecognizer, 'dropRequireFailure', this)) {\n      return this;\n    }\n\n    otherRecognizer = getRecognizerByNameIfManager(otherRecognizer, this);\n    var index = inArray(this.requireFail, otherRecognizer);\n\n    if (index > -1) {\n      this.requireFail.splice(index, 1);\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * has require failures boolean\n   * @returns {boolean}\n   */\n\n\n  _proto.hasRequireFailures = function hasRequireFailures() {\n    return this.requireFail.length > 0;\n  };\n  /**\n   * @private\n   * if the recognizer can recognize simultaneous with an other recognizer\n   * @param {Recognizer} otherRecognizer\n   * @returns {Boolean}\n   */\n\n\n  _proto.canRecognizeWith = function canRecognizeWith(otherRecognizer) {\n    return !!this.simultaneous[otherRecognizer.id];\n  };\n  /**\n   * @private\n   * You should use `tryEmit` instead of `emit` directly to check\n   * that all the needed recognizers has failed before emitting.\n   * @param {Object} input\n   */\n\n\n  _proto.emit = function emit(input) {\n    var self = this;\n    var state = this.state;\n\n    function emit(event) {\n      self.manager.emit(event, input);\n    } // 'panstart' and 'panmove'\n\n\n    if (state < STATE_ENDED) {\n      emit(self.options.event + stateStr(state));\n    }\n\n    emit(self.options.event); // simple 'eventName' events\n\n    if (input.additionalEvent) {\n      // additional event(panleft, panright, pinchin, pinchout...)\n      emit(input.additionalEvent);\n    } // panend and pancancel\n\n\n    if (state >= STATE_ENDED) {\n      emit(self.options.event + stateStr(state));\n    }\n  };\n  /**\n   * @private\n   * Check that all the require failure recognizers has failed,\n   * if true, it emits a gesture event,\n   * otherwise, setup the state to FAILED.\n   * @param {Object} input\n   */\n\n\n  _proto.tryEmit = function tryEmit(input) {\n    if (this.canEmit()) {\n      return this.emit(input);\n    } // it's failing anyway\n\n\n    this.state = STATE_FAILED;\n  };\n  /**\n   * @private\n   * can we emit?\n   * @returns {boolean}\n   */\n\n\n  _proto.canEmit = function canEmit() {\n    var i = 0;\n\n    while (i < this.requireFail.length) {\n      if (!(this.requireFail[i].state & (STATE_FAILED | STATE_POSSIBLE))) {\n        return false;\n      }\n\n      i++;\n    }\n\n    return true;\n  };\n  /**\n   * @private\n   * update the recognizer\n   * @param {Object} inputData\n   */\n\n\n  _proto.recognize = function recognize(inputData) {\n    // make a new copy of the inputData\n    // so we can change the inputData without messing up the other recognizers\n    var inputDataClone = assign$1({}, inputData); // is is enabled and allow recognizing?\n\n    if (!boolOrFn(this.options.enable, [this, inputDataClone])) {\n      this.reset();\n      this.state = STATE_FAILED;\n      return;\n    } // reset when we've reached the end\n\n\n    if (this.state & (STATE_RECOGNIZED | STATE_CANCELLED | STATE_FAILED)) {\n      this.state = STATE_POSSIBLE;\n    }\n\n    this.state = this.process(inputDataClone); // the recognizer has recognized a gesture\n    // so trigger an event\n\n    if (this.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED | STATE_CANCELLED)) {\n      this.tryEmit(inputDataClone);\n    }\n  };\n  /**\n   * @private\n   * return the state of the recognizer\n   * the actual recognizing happens in this method\n   * @virtual\n   * @param {Object} inputData\n   * @returns {constant} STATE\n   */\n\n  /* jshint ignore:start */\n\n\n  _proto.process = function process(inputData) {};\n  /* jshint ignore:end */\n\n  /**\n   * @private\n   * return the preferred touch-action\n   * @virtual\n   * @returns {Array}\n   */\n\n\n  _proto.getTouchAction = function getTouchAction() {};\n  /**\n   * @private\n   * called when the gesture isn't allowed to recognize\n   * like when another is being recognized or it is disabled\n   * @virtual\n   */\n\n\n  _proto.reset = function reset() {};\n\n  return Recognizer;\n}();\n\n/**\n * @private\n * A tap is recognized when the pointer is doing a small tap/click. Multiple taps are recognized if they occur\n * between the given interval and position. The delay option can be used to recognize multi-taps without firing\n * a single tap.\n *\n * The eventData from the emitted event contains the property `tapCount`, which contains the amount of\n * multi-taps being recognized.\n * @constructor\n * @extends Recognizer\n */\n\nvar TapRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(TapRecognizer, _Recognizer);\n\n  function TapRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Recognizer.call(this, _extends({\n      event: 'tap',\n      pointers: 1,\n      taps: 1,\n      interval: 300,\n      // max time between the multi-tap taps\n      time: 250,\n      // max time of the pointer to be down (like finger on the screen)\n      threshold: 9,\n      // a minimal movement is ok, but keep it low\n      posThreshold: 10\n    }, options)) || this; // previous time and center,\n    // used for tap counting\n\n    _this.pTime = false;\n    _this.pCenter = false;\n    _this._timer = null;\n    _this._input = null;\n    _this.count = 0;\n    return _this;\n  }\n\n  var _proto = TapRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_MANIPULATION];\n  };\n\n  _proto.process = function process(input) {\n    var _this2 = this;\n\n    var options = this.options;\n    var validPointers = input.pointers.length === options.pointers;\n    var validMovement = input.distance < options.threshold;\n    var validTouchTime = input.deltaTime < options.time;\n    this.reset();\n\n    if (input.eventType & INPUT_START && this.count === 0) {\n      return this.failTimeout();\n    } // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n\n\n    if (validMovement && validTouchTime && validPointers) {\n      if (input.eventType !== INPUT_END) {\n        return this.failTimeout();\n      }\n\n      var validInterval = this.pTime ? input.timeStamp - this.pTime < options.interval : true;\n      var validMultiTap = !this.pCenter || getDistance(this.pCenter, input.center) < options.posThreshold;\n      this.pTime = input.timeStamp;\n      this.pCenter = input.center;\n\n      if (!validMultiTap || !validInterval) {\n        this.count = 1;\n      } else {\n        this.count += 1;\n      }\n\n      this._input = input; // if tap count matches we have recognized it,\n      // else it has began recognizing...\n\n      var tapCount = this.count % options.taps;\n\n      if (tapCount === 0) {\n        // no failing requirements, immediately trigger the tap event\n        // or wait as long as the multitap interval to trigger\n        if (!this.hasRequireFailures()) {\n          return STATE_RECOGNIZED;\n        } else {\n          this._timer = setTimeout(function () {\n            _this2.state = STATE_RECOGNIZED;\n\n            _this2.tryEmit();\n          }, options.interval);\n          return STATE_BEGAN;\n        }\n      }\n    }\n\n    return STATE_FAILED;\n  };\n\n  _proto.failTimeout = function failTimeout() {\n    var _this3 = this;\n\n    this._timer = setTimeout(function () {\n      _this3.state = STATE_FAILED;\n    }, this.options.interval);\n    return STATE_FAILED;\n  };\n\n  _proto.reset = function reset() {\n    clearTimeout(this._timer);\n  };\n\n  _proto.emit = function emit() {\n    if (this.state === STATE_RECOGNIZED) {\n      this._input.tapCount = this.count;\n      this.manager.emit(this.options.event, this._input);\n    }\n  };\n\n  return TapRecognizer;\n}(Recognizer);\n\n/**\n * @private\n * This recognizer is just used as a base for the simple attribute recognizers.\n * @constructor\n * @extends Recognizer\n */\n\nvar AttrRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(AttrRecognizer, _Recognizer);\n\n  function AttrRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _Recognizer.call(this, _extends({\n      pointers: 1\n    }, options)) || this;\n  }\n  /**\n   * @private\n   * Used to check if it the recognizer receives valid input, like input.distance > 10.\n   * @memberof AttrRecognizer\n   * @param {Object} input\n   * @returns {Boolean} recognized\n   */\n\n\n  var _proto = AttrRecognizer.prototype;\n\n  _proto.attrTest = function attrTest(input) {\n    var optionPointers = this.options.pointers;\n    return optionPointers === 0 || input.pointers.length === optionPointers;\n  };\n  /**\n   * @private\n   * Process the input and return the state for the recognizer\n   * @memberof AttrRecognizer\n   * @param {Object} input\n   * @returns {*} State\n   */\n\n\n  _proto.process = function process(input) {\n    var state = this.state;\n    var eventType = input.eventType;\n    var isRecognized = state & (STATE_BEGAN | STATE_CHANGED);\n    var isValid = this.attrTest(input); // on cancel input and we've recognized before, return STATE_CANCELLED\n\n    if (isRecognized && (eventType & INPUT_CANCEL || !isValid)) {\n      return state | STATE_CANCELLED;\n    } else if (isRecognized || isValid) {\n      if (eventType & INPUT_END) {\n        return state | STATE_ENDED;\n      } else if (!(state & STATE_BEGAN)) {\n        return STATE_BEGAN;\n      }\n\n      return state | STATE_CHANGED;\n    }\n\n    return STATE_FAILED;\n  };\n\n  return AttrRecognizer;\n}(Recognizer);\n\n/**\n * @private\n * direction cons to string\n * @param {constant} direction\n * @returns {String}\n */\n\nfunction directionStr(direction) {\n  if (direction === DIRECTION_DOWN) {\n    return 'down';\n  } else if (direction === DIRECTION_UP) {\n    return 'up';\n  } else if (direction === DIRECTION_LEFT) {\n    return 'left';\n  } else if (direction === DIRECTION_RIGHT) {\n    return 'right';\n  }\n\n  return '';\n}\n\n/**\n * @private\n * Pan\n * Recognized when the pointer is down and moved in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PanRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(PanRecognizer, _AttrRecognizer);\n\n  function PanRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _AttrRecognizer.call(this, _extends({\n      event: 'pan',\n      threshold: 10,\n      pointers: 1,\n      direction: DIRECTION_ALL\n    }, options)) || this;\n    _this.pX = null;\n    _this.pY = null;\n    return _this;\n  }\n\n  var _proto = PanRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    var direction = this.options.direction;\n    var actions = [];\n\n    if (direction & DIRECTION_HORIZONTAL) {\n      actions.push(TOUCH_ACTION_PAN_Y);\n    }\n\n    if (direction & DIRECTION_VERTICAL) {\n      actions.push(TOUCH_ACTION_PAN_X);\n    }\n\n    return actions;\n  };\n\n  _proto.directionTest = function directionTest(input) {\n    var options = this.options;\n    var hasMoved = true;\n    var distance = input.distance;\n    var direction = input.direction;\n    var x = input.deltaX;\n    var y = input.deltaY; // lock to axis?\n\n    if (!(direction & options.direction)) {\n      if (options.direction & DIRECTION_HORIZONTAL) {\n        direction = x === 0 ? DIRECTION_NONE : x < 0 ? DIRECTION_LEFT : DIRECTION_RIGHT;\n        hasMoved = x !== this.pX;\n        distance = Math.abs(input.deltaX);\n      } else {\n        direction = y === 0 ? DIRECTION_NONE : y < 0 ? DIRECTION_UP : DIRECTION_DOWN;\n        hasMoved = y !== this.pY;\n        distance = Math.abs(input.deltaY);\n      }\n    }\n\n    input.direction = direction;\n    return hasMoved && distance > options.threshold && direction & options.direction;\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return AttrRecognizer.prototype.attrTest.call(this, input) && ( // replace with a super call\n    this.state & STATE_BEGAN || !(this.state & STATE_BEGAN) && this.directionTest(input));\n  };\n\n  _proto.emit = function emit(input) {\n    this.pX = input.deltaX;\n    this.pY = input.deltaY;\n    var direction = directionStr(input.direction);\n\n    if (direction) {\n      input.additionalEvent = this.options.event + direction;\n    }\n\n    _AttrRecognizer.prototype.emit.call(this, input);\n  };\n\n  return PanRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Swipe\n * Recognized when the pointer is moving fast (velocity), with enough distance in the allowed direction.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar SwipeRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(SwipeRecognizer, _AttrRecognizer);\n\n  function SwipeRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'swipe',\n      threshold: 10,\n      velocity: 0.3,\n      direction: DIRECTION_HORIZONTAL | DIRECTION_VERTICAL,\n      pointers: 1\n    }, options)) || this;\n  }\n\n  var _proto = SwipeRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return PanRecognizer.prototype.getTouchAction.call(this);\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    var direction = this.options.direction;\n    var velocity;\n\n    if (direction & (DIRECTION_HORIZONTAL | DIRECTION_VERTICAL)) {\n      velocity = input.overallVelocity;\n    } else if (direction & DIRECTION_HORIZONTAL) {\n      velocity = input.overallVelocityX;\n    } else if (direction & DIRECTION_VERTICAL) {\n      velocity = input.overallVelocityY;\n    }\n\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && direction & input.offsetDirection && input.distance > this.options.threshold && input.maxPointers === this.options.pointers && abs(velocity) > this.options.velocity && input.eventType & INPUT_END;\n  };\n\n  _proto.emit = function emit(input) {\n    var direction = directionStr(input.offsetDirection);\n\n    if (direction) {\n      this.manager.emit(this.options.event + direction, input);\n    }\n\n    this.manager.emit(this.options.event, input);\n  };\n\n  return SwipeRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Pinch\n * Recognized when two or more pointers are moving toward (zoom-in) or away from each other (zoom-out).\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar PinchRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(PinchRecognizer, _AttrRecognizer);\n\n  function PinchRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'pinch',\n      threshold: 0,\n      pointers: 2\n    }, options)) || this;\n  }\n\n  var _proto = PinchRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.scale - 1) > this.options.threshold || this.state & STATE_BEGAN);\n  };\n\n  _proto.emit = function emit(input) {\n    if (input.scale !== 1) {\n      var inOut = input.scale < 1 ? 'in' : 'out';\n      input.additionalEvent = this.options.event + inOut;\n    }\n\n    _AttrRecognizer.prototype.emit.call(this, input);\n  };\n\n  return PinchRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Rotate\n * Recognized when two or more pointer are moving in a circular motion.\n * @constructor\n * @extends AttrRecognizer\n */\n\nvar RotateRecognizer =\n/*#__PURE__*/\nfunction (_AttrRecognizer) {\n  _inheritsLoose(RotateRecognizer, _AttrRecognizer);\n\n  function RotateRecognizer(options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return _AttrRecognizer.call(this, _extends({\n      event: 'rotate',\n      threshold: 0,\n      pointers: 2\n    }, options)) || this;\n  }\n\n  var _proto = RotateRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_NONE];\n  };\n\n  _proto.attrTest = function attrTest(input) {\n    return _AttrRecognizer.prototype.attrTest.call(this, input) && (Math.abs(input.rotation) > this.options.threshold || this.state & STATE_BEGAN);\n  };\n\n  return RotateRecognizer;\n}(AttrRecognizer);\n\n/**\n * @private\n * Press\n * Recognized when the pointer is down for x ms without any movement.\n * @constructor\n * @extends Recognizer\n */\n\nvar PressRecognizer =\n/*#__PURE__*/\nfunction (_Recognizer) {\n  _inheritsLoose(PressRecognizer, _Recognizer);\n\n  function PressRecognizer(options) {\n    var _this;\n\n    if (options === void 0) {\n      options = {};\n    }\n\n    _this = _Recognizer.call(this, _extends({\n      event: 'press',\n      pointers: 1,\n      time: 251,\n      // minimal time of the pointer to be pressed\n      threshold: 9\n    }, options)) || this;\n    _this._timer = null;\n    _this._input = null;\n    return _this;\n  }\n\n  var _proto = PressRecognizer.prototype;\n\n  _proto.getTouchAction = function getTouchAction() {\n    return [TOUCH_ACTION_AUTO];\n  };\n\n  _proto.process = function process(input) {\n    var _this2 = this;\n\n    var options = this.options;\n    var validPointers = input.pointers.length === options.pointers;\n    var validMovement = input.distance < options.threshold;\n    var validTime = input.deltaTime > options.time;\n    this._input = input; // we only allow little movement\n    // and we've reached an end event, so a tap is possible\n\n    if (!validMovement || !validPointers || input.eventType & (INPUT_END | INPUT_CANCEL) && !validTime) {\n      this.reset();\n    } else if (input.eventType & INPUT_START) {\n      this.reset();\n      this._timer = setTimeout(function () {\n        _this2.state = STATE_RECOGNIZED;\n\n        _this2.tryEmit();\n      }, options.time);\n    } else if (input.eventType & INPUT_END) {\n      return STATE_RECOGNIZED;\n    }\n\n    return STATE_FAILED;\n  };\n\n  _proto.reset = function reset() {\n    clearTimeout(this._timer);\n  };\n\n  _proto.emit = function emit(input) {\n    if (this.state !== STATE_RECOGNIZED) {\n      return;\n    }\n\n    if (input && input.eventType & INPUT_END) {\n      this.manager.emit(this.options.event + \"up\", input);\n    } else {\n      this._input.timeStamp = now();\n      this.manager.emit(this.options.event, this._input);\n    }\n  };\n\n  return PressRecognizer;\n}(Recognizer);\n\nvar defaults = {\n  /**\n   * @private\n   * set if DOM events are being triggered.\n   * But this is slower and unused by simple implementations, so disabled by default.\n   * @type {Boolean}\n   * @default false\n   */\n  domEvents: false,\n\n  /**\n   * @private\n   * The value for the touchAction property/fallback.\n   * When set to `compute` it will magically set the correct value based on the added recognizers.\n   * @type {String}\n   * @default compute\n   */\n  touchAction: TOUCH_ACTION_COMPUTE,\n\n  /**\n   * @private\n   * @type {Boolean}\n   * @default true\n   */\n  enable: true,\n\n  /**\n   * @private\n   * EXPERIMENTAL FEATURE -- can be removed/changed\n   * Change the parent input target element.\n   * If Null, then it is being set the to main element.\n   * @type {Null|EventTarget}\n   * @default null\n   */\n  inputTarget: null,\n\n  /**\n   * @private\n   * force an input class\n   * @type {Null|Function}\n   * @default null\n   */\n  inputClass: null,\n\n  /**\n   * @private\n   * Some CSS properties can be used to improve the working of Hammer.\n   * Add them to this method and they will be set when creating a new Manager.\n   * @namespace\n   */\n  cssProps: {\n    /**\n     * @private\n     * Disables text selection to improve the dragging gesture. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userSelect: \"none\",\n\n    /**\n     * @private\n     * Disable the Windows Phone grippers when pressing an element.\n     * @type {String}\n     * @default 'none'\n     */\n    touchSelect: \"none\",\n\n    /**\n     * @private\n     * Disables the default callout shown when you touch and hold a touch target.\n     * On iOS, when you touch and hold a touch target such as a link, Safari displays\n     * a callout containing information about the link. This property allows you to disable that callout.\n     * @type {String}\n     * @default 'none'\n     */\n    touchCallout: \"none\",\n\n    /**\n     * @private\n     * Specifies whether zooming is enabled. Used by IE10>\n     * @type {String}\n     * @default 'none'\n     */\n    contentZooming: \"none\",\n\n    /**\n     * @private\n     * Specifies that an entire element should be draggable instead of its contents. Mainly for desktop browsers.\n     * @type {String}\n     * @default 'none'\n     */\n    userDrag: \"none\",\n\n    /**\n     * @private\n     * Overrides the highlight color shown when the user taps a link or a JavaScript\n     * clickable element in iOS. This property obeys the alpha value, if specified.\n     * @type {String}\n     * @default 'rgba(0,0,0,0)'\n     */\n    tapHighlightColor: \"rgba(0,0,0,0)\"\n  }\n};\n/**\n * @private\n * Default recognizer setup when calling `Hammer()`\n * When creating a new Manager these will be skipped.\n * This is separated with other defaults because of tree-shaking.\n * @type {Array}\n */\n\nvar preset = [[RotateRecognizer, {\n  enable: false\n}], [PinchRecognizer, {\n  enable: false\n}, ['rotate']], [SwipeRecognizer, {\n  direction: DIRECTION_HORIZONTAL\n}], [PanRecognizer, {\n  direction: DIRECTION_HORIZONTAL\n}, ['swipe']], [TapRecognizer], [TapRecognizer, {\n  event: 'doubletap',\n  taps: 2\n}, ['tap']], [PressRecognizer]];\n\nvar STOP = 1;\nvar FORCED_STOP = 2;\n/**\n * @private\n * add/remove the css properties as defined in manager.options.cssProps\n * @param {Manager} manager\n * @param {Boolean} add\n */\n\nfunction toggleCssProps(manager, add) {\n  var element = manager.element;\n\n  if (!element.style) {\n    return;\n  }\n\n  var prop;\n  each(manager.options.cssProps, function (value, name) {\n    prop = prefixed(element.style, name);\n\n    if (add) {\n      manager.oldCssProps[prop] = element.style[prop];\n      element.style[prop] = value;\n    } else {\n      element.style[prop] = manager.oldCssProps[prop] || \"\";\n    }\n  });\n\n  if (!add) {\n    manager.oldCssProps = {};\n  }\n}\n/**\n * @private\n * trigger dom event\n * @param {String} event\n * @param {Object} data\n */\n\n\nfunction triggerDomEvent(event, data) {\n  var gestureEvent = document.createEvent(\"Event\");\n  gestureEvent.initEvent(event, true, true);\n  gestureEvent.gesture = data;\n  data.target.dispatchEvent(gestureEvent);\n}\n/**\n* @private\n * Manager\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\n\nvar Manager =\n/*#__PURE__*/\nfunction () {\n  function Manager(element, options) {\n    var _this = this;\n\n    this.options = assign$1({}, defaults, options || {});\n    this.options.inputTarget = this.options.inputTarget || element;\n    this.handlers = {};\n    this.session = {};\n    this.recognizers = [];\n    this.oldCssProps = {};\n    this.element = element;\n    this.input = createInputInstance(this);\n    this.touchAction = new TouchAction(this, this.options.touchAction);\n    toggleCssProps(this, true);\n    each(this.options.recognizers, function (item) {\n      var recognizer = _this.add(new item[0](item[1]));\n\n      item[2] && recognizer.recognizeWith(item[2]);\n      item[3] && recognizer.requireFailure(item[3]);\n    }, this);\n  }\n  /**\n   * @private\n   * set options\n   * @param {Object} options\n   * @returns {Manager}\n   */\n\n\n  var _proto = Manager.prototype;\n\n  _proto.set = function set(options) {\n    assign$1(this.options, options); // Options that need a little more setup\n\n    if (options.touchAction) {\n      this.touchAction.update();\n    }\n\n    if (options.inputTarget) {\n      // Clean up existing event listeners and reinitialize\n      this.input.destroy();\n      this.input.target = options.inputTarget;\n      this.input.init();\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * stop recognizing for this session.\n   * This session will be discarded, when a new [input]start event is fired.\n   * When forced, the recognizer cycle is stopped immediately.\n   * @param {Boolean} [force]\n   */\n\n\n  _proto.stop = function stop(force) {\n    this.session.stopped = force ? FORCED_STOP : STOP;\n  };\n  /**\n   * @private\n   * run the recognizers!\n   * called by the inputHandler function on every movement of the pointers (touches)\n   * it walks through all the recognizers and tries to detect the gesture that is being made\n   * @param {Object} inputData\n   */\n\n\n  _proto.recognize = function recognize(inputData) {\n    var session = this.session;\n\n    if (session.stopped) {\n      return;\n    } // run the touch-action polyfill\n\n\n    this.touchAction.preventDefaults(inputData);\n    var recognizer;\n    var recognizers = this.recognizers; // this holds the recognizer that is being recognized.\n    // so the recognizer's state needs to be BEGAN, CHANGED, ENDED or RECOGNIZED\n    // if no recognizer is detecting a thing, it is set to `null`\n\n    var curRecognizer = session.curRecognizer; // reset when the last recognizer is recognized\n    // or when we're in a new session\n\n    if (!curRecognizer || curRecognizer && curRecognizer.state & STATE_RECOGNIZED) {\n      session.curRecognizer = null;\n      curRecognizer = null;\n    }\n\n    var i = 0;\n\n    while (i < recognizers.length) {\n      recognizer = recognizers[i]; // find out if we are allowed try to recognize the input for this one.\n      // 1.   allow if the session is NOT forced stopped (see the .stop() method)\n      // 2.   allow if we still haven't recognized a gesture in this session, or the this recognizer is the one\n      //      that is being recognized.\n      // 3.   allow if the recognizer is allowed to run simultaneous with the current recognized recognizer.\n      //      this can be setup with the `recognizeWith()` method on the recognizer.\n\n      if (session.stopped !== FORCED_STOP && ( // 1\n      !curRecognizer || recognizer === curRecognizer || // 2\n      recognizer.canRecognizeWith(curRecognizer))) {\n        // 3\n        recognizer.recognize(inputData);\n      } else {\n        recognizer.reset();\n      } // if the recognizer has been recognizing the input as a valid gesture, we want to store this one as the\n      // current active recognizer. but only if we don't already have an active recognizer\n\n\n      if (!curRecognizer && recognizer.state & (STATE_BEGAN | STATE_CHANGED | STATE_ENDED)) {\n        session.curRecognizer = recognizer;\n        curRecognizer = recognizer;\n      }\n\n      i++;\n    }\n  };\n  /**\n   * @private\n   * get a recognizer by its event name.\n   * @param {Recognizer|String} recognizer\n   * @returns {Recognizer|Null}\n   */\n\n\n  _proto.get = function get(recognizer) {\n    if (recognizer instanceof Recognizer) {\n      return recognizer;\n    }\n\n    var recognizers = this.recognizers;\n\n    for (var i = 0; i < recognizers.length; i++) {\n      if (recognizers[i].options.event === recognizer) {\n        return recognizers[i];\n      }\n    }\n\n    return null;\n  };\n  /**\n   * @private add a recognizer to the manager\n   * existing recognizers with the same event name will be removed\n   * @param {Recognizer} recognizer\n   * @returns {Recognizer|Manager}\n   */\n\n\n  _proto.add = function add(recognizer) {\n    if (invokeArrayArg(recognizer, \"add\", this)) {\n      return this;\n    } // remove existing\n\n\n    var existing = this.get(recognizer.options.event);\n\n    if (existing) {\n      this.remove(existing);\n    }\n\n    this.recognizers.push(recognizer);\n    recognizer.manager = this;\n    this.touchAction.update();\n    return recognizer;\n  };\n  /**\n   * @private\n   * remove a recognizer by name or instance\n   * @param {Recognizer|String} recognizer\n   * @returns {Manager}\n   */\n\n\n  _proto.remove = function remove(recognizer) {\n    if (invokeArrayArg(recognizer, \"remove\", this)) {\n      return this;\n    }\n\n    var targetRecognizer = this.get(recognizer); // let's make sure this recognizer exists\n\n    if (recognizer) {\n      var recognizers = this.recognizers;\n      var index = inArray(recognizers, targetRecognizer);\n\n      if (index !== -1) {\n        recognizers.splice(index, 1);\n        this.touchAction.update();\n      }\n    }\n\n    return this;\n  };\n  /**\n   * @private\n   * bind event\n   * @param {String} events\n   * @param {Function} handler\n   * @returns {EventEmitter} this\n   */\n\n\n  _proto.on = function on(events, handler) {\n    if (events === undefined || handler === undefined) {\n      return this;\n    }\n\n    var handlers = this.handlers;\n    each(splitStr(events), function (event) {\n      handlers[event] = handlers[event] || [];\n      handlers[event].push(handler);\n    });\n    return this;\n  };\n  /**\n   * @private unbind event, leave emit blank to remove all handlers\n   * @param {String} events\n   * @param {Function} [handler]\n   * @returns {EventEmitter} this\n   */\n\n\n  _proto.off = function off(events, handler) {\n    if (events === undefined) {\n      return this;\n    }\n\n    var handlers = this.handlers;\n    each(splitStr(events), function (event) {\n      if (!handler) {\n        delete handlers[event];\n      } else {\n        handlers[event] && handlers[event].splice(inArray(handlers[event], handler), 1);\n      }\n    });\n    return this;\n  };\n  /**\n   * @private emit event to the listeners\n   * @param {String} event\n   * @param {Object} data\n   */\n\n\n  _proto.emit = function emit(event, data) {\n    // we also want to trigger dom events\n    if (this.options.domEvents) {\n      triggerDomEvent(event, data);\n    } // no handlers, so skip it all\n\n\n    var handlers = this.handlers[event] && this.handlers[event].slice();\n\n    if (!handlers || !handlers.length) {\n      return;\n    }\n\n    data.type = event;\n\n    data.preventDefault = function () {\n      data.srcEvent.preventDefault();\n    };\n\n    var i = 0;\n\n    while (i < handlers.length) {\n      handlers[i](data);\n      i++;\n    }\n  };\n  /**\n   * @private\n   * destroy the manager and unbinds all events\n   * it doesn't unbind dom events, that is the user own responsibility\n   */\n\n\n  _proto.destroy = function destroy() {\n    this.element && toggleCssProps(this, false);\n    this.handlers = {};\n    this.session = {};\n    this.input.destroy();\n    this.element = null;\n  };\n\n  return Manager;\n}();\n\nvar SINGLE_TOUCH_INPUT_MAP = {\n  touchstart: INPUT_START,\n  touchmove: INPUT_MOVE,\n  touchend: INPUT_END,\n  touchcancel: INPUT_CANCEL\n};\nvar SINGLE_TOUCH_TARGET_EVENTS = 'touchstart';\nvar SINGLE_TOUCH_WINDOW_EVENTS = 'touchstart touchmove touchend touchcancel';\n/**\n * @private\n * Touch events input\n * @constructor\n * @extends Input\n */\n\nvar SingleTouchInput =\n/*#__PURE__*/\nfunction (_Input) {\n  _inheritsLoose(SingleTouchInput, _Input);\n\n  function SingleTouchInput() {\n    var _this;\n\n    var proto = SingleTouchInput.prototype;\n    proto.evTarget = SINGLE_TOUCH_TARGET_EVENTS;\n    proto.evWin = SINGLE_TOUCH_WINDOW_EVENTS;\n    _this = _Input.apply(this, arguments) || this;\n    _this.started = false;\n    return _this;\n  }\n\n  var _proto = SingleTouchInput.prototype;\n\n  _proto.handler = function handler(ev) {\n    var type = SINGLE_TOUCH_INPUT_MAP[ev.type]; // should we handle the touch events?\n\n    if (type === INPUT_START) {\n      this.started = true;\n    }\n\n    if (!this.started) {\n      return;\n    }\n\n    var touches = normalizeSingleTouches.call(this, ev, type); // when done, reset the started state\n\n    if (type & (INPUT_END | INPUT_CANCEL) && touches[0].length - touches[1].length === 0) {\n      this.started = false;\n    }\n\n    this.callback(this.manager, type, {\n      pointers: touches[0],\n      changedPointers: touches[1],\n      pointerType: INPUT_TYPE_TOUCH,\n      srcEvent: ev\n    });\n  };\n\n  return SingleTouchInput;\n}(Input);\n\nfunction normalizeSingleTouches(ev, type) {\n  var all = toArray$1(ev.touches);\n  var changed = toArray$1(ev.changedTouches);\n\n  if (type & (INPUT_END | INPUT_CANCEL)) {\n    all = uniqueArray(all.concat(changed), 'identifier', true);\n  }\n\n  return [all, changed];\n}\n\n/**\n * @private\n * wrap a method with a deprecation warning and stack trace\n * @param {Function} method\n * @param {String} name\n * @param {String} message\n * @returns {Function} A new function wrapping the supplied method.\n */\nfunction deprecate(method, name, message) {\n  var deprecationMessage = \"DEPRECATED METHOD: \" + name + \"\\n\" + message + \" AT \\n\";\n  return function () {\n    var e = new Error('get-stack-trace');\n    var stack = e && e.stack ? e.stack.replace(/^[^\\(]+?[\\n$]/gm, '').replace(/^\\s+at\\s+/gm, '').replace(/^Object.<anonymous>\\s*\\(/gm, '{anonymous}()@') : 'Unknown Stack Trace';\n    var log = window.console && (window.console.warn || window.console.log);\n\n    if (log) {\n      log.call(window.console, deprecationMessage, stack);\n    }\n\n    return method.apply(this, arguments);\n  };\n}\n\n/**\n * @private\n * extend object.\n * means that properties in dest will be overwritten by the ones in src.\n * @param {Object} dest\n * @param {Object} src\n * @param {Boolean} [merge=false]\n * @returns {Object} dest\n */\n\nvar extend$1 = deprecate(function (dest, src, merge) {\n  var keys = Object.keys(src);\n  var i = 0;\n\n  while (i < keys.length) {\n    if (!merge || merge && dest[keys[i]] === undefined) {\n      dest[keys[i]] = src[keys[i]];\n    }\n\n    i++;\n  }\n\n  return dest;\n}, 'extend', 'Use `assign`.');\n\n/**\n * @private\n * merge the values from src in the dest.\n * means that properties that exist in dest will not be overwritten by src\n * @param {Object} dest\n * @param {Object} src\n * @returns {Object} dest\n */\n\nvar merge$1 = deprecate(function (dest, src) {\n  return extend$1(dest, src, true);\n}, 'merge', 'Use `assign`.');\n\n/**\n * @private\n * simple class inheritance\n * @param {Function} child\n * @param {Function} base\n * @param {Object} [properties]\n */\n\nfunction inherit(child, base, properties) {\n  var baseP = base.prototype;\n  var childP;\n  childP = child.prototype = Object.create(baseP);\n  childP.constructor = child;\n  childP._super = baseP;\n\n  if (properties) {\n    assign$1(childP, properties);\n  }\n}\n\n/**\n * @private\n * simple function bind\n * @param {Function} fn\n * @param {Object} context\n * @returns {Function}\n */\nfunction bindFn(fn, context) {\n  return function boundFn() {\n    return fn.apply(context, arguments);\n  };\n}\n\n/**\n * @private\n * Simple way to create a manager with a default set of recognizers.\n * @param {HTMLElement} element\n * @param {Object} [options]\n * @constructor\n */\n\nvar Hammer$3 =\n/*#__PURE__*/\nfunction () {\n  var Hammer =\n  /**\n    * @private\n    * @const {string}\n    */\n  function Hammer(element, options) {\n    if (options === void 0) {\n      options = {};\n    }\n\n    return new Manager(element, _extends({\n      recognizers: preset.concat()\n    }, options));\n  };\n\n  Hammer.VERSION = \"2.0.17-rc\";\n  Hammer.DIRECTION_ALL = DIRECTION_ALL;\n  Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n  Hammer.DIRECTION_LEFT = DIRECTION_LEFT;\n  Hammer.DIRECTION_RIGHT = DIRECTION_RIGHT;\n  Hammer.DIRECTION_UP = DIRECTION_UP;\n  Hammer.DIRECTION_HORIZONTAL = DIRECTION_HORIZONTAL;\n  Hammer.DIRECTION_VERTICAL = DIRECTION_VERTICAL;\n  Hammer.DIRECTION_NONE = DIRECTION_NONE;\n  Hammer.DIRECTION_DOWN = DIRECTION_DOWN;\n  Hammer.INPUT_START = INPUT_START;\n  Hammer.INPUT_MOVE = INPUT_MOVE;\n  Hammer.INPUT_END = INPUT_END;\n  Hammer.INPUT_CANCEL = INPUT_CANCEL;\n  Hammer.STATE_POSSIBLE = STATE_POSSIBLE;\n  Hammer.STATE_BEGAN = STATE_BEGAN;\n  Hammer.STATE_CHANGED = STATE_CHANGED;\n  Hammer.STATE_ENDED = STATE_ENDED;\n  Hammer.STATE_RECOGNIZED = STATE_RECOGNIZED;\n  Hammer.STATE_CANCELLED = STATE_CANCELLED;\n  Hammer.STATE_FAILED = STATE_FAILED;\n  Hammer.Manager = Manager;\n  Hammer.Input = Input;\n  Hammer.TouchAction = TouchAction;\n  Hammer.TouchInput = TouchInput;\n  Hammer.MouseInput = MouseInput;\n  Hammer.PointerEventInput = PointerEventInput;\n  Hammer.TouchMouseInput = TouchMouseInput;\n  Hammer.SingleTouchInput = SingleTouchInput;\n  Hammer.Recognizer = Recognizer;\n  Hammer.AttrRecognizer = AttrRecognizer;\n  Hammer.Tap = TapRecognizer;\n  Hammer.Pan = PanRecognizer;\n  Hammer.Swipe = SwipeRecognizer;\n  Hammer.Pinch = PinchRecognizer;\n  Hammer.Rotate = RotateRecognizer;\n  Hammer.Press = PressRecognizer;\n  Hammer.on = addEventListeners;\n  Hammer.off = removeEventListeners;\n  Hammer.each = each;\n  Hammer.merge = merge$1;\n  Hammer.extend = extend$1;\n  Hammer.bindFn = bindFn;\n  Hammer.assign = assign$1;\n  Hammer.inherit = inherit;\n  Hammer.bindFn = bindFn;\n  Hammer.prefixed = prefixed;\n  Hammer.toArray = toArray$1;\n  Hammer.inArray = inArray;\n  Hammer.uniqueArray = uniqueArray;\n  Hammer.splitStr = splitStr;\n  Hammer.boolOrFn = boolOrFn;\n  Hammer.hasParent = hasParent$1;\n  Hammer.addEventListeners = addEventListeners;\n  Hammer.removeEventListeners = removeEventListeners;\n  Hammer.defaults = assign$1({}, defaults, {\n    preset: preset\n  });\n  return Hammer;\n}();\n\n//  style loader but by script tag, not by the loader.\n\nHammer$3.defaults;\n\nvar Hammer$4 = Hammer$3;\n\nfunction _createForOfIteratorHelper$7(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray$7(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray$7(o, minLen) { var _context17; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$7(o, minLen); var n = _sliceInstanceProperty(_context17 = Object.prototype.toString.call(o)).call(_context17, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from$1(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$7(o, minLen); }\nfunction _arrayLikeToArray$7(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n/**\r\n * Use this symbol to delete properies in deepObjectAssign.\r\n */\nvar DELETE = _Symbol(\"DELETE\");\n/**\r\n * Pure version of deepObjectAssign, it doesn't modify any of it's arguments.\r\n *\r\n * @param base - The base object that fullfils the whole interface T.\r\n * @param updates - Updates that may change or delete props.\r\n * @returns A brand new instance with all the supplied objects deeply merged.\r\n */\nfunction pureDeepObjectAssign(base) {\n  var _context;\n  for (var _len = arguments.length, updates = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    updates[_key - 1] = arguments[_key];\n  }\n  return deepObjectAssign.apply(void 0, _concatInstanceProperty(_context = [{}, base]).call(_context, updates));\n}\n/**\r\n * Deep version of object assign with additional deleting by the DELETE symbol.\r\n *\r\n * @param values - Objects to be deeply merged.\r\n * @returns The first object from values.\r\n */\nfunction deepObjectAssign() {\n  var merged = deepObjectAssignNonentry.apply(void 0, arguments);\n  stripDelete(merged);\n  return merged;\n}\n/**\r\n * Deep version of object assign with additional deleting by the DELETE symbol.\r\n *\r\n * @remarks\r\n * This doesn't strip the DELETE symbols so they may end up in the final object.\r\n * @param values - Objects to be deeply merged.\r\n * @returns The first object from values.\r\n */\nfunction deepObjectAssignNonentry() {\n  for (var _len2 = arguments.length, values = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n    values[_key2] = arguments[_key2];\n  }\n  if (values.length < 2) {\n    return values[0];\n  } else if (values.length > 2) {\n    var _context2;\n    return deepObjectAssignNonentry.apply(void 0, _concatInstanceProperty(_context2 = [deepObjectAssign(values[0], values[1])]).call(_context2, _toConsumableArray(_sliceInstanceProperty(values).call(values, 2))));\n  }\n  var a = values[0];\n  var b = values[1];\n  if (a instanceof Date && b instanceof Date) {\n    a.setTime(b.getTime());\n    return a;\n  }\n  var _iterator = _createForOfIteratorHelper$7(_Reflect$ownKeys(b)),\n    _step;\n  try {\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      var prop = _step.value;\n      if (!Object.prototype.propertyIsEnumerable.call(b, prop)) ;else if (b[prop] === DELETE) {\n        delete a[prop];\n      } else if (a[prop] !== null && b[prop] !== null && _typeof$1(a[prop]) === \"object\" && _typeof$1(b[prop]) === \"object\" && !_Array$isArray(a[prop]) && !_Array$isArray(b[prop])) {\n        a[prop] = deepObjectAssignNonentry(a[prop], b[prop]);\n      } else {\n        a[prop] = clone(b[prop]);\n      }\n    }\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  return a;\n}\n/**\r\n * Deep clone given object or array. In case of primitive simply return.\r\n *\r\n * @param a - Anything.\r\n * @returns Deep cloned object/array or unchanged a.\r\n */\nfunction clone(a) {\n  if (_Array$isArray(a)) {\n    return _mapInstanceProperty(a).call(a, function (value) {\n      return clone(value);\n    });\n  } else if (_typeof$1(a) === \"object\" && a !== null) {\n    if (a instanceof Date) {\n      return new Date(a.getTime());\n    }\n    return deepObjectAssignNonentry({}, a);\n  } else {\n    return a;\n  }\n}\n/**\r\n * Strip DELETE from given object.\r\n *\r\n * @param a - Object which may contain DELETE but won't after this is executed.\r\n */\nfunction stripDelete(a) {\n  for (var _i = 0, _Object$keys$1 = _Object$keys(a); _i < _Object$keys$1.length; _i++) {\n    var prop = _Object$keys$1[_i];\n    if (a[prop] === DELETE) {\n      delete a[prop];\n    } else if (_typeof$1(a[prop]) === \"object\" && a[prop] !== null) {\n      stripDelete(a[prop]);\n    }\n  }\n}\n\n/**\r\n * Seedable, fast and reasonably good (not crypto but more than okay for our\r\n * needs) random number generator.\r\n *\r\n * @remarks\r\n * Adapted from {@link https://web.archive.org/web/20110429100736/http://baagoe.com:80/en/RandomMusings/javascript}.\r\n * Original algorithm created by Johannes Baagøe \\<baagoe\\@baagoe.com\\> in 2010.\r\n */\n/**\r\n * Create a seeded pseudo random generator based on Alea by Johannes Baagøe.\r\n *\r\n * @param seed - All supplied arguments will be used as a seed. In case nothing\r\n * is supplied the current time will be used to seed the generator.\r\n * @returns A ready to use seeded generator.\r\n */\nfunction Alea() {\n  for (var _len3 = arguments.length, seed = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n    seed[_key3] = arguments[_key3];\n  }\n  return AleaImplementation(seed.length ? seed : [_Date$now()]);\n}\n/**\r\n * An implementation of [[Alea]] without user input validation.\r\n *\r\n * @param seed - The data that will be used to seed the generator.\r\n * @returns A ready to use seeded generator.\r\n */\nfunction AleaImplementation(seed) {\n  var _mashSeed = mashSeed(seed),\n    _mashSeed2 = _slicedToArray(_mashSeed, 3),\n    s0 = _mashSeed2[0],\n    s1 = _mashSeed2[1],\n    s2 = _mashSeed2[2];\n  var c = 1;\n  var random = function random() {\n    var t = 2091639 * s0 + c * 2.3283064365386963e-10; // 2^-32\n    s0 = s1;\n    s1 = s2;\n    return s2 = t - (c = t | 0);\n  };\n  random.uint32 = function () {\n    return random() * 0x100000000;\n  }; // 2^32\n  random.fract53 = function () {\n    return random() + (random() * 0x200000 | 0) * 1.1102230246251565e-16;\n  }; // 2^-53\n  random.algorithm = \"Alea\";\n  random.seed = seed;\n  random.version = \"0.9\";\n  return random;\n}\n/**\r\n * Turn arbitrary data into values [[AleaImplementation]] can use to generate\r\n * random numbers.\r\n *\r\n * @param seed - Arbitrary data that will be used as the seed.\r\n * @returns Three numbers to use as initial values for [[AleaImplementation]].\r\n */\nfunction mashSeed() {\n  var mash = Mash();\n  var s0 = mash(\" \");\n  var s1 = mash(\" \");\n  var s2 = mash(\" \");\n  for (var i = 0; i < arguments.length; i++) {\n    s0 -= mash(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    if (s0 < 0) {\n      s0 += 1;\n    }\n    s1 -= mash(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    if (s1 < 0) {\n      s1 += 1;\n    }\n    s2 -= mash(i < 0 || arguments.length <= i ? undefined : arguments[i]);\n    if (s2 < 0) {\n      s2 += 1;\n    }\n  }\n  return [s0, s1, s2];\n}\n/**\r\n * Create a new mash function.\r\n *\r\n * @returns A nonpure function that takes arbitrary [[Mashable]] data and turns\r\n * them into numbers.\r\n */\nfunction Mash() {\n  var n = 0xefc8249d;\n  return function (data) {\n    var string = data.toString();\n    for (var i = 0; i < string.length; i++) {\n      n += string.charCodeAt(i);\n      var h = 0.02519603282416938 * n;\n      n = h >>> 0;\n      h -= n;\n      h *= n;\n      n = h >>> 0;\n      h -= n;\n      n += h * 0x100000000; // 2^32\n    }\n\n    return (n >>> 0) * 2.3283064365386963e-10; // 2^-32\n  };\n}\n\n/**\n * Setup a mock hammer.js object, for unit testing.\n *\n * Inspiration: https://github.com/uber/deck.gl/pull/658\n *\n * @returns {{on: noop, off: noop, destroy: noop, emit: noop, get: get}}\n */\nfunction hammerMock$1() {\n  var noop = function noop() {};\n  return {\n    on: noop,\n    off: noop,\n    destroy: noop,\n    emit: noop,\n    get: function get() {\n      return {\n        set: noop\n      };\n    }\n  };\n}\nvar Hammer$1 = typeof window !== \"undefined\" ? window.Hammer || Hammer$4 : function () {\n  // hammer.js is only available in a browser, not in node.js. Replacing it with a mock object.\n  return hammerMock$1();\n};\n\n/**\n * Turn an element into an clickToUse element.\n * When not active, the element has a transparent overlay. When the overlay is\n * clicked, the mode is changed to active.\n * When active, the element is displayed with a blue border around it, and\n * the interactive contents of the element can be used. When clicked outside\n * the element, the elements mode is changed to inactive.\n *\n * @param {Element} container\n * @class Activator\n */\nfunction Activator$1(container) {\n  var _this = this,\n    _context3;\n  this._cleanupQueue = [];\n  this.active = false;\n  this._dom = {\n    container: container,\n    overlay: document.createElement(\"div\")\n  };\n  this._dom.overlay.classList.add(\"vis-overlay\");\n  this._dom.container.appendChild(this._dom.overlay);\n  this._cleanupQueue.push(function () {\n    _this._dom.overlay.parentNode.removeChild(_this._dom.overlay);\n  });\n  var hammer = Hammer$1(this._dom.overlay);\n  hammer.on(\"tap\", _bindInstanceProperty$1(_context3 = this._onTapOverlay).call(_context3, this));\n  this._cleanupQueue.push(function () {\n    hammer.destroy();\n    // FIXME: cleaning up hammer instances doesn't work (Timeline not removed\n    // from memory)\n  });\n\n  // block all touch events (except tap)\n  var events = [\"tap\", \"doubletap\", \"press\", \"pinch\", \"pan\", \"panstart\", \"panmove\", \"panend\"];\n  _forEachInstanceProperty(events).call(events, function (event) {\n    hammer.on(event, function (event) {\n      event.srcEvent.stopPropagation();\n    });\n  });\n\n  // attach a click event to the window, in order to deactivate when clicking outside the timeline\n  if (document && document.body) {\n    this._onClick = function (event) {\n      if (!_hasParent$1(event.target, container)) {\n        _this.deactivate();\n      }\n    };\n    document.body.addEventListener(\"click\", this._onClick);\n    this._cleanupQueue.push(function () {\n      document.body.removeEventListener(\"click\", _this._onClick);\n    });\n  }\n\n  // prepare escape key listener for deactivating when active\n  this._escListener = function (event) {\n    if (\"key\" in event ? event.key === \"Escape\" : event.keyCode === 27 /* the keyCode is for IE11 */) {\n      _this.deactivate();\n    }\n  };\n}\n\n// turn into an event emitter\nEmitter(Activator$1.prototype);\n\n// The currently active activator\nActivator$1.current = null;\n\n/**\n * Destroy the activator. Cleans up all created DOM and event listeners\n */\nActivator$1.prototype.destroy = function () {\n  var _context4, _context5;\n  this.deactivate();\n  var _iterator2 = _createForOfIteratorHelper$7(_reverseInstanceProperty(_context4 = _spliceInstanceProperty(_context5 = this._cleanupQueue).call(_context5, 0)).call(_context4)),\n    _step2;\n  try {\n    for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n      var callback = _step2.value;\n      callback();\n    }\n  } catch (err) {\n    _iterator2.e(err);\n  } finally {\n    _iterator2.f();\n  }\n};\n\n/**\n * Activate the element\n * Overlay is hidden, element is decorated with a blue shadow border\n */\nActivator$1.prototype.activate = function () {\n  // we allow only one active activator at a time\n  if (Activator$1.current) {\n    Activator$1.current.deactivate();\n  }\n  Activator$1.current = this;\n  this.active = true;\n  this._dom.overlay.style.display = \"none\";\n  this._dom.container.classList.add(\"vis-active\");\n  this.emit(\"change\");\n  this.emit(\"activate\");\n\n  // ugly hack: bind ESC after emitting the events, as the Network rebinds all\n  // keyboard events on a 'change' event\n  document.body.addEventListener(\"keydown\", this._escListener);\n};\n\n/**\n * Deactivate the element\n * Overlay is displayed on top of the element\n */\nActivator$1.prototype.deactivate = function () {\n  this.active = false;\n  this._dom.overlay.style.display = \"block\";\n  this._dom.container.classList.remove(\"vis-active\");\n  document.body.removeEventListener(\"keydown\", this._escListener);\n  this.emit(\"change\");\n  this.emit(\"deactivate\");\n};\n\n/**\n * Handle a tap event: activate the container\n *\n * @param {Event}  event   The event\n * @private\n */\nActivator$1.prototype._onTapOverlay = function (event) {\n  // activate the container\n  this.activate();\n  event.srcEvent.stopPropagation();\n};\n\n/**\n * Test whether the element has the requested parent element somewhere in\n * its chain of parent nodes.\n *\n * @param {HTMLElement} element\n * @param {HTMLElement} parent\n * @returns {boolean} Returns true when the parent is found somewhere in the\n *                    chain of parent nodes.\n * @private\n */\nfunction _hasParent$1(element, parent) {\n  while (element) {\n    if (element === parent) {\n      return true;\n    }\n    element = element.parentNode;\n  }\n  return false;\n}\n\n// utility functions\n// parse ASP.Net Date pattern,\n// for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'\n// code from http://momentjs.com/\nvar ASPDateRegex$1 = /^\\/?Date\\((-?\\d+)/i;\n// Color REs\nvar fullHexRE = /^#?([a-f\\d]{2})([a-f\\d]{2})([a-f\\d]{2})$/i;\nvar shortHexRE = /^#?([a-f\\d])([a-f\\d])([a-f\\d])$/i;\nvar rgbRE = /^rgb\\( *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *\\)$/i;\nvar rgbaRE = /^rgba\\( *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *(1?\\d{1,2}|2[0-4]\\d|25[0-5]) *, *([01]|0?\\.\\d+) *\\)$/i;\n/**\r\n * Test whether given object is a number.\r\n *\r\n * @param value - Input value of unknown type.\r\n * @returns True if number, false otherwise.\r\n */\nfunction isNumber(value) {\n  return value instanceof Number || typeof value === \"number\";\n}\n/**\r\n * Remove everything in the DOM object.\r\n *\r\n * @param DOMobject - Node whose child nodes will be recursively deleted.\r\n */\nfunction recursiveDOMDelete(DOMobject) {\n  if (DOMobject) {\n    while (DOMobject.hasChildNodes() === true) {\n      var child = DOMobject.firstChild;\n      if (child) {\n        recursiveDOMDelete(child);\n        DOMobject.removeChild(child);\n      }\n    }\n  }\n}\n/**\r\n * Test whether given object is a string.\r\n *\r\n * @param value - Input value of unknown type.\r\n * @returns True if string, false otherwise.\r\n */\nfunction isString(value) {\n  return value instanceof String || typeof value === \"string\";\n}\n/**\r\n * Test whether given object is a object (not primitive or null).\r\n *\r\n * @param value - Input value of unknown type.\r\n * @returns True if not null object, false otherwise.\r\n */\nfunction isObject$7(value) {\n  return _typeof$1(value) === \"object\" && value !== null;\n}\n/**\r\n * Test whether given object is a Date, or a String containing a Date.\r\n *\r\n * @param value - Input value of unknown type.\r\n * @returns True if Date instance or string date representation, false otherwise.\r\n */\nfunction isDate(value) {\n  if (value instanceof Date) {\n    return true;\n  } else if (isString(value)) {\n    // test whether this string contains a date\n    var match = ASPDateRegex$1.exec(value);\n    if (match) {\n      return true;\n    } else if (!isNaN(Date.parse(value))) {\n      return true;\n    }\n  }\n  return false;\n}\n/**\r\n * Copy property from b to a if property present in a.\r\n * If property in b explicitly set to null, delete it if `allowDeletion` set.\r\n *\r\n * Internal helper routine, should not be exported. Not added to `exports` for that reason.\r\n *\r\n * @param a - Target object.\r\n * @param b - Source object.\r\n * @param prop - Name of property to copy from b to a.\r\n * @param allowDeletion - If true, delete property in a if explicitly set to null in b.\r\n */\nfunction copyOrDelete(a, b, prop, allowDeletion) {\n  var doDeletion = false;\n  if (allowDeletion === true) {\n    doDeletion = b[prop] === null && a[prop] !== undefined;\n  }\n  if (doDeletion) {\n    delete a[prop];\n  } else {\n    a[prop] = b[prop]; // Remember, this is a reference copy!\n  }\n}\n/**\r\n * Fill an object with a possibly partially defined other object.\r\n *\r\n * Only copies values for the properties already present in a.\r\n * That means an object is not created on a property if only the b object has it.\r\n *\r\n * @param a - The object that will have it's properties updated.\r\n * @param b - The object with property updates.\r\n * @param allowDeletion - If true, delete properties in a that are explicitly set to null in b.\r\n */\nfunction fillIfDefined(a, b) {\n  var allowDeletion = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  // NOTE: iteration of properties of a\n  // NOTE: prototype properties iterated over as well\n  for (var prop in a) {\n    if (b[prop] !== undefined) {\n      if (b[prop] === null || _typeof$1(b[prop]) !== \"object\") {\n        // Note: typeof null === 'object'\n        copyOrDelete(a, b, prop, allowDeletion);\n      } else {\n        var aProp = a[prop];\n        var bProp = b[prop];\n        if (isObject$7(aProp) && isObject$7(bProp)) {\n          fillIfDefined(aProp, bProp, allowDeletion);\n        }\n      }\n    }\n  }\n}\n/**\r\n * Copy the values of all of the enumerable own properties from one or more source objects to a\r\n * target object. Returns the target object.\r\n *\r\n * @param target - The target object to copy to.\r\n * @param source - The source object from which to copy properties.\r\n * @returns The target object.\r\n */\nvar extend = _Object$assign;\n/**\r\n * Extend object a with selected properties of object b or a series of objects.\r\n *\r\n * @remarks\r\n * Only properties with defined values are copied.\r\n * @param props - Properties to be copied to a.\r\n * @param a - The target.\r\n * @param others - The sources.\r\n * @returns Argument a.\r\n */\nfunction selectiveExtend(props, a) {\n  if (!_Array$isArray(props)) {\n    throw new Error(\"Array with property names expected as first argument\");\n  }\n  for (var _len4 = arguments.length, others = new Array(_len4 > 2 ? _len4 - 2 : 0), _key4 = 2; _key4 < _len4; _key4++) {\n    others[_key4 - 2] = arguments[_key4];\n  }\n  for (var _i2 = 0, _others = others; _i2 < _others.length; _i2++) {\n    var other = _others[_i2];\n    for (var p = 0; p < props.length; p++) {\n      var prop = props[p];\n      if (other && Object.prototype.hasOwnProperty.call(other, prop)) {\n        a[prop] = other[prop];\n      }\n    }\n  }\n  return a;\n}\n/**\r\n * Extend object a with selected properties of object b.\r\n * Only properties with defined values are copied.\r\n *\r\n * @remarks\r\n * Previous version of this routine implied that multiple source objects could\r\n * be used; however, the implementation was **wrong**. Since multiple (\\>1)\r\n * sources weren't used anywhere in the `vis.js` code, this has been removed\r\n * @param props - Names of first-level properties to copy over.\r\n * @param a - Target object.\r\n * @param b - Source object.\r\n * @param allowDeletion - If true, delete property in a if explicitly set to null in b.\r\n * @returns Argument a.\r\n */\nfunction selectiveDeepExtend(props, a, b) {\n  var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  // TODO: add support for Arrays to deepExtend\n  if (_Array$isArray(b)) {\n    throw new TypeError(\"Arrays are not supported by deepExtend\");\n  }\n  for (var p = 0; p < props.length; p++) {\n    var prop = props[p];\n    if (Object.prototype.hasOwnProperty.call(b, prop)) {\n      if (b[prop] && b[prop].constructor === Object) {\n        if (a[prop] === undefined) {\n          a[prop] = {};\n        }\n        if (a[prop].constructor === Object) {\n          deepExtend(a[prop], b[prop], false, allowDeletion);\n        } else {\n          copyOrDelete(a, b, prop, allowDeletion);\n        }\n      } else if (_Array$isArray(b[prop])) {\n        throw new TypeError(\"Arrays are not supported by deepExtend\");\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    }\n  }\n  return a;\n}\n/**\r\n * Extend object `a` with properties of object `b`, ignoring properties which\r\n * are explicitly specified to be excluded.\r\n *\r\n * @remarks\r\n * The properties of `b` are considered for copying. Properties which are\r\n * themselves objects are are also extended. Only properties with defined\r\n * values are copied.\r\n * @param propsToExclude - Names of properties which should *not* be copied.\r\n * @param a - Object to extend.\r\n * @param b - Object to take properties from for extension.\r\n * @param allowDeletion - If true, delete properties in a that are explicitly\r\n * set to null in b.\r\n * @returns Argument a.\r\n */\nfunction selectiveNotDeepExtend(propsToExclude, a, b) {\n  var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  // TODO: add support for Arrays to deepExtend\n  // NOTE: array properties have an else-below; apparently, there is a problem here.\n  if (_Array$isArray(b)) {\n    throw new TypeError(\"Arrays are not supported by deepExtend\");\n  }\n  for (var prop in b) {\n    if (!Object.prototype.hasOwnProperty.call(b, prop)) {\n      continue;\n    } // Handle local properties only\n    if (_includesInstanceProperty(propsToExclude).call(propsToExclude, prop)) {\n      continue;\n    } // In exclusion list, skip\n    if (b[prop] && b[prop].constructor === Object) {\n      if (a[prop] === undefined) {\n        a[prop] = {};\n      }\n      if (a[prop].constructor === Object) {\n        deepExtend(a[prop], b[prop]); // NOTE: allowDeletion not propagated!\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    } else if (_Array$isArray(b[prop])) {\n      a[prop] = [];\n      for (var i = 0; i < b[prop].length; i++) {\n        a[prop].push(b[prop][i]);\n      }\n    } else {\n      copyOrDelete(a, b, prop, allowDeletion);\n    }\n  }\n  return a;\n}\n/**\r\n * Deep extend an object a with the properties of object b.\r\n *\r\n * @param a - Target object.\r\n * @param b - Source object.\r\n * @param protoExtend - If true, the prototype values will also be extended.\r\n * (That is the options objects that inherit from others will also get the\r\n * inherited options).\r\n * @param allowDeletion - If true, the values of fields that are null will be deleted.\r\n * @returns Argument a.\r\n */\nfunction deepExtend(a, b) {\n  var protoExtend = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n  var allowDeletion = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n  for (var prop in b) {\n    if (Object.prototype.hasOwnProperty.call(b, prop) || protoExtend === true) {\n      if (_typeof$1(b[prop]) === \"object\" && b[prop] !== null && _Object$getPrototypeOf$1(b[prop]) === Object.prototype) {\n        if (a[prop] === undefined) {\n          a[prop] = deepExtend({}, b[prop], protoExtend); // NOTE: allowDeletion not propagated!\n        } else if (_typeof$1(a[prop]) === \"object\" && a[prop] !== null && _Object$getPrototypeOf$1(a[prop]) === Object.prototype) {\n          deepExtend(a[prop], b[prop], protoExtend); // NOTE: allowDeletion not propagated!\n        } else {\n          copyOrDelete(a, b, prop, allowDeletion);\n        }\n      } else if (_Array$isArray(b[prop])) {\n        var _context6;\n        a[prop] = _sliceInstanceProperty(_context6 = b[prop]).call(_context6);\n      } else {\n        copyOrDelete(a, b, prop, allowDeletion);\n      }\n    }\n  }\n  return a;\n}\n/**\r\n * Test whether all elements in two arrays are equal.\r\n *\r\n * @param a - First array.\r\n * @param b - Second array.\r\n * @returns True if both arrays have the same length and same elements (1 = '1').\r\n */\nfunction equalArray(a, b) {\n  if (a.length !== b.length) {\n    return false;\n  }\n  for (var i = 0, len = a.length; i < len; i++) {\n    if (a[i] != b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n/**\r\n * Get the type of an object, for example exports.getType([]) returns 'Array'.\r\n *\r\n * @param object - Input value of unknown type.\r\n * @returns Detected type.\r\n */\nfunction getType(object) {\n  var type = _typeof$1(object);\n  if (type === \"object\") {\n    if (object === null) {\n      return \"null\";\n    }\n    if (object instanceof Boolean) {\n      return \"Boolean\";\n    }\n    if (object instanceof Number) {\n      return \"Number\";\n    }\n    if (object instanceof String) {\n      return \"String\";\n    }\n    if (_Array$isArray(object)) {\n      return \"Array\";\n    }\n    if (object instanceof Date) {\n      return \"Date\";\n    }\n    return \"Object\";\n  }\n  if (type === \"number\") {\n    return \"Number\";\n  }\n  if (type === \"boolean\") {\n    return \"Boolean\";\n  }\n  if (type === \"string\") {\n    return \"String\";\n  }\n  if (type === undefined) {\n    return \"undefined\";\n  }\n  return type;\n}\n/**\r\n * Used to extend an array and copy it. This is used to propagate paths recursively.\r\n *\r\n * @param arr - First part.\r\n * @param newValue - The value to be aadded into the array.\r\n * @returns A new array with all items from arr and newValue (which is last).\r\n */\nfunction copyAndExtendArray(arr, newValue) {\n  var _context7;\n  return _concatInstanceProperty(_context7 = []).call(_context7, _toConsumableArray(arr), [newValue]);\n}\n/**\r\n * Used to extend an array and copy it. This is used to propagate paths recursively.\r\n *\r\n * @param arr - The array to be copied.\r\n * @returns Shallow copy of arr.\r\n */\nfunction copyArray(arr) {\n  return _sliceInstanceProperty(arr).call(arr);\n}\n/**\r\n * Retrieve the absolute left value of a DOM element.\r\n *\r\n * @param elem - A dom element, for example a div.\r\n * @returns The absolute left position of this element in the browser page.\r\n */\nfunction getAbsoluteLeft(elem) {\n  return elem.getBoundingClientRect().left;\n}\n/**\r\n * Retrieve the absolute right value of a DOM element.\r\n *\r\n * @param elem - A dom element, for example a div.\r\n * @returns The absolute right position of this element in the browser page.\r\n */\nfunction getAbsoluteRight(elem) {\n  return elem.getBoundingClientRect().right;\n}\n/**\r\n * Retrieve the absolute top value of a DOM element.\r\n *\r\n * @param elem - A dom element, for example a div.\r\n * @returns The absolute top position of this element in the browser page.\r\n */\nfunction getAbsoluteTop(elem) {\n  return elem.getBoundingClientRect().top;\n}\n/**\r\n * Add a className to the given elements style.\r\n *\r\n * @param elem - The element to which the classes will be added.\r\n * @param classNames - Space separated list of classes.\r\n */\nfunction addClassName(elem, classNames) {\n  var classes = elem.className.split(\" \");\n  var newClasses = classNames.split(\" \");\n  classes = _concatInstanceProperty(classes).call(classes, _filterInstanceProperty(newClasses).call(newClasses, function (className) {\n    return !_includesInstanceProperty(classes).call(classes, className);\n  }));\n  elem.className = classes.join(\" \");\n}\n/**\r\n * Remove a className from the given elements style.\r\n *\r\n * @param elem - The element from which the classes will be removed.\r\n * @param classNames - Space separated list of classes.\r\n */\nfunction removeClassName(elem, classNames) {\n  var classes = elem.className.split(\" \");\n  var oldClasses = classNames.split(\" \");\n  classes = _filterInstanceProperty(classes).call(classes, function (className) {\n    return !_includesInstanceProperty(oldClasses).call(oldClasses, className);\n  });\n  elem.className = classes.join(\" \");\n}\n/**\r\n * For each method for both arrays and objects.\r\n * In case of an array, the built-in Array.forEach() is applied (**No, it's not!**).\r\n * In case of an Object, the method loops over all properties of the object.\r\n *\r\n * @param object - An Object or Array to be iterated over.\r\n * @param callback - Array.forEach-like callback.\r\n */\nfunction forEach$4(object, callback) {\n  if (_Array$isArray(object)) {\n    // array\n    var len = object.length;\n    for (var i = 0; i < len; i++) {\n      callback(object[i], i, object);\n    }\n  } else {\n    // object\n    for (var key in object) {\n      if (Object.prototype.hasOwnProperty.call(object, key)) {\n        callback(object[key], key, object);\n      }\n    }\n  }\n}\n/**\r\n * Convert an object into an array: all objects properties are put into the array. The resulting array is unordered.\r\n *\r\n * @param o - Object that contains the properties and methods.\r\n * @returns An array of unordered values.\r\n */\nvar toArray = _Object$values2;\n/**\r\n * Update a property in an object.\r\n *\r\n * @param object - The object whose property will be updated.\r\n * @param key - Name of the property to be updated.\r\n * @param value - The new value to be assigned.\r\n * @returns Whether the value was updated (true) or already strictly the same in the original object (false).\r\n */\nfunction updateProperty(object, key, value) {\n  if (object[key] !== value) {\n    object[key] = value;\n    return true;\n  } else {\n    return false;\n  }\n}\n/**\r\n * Throttle the given function to be only executed once per animation frame.\r\n *\r\n * @param fn - The original function.\r\n * @returns The throttled function.\r\n */\nfunction throttle(fn) {\n  var scheduled = false;\n  return function () {\n    if (!scheduled) {\n      scheduled = true;\n      requestAnimationFrame(function () {\n        scheduled = false;\n        fn();\n      });\n    }\n  };\n}\n/**\r\n * Add and event listener. Works for all browsers.\r\n *\r\n * @param element - The element to bind the event listener to.\r\n * @param action - Same as Element.addEventListener(action, —, —).\r\n * @param listener - Same as Element.addEventListener(—, listener, —).\r\n * @param useCapture - Same as Element.addEventListener(—, —, useCapture).\r\n */\nfunction addEventListener(element, action, listener, useCapture) {\n  if (element.addEventListener) {\n    var _context8;\n    if (useCapture === undefined) {\n      useCapture = false;\n    }\n    if (action === \"mousewheel\" && _includesInstanceProperty(_context8 = navigator.userAgent).call(_context8, \"Firefox\")) {\n      action = \"DOMMouseScroll\"; // For Firefox\n    }\n\n    element.addEventListener(action, listener, useCapture);\n  } else {\n    // @TODO: IE types? Does anyone care?\n    element.attachEvent(\"on\" + action, listener); // IE browsers\n  }\n}\n/**\r\n * Remove an event listener from an element.\r\n *\r\n * @param element - The element to bind the event listener to.\r\n * @param action - Same as Element.removeEventListener(action, —, —).\r\n * @param listener - Same as Element.removeEventListener(—, listener, —).\r\n * @param useCapture - Same as Element.removeEventListener(—, —, useCapture).\r\n */\nfunction removeEventListener(element, action, listener, useCapture) {\n  if (element.removeEventListener) {\n    var _context9;\n    // non-IE browsers\n    if (useCapture === undefined) {\n      useCapture = false;\n    }\n    if (action === \"mousewheel\" && _includesInstanceProperty(_context9 = navigator.userAgent).call(_context9, \"Firefox\")) {\n      action = \"DOMMouseScroll\"; // For Firefox\n    }\n\n    element.removeEventListener(action, listener, useCapture);\n  } else {\n    // @TODO: IE types? Does anyone care?\n    element.detachEvent(\"on\" + action, listener); // IE browsers\n  }\n}\n/**\r\n * Cancels the event's default action if it is cancelable, without stopping further propagation of the event.\r\n *\r\n * @param event - The event whose default action should be prevented.\r\n */\nfunction preventDefault(event) {\n  if (!event) {\n    event = window.event;\n  }\n  if (!event) ;else if (event.preventDefault) {\n    event.preventDefault(); // non-IE browsers\n  } else {\n    // @TODO: IE types? Does anyone care?\n    event.returnValue = false; // IE browsers\n  }\n}\n/**\r\n * Get HTML element which is the target of the event.\r\n *\r\n * @param event - The event.\r\n * @returns The element or null if not obtainable.\r\n */\nfunction getTarget() {\n  var event = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : window.event;\n  // code from http://www.quirksmode.org/js/events_properties.html\n  // @TODO: EventTarget can be almost anything, is it okay to return only Elements?\n  var target = null;\n  if (!event) ;else if (event.target) {\n    target = event.target;\n  } else if (event.srcElement) {\n    target = event.srcElement;\n  }\n  if (!(target instanceof Element)) {\n    return null;\n  }\n  if (target.nodeType != null && target.nodeType == 3) {\n    // defeat Safari bug\n    target = target.parentNode;\n    if (!(target instanceof Element)) {\n      return null;\n    }\n  }\n  return target;\n}\n/**\r\n * Check if given element contains given parent somewhere in the DOM tree.\r\n *\r\n * @param element - The element to be tested.\r\n * @param parent - The ancestor (not necessarily parent) of the element.\r\n * @returns True if parent is an ancestor of the element, false otherwise.\r\n */\nfunction hasParent(element, parent) {\n  var elem = element;\n  while (elem) {\n    if (elem === parent) {\n      return true;\n    } else if (elem.parentNode) {\n      elem = elem.parentNode;\n    } else {\n      return false;\n    }\n  }\n  return false;\n}\nvar option = {\n  /**\r\n   * Convert a value into a boolean.\r\n   *\r\n   * @param value - Value to be converted intoboolean, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   * @returns Corresponding boolean value, if none then the default value, if none then null.\r\n   */\n  asBoolean: function asBoolean(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    if (value != null) {\n      return value != false;\n    }\n    return defaultValue || null;\n  },\n  /**\r\n   * Convert a value into a number.\r\n   *\r\n   * @param value - Value to be converted intonumber, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   * @returns Corresponding **boxed** number value, if none then the default value, if none then null.\r\n   */\n  asNumber: function asNumber(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    if (value != null) {\n      return Number(value) || defaultValue || null;\n    }\n    return defaultValue || null;\n  },\n  /**\r\n   * Convert a value into a string.\r\n   *\r\n   * @param value - Value to be converted intostring, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   * @returns Corresponding **boxed** string value, if none then the default value, if none then null.\r\n   */\n  asString: function asString(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    if (value != null) {\n      return String(value);\n    }\n    return defaultValue || null;\n  },\n  /**\r\n   * Convert a value into a size.\r\n   *\r\n   * @param value - Value to be converted intosize, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   * @returns Corresponding string value (number + 'px'), if none then the default value, if none then null.\r\n   */\n  asSize: function asSize(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    if (isString(value)) {\n      return value;\n    } else if (isNumber(value)) {\n      return value + \"px\";\n    } else {\n      return defaultValue || null;\n    }\n  },\n  /**\r\n   * Convert a value into a DOM Element.\r\n   *\r\n   * @param value - Value to be converted into DOM Element, a function will be executed as `(() => unknown)`.\r\n   * @param defaultValue - If the value or the return value of the function == null then this will be returned.\r\n   * @returns The DOM Element, if none then the default value, if none then null.\r\n   */\n  asElement: function asElement(value, defaultValue) {\n    if (typeof value == \"function\") {\n      value = value();\n    }\n    return value || defaultValue || null;\n  }\n};\n/**\r\n * Convert hex color string into RGB color object.\r\n *\r\n * @remarks\r\n * {@link http://stackoverflow.com/questions/5623838/rgb-to-hex-and-hex-to-rgb}\r\n * @param hex - Hex color string (3 or 6 digits, with or without #).\r\n * @returns RGB color object.\r\n */\nfunction hexToRGB(hex) {\n  var result;\n  switch (hex.length) {\n    case 3:\n    case 4:\n      result = shortHexRE.exec(hex);\n      return result ? {\n        r: _parseInt$1(result[1] + result[1], 16),\n        g: _parseInt$1(result[2] + result[2], 16),\n        b: _parseInt$1(result[3] + result[3], 16)\n      } : null;\n    case 6:\n    case 7:\n      result = fullHexRE.exec(hex);\n      return result ? {\n        r: _parseInt$1(result[1], 16),\n        g: _parseInt$1(result[2], 16),\n        b: _parseInt$1(result[3], 16)\n      } : null;\n    default:\n      return null;\n  }\n}\n/**\r\n * This function takes string color in hex or RGB format and adds the opacity, RGBA is passed through unchanged.\r\n *\r\n * @param color - The color string (hex, RGB, RGBA).\r\n * @param opacity - The new opacity.\r\n * @returns RGBA string, for example 'rgba(255, 0, 127, 0.3)'.\r\n */\nfunction overrideOpacity(color, opacity) {\n  if (_includesInstanceProperty(color).call(color, \"rgba\")) {\n    return color;\n  } else if (_includesInstanceProperty(color).call(color, \"rgb\")) {\n    var rgb = color.substr(_indexOfInstanceProperty(color).call(color, \"(\") + 1).replace(\")\", \"\").split(\",\");\n    return \"rgba(\" + rgb[0] + \",\" + rgb[1] + \",\" + rgb[2] + \",\" + opacity + \")\";\n  } else {\n    var _rgb = hexToRGB(color);\n    if (_rgb == null) {\n      return color;\n    } else {\n      return \"rgba(\" + _rgb.r + \",\" + _rgb.g + \",\" + _rgb.b + \",\" + opacity + \")\";\n    }\n  }\n}\n/**\r\n * Convert RGB \\<0, 255\\> into hex color string.\r\n *\r\n * @param red - Red channel.\r\n * @param green - Green channel.\r\n * @param blue - Blue channel.\r\n * @returns Hex color string (for example: '#0acdc0').\r\n */\nfunction RGBToHex(red, green, blue) {\n  var _context10;\n  return \"#\" + _sliceInstanceProperty(_context10 = ((1 << 24) + (red << 16) + (green << 8) + blue).toString(16)).call(_context10, 1);\n}\n/**\r\n * Parse a color property into an object with border, background, and highlight colors.\r\n *\r\n * @param inputColor - Shorthand color string or input color object.\r\n * @param defaultColor - Full color object to fill in missing values in inputColor.\r\n * @returns Color object.\r\n */\nfunction parseColor(inputColor, defaultColor) {\n  if (isString(inputColor)) {\n    var colorStr = inputColor;\n    if (isValidRGB(colorStr)) {\n      var _context11;\n      var rgb = _mapInstanceProperty(_context11 = colorStr.substr(4).substr(0, colorStr.length - 5).split(\",\")).call(_context11, function (value) {\n        return _parseInt$1(value);\n      });\n      colorStr = RGBToHex(rgb[0], rgb[1], rgb[2]);\n    }\n    if (isValidHex(colorStr) === true) {\n      var hsv = hexToHSV(colorStr);\n      var lighterColorHSV = {\n        h: hsv.h,\n        s: hsv.s * 0.8,\n        v: Math.min(1, hsv.v * 1.02)\n      };\n      var darkerColorHSV = {\n        h: hsv.h,\n        s: Math.min(1, hsv.s * 1.25),\n        v: hsv.v * 0.8\n      };\n      var darkerColorHex = HSVToHex(darkerColorHSV.h, darkerColorHSV.s, darkerColorHSV.v);\n      var lighterColorHex = HSVToHex(lighterColorHSV.h, lighterColorHSV.s, lighterColorHSV.v);\n      return {\n        background: colorStr,\n        border: darkerColorHex,\n        highlight: {\n          background: lighterColorHex,\n          border: darkerColorHex\n        },\n        hover: {\n          background: lighterColorHex,\n          border: darkerColorHex\n        }\n      };\n    } else {\n      return {\n        background: colorStr,\n        border: colorStr,\n        highlight: {\n          background: colorStr,\n          border: colorStr\n        },\n        hover: {\n          background: colorStr,\n          border: colorStr\n        }\n      };\n    }\n  } else {\n    if (defaultColor) {\n      var color = {\n        background: inputColor.background || defaultColor.background,\n        border: inputColor.border || defaultColor.border,\n        highlight: isString(inputColor.highlight) ? {\n          border: inputColor.highlight,\n          background: inputColor.highlight\n        } : {\n          background: inputColor.highlight && inputColor.highlight.background || defaultColor.highlight.background,\n          border: inputColor.highlight && inputColor.highlight.border || defaultColor.highlight.border\n        },\n        hover: isString(inputColor.hover) ? {\n          border: inputColor.hover,\n          background: inputColor.hover\n        } : {\n          border: inputColor.hover && inputColor.hover.border || defaultColor.hover.border,\n          background: inputColor.hover && inputColor.hover.background || defaultColor.hover.background\n        }\n      };\n      return color;\n    } else {\n      var _color = {\n        background: inputColor.background || undefined,\n        border: inputColor.border || undefined,\n        highlight: isString(inputColor.highlight) ? {\n          border: inputColor.highlight,\n          background: inputColor.highlight\n        } : {\n          background: inputColor.highlight && inputColor.highlight.background || undefined,\n          border: inputColor.highlight && inputColor.highlight.border || undefined\n        },\n        hover: isString(inputColor.hover) ? {\n          border: inputColor.hover,\n          background: inputColor.hover\n        } : {\n          border: inputColor.hover && inputColor.hover.border || undefined,\n          background: inputColor.hover && inputColor.hover.background || undefined\n        }\n      };\n      return _color;\n    }\n  }\n}\n/**\r\n * Convert RGB \\<0, 255\\> into HSV object.\r\n *\r\n * @remarks\r\n * {@link http://www.javascripter.net/faq/rgb2hsv.htm}\r\n * @param red - Red channel.\r\n * @param green - Green channel.\r\n * @param blue - Blue channel.\r\n * @returns HSV color object.\r\n */\nfunction RGBToHSV(red, green, blue) {\n  red = red / 255;\n  green = green / 255;\n  blue = blue / 255;\n  var minRGB = Math.min(red, Math.min(green, blue));\n  var maxRGB = Math.max(red, Math.max(green, blue));\n  // Black-gray-white\n  if (minRGB === maxRGB) {\n    return {\n      h: 0,\n      s: 0,\n      v: minRGB\n    };\n  }\n  // Colors other than black-gray-white:\n  var d = red === minRGB ? green - blue : blue === minRGB ? red - green : blue - red;\n  var h = red === minRGB ? 3 : blue === minRGB ? 1 : 5;\n  var hue = 60 * (h - d / (maxRGB - minRGB)) / 360;\n  var saturation = (maxRGB - minRGB) / maxRGB;\n  var value = maxRGB;\n  return {\n    h: hue,\n    s: saturation,\n    v: value\n  };\n}\n/**\r\n * Split a string with css styles into an object with key/values.\r\n *\r\n * @param cssText - CSS source code to split into key/value object.\r\n * @returns Key/value object corresponding to {@link cssText}.\r\n */\nfunction splitCSSText(cssText) {\n  var tmpEllement = document.createElement(\"div\");\n  var styles = {};\n  tmpEllement.style.cssText = cssText;\n  for (var i = 0; i < tmpEllement.style.length; ++i) {\n    styles[tmpEllement.style[i]] = tmpEllement.style.getPropertyValue(tmpEllement.style[i]);\n  }\n  return styles;\n}\n/**\r\n * Append a string with css styles to an element.\r\n *\r\n * @param element - The element that will receive new styles.\r\n * @param cssText - The styles to be appended.\r\n */\nfunction addCssText(element, cssText) {\n  var cssStyle = splitCSSText(cssText);\n  for (var _i3 = 0, _Object$entries = _Object$entries2(cssStyle); _i3 < _Object$entries.length; _i3++) {\n    var _Object$entries$_i = _slicedToArray(_Object$entries[_i3], 2),\n      key = _Object$entries$_i[0],\n      value = _Object$entries$_i[1];\n    element.style.setProperty(key, value);\n  }\n}\n/**\r\n * Remove a string with css styles from an element.\r\n *\r\n * @param element - The element from which styles should be removed.\r\n * @param cssText - The styles to be removed.\r\n */\nfunction removeCssText(element, cssText) {\n  var cssStyle = splitCSSText(cssText);\n  for (var _i4 = 0, _Object$keys3 = _Object$keys(cssStyle); _i4 < _Object$keys3.length; _i4++) {\n    var key = _Object$keys3[_i4];\n    element.style.removeProperty(key);\n  }\n}\n/**\r\n * Convert HSV \\<0, 1\\> into RGB color object.\r\n *\r\n * @remarks\r\n * {@link https://gist.github.com/mjijackson/5311256}\r\n * @param h - Hue.\r\n * @param s - Saturation.\r\n * @param v - Value.\r\n * @returns RGB color object.\r\n */\nfunction HSVToRGB(h, s, v) {\n  var r;\n  var g;\n  var b;\n  var i = Math.floor(h * 6);\n  var f = h * 6 - i;\n  var p = v * (1 - s);\n  var q = v * (1 - f * s);\n  var t = v * (1 - (1 - f) * s);\n  switch (i % 6) {\n    case 0:\n      r = v, g = t, b = p;\n      break;\n    case 1:\n      r = q, g = v, b = p;\n      break;\n    case 2:\n      r = p, g = v, b = t;\n      break;\n    case 3:\n      r = p, g = q, b = v;\n      break;\n    case 4:\n      r = t, g = p, b = v;\n      break;\n    case 5:\n      r = v, g = p, b = q;\n      break;\n  }\n  return {\n    r: Math.floor(r * 255),\n    g: Math.floor(g * 255),\n    b: Math.floor(b * 255)\n  };\n}\n/**\r\n * Convert HSV \\<0, 1\\> into hex color string.\r\n *\r\n * @param h - Hue.\r\n * @param s - Saturation.\r\n * @param v - Value.\r\n * @returns Hex color string.\r\n */\nfunction HSVToHex(h, s, v) {\n  var rgb = HSVToRGB(h, s, v);\n  return RGBToHex(rgb.r, rgb.g, rgb.b);\n}\n/**\r\n * Convert hex color string into HSV \\<0, 1\\>.\r\n *\r\n * @param hex - Hex color string.\r\n * @returns HSV color object.\r\n */\nfunction hexToHSV(hex) {\n  var rgb = hexToRGB(hex);\n  if (!rgb) {\n    throw new TypeError(\"'\".concat(hex, \"' is not a valid color.\"));\n  }\n  return RGBToHSV(rgb.r, rgb.g, rgb.b);\n}\n/**\r\n * Validate hex color string.\r\n *\r\n * @param hex - Unknown string that may contain a color.\r\n * @returns True if the string is valid, false otherwise.\r\n */\nfunction isValidHex(hex) {\n  var isOk = /(^#[0-9A-F]{6}$)|(^#[0-9A-F]{3}$)/i.test(hex);\n  return isOk;\n}\n/**\r\n * Validate RGB color string.\r\n *\r\n * @param rgb - Unknown string that may contain a color.\r\n * @returns True if the string is valid, false otherwise.\r\n */\nfunction isValidRGB(rgb) {\n  return rgbRE.test(rgb);\n}\n/**\r\n * Validate RGBA color string.\r\n *\r\n * @param rgba - Unknown string that may contain a color.\r\n * @returns True if the string is valid, false otherwise.\r\n */\nfunction isValidRGBA(rgba) {\n  return rgbaRE.test(rgba);\n}\n/**\r\n * This recursively redirects the prototype of JSON objects to the referenceObject.\r\n * This is used for default options.\r\n *\r\n * @param fields - Names of properties to be bridged.\r\n * @param referenceObject - The original object.\r\n * @returns A new object inheriting from the referenceObject.\r\n */\nfunction selectiveBridgeObject(fields, referenceObject) {\n  if (referenceObject !== null && _typeof$1(referenceObject) === \"object\") {\n    // !!! typeof null === 'object'\n    var objectTo = _Object$create$1(referenceObject);\n    for (var i = 0; i < fields.length; i++) {\n      if (Object.prototype.hasOwnProperty.call(referenceObject, fields[i])) {\n        if (_typeof$1(referenceObject[fields[i]]) == \"object\") {\n          objectTo[fields[i]] = bridgeObject(referenceObject[fields[i]]);\n        }\n      }\n    }\n    return objectTo;\n  } else {\n    return null;\n  }\n}\n/**\r\n * This recursively redirects the prototype of JSON objects to the referenceObject.\r\n * This is used for default options.\r\n *\r\n * @param referenceObject - The original object.\r\n * @returns The Element if the referenceObject is an Element, or a new object inheriting from the referenceObject.\r\n */\nfunction bridgeObject(referenceObject) {\n  if (referenceObject === null || _typeof$1(referenceObject) !== \"object\") {\n    return null;\n  }\n  if (referenceObject instanceof Element) {\n    // Avoid bridging DOM objects\n    return referenceObject;\n  }\n  var objectTo = _Object$create$1(referenceObject);\n  for (var i in referenceObject) {\n    if (Object.prototype.hasOwnProperty.call(referenceObject, i)) {\n      if (_typeof$1(referenceObject[i]) == \"object\") {\n        objectTo[i] = bridgeObject(referenceObject[i]);\n      }\n    }\n  }\n  return objectTo;\n}\n/**\r\n * This method provides a stable sort implementation, very fast for presorted data.\r\n *\r\n * @param a - The array to be sorted (in-place).\r\n * @param compare - An order comparator.\r\n * @returns The argument a.\r\n */\nfunction insertSort(a, compare) {\n  for (var i = 0; i < a.length; i++) {\n    var k = a[i];\n    var j = void 0;\n    for (j = i; j > 0 && compare(k, a[j - 1]) < 0; j--) {\n      a[j] = a[j - 1];\n    }\n    a[j] = k;\n  }\n  return a;\n}\n/**\r\n * This is used to set the options of subobjects in the options object.\r\n *\r\n * A requirement of these subobjects is that they have an 'enabled' element\r\n * which is optional for the user but mandatory for the program.\r\n *\r\n * The added value here of the merge is that option 'enabled' is set as required.\r\n *\r\n * @param mergeTarget - Either this.options or the options used for the groups.\r\n * @param options - Options.\r\n * @param option - Option key in the options argument.\r\n * @param globalOptions - Global options, passed in to determine value of option 'enabled'.\r\n */\nfunction mergeOptions(mergeTarget, options, option) {\n  var globalOptions = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n  // Local helpers\n  var isPresent = function isPresent(obj) {\n    return obj !== null && obj !== undefined;\n  };\n  var isObject = function isObject(obj) {\n    return obj !== null && _typeof$1(obj) === \"object\";\n  };\n  // https://stackoverflow.com/a/34491287/1223531\n  var isEmpty = function isEmpty(obj) {\n    for (var x in obj) {\n      if (Object.prototype.hasOwnProperty.call(obj, x)) {\n        return false;\n      }\n    }\n    return true;\n  };\n  // Guards\n  if (!isObject(mergeTarget)) {\n    throw new Error(\"Parameter mergeTarget must be an object\");\n  }\n  if (!isObject(options)) {\n    throw new Error(\"Parameter options must be an object\");\n  }\n  if (!isPresent(option)) {\n    throw new Error(\"Parameter option must have a value\");\n  }\n  if (!isObject(globalOptions)) {\n    throw new Error(\"Parameter globalOptions must be an object\");\n  }\n  //\n  // Actual merge routine, separated from main logic\n  // Only a single level of options is merged. Deeper levels are ref'd. This may actually be an issue.\n  //\n  var doMerge = function doMerge(target, options, option) {\n    if (!isObject(target[option])) {\n      target[option] = {};\n    }\n    var src = options[option];\n    var dst = target[option];\n    for (var prop in src) {\n      if (Object.prototype.hasOwnProperty.call(src, prop)) {\n        dst[prop] = src[prop];\n      }\n    }\n  };\n  // Local initialization\n  var srcOption = options[option];\n  var globalPassed = isObject(globalOptions) && !isEmpty(globalOptions);\n  var globalOption = globalPassed ? globalOptions[option] : undefined;\n  var globalEnabled = globalOption ? globalOption.enabled : undefined;\n  /////////////////////////////////////////\n  // Main routine\n  /////////////////////////////////////////\n  if (srcOption === undefined) {\n    return; // Nothing to do\n  }\n\n  if (typeof srcOption === \"boolean\") {\n    if (!isObject(mergeTarget[option])) {\n      mergeTarget[option] = {};\n    }\n    mergeTarget[option].enabled = srcOption;\n    return;\n  }\n  if (srcOption === null && !isObject(mergeTarget[option])) {\n    // If possible, explicit copy from globals\n    if (isPresent(globalOption)) {\n      mergeTarget[option] = _Object$create$1(globalOption);\n    } else {\n      return; // Nothing to do\n    }\n  }\n\n  if (!isObject(srcOption)) {\n    return;\n  }\n  //\n  // Ensure that 'enabled' is properly set. It is required internally\n  // Note that the value from options will always overwrite the existing value\n  //\n  var enabled = true; // default value\n  if (srcOption.enabled !== undefined) {\n    enabled = srcOption.enabled;\n  } else {\n    // Take from globals, if present\n    if (globalEnabled !== undefined) {\n      enabled = globalOption.enabled;\n    }\n  }\n  doMerge(mergeTarget, options, option);\n  mergeTarget[option].enabled = enabled;\n}\n/**\r\n * This function does a binary search for a visible item in a sorted list. If we find a visible item, the code that uses\r\n * this function will then iterate in both directions over this sorted list to find all visible items.\r\n *\r\n * @param orderedItems - Items ordered by start.\r\n * @param comparator - -1 is lower, 0 is equal, 1 is higher.\r\n * @param field - Property name on an item (That is item[field]).\r\n * @param field2 - Second property name on an item (That is item[field][field2]).\r\n * @returns Index of the found item or -1 if nothing was found.\r\n */\nfunction binarySearchCustom(orderedItems, comparator, field, field2) {\n  var maxIterations = 10000;\n  var iteration = 0;\n  var low = 0;\n  var high = orderedItems.length - 1;\n  while (low <= high && iteration < maxIterations) {\n    var middle = Math.floor((low + high) / 2);\n    var item = orderedItems[middle];\n    var value = field2 === undefined ? item[field] : item[field][field2];\n    var searchResult = comparator(value);\n    if (searchResult == 0) {\n      // jihaa, found a visible item!\n      return middle;\n    } else if (searchResult == -1) {\n      // it is too small --> increase low\n      low = middle + 1;\n    } else {\n      // it is too big --> decrease high\n      high = middle - 1;\n    }\n    iteration++;\n  }\n  return -1;\n}\n/**\r\n * This function does a binary search for a specific value in a sorted array.\r\n * If it does not exist but is in between of two values, we return either the\r\n * one before or the one after, depending on user input If it is found, we\r\n * return the index, else -1.\r\n *\r\n * @param orderedItems - Sorted array.\r\n * @param target - The searched value.\r\n * @param field - Name of the property in items to be searched.\r\n * @param sidePreference - If the target is between two values, should the index of the before or the after be returned?\r\n * @param comparator - An optional comparator, returning -1, 0, 1 for \\<, ===, \\>.\r\n * @returns The index of found value or -1 if nothing was found.\r\n */\nfunction binarySearchValue(orderedItems, target, field, sidePreference, comparator) {\n  var maxIterations = 10000;\n  var iteration = 0;\n  var low = 0;\n  var high = orderedItems.length - 1;\n  var prevValue;\n  var value;\n  var nextValue;\n  var middle;\n  comparator = comparator != undefined ? comparator : function (a, b) {\n    return a == b ? 0 : a < b ? -1 : 1;\n  };\n  while (low <= high && iteration < maxIterations) {\n    // get a new guess\n    middle = Math.floor(0.5 * (high + low));\n    prevValue = orderedItems[Math.max(0, middle - 1)][field];\n    value = orderedItems[middle][field];\n    nextValue = orderedItems[Math.min(orderedItems.length - 1, middle + 1)][field];\n    if (comparator(value, target) == 0) {\n      // we found the target\n      return middle;\n    } else if (comparator(prevValue, target) < 0 && comparator(value, target) > 0) {\n      // target is in between of the previous and the current\n      return sidePreference == \"before\" ? Math.max(0, middle - 1) : middle;\n    } else if (comparator(value, target) < 0 && comparator(nextValue, target) > 0) {\n      // target is in between of the current and the next\n      return sidePreference == \"before\" ? middle : Math.min(orderedItems.length - 1, middle + 1);\n    } else {\n      // didnt find the target, we need to change our boundaries.\n      if (comparator(value, target) < 0) {\n        // it is too small --> increase low\n        low = middle + 1;\n      } else {\n        // it is too big --> decrease high\n        high = middle - 1;\n      }\n    }\n    iteration++;\n  }\n  // didnt find anything. Return -1.\n  return -1;\n}\n/*\r\n * Easing Functions.\r\n * Only considering the t value for the range [0, 1] => [0, 1].\r\n *\r\n * Inspiration: from http://gizma.com/easing/\r\n * https://gist.github.com/gre/1650294\r\n */\nvar easingFunctions = {\n  /**\r\n   * Provides no easing and no acceleration.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  linear: function linear(t) {\n    return t;\n  },\n  /**\r\n   * Accelerate from zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeInQuad: function easeInQuad(t) {\n    return t * t;\n  },\n  /**\r\n   * Decelerate to zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeOutQuad: function easeOutQuad(t) {\n    return t * (2 - t);\n  },\n  /**\r\n   * Accelerate until halfway, then decelerate.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeInOutQuad: function easeInOutQuad(t) {\n    return t < 0.5 ? 2 * t * t : -1 + (4 - 2 * t) * t;\n  },\n  /**\r\n   * Accelerate from zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeInCubic: function easeInCubic(t) {\n    return t * t * t;\n  },\n  /**\r\n   * Decelerate to zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeOutCubic: function easeOutCubic(t) {\n    return --t * t * t + 1;\n  },\n  /**\r\n   * Accelerate until halfway, then decelerate.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeInOutCubic: function easeInOutCubic(t) {\n    return t < 0.5 ? 4 * t * t * t : (t - 1) * (2 * t - 2) * (2 * t - 2) + 1;\n  },\n  /**\r\n   * Accelerate from zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeInQuart: function easeInQuart(t) {\n    return t * t * t * t;\n  },\n  /**\r\n   * Decelerate to zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeOutQuart: function easeOutQuart(t) {\n    return 1 - --t * t * t * t;\n  },\n  /**\r\n   * Accelerate until halfway, then decelerate.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeInOutQuart: function easeInOutQuart(t) {\n    return t < 0.5 ? 8 * t * t * t * t : 1 - 8 * --t * t * t * t;\n  },\n  /**\r\n   * Accelerate from zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeInQuint: function easeInQuint(t) {\n    return t * t * t * t * t;\n  },\n  /**\r\n   * Decelerate to zero velocity.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeOutQuint: function easeOutQuint(t) {\n    return 1 + --t * t * t * t * t;\n  },\n  /**\r\n   * Accelerate until halfway, then decelerate.\r\n   *\r\n   * @param t - Time.\r\n   * @returns Value at time t.\r\n   */\n  easeInOutQuint: function easeInOutQuint(t) {\n    return t < 0.5 ? 16 * t * t * t * t * t : 1 + 16 * --t * t * t * t * t;\n  }\n};\n/**\r\n * Experimentaly compute the width of the scrollbar for this browser.\r\n *\r\n * @returns The width in pixels.\r\n */\nfunction getScrollBarWidth() {\n  var inner = document.createElement(\"p\");\n  inner.style.width = \"100%\";\n  inner.style.height = \"200px\";\n  var outer = document.createElement(\"div\");\n  outer.style.position = \"absolute\";\n  outer.style.top = \"0px\";\n  outer.style.left = \"0px\";\n  outer.style.visibility = \"hidden\";\n  outer.style.width = \"200px\";\n  outer.style.height = \"150px\";\n  outer.style.overflow = \"hidden\";\n  outer.appendChild(inner);\n  document.body.appendChild(outer);\n  var w1 = inner.offsetWidth;\n  outer.style.overflow = \"scroll\";\n  var w2 = inner.offsetWidth;\n  if (w1 == w2) {\n    w2 = outer.clientWidth;\n  }\n  document.body.removeChild(outer);\n  return w1 - w2;\n}\n// @TODO: This doesn't work properly.\n// It works only for single property objects,\n// otherwise it combines all of the types in a union.\n// export function topMost<K1 extends string, V1> (\n//   pile: Record<K1, undefined | V1>[],\n//   accessors: K1 | [K1]\n// ): undefined | V1\n// export function topMost<K1 extends string, K2 extends string, V1, V2> (\n//   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2>>[],\n//   accessors: [K1, K2]\n// ): undefined | V1 | V2\n// export function topMost<K1 extends string, K2 extends string, K3 extends string, V1, V2, V3> (\n//   pile: Record<K1, undefined | V1 | Record<K2, undefined | V2 | Record<K3, undefined | V3>>>[],\n//   accessors: [K1, K2, K3]\n// ): undefined | V1 | V2 | V3\n/**\r\n * Get the top most property value from a pile of objects.\r\n *\r\n * @param pile - Array of objects, no required format.\r\n * @param accessors - Array of property names.\r\n * For example `object['foo']['bar']` → `['foo', 'bar']`.\r\n * @returns Value of the property with given accessors path from the first pile item where it's not undefined.\r\n */\nfunction topMost(pile, accessors) {\n  var candidate;\n  if (!_Array$isArray(accessors)) {\n    accessors = [accessors];\n  }\n  var _iterator3 = _createForOfIteratorHelper$7(pile),\n    _step3;\n  try {\n    for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n      var member = _step3.value;\n      if (member) {\n        candidate = member[accessors[0]];\n        for (var i = 1; i < accessors.length; i++) {\n          if (candidate) {\n            candidate = candidate[accessors[i]];\n          }\n        }\n        if (typeof candidate !== \"undefined\") {\n          break;\n        }\n      }\n    }\n  } catch (err) {\n    _iterator3.e(err);\n  } finally {\n    _iterator3.f();\n  }\n  return candidate;\n}\nvar htmlColors$1 = {\n  black: \"#000000\",\n  navy: \"#000080\",\n  darkblue: \"#00008B\",\n  mediumblue: \"#0000CD\",\n  blue: \"#0000FF\",\n  darkgreen: \"#006400\",\n  green: \"#008000\",\n  teal: \"#008080\",\n  darkcyan: \"#008B8B\",\n  deepskyblue: \"#00BFFF\",\n  darkturquoise: \"#00CED1\",\n  mediumspringgreen: \"#00FA9A\",\n  lime: \"#00FF00\",\n  springgreen: \"#00FF7F\",\n  aqua: \"#00FFFF\",\n  cyan: \"#00FFFF\",\n  midnightblue: \"#191970\",\n  dodgerblue: \"#1E90FF\",\n  lightseagreen: \"#20B2AA\",\n  forestgreen: \"#228B22\",\n  seagreen: \"#2E8B57\",\n  darkslategray: \"#2F4F4F\",\n  limegreen: \"#32CD32\",\n  mediumseagreen: \"#3CB371\",\n  turquoise: \"#40E0D0\",\n  royalblue: \"#4169E1\",\n  steelblue: \"#4682B4\",\n  darkslateblue: \"#483D8B\",\n  mediumturquoise: \"#48D1CC\",\n  indigo: \"#4B0082\",\n  darkolivegreen: \"#556B2F\",\n  cadetblue: \"#5F9EA0\",\n  cornflowerblue: \"#6495ED\",\n  mediumaquamarine: \"#66CDAA\",\n  dimgray: \"#696969\",\n  slateblue: \"#6A5ACD\",\n  olivedrab: \"#6B8E23\",\n  slategray: \"#708090\",\n  lightslategray: \"#778899\",\n  mediumslateblue: \"#7B68EE\",\n  lawngreen: \"#7CFC00\",\n  chartreuse: \"#7FFF00\",\n  aquamarine: \"#7FFFD4\",\n  maroon: \"#800000\",\n  purple: \"#800080\",\n  olive: \"#808000\",\n  gray: \"#808080\",\n  skyblue: \"#87CEEB\",\n  lightskyblue: \"#87CEFA\",\n  blueviolet: \"#8A2BE2\",\n  darkred: \"#8B0000\",\n  darkmagenta: \"#8B008B\",\n  saddlebrown: \"#8B4513\",\n  darkseagreen: \"#8FBC8F\",\n  lightgreen: \"#90EE90\",\n  mediumpurple: \"#9370D8\",\n  darkviolet: \"#9400D3\",\n  palegreen: \"#98FB98\",\n  darkorchid: \"#9932CC\",\n  yellowgreen: \"#9ACD32\",\n  sienna: \"#A0522D\",\n  brown: \"#A52A2A\",\n  darkgray: \"#A9A9A9\",\n  lightblue: \"#ADD8E6\",\n  greenyellow: \"#ADFF2F\",\n  paleturquoise: \"#AFEEEE\",\n  lightsteelblue: \"#B0C4DE\",\n  powderblue: \"#B0E0E6\",\n  firebrick: \"#B22222\",\n  darkgoldenrod: \"#B8860B\",\n  mediumorchid: \"#BA55D3\",\n  rosybrown: \"#BC8F8F\",\n  darkkhaki: \"#BDB76B\",\n  silver: \"#C0C0C0\",\n  mediumvioletred: \"#C71585\",\n  indianred: \"#CD5C5C\",\n  peru: \"#CD853F\",\n  chocolate: \"#D2691E\",\n  tan: \"#D2B48C\",\n  lightgrey: \"#D3D3D3\",\n  palevioletred: \"#D87093\",\n  thistle: \"#D8BFD8\",\n  orchid: \"#DA70D6\",\n  goldenrod: \"#DAA520\",\n  crimson: \"#DC143C\",\n  gainsboro: \"#DCDCDC\",\n  plum: \"#DDA0DD\",\n  burlywood: \"#DEB887\",\n  lightcyan: \"#E0FFFF\",\n  lavender: \"#E6E6FA\",\n  darksalmon: \"#E9967A\",\n  violet: \"#EE82EE\",\n  palegoldenrod: \"#EEE8AA\",\n  lightcoral: \"#F08080\",\n  khaki: \"#F0E68C\",\n  aliceblue: \"#F0F8FF\",\n  honeydew: \"#F0FFF0\",\n  azure: \"#F0FFFF\",\n  sandybrown: \"#F4A460\",\n  wheat: \"#F5DEB3\",\n  beige: \"#F5F5DC\",\n  whitesmoke: \"#F5F5F5\",\n  mintcream: \"#F5FFFA\",\n  ghostwhite: \"#F8F8FF\",\n  salmon: \"#FA8072\",\n  antiquewhite: \"#FAEBD7\",\n  linen: \"#FAF0E6\",\n  lightgoldenrodyellow: \"#FAFAD2\",\n  oldlace: \"#FDF5E6\",\n  red: \"#FF0000\",\n  fuchsia: \"#FF00FF\",\n  magenta: \"#FF00FF\",\n  deeppink: \"#FF1493\",\n  orangered: \"#FF4500\",\n  tomato: \"#FF6347\",\n  hotpink: \"#FF69B4\",\n  coral: \"#FF7F50\",\n  darkorange: \"#FF8C00\",\n  lightsalmon: \"#FFA07A\",\n  orange: \"#FFA500\",\n  lightpink: \"#FFB6C1\",\n  pink: \"#FFC0CB\",\n  gold: \"#FFD700\",\n  peachpuff: \"#FFDAB9\",\n  navajowhite: \"#FFDEAD\",\n  moccasin: \"#FFE4B5\",\n  bisque: \"#FFE4C4\",\n  mistyrose: \"#FFE4E1\",\n  blanchedalmond: \"#FFEBCD\",\n  papayawhip: \"#FFEFD5\",\n  lavenderblush: \"#FFF0F5\",\n  seashell: \"#FFF5EE\",\n  cornsilk: \"#FFF8DC\",\n  lemonchiffon: \"#FFFACD\",\n  floralwhite: \"#FFFAF0\",\n  snow: \"#FFFAFA\",\n  yellow: \"#FFFF00\",\n  lightyellow: \"#FFFFE0\",\n  ivory: \"#FFFFF0\",\n  white: \"#FFFFFF\"\n};\n\n/**\n * @param {number} [pixelRatio=1]\n */\nvar ColorPicker$1 = /*#__PURE__*/function () {\n  /**\n   * @param {number} [pixelRatio=1]\n   */\n  function ColorPicker() {\n    var pixelRatio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    _classCallCheck(this, ColorPicker);\n    this.pixelRatio = pixelRatio;\n    this.generated = false;\n    this.centerCoordinates = {\n      x: 289 / 2,\n      y: 289 / 2\n    };\n    this.r = 289 * 0.49;\n    this.color = {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1.0\n    };\n    this.hueCircle = undefined;\n    this.initialColor = {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1.0\n    };\n    this.previousColor = undefined;\n    this.applied = false;\n\n    // bound by\n    this.updateCallback = function () {};\n    this.closeCallback = function () {};\n\n    // create all DOM elements\n    this._create();\n  }\n\n  /**\n   * this inserts the colorPicker into a div from the DOM\n   *\n   * @param {Element} container\n   */\n  _createClass(ColorPicker, [{\n    key: \"insertTo\",\n    value: function insertTo(container) {\n      if (this.hammer !== undefined) {\n        this.hammer.destroy();\n        this.hammer = undefined;\n      }\n      this.container = container;\n      this.container.appendChild(this.frame);\n      this._bindHammer();\n      this._setSize();\n    }\n\n    /**\n     * the callback is executed on apply and save. Bind it to the application\n     *\n     * @param {Function} callback\n     */\n  }, {\n    key: \"setUpdateCallback\",\n    value: function setUpdateCallback(callback) {\n      if (typeof callback === \"function\") {\n        this.updateCallback = callback;\n      } else {\n        throw new Error(\"Function attempted to set as colorPicker update callback is not a function.\");\n      }\n    }\n\n    /**\n     * the callback is executed on apply and save. Bind it to the application\n     *\n     * @param {Function} callback\n     */\n  }, {\n    key: \"setCloseCallback\",\n    value: function setCloseCallback(callback) {\n      if (typeof callback === \"function\") {\n        this.closeCallback = callback;\n      } else {\n        throw new Error(\"Function attempted to set as colorPicker closing callback is not a function.\");\n      }\n    }\n\n    /**\n     *\n     * @param {string} color\n     * @returns {string}\n     * @private\n     */\n  }, {\n    key: \"_isColorString\",\n    value: function _isColorString(color) {\n      if (typeof color === \"string\") {\n        return htmlColors$1[color];\n      }\n    }\n\n    /**\n     * Set the color of the colorPicker\n     * Supported formats:\n     * 'red'                   --> HTML color string\n     * '#ffffff'               --> hex string\n     * 'rgb(255,255,255)'      --> rgb string\n     * 'rgba(255,255,255,1.0)' --> rgba string\n     * {r:255,g:255,b:255}     --> rgb object\n     * {r:255,g:255,b:255,a:1.0} --> rgba object\n     *\n     * @param {string | object} color\n     * @param {boolean} [setInitial=true]\n     */\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      var setInitial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (color === \"none\") {\n        return;\n      }\n      var rgba;\n\n      // if a html color shorthand is used, convert to hex\n      var htmlColor = this._isColorString(color);\n      if (htmlColor !== undefined) {\n        color = htmlColor;\n      }\n\n      // check format\n      if (isString(color) === true) {\n        if (isValidRGB(color) === true) {\n          var rgbaArray = color.substr(4).substr(0, color.length - 5).split(\",\");\n          rgba = {\n            r: rgbaArray[0],\n            g: rgbaArray[1],\n            b: rgbaArray[2],\n            a: 1.0\n          };\n        } else if (isValidRGBA(color) === true) {\n          var _rgbaArray = color.substr(5).substr(0, color.length - 6).split(\",\");\n          rgba = {\n            r: _rgbaArray[0],\n            g: _rgbaArray[1],\n            b: _rgbaArray[2],\n            a: _rgbaArray[3]\n          };\n        } else if (isValidHex(color) === true) {\n          var rgbObj = hexToRGB(color);\n          rgba = {\n            r: rgbObj.r,\n            g: rgbObj.g,\n            b: rgbObj.b,\n            a: 1.0\n          };\n        }\n      } else {\n        if (color instanceof Object) {\n          if (color.r !== undefined && color.g !== undefined && color.b !== undefined) {\n            var alpha = color.a !== undefined ? color.a : \"1.0\";\n            rgba = {\n              r: color.r,\n              g: color.g,\n              b: color.b,\n              a: alpha\n            };\n          }\n        }\n      }\n\n      // set color\n      if (rgba === undefined) {\n        throw new Error(\"Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: \" + _JSON$stringify(color));\n      } else {\n        this._setColor(rgba, setInitial);\n      }\n    }\n\n    /**\n     * this shows the color picker.\n     * The hue circle is constructed once and stored.\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.closeCallback !== undefined) {\n        this.closeCallback();\n        this.closeCallback = undefined;\n      }\n      this.applied = false;\n      this.frame.style.display = \"block\";\n      this._generateHueCircle();\n    }\n\n    // ------------------------------------------ PRIVATE ----------------------------- //\n\n    /**\n     * Hide the picker. Is called by the cancel button.\n     * Optional boolean to store the previous color for easy access later on.\n     *\n     * @param {boolean} [storePrevious=true]\n     * @private\n     */\n  }, {\n    key: \"_hide\",\n    value: function _hide() {\n      var _this2 = this;\n      var storePrevious = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      // store the previous color for next time;\n      if (storePrevious === true) {\n        this.previousColor = _Object$assign({}, this.color);\n      }\n      if (this.applied === true) {\n        this.updateCallback(this.initialColor);\n      }\n      this.frame.style.display = \"none\";\n\n      // call the closing callback, restoring the onclick method.\n      // this is in a setTimeout because it will trigger the show again before the click is done.\n      _setTimeout(function () {\n        if (_this2.closeCallback !== undefined) {\n          _this2.closeCallback();\n          _this2.closeCallback = undefined;\n        }\n      }, 0);\n    }\n\n    /**\n     * bound to the save button. Saves and hides.\n     *\n     * @private\n     */\n  }, {\n    key: \"_save\",\n    value: function _save() {\n      this.updateCallback(this.color);\n      this.applied = false;\n      this._hide();\n    }\n\n    /**\n     * Bound to apply button. Saves but does not close. Is undone by the cancel button.\n     *\n     * @private\n     */\n  }, {\n    key: \"_apply\",\n    value: function _apply() {\n      this.applied = true;\n      this.updateCallback(this.color);\n      this._updatePicker(this.color);\n    }\n\n    /**\n     * load the color from the previous session.\n     *\n     * @private\n     */\n  }, {\n    key: \"_loadLast\",\n    value: function _loadLast() {\n      if (this.previousColor !== undefined) {\n        this.setColor(this.previousColor, false);\n      } else {\n        alert(\"There is no last color to load...\");\n      }\n    }\n\n    /**\n     * set the color, place the picker\n     *\n     * @param {object} rgba\n     * @param {boolean} [setInitial=true]\n     * @private\n     */\n  }, {\n    key: \"_setColor\",\n    value: function _setColor(rgba) {\n      var setInitial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      // store the initial color\n      if (setInitial === true) {\n        this.initialColor = _Object$assign({}, rgba);\n      }\n      this.color = rgba;\n      var hsv = RGBToHSV(rgba.r, rgba.g, rgba.b);\n      var angleConvert = 2 * Math.PI;\n      var radius = this.r * hsv.s;\n      var x = this.centerCoordinates.x + radius * Math.sin(angleConvert * hsv.h);\n      var y = this.centerCoordinates.y + radius * Math.cos(angleConvert * hsv.h);\n      this.colorPickerSelector.style.left = x - 0.5 * this.colorPickerSelector.clientWidth + \"px\";\n      this.colorPickerSelector.style.top = y - 0.5 * this.colorPickerSelector.clientHeight + \"px\";\n      this._updatePicker(rgba);\n    }\n\n    /**\n     * bound to opacity control\n     *\n     * @param {number} value\n     * @private\n     */\n  }, {\n    key: \"_setOpacity\",\n    value: function _setOpacity(value) {\n      this.color.a = value / 100;\n      this._updatePicker(this.color);\n    }\n\n    /**\n     * bound to brightness control\n     *\n     * @param {number} value\n     * @private\n     */\n  }, {\n    key: \"_setBrightness\",\n    value: function _setBrightness(value) {\n      var hsv = RGBToHSV(this.color.r, this.color.g, this.color.b);\n      hsv.v = value / 100;\n      var rgba = HSVToRGB(hsv.h, hsv.s, hsv.v);\n      rgba[\"a\"] = this.color.a;\n      this.color = rgba;\n      this._updatePicker();\n    }\n\n    /**\n     * update the color picker. A black circle overlays the hue circle to mimic the brightness decreasing.\n     *\n     * @param {object} rgba\n     * @private\n     */\n  }, {\n    key: \"_updatePicker\",\n    value: function _updatePicker() {\n      var rgba = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.color;\n      var hsv = RGBToHSV(rgba.r, rgba.g, rgba.b);\n      var ctx = this.colorPickerCanvas.getContext(\"2d\");\n      if (this.pixelRation === undefined) {\n        this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n      }\n      ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n\n      // clear the canvas\n      var w = this.colorPickerCanvas.clientWidth;\n      var h = this.colorPickerCanvas.clientHeight;\n      ctx.clearRect(0, 0, w, h);\n      ctx.putImageData(this.hueCircle, 0, 0);\n      ctx.fillStyle = \"rgba(0,0,0,\" + (1 - hsv.v) + \")\";\n      ctx.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r);\n      _fillInstanceProperty(ctx).call(ctx);\n      this.brightnessRange.value = 100 * hsv.v;\n      this.opacityRange.value = 100 * rgba.a;\n      this.initialColorDiv.style.backgroundColor = \"rgba(\" + this.initialColor.r + \",\" + this.initialColor.g + \",\" + this.initialColor.b + \",\" + this.initialColor.a + \")\";\n      this.newColorDiv.style.backgroundColor = \"rgba(\" + this.color.r + \",\" + this.color.g + \",\" + this.color.b + \",\" + this.color.a + \")\";\n    }\n\n    /**\n     * used by create to set the size of the canvas.\n     *\n     * @private\n     */\n  }, {\n    key: \"_setSize\",\n    value: function _setSize() {\n      this.colorPickerCanvas.style.width = \"100%\";\n      this.colorPickerCanvas.style.height = \"100%\";\n      this.colorPickerCanvas.width = 289 * this.pixelRatio;\n      this.colorPickerCanvas.height = 289 * this.pixelRatio;\n    }\n\n    /**\n     * create all dom elements\n     * TODO: cleanup, lots of similar dom elements\n     *\n     * @private\n     */\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      var _context12, _context13, _context14, _context15;\n      this.frame = document.createElement(\"div\");\n      this.frame.className = \"vis-color-picker\";\n      this.colorPickerDiv = document.createElement(\"div\");\n      this.colorPickerSelector = document.createElement(\"div\");\n      this.colorPickerSelector.className = \"vis-selector\";\n      this.colorPickerDiv.appendChild(this.colorPickerSelector);\n      this.colorPickerCanvas = document.createElement(\"canvas\");\n      this.colorPickerDiv.appendChild(this.colorPickerCanvas);\n      if (!this.colorPickerCanvas.getContext) {\n        var noCanvas = document.createElement(\"DIV\");\n        noCanvas.style.color = \"red\";\n        noCanvas.style.fontWeight = \"bold\";\n        noCanvas.style.padding = \"10px\";\n        noCanvas.innerText = \"Error: your browser does not support HTML canvas\";\n        this.colorPickerCanvas.appendChild(noCanvas);\n      } else {\n        var ctx = this.colorPickerCanvas.getContext(\"2d\");\n        this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n        this.colorPickerCanvas.getContext(\"2d\").setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n      }\n      this.colorPickerDiv.className = \"vis-color\";\n      this.opacityDiv = document.createElement(\"div\");\n      this.opacityDiv.className = \"vis-opacity\";\n      this.brightnessDiv = document.createElement(\"div\");\n      this.brightnessDiv.className = \"vis-brightness\";\n      this.arrowDiv = document.createElement(\"div\");\n      this.arrowDiv.className = \"vis-arrow\";\n      this.opacityRange = document.createElement(\"input\");\n      try {\n        this.opacityRange.type = \"range\"; // Not supported on IE9\n        this.opacityRange.min = \"0\";\n        this.opacityRange.max = \"100\";\n      } catch (err) {\n        // TODO: Add some error handling.\n      }\n      this.opacityRange.value = \"100\";\n      this.opacityRange.className = \"vis-range\";\n      this.brightnessRange = document.createElement(\"input\");\n      try {\n        this.brightnessRange.type = \"range\"; // Not supported on IE9\n        this.brightnessRange.min = \"0\";\n        this.brightnessRange.max = \"100\";\n      } catch (err) {\n        // TODO: Add some error handling.\n      }\n      this.brightnessRange.value = \"100\";\n      this.brightnessRange.className = \"vis-range\";\n      this.opacityDiv.appendChild(this.opacityRange);\n      this.brightnessDiv.appendChild(this.brightnessRange);\n      var me = this;\n      this.opacityRange.onchange = function () {\n        me._setOpacity(this.value);\n      };\n      this.opacityRange.oninput = function () {\n        me._setOpacity(this.value);\n      };\n      this.brightnessRange.onchange = function () {\n        me._setBrightness(this.value);\n      };\n      this.brightnessRange.oninput = function () {\n        me._setBrightness(this.value);\n      };\n      this.brightnessLabel = document.createElement(\"div\");\n      this.brightnessLabel.className = \"vis-label vis-brightness\";\n      this.brightnessLabel.innerText = \"brightness:\";\n      this.opacityLabel = document.createElement(\"div\");\n      this.opacityLabel.className = \"vis-label vis-opacity\";\n      this.opacityLabel.innerText = \"opacity:\";\n      this.newColorDiv = document.createElement(\"div\");\n      this.newColorDiv.className = \"vis-new-color\";\n      this.newColorDiv.innerText = \"new\";\n      this.initialColorDiv = document.createElement(\"div\");\n      this.initialColorDiv.className = \"vis-initial-color\";\n      this.initialColorDiv.innerText = \"initial\";\n      this.cancelButton = document.createElement(\"div\");\n      this.cancelButton.className = \"vis-button vis-cancel\";\n      this.cancelButton.innerText = \"cancel\";\n      this.cancelButton.onclick = _bindInstanceProperty$1(_context12 = this._hide).call(_context12, this, false);\n      this.applyButton = document.createElement(\"div\");\n      this.applyButton.className = \"vis-button vis-apply\";\n      this.applyButton.innerText = \"apply\";\n      this.applyButton.onclick = _bindInstanceProperty$1(_context13 = this._apply).call(_context13, this);\n      this.saveButton = document.createElement(\"div\");\n      this.saveButton.className = \"vis-button vis-save\";\n      this.saveButton.innerText = \"save\";\n      this.saveButton.onclick = _bindInstanceProperty$1(_context14 = this._save).call(_context14, this);\n      this.loadButton = document.createElement(\"div\");\n      this.loadButton.className = \"vis-button vis-load\";\n      this.loadButton.innerText = \"load last\";\n      this.loadButton.onclick = _bindInstanceProperty$1(_context15 = this._loadLast).call(_context15, this);\n      this.frame.appendChild(this.colorPickerDiv);\n      this.frame.appendChild(this.arrowDiv);\n      this.frame.appendChild(this.brightnessLabel);\n      this.frame.appendChild(this.brightnessDiv);\n      this.frame.appendChild(this.opacityLabel);\n      this.frame.appendChild(this.opacityDiv);\n      this.frame.appendChild(this.newColorDiv);\n      this.frame.appendChild(this.initialColorDiv);\n      this.frame.appendChild(this.cancelButton);\n      this.frame.appendChild(this.applyButton);\n      this.frame.appendChild(this.saveButton);\n      this.frame.appendChild(this.loadButton);\n    }\n\n    /**\n     * bind hammer to the color picker\n     *\n     * @private\n     */\n  }, {\n    key: \"_bindHammer\",\n    value: function _bindHammer() {\n      var _this3 = this;\n      this.drag = {};\n      this.pinch = {};\n      this.hammer = new Hammer$1(this.colorPickerCanvas);\n      this.hammer.get(\"pinch\").set({\n        enable: true\n      });\n      this.hammer.on(\"hammer.input\", function (event) {\n        if (event.isFirst) {\n          _this3._moveSelector(event);\n        }\n      });\n      this.hammer.on(\"tap\", function (event) {\n        _this3._moveSelector(event);\n      });\n      this.hammer.on(\"panstart\", function (event) {\n        _this3._moveSelector(event);\n      });\n      this.hammer.on(\"panmove\", function (event) {\n        _this3._moveSelector(event);\n      });\n      this.hammer.on(\"panend\", function (event) {\n        _this3._moveSelector(event);\n      });\n    }\n\n    /**\n     * generate the hue circle. This is relatively heavy (200ms) and is done only once on the first time it is shown.\n     *\n     * @private\n     */\n  }, {\n    key: \"_generateHueCircle\",\n    value: function _generateHueCircle() {\n      if (this.generated === false) {\n        var ctx = this.colorPickerCanvas.getContext(\"2d\");\n        if (this.pixelRation === undefined) {\n          this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n        }\n        ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n\n        // clear the canvas\n        var w = this.colorPickerCanvas.clientWidth;\n        var h = this.colorPickerCanvas.clientHeight;\n        ctx.clearRect(0, 0, w, h);\n\n        // draw hue circle\n        var x, y, hue, sat;\n        this.centerCoordinates = {\n          x: w * 0.5,\n          y: h * 0.5\n        };\n        this.r = 0.49 * w;\n        var angleConvert = 2 * Math.PI / 360;\n        var hfac = 1 / 360;\n        var sfac = 1 / this.r;\n        var rgb;\n        for (hue = 0; hue < 360; hue++) {\n          for (sat = 0; sat < this.r; sat++) {\n            x = this.centerCoordinates.x + sat * Math.sin(angleConvert * hue);\n            y = this.centerCoordinates.y + sat * Math.cos(angleConvert * hue);\n            rgb = HSVToRGB(hue * hfac, sat * sfac, 1);\n            ctx.fillStyle = \"rgb(\" + rgb.r + \",\" + rgb.g + \",\" + rgb.b + \")\";\n            ctx.fillRect(x - 0.5, y - 0.5, 2, 2);\n          }\n        }\n        ctx.strokeStyle = \"rgba(0,0,0,1)\";\n        ctx.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r);\n        ctx.stroke();\n        this.hueCircle = ctx.getImageData(0, 0, w, h);\n      }\n      this.generated = true;\n    }\n\n    /**\n     * move the selector. This is called by hammer functions.\n     *\n     * @param {Event}  event   The event\n     * @private\n     */\n  }, {\n    key: \"_moveSelector\",\n    value: function _moveSelector(event) {\n      var rect = this.colorPickerDiv.getBoundingClientRect();\n      var left = event.center.x - rect.left;\n      var top = event.center.y - rect.top;\n      var centerY = 0.5 * this.colorPickerDiv.clientHeight;\n      var centerX = 0.5 * this.colorPickerDiv.clientWidth;\n      var x = left - centerX;\n      var y = top - centerY;\n      var angle = Math.atan2(x, y);\n      var radius = 0.98 * Math.min(Math.sqrt(x * x + y * y), centerX);\n      var newTop = Math.cos(angle) * radius + centerY;\n      var newLeft = Math.sin(angle) * radius + centerX;\n      this.colorPickerSelector.style.top = newTop - 0.5 * this.colorPickerSelector.clientHeight + \"px\";\n      this.colorPickerSelector.style.left = newLeft - 0.5 * this.colorPickerSelector.clientWidth + \"px\";\n\n      // set color\n      var h = angle / (2 * Math.PI);\n      h = h < 0 ? h + 1 : h;\n      var s = radius / this.r;\n      var hsv = RGBToHSV(this.color.r, this.color.g, this.color.b);\n      hsv.h = h;\n      hsv.s = s;\n      var rgba = HSVToRGB(hsv.h, hsv.s, hsv.v);\n      rgba[\"a\"] = this.color.a;\n      this.color = rgba;\n\n      // update previews\n      this.initialColorDiv.style.backgroundColor = \"rgba(\" + this.initialColor.r + \",\" + this.initialColor.g + \",\" + this.initialColor.b + \",\" + this.initialColor.a + \")\";\n      this.newColorDiv.style.backgroundColor = \"rgba(\" + this.color.r + \",\" + this.color.g + \",\" + this.color.b + \",\" + this.color.a + \")\";\n    }\n  }]);\n  return ColorPicker;\n}();\n\n/**\n * Wrap given text (last argument) in HTML elements (all preceding arguments).\n *\n * @param {...any} rest - List of tag names followed by inner text.\n * @returns An element or a text node.\n */\nfunction wrapInTag() {\n  for (var _len5 = arguments.length, rest = new Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n    rest[_key5] = arguments[_key5];\n  }\n  if (rest.length < 1) {\n    throw new TypeError(\"Invalid arguments.\");\n  } else if (rest.length === 1) {\n    return document.createTextNode(rest[0]);\n  } else {\n    var element = document.createElement(rest[0]);\n    element.appendChild(wrapInTag.apply(void 0, _toConsumableArray(_sliceInstanceProperty(rest).call(rest, 1))));\n    return element;\n  }\n}\n\n/**\n * The way this works is for all properties of this.possible options, you can supply the property name in any form to list the options.\n * Boolean options are recognised as Boolean\n * Number options should be written as array: [default value, min value, max value, stepsize]\n * Colors should be written as array: ['color', '#ffffff']\n * Strings with should be written as array: [option1, option2, option3, ..]\n *\n * The options are matched with their counterparts in each of the modules and the values used in the configuration are\n */\nvar Configurator$1 = /*#__PURE__*/function () {\n  /**\n   * @param {object} parentModule        | the location where parentModule.setOptions() can be called\n   * @param {object} defaultContainer    | the default container of the module\n   * @param {object} configureOptions    | the fully configured and predefined options set found in allOptions.js\n   * @param {number} pixelRatio          | canvas pixel ratio\n   * @param {Function} hideOption        | custom logic to dynamically hide options\n   */\n  function Configurator(parentModule, defaultContainer, configureOptions) {\n    var pixelRatio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    var hideOption = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : function () {\n      return false;\n    };\n    _classCallCheck(this, Configurator);\n    this.parent = parentModule;\n    this.changedOptions = [];\n    this.container = defaultContainer;\n    this.allowCreation = false;\n    this.hideOption = hideOption;\n    this.options = {};\n    this.initialized = false;\n    this.popupCounter = 0;\n    this.defaultOptions = {\n      enabled: false,\n      filter: true,\n      container: undefined,\n      showButton: true\n    };\n    _Object$assign(this.options, this.defaultOptions);\n    this.configureOptions = configureOptions;\n    this.moduleOptions = {};\n    this.domElements = [];\n    this.popupDiv = {};\n    this.popupLimit = 5;\n    this.popupHistory = {};\n    this.colorPicker = new ColorPicker$1(pixelRatio);\n    this.wrapper = undefined;\n  }\n\n  /**\n   * refresh all options.\n   * Because all modules parse their options by themselves, we just use their options. We copy them here.\n   *\n   * @param {object} options\n   */\n  _createClass(Configurator, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options !== undefined) {\n        // reset the popup history because the indices may have been changed.\n        this.popupHistory = {};\n        this._removePopup();\n        var enabled = true;\n        if (typeof options === \"string\") {\n          this.options.filter = options;\n        } else if (_Array$isArray(options)) {\n          this.options.filter = options.join();\n        } else if (_typeof$1(options) === \"object\") {\n          if (options == null) {\n            throw new TypeError(\"options cannot be null\");\n          }\n          if (options.container !== undefined) {\n            this.options.container = options.container;\n          }\n          if (_filterInstanceProperty(options) !== undefined) {\n            this.options.filter = _filterInstanceProperty(options);\n          }\n          if (options.showButton !== undefined) {\n            this.options.showButton = options.showButton;\n          }\n          if (options.enabled !== undefined) {\n            enabled = options.enabled;\n          }\n        } else if (typeof options === \"boolean\") {\n          this.options.filter = true;\n          enabled = options;\n        } else if (typeof options === \"function\") {\n          this.options.filter = options;\n          enabled = true;\n        }\n        if (_filterInstanceProperty(this.options) === false) {\n          enabled = false;\n        }\n        this.options.enabled = enabled;\n      }\n      this._clean();\n    }\n\n    /**\n     *\n     * @param {object} moduleOptions\n     */\n  }, {\n    key: \"setModuleOptions\",\n    value: function setModuleOptions(moduleOptions) {\n      this.moduleOptions = moduleOptions;\n      if (this.options.enabled === true) {\n        this._clean();\n        if (this.options.container !== undefined) {\n          this.container = this.options.container;\n        }\n        this._create();\n      }\n    }\n\n    /**\n     * Create all DOM elements\n     *\n     * @private\n     */\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      this._clean();\n      this.changedOptions = [];\n      var filter = _filterInstanceProperty(this.options);\n      var counter = 0;\n      var show = false;\n      for (var _option in this.configureOptions) {\n        if (Object.prototype.hasOwnProperty.call(this.configureOptions, _option)) {\n          this.allowCreation = false;\n          show = false;\n          if (typeof filter === \"function\") {\n            show = filter(_option, []);\n            show = show || this._handleObject(this.configureOptions[_option], [_option], true);\n          } else if (filter === true || _indexOfInstanceProperty(filter).call(filter, _option) !== -1) {\n            show = true;\n          }\n          if (show !== false) {\n            this.allowCreation = true;\n\n            // linebreak between categories\n            if (counter > 0) {\n              this._makeItem([]);\n            }\n            // a header for the category\n            this._makeHeader(_option);\n\n            // get the sub options\n            this._handleObject(this.configureOptions[_option], [_option]);\n          }\n          counter++;\n        }\n      }\n      this._makeButton();\n      this._push();\n      //~ this.colorPicker.insertTo(this.container);\n    }\n\n    /**\n     * draw all DOM elements on the screen\n     *\n     * @private\n     */\n  }, {\n    key: \"_push\",\n    value: function _push() {\n      this.wrapper = document.createElement(\"div\");\n      this.wrapper.className = \"vis-configuration-wrapper\";\n      this.container.appendChild(this.wrapper);\n      for (var i = 0; i < this.domElements.length; i++) {\n        this.wrapper.appendChild(this.domElements[i]);\n      }\n      this._showPopupIfNeeded();\n    }\n\n    /**\n     * delete all DOM elements\n     *\n     * @private\n     */\n  }, {\n    key: \"_clean\",\n    value: function _clean() {\n      for (var i = 0; i < this.domElements.length; i++) {\n        this.wrapper.removeChild(this.domElements[i]);\n      }\n      if (this.wrapper !== undefined) {\n        this.container.removeChild(this.wrapper);\n        this.wrapper = undefined;\n      }\n      this.domElements = [];\n      this._removePopup();\n    }\n\n    /**\n     * get the value from the actualOptions if it exists\n     *\n     * @param {Array} path    | where to look for the actual option\n     * @returns {*}\n     * @private\n     */\n  }, {\n    key: \"_getValue\",\n    value: function _getValue(path) {\n      var base = this.moduleOptions;\n      for (var i = 0; i < path.length; i++) {\n        if (base[path[i]] !== undefined) {\n          base = base[path[i]];\n        } else {\n          base = undefined;\n          break;\n        }\n      }\n      return base;\n    }\n\n    /**\n     * all option elements are wrapped in an item\n     *\n     * @param {Array} path    | where to look for the actual option\n     * @param {Array.<Element>} domElements\n     * @returns {number}\n     * @private\n     */\n  }, {\n    key: \"_makeItem\",\n    value: function _makeItem(path) {\n      if (this.allowCreation === true) {\n        var item = document.createElement(\"div\");\n        item.className = \"vis-configuration vis-config-item vis-config-s\" + path.length;\n        for (var _len6 = arguments.length, domElements = new Array(_len6 > 1 ? _len6 - 1 : 0), _key6 = 1; _key6 < _len6; _key6++) {\n          domElements[_key6 - 1] = arguments[_key6];\n        }\n        _forEachInstanceProperty(domElements).call(domElements, function (element) {\n          item.appendChild(element);\n        });\n        this.domElements.push(item);\n        return this.domElements.length;\n      }\n      return 0;\n    }\n\n    /**\n     * header for major subjects\n     *\n     * @param {string} name\n     * @private\n     */\n  }, {\n    key: \"_makeHeader\",\n    value: function _makeHeader(name) {\n      var div = document.createElement(\"div\");\n      div.className = \"vis-configuration vis-config-header\";\n      div.innerText = name;\n      this._makeItem([], div);\n    }\n\n    /**\n     * make a label, if it is an object label, it gets different styling.\n     *\n     * @param {string} name\n     * @param {Array} path    | where to look for the actual option\n     * @param {string} objectLabel\n     * @returns {HTMLElement}\n     * @private\n     */\n  }, {\n    key: \"_makeLabel\",\n    value: function _makeLabel(name, path) {\n      var objectLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var div = document.createElement(\"div\");\n      div.className = \"vis-configuration vis-config-label vis-config-s\" + path.length;\n      if (objectLabel === true) {\n        while (div.firstChild) {\n          div.removeChild(div.firstChild);\n        }\n        div.appendChild(wrapInTag(\"i\", \"b\", name));\n      } else {\n        div.innerText = name + \":\";\n      }\n      return div;\n    }\n\n    /**\n     * make a dropdown list for multiple possible string optoins\n     *\n     * @param {Array.<number>} arr\n     * @param {number} value\n     * @param {Array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeDropdown\",\n    value: function _makeDropdown(arr, value, path) {\n      var select = document.createElement(\"select\");\n      select.className = \"vis-configuration vis-config-select\";\n      var selectedValue = 0;\n      if (value !== undefined) {\n        if (_indexOfInstanceProperty(arr).call(arr, value) !== -1) {\n          selectedValue = _indexOfInstanceProperty(arr).call(arr, value);\n        }\n      }\n      for (var i = 0; i < arr.length; i++) {\n        var _option2 = document.createElement(\"option\");\n        _option2.value = arr[i];\n        if (i === selectedValue) {\n          _option2.selected = \"selected\";\n        }\n        _option2.innerText = arr[i];\n        select.appendChild(_option2);\n      }\n      var me = this;\n      select.onchange = function () {\n        me._update(this.value, path);\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      this._makeItem(path, label, select);\n    }\n\n    /**\n     * make a range object for numeric options\n     *\n     * @param {Array.<number>} arr\n     * @param {number} value\n     * @param {Array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeRange\",\n    value: function _makeRange(arr, value, path) {\n      var defaultValue = arr[0];\n      var min = arr[1];\n      var max = arr[2];\n      var step = arr[3];\n      var range = document.createElement(\"input\");\n      range.className = \"vis-configuration vis-config-range\";\n      try {\n        range.type = \"range\"; // not supported on IE9\n        range.min = min;\n        range.max = max;\n      } catch (err) {\n        // TODO: Add some error handling.\n      }\n      range.step = step;\n\n      // set up the popup settings in case they are needed.\n      var popupString = \"\";\n      var popupValue = 0;\n      if (value !== undefined) {\n        var factor = 1.2;\n        if (value < 0 && value * factor < min) {\n          range.min = Math.ceil(value * factor);\n          popupValue = range.min;\n          popupString = \"range increased\";\n        } else if (value / factor < min) {\n          range.min = Math.ceil(value / factor);\n          popupValue = range.min;\n          popupString = \"range increased\";\n        }\n        if (value * factor > max && max !== 1) {\n          range.max = Math.ceil(value * factor);\n          popupValue = range.max;\n          popupString = \"range increased\";\n        }\n        range.value = value;\n      } else {\n        range.value = defaultValue;\n      }\n      var input = document.createElement(\"input\");\n      input.className = \"vis-configuration vis-config-rangeinput\";\n      input.value = range.value;\n      var me = this;\n      range.onchange = function () {\n        input.value = this.value;\n        me._update(Number(this.value), path);\n      };\n      range.oninput = function () {\n        input.value = this.value;\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      var itemIndex = this._makeItem(path, label, range, input);\n\n      // if a popup is needed AND it has not been shown for this value, show it.\n      if (popupString !== \"\" && this.popupHistory[itemIndex] !== popupValue) {\n        this.popupHistory[itemIndex] = popupValue;\n        this._setupPopup(popupString, itemIndex);\n      }\n    }\n\n    /**\n     * make a button object\n     *\n     * @private\n     */\n  }, {\n    key: \"_makeButton\",\n    value: function _makeButton() {\n      var _this4 = this;\n      if (this.options.showButton === true) {\n        var generateButton = document.createElement(\"div\");\n        generateButton.className = \"vis-configuration vis-config-button\";\n        generateButton.innerText = \"generate options\";\n        generateButton.onclick = function () {\n          _this4._printOptions();\n        };\n        generateButton.onmouseover = function () {\n          generateButton.className = \"vis-configuration vis-config-button hover\";\n        };\n        generateButton.onmouseout = function () {\n          generateButton.className = \"vis-configuration vis-config-button\";\n        };\n        this.optionsContainer = document.createElement(\"div\");\n        this.optionsContainer.className = \"vis-configuration vis-config-option-container\";\n        this.domElements.push(this.optionsContainer);\n        this.domElements.push(generateButton);\n      }\n    }\n\n    /**\n     * prepare the popup\n     *\n     * @param {string} string\n     * @param {number} index\n     * @private\n     */\n  }, {\n    key: \"_setupPopup\",\n    value: function _setupPopup(string, index) {\n      var _this5 = this;\n      if (this.initialized === true && this.allowCreation === true && this.popupCounter < this.popupLimit) {\n        var div = document.createElement(\"div\");\n        div.id = \"vis-configuration-popup\";\n        div.className = \"vis-configuration-popup\";\n        div.innerText = string;\n        div.onclick = function () {\n          _this5._removePopup();\n        };\n        this.popupCounter += 1;\n        this.popupDiv = {\n          html: div,\n          index: index\n        };\n      }\n    }\n\n    /**\n     * remove the popup from the dom\n     *\n     * @private\n     */\n  }, {\n    key: \"_removePopup\",\n    value: function _removePopup() {\n      if (this.popupDiv.html !== undefined) {\n        this.popupDiv.html.parentNode.removeChild(this.popupDiv.html);\n        clearTimeout(this.popupDiv.hideTimeout);\n        clearTimeout(this.popupDiv.deleteTimeout);\n        this.popupDiv = {};\n      }\n    }\n\n    /**\n     * Show the popup if it is needed.\n     *\n     * @private\n     */\n  }, {\n    key: \"_showPopupIfNeeded\",\n    value: function _showPopupIfNeeded() {\n      var _this6 = this;\n      if (this.popupDiv.html !== undefined) {\n        var correspondingElement = this.domElements[this.popupDiv.index];\n        var rect = correspondingElement.getBoundingClientRect();\n        this.popupDiv.html.style.left = rect.left + \"px\";\n        this.popupDiv.html.style.top = rect.top - 30 + \"px\"; // 30 is the height;\n        document.body.appendChild(this.popupDiv.html);\n        this.popupDiv.hideTimeout = _setTimeout(function () {\n          _this6.popupDiv.html.style.opacity = 0;\n        }, 1500);\n        this.popupDiv.deleteTimeout = _setTimeout(function () {\n          _this6._removePopup();\n        }, 1800);\n      }\n    }\n\n    /**\n     * make a checkbox for boolean options.\n     *\n     * @param {number} defaultValue\n     * @param {number} value\n     * @param {Array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeCheckbox\",\n    value: function _makeCheckbox(defaultValue, value, path) {\n      var checkbox = document.createElement(\"input\");\n      checkbox.type = \"checkbox\";\n      checkbox.className = \"vis-configuration vis-config-checkbox\";\n      checkbox.checked = defaultValue;\n      if (value !== undefined) {\n        checkbox.checked = value;\n        if (value !== defaultValue) {\n          if (_typeof$1(defaultValue) === \"object\") {\n            if (value !== defaultValue.enabled) {\n              this.changedOptions.push({\n                path: path,\n                value: value\n              });\n            }\n          } else {\n            this.changedOptions.push({\n              path: path,\n              value: value\n            });\n          }\n        }\n      }\n      var me = this;\n      checkbox.onchange = function () {\n        me._update(this.checked, path);\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      this._makeItem(path, label, checkbox);\n    }\n\n    /**\n     * make a text input field for string options.\n     *\n     * @param {number} defaultValue\n     * @param {number} value\n     * @param {Array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeTextInput\",\n    value: function _makeTextInput(defaultValue, value, path) {\n      var checkbox = document.createElement(\"input\");\n      checkbox.type = \"text\";\n      checkbox.className = \"vis-configuration vis-config-text\";\n      checkbox.value = value;\n      if (value !== defaultValue) {\n        this.changedOptions.push({\n          path: path,\n          value: value\n        });\n      }\n      var me = this;\n      checkbox.onchange = function () {\n        me._update(this.value, path);\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      this._makeItem(path, label, checkbox);\n    }\n\n    /**\n     * make a color field with a color picker for color fields\n     *\n     * @param {Array.<number>} arr\n     * @param {number} value\n     * @param {Array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeColorField\",\n    value: function _makeColorField(arr, value, path) {\n      var _this7 = this;\n      var defaultColor = arr[1];\n      var div = document.createElement(\"div\");\n      value = value === undefined ? defaultColor : value;\n      if (value !== \"none\") {\n        div.className = \"vis-configuration vis-config-colorBlock\";\n        div.style.backgroundColor = value;\n      } else {\n        div.className = \"vis-configuration vis-config-colorBlock none\";\n      }\n      value = value === undefined ? defaultColor : value;\n      div.onclick = function () {\n        _this7._showColorPicker(value, div, path);\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      this._makeItem(path, label, div);\n    }\n\n    /**\n     * used by the color buttons to call the color picker.\n     *\n     * @param {number} value\n     * @param {HTMLElement} div\n     * @param {Array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_showColorPicker\",\n    value: function _showColorPicker(value, div, path) {\n      var _this8 = this;\n      // clear the callback from this div\n      div.onclick = function () {};\n      this.colorPicker.insertTo(div);\n      this.colorPicker.show();\n      this.colorPicker.setColor(value);\n      this.colorPicker.setUpdateCallback(function (color) {\n        var colorString = \"rgba(\" + color.r + \",\" + color.g + \",\" + color.b + \",\" + color.a + \")\";\n        div.style.backgroundColor = colorString;\n        _this8._update(colorString, path);\n      });\n\n      // on close of the colorpicker, restore the callback.\n      this.colorPicker.setCloseCallback(function () {\n        div.onclick = function () {\n          _this8._showColorPicker(value, div, path);\n        };\n      });\n    }\n\n    /**\n     * parse an object and draw the correct items\n     *\n     * @param {object} obj\n     * @param {Array} [path=[]]    | where to look for the actual option\n     * @param {boolean} [checkOnly=false]\n     * @returns {boolean}\n     * @private\n     */\n  }, {\n    key: \"_handleObject\",\n    value: function _handleObject(obj) {\n      var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var checkOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var show = false;\n      var filter = _filterInstanceProperty(this.options);\n      var visibleInSet = false;\n      for (var subObj in obj) {\n        if (Object.prototype.hasOwnProperty.call(obj, subObj)) {\n          show = true;\n          var item = obj[subObj];\n          var newPath = copyAndExtendArray(path, subObj);\n          if (typeof filter === \"function\") {\n            show = filter(subObj, path);\n\n            // if needed we must go deeper into the object.\n            if (show === false) {\n              if (!_Array$isArray(item) && typeof item !== \"string\" && typeof item !== \"boolean\" && item instanceof Object) {\n                this.allowCreation = false;\n                show = this._handleObject(item, newPath, true);\n                this.allowCreation = checkOnly === false;\n              }\n            }\n          }\n          if (show !== false) {\n            visibleInSet = true;\n            var value = this._getValue(newPath);\n            if (_Array$isArray(item)) {\n              this._handleArray(item, value, newPath);\n            } else if (typeof item === \"string\") {\n              this._makeTextInput(item, value, newPath);\n            } else if (typeof item === \"boolean\") {\n              this._makeCheckbox(item, value, newPath);\n            } else if (item instanceof Object) {\n              // skip the options that are not enabled\n              if (!this.hideOption(path, subObj, this.moduleOptions)) {\n                // initially collapse options with an disabled enabled option.\n                if (item.enabled !== undefined) {\n                  var enabledPath = copyAndExtendArray(newPath, \"enabled\");\n                  var enabledValue = this._getValue(enabledPath);\n                  if (enabledValue === true) {\n                    var label = this._makeLabel(subObj, newPath, true);\n                    this._makeItem(newPath, label);\n                    visibleInSet = this._handleObject(item, newPath) || visibleInSet;\n                  } else {\n                    this._makeCheckbox(item, enabledValue, newPath);\n                  }\n                } else {\n                  var _label = this._makeLabel(subObj, newPath, true);\n                  this._makeItem(newPath, _label);\n                  visibleInSet = this._handleObject(item, newPath) || visibleInSet;\n                }\n              }\n            } else {\n              console.error(\"dont know how to handle\", item, subObj, newPath);\n            }\n          }\n        }\n      }\n      return visibleInSet;\n    }\n\n    /**\n     * handle the array type of option\n     *\n     * @param {Array.<number>} arr\n     * @param {number} value\n     * @param {Array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_handleArray\",\n    value: function _handleArray(arr, value, path) {\n      if (typeof arr[0] === \"string\" && arr[0] === \"color\") {\n        this._makeColorField(arr, value, path);\n        if (arr[1] !== value) {\n          this.changedOptions.push({\n            path: path,\n            value: value\n          });\n        }\n      } else if (typeof arr[0] === \"string\") {\n        this._makeDropdown(arr, value, path);\n        if (arr[0] !== value) {\n          this.changedOptions.push({\n            path: path,\n            value: value\n          });\n        }\n      } else if (typeof arr[0] === \"number\") {\n        this._makeRange(arr, value, path);\n        if (arr[0] !== value) {\n          this.changedOptions.push({\n            path: path,\n            value: Number(value)\n          });\n        }\n      }\n    }\n\n    /**\n     * called to update the network with the new settings.\n     *\n     * @param {number} value\n     * @param {Array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_update\",\n    value: function _update(value, path) {\n      var options = this._constructOptions(value, path);\n      if (this.parent.body && this.parent.body.emitter && this.parent.body.emitter.emit) {\n        this.parent.body.emitter.emit(\"configChange\", options);\n      }\n      this.initialized = true;\n      this.parent.setOptions(options);\n    }\n\n    /**\n     *\n     * @param {string | boolean} value\n     * @param {Array.<string>} path\n     * @param {{}} optionsObj\n     * @returns {{}}\n     * @private\n     */\n  }, {\n    key: \"_constructOptions\",\n    value: function _constructOptions(value, path) {\n      var optionsObj = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var pointer = optionsObj;\n\n      // when dropdown boxes can be string or boolean, we typecast it into correct types\n      value = value === \"true\" ? true : value;\n      value = value === \"false\" ? false : value;\n      for (var i = 0; i < path.length; i++) {\n        if (path[i] !== \"global\") {\n          if (pointer[path[i]] === undefined) {\n            pointer[path[i]] = {};\n          }\n          if (i !== path.length - 1) {\n            pointer = pointer[path[i]];\n          } else {\n            pointer[path[i]] = value;\n          }\n        }\n      }\n      return optionsObj;\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"_printOptions\",\n    value: function _printOptions() {\n      var options = this.getOptions();\n      while (this.optionsContainer.firstChild) {\n        this.optionsContainer.removeChild(this.optionsContainer.firstChild);\n      }\n      this.optionsContainer.appendChild(wrapInTag(\"pre\", \"const options = \" + _JSON$stringify(options, null, 2)));\n    }\n\n    /**\n     *\n     * @returns {{}} options\n     */\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      var options = {};\n      for (var i = 0; i < this.changedOptions.length; i++) {\n        this._constructOptions(this.changedOptions[i].value, this.changedOptions[i].path, options);\n      }\n      return options;\n    }\n  }]);\n  return Configurator;\n}();\n\n/**\n * Popup is a class to create a popup window with some text\n */\nvar Popup$1 = /*#__PURE__*/function () {\n  /**\n   * @param {Element} container       The container object.\n   * @param {string}  overflowMethod  How the popup should act to overflowing ('flip' or 'cap')\n   */\n  function Popup(container, overflowMethod) {\n    _classCallCheck(this, Popup);\n    this.container = container;\n    this.overflowMethod = overflowMethod || \"cap\";\n    this.x = 0;\n    this.y = 0;\n    this.padding = 5;\n    this.hidden = false;\n\n    // create the frame\n    this.frame = document.createElement(\"div\");\n    this.frame.className = \"vis-tooltip\";\n    this.container.appendChild(this.frame);\n  }\n\n  /**\n   * @param {number} x   Horizontal position of the popup window\n   * @param {number} y   Vertical position of the popup window\n   */\n  _createClass(Popup, [{\n    key: \"setPosition\",\n    value: function setPosition(x, y) {\n      this.x = _parseInt$1(x);\n      this.y = _parseInt$1(y);\n    }\n\n    /**\n     * Set the content for the popup window. This can be HTML code or text.\n     *\n     * @param {string | Element} content\n     */\n  }, {\n    key: \"setText\",\n    value: function setText(content) {\n      if (content instanceof Element) {\n        while (this.frame.firstChild) {\n          this.frame.removeChild(this.frame.firstChild);\n        }\n        this.frame.appendChild(content);\n      } else {\n        // String containing literal text, element has to be used for HTML due to\n        // XSS risks associated with innerHTML (i.e. prevent XSS by accident).\n        this.frame.innerText = content;\n      }\n    }\n\n    /**\n     * Show the popup window\n     *\n     * @param {boolean} [doShow]    Show or hide the window\n     */\n  }, {\n    key: \"show\",\n    value: function show(doShow) {\n      if (doShow === undefined) {\n        doShow = true;\n      }\n      if (doShow === true) {\n        var height = this.frame.clientHeight;\n        var width = this.frame.clientWidth;\n        var maxHeight = this.frame.parentNode.clientHeight;\n        var maxWidth = this.frame.parentNode.clientWidth;\n        var left = 0,\n          top = 0;\n        if (this.overflowMethod == \"flip\") {\n          var isLeft = false,\n            isTop = true; // Where around the position it's located\n\n          if (this.y - height < this.padding) {\n            isTop = false;\n          }\n          if (this.x + width > maxWidth - this.padding) {\n            isLeft = true;\n          }\n          if (isLeft) {\n            left = this.x - width;\n          } else {\n            left = this.x;\n          }\n          if (isTop) {\n            top = this.y - height;\n          } else {\n            top = this.y;\n          }\n        } else {\n          top = this.y - height;\n          if (top + height + this.padding > maxHeight) {\n            top = maxHeight - height - this.padding;\n          }\n          if (top < this.padding) {\n            top = this.padding;\n          }\n          left = this.x;\n          if (left + width + this.padding > maxWidth) {\n            left = maxWidth - width - this.padding;\n          }\n          if (left < this.padding) {\n            left = this.padding;\n          }\n        }\n        this.frame.style.left = left + \"px\";\n        this.frame.style.top = top + \"px\";\n        this.frame.style.visibility = \"visible\";\n        this.hidden = false;\n      } else {\n        this.hide();\n      }\n    }\n\n    /**\n     * Hide the popup window\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.hidden = true;\n      this.frame.style.left = \"0\";\n      this.frame.style.top = \"0\";\n      this.frame.style.visibility = \"hidden\";\n    }\n\n    /**\n     * Remove the popup window\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.frame.parentNode.removeChild(this.frame); // Remove element from DOM\n    }\n  }]);\n  return Popup;\n}();\nvar errorFound$1 = false;\nvar allOptions$3;\nvar VALIDATOR_PRINT_STYLE$1 = \"background: #FFeeee; color: #dd0000\";\n\n/**\n *  Used to validate options.\n */\nvar Validator$1 = /*#__PURE__*/function () {\n  function Validator() {\n    _classCallCheck(this, Validator);\n  }\n  _createClass(Validator, null, [{\n    key: \"validate\",\n    value:\n    /**\n     * Main function to be called\n     *\n     * @param {object} options\n     * @param {object} referenceOptions\n     * @param {object} subObject\n     * @returns {boolean}\n     * @static\n     */\n    function validate(options, referenceOptions, subObject) {\n      errorFound$1 = false;\n      allOptions$3 = referenceOptions;\n      var usedOptions = referenceOptions;\n      if (subObject !== undefined) {\n        usedOptions = referenceOptions[subObject];\n      }\n      Validator.parse(options, usedOptions, []);\n      return errorFound$1;\n    }\n\n    /**\n     * Will traverse an object recursively and check every value\n     *\n     * @param {object} options\n     * @param {object} referenceOptions\n     * @param {Array} path    | where to look for the actual option\n     * @static\n     */\n  }, {\n    key: \"parse\",\n    value: function parse(options, referenceOptions, path) {\n      for (var _option3 in options) {\n        if (Object.prototype.hasOwnProperty.call(options, _option3)) {\n          Validator.check(_option3, options, referenceOptions, path);\n        }\n      }\n    }\n\n    /**\n     * Check every value. If the value is an object, call the parse function on that object.\n     *\n     * @param {string} option\n     * @param {object} options\n     * @param {object} referenceOptions\n     * @param {Array} path    | where to look for the actual option\n     * @static\n     */\n  }, {\n    key: \"check\",\n    value: function check(option, options, referenceOptions, path) {\n      if (referenceOptions[option] === undefined && referenceOptions.__any__ === undefined) {\n        Validator.getSuggestion(option, referenceOptions, path);\n        return;\n      }\n      var referenceOption = option;\n      var is_object = true;\n      if (referenceOptions[option] === undefined && referenceOptions.__any__ !== undefined) {\n        // NOTE: This only triggers if the __any__ is in the top level of the options object.\n        //       THAT'S A REALLY BAD PLACE TO ALLOW IT!!!!\n        // TODO: Examine if needed, remove if possible\n\n        // __any__ is a wildcard. Any value is accepted and will be further analysed by reference.\n        referenceOption = \"__any__\";\n\n        // if the any-subgroup is not a predefined object in the configurator,\n        // we do not look deeper into the object.\n        is_object = Validator.getType(options[option]) === \"object\";\n      }\n      var refOptionObj = referenceOptions[referenceOption];\n      if (is_object && refOptionObj.__type__ !== undefined) {\n        refOptionObj = refOptionObj.__type__;\n      }\n      Validator.checkFields(option, options, referenceOptions, referenceOption, refOptionObj, path);\n    }\n\n    /**\n     *\n     * @param {string}  option           | the option property\n     * @param {object}  options          | The supplied options object\n     * @param {object}  referenceOptions | The reference options containing all options and their allowed formats\n     * @param {string}  referenceOption  | Usually this is the same as option, except when handling an __any__ tag.\n     * @param {string}  refOptionObj     | This is the type object from the reference options\n     * @param {Array}   path             | where in the object is the option\n     * @static\n     */\n  }, {\n    key: \"checkFields\",\n    value: function checkFields(option, options, referenceOptions, referenceOption, refOptionObj, path) {\n      var log = function log(message) {\n        console.error(\"%c\" + message + Validator.printLocation(path, option), VALIDATOR_PRINT_STYLE$1);\n      };\n      var optionType = Validator.getType(options[option]);\n      var refOptionType = refOptionObj[optionType];\n      if (refOptionType !== undefined) {\n        // if the type is correct, we check if it is supposed to be one of a few select values\n        if (Validator.getType(refOptionType) === \"array\" && _indexOfInstanceProperty(refOptionType).call(refOptionType, options[option]) === -1) {\n          log('Invalid option detected in \"' + option + '\".' + \" Allowed values are:\" + Validator.print(refOptionType) + ' not \"' + options[option] + '\". ');\n          errorFound$1 = true;\n        } else if (optionType === \"object\" && referenceOption !== \"__any__\") {\n          path = copyAndExtendArray(path, option);\n          Validator.parse(options[option], referenceOptions[referenceOption], path);\n        }\n      } else if (refOptionObj[\"any\"] === undefined) {\n        // type of the field is incorrect and the field cannot be any\n        log('Invalid type received for \"' + option + '\". Expected: ' + Validator.print(_Object$keys(refOptionObj)) + \". Received [\" + optionType + '] \"' + options[option] + '\"');\n        errorFound$1 = true;\n      }\n    }\n\n    /**\n     *\n     * @param {object | boolean | number | string | Array.<number> | Date | Node | Moment | undefined | null} object\n     * @returns {string}\n     * @static\n     */\n  }, {\n    key: \"getType\",\n    value: function getType(object) {\n      var type = _typeof$1(object);\n      if (type === \"object\") {\n        if (object === null) {\n          return \"null\";\n        }\n        if (object instanceof Boolean) {\n          return \"boolean\";\n        }\n        if (object instanceof Number) {\n          return \"number\";\n        }\n        if (object instanceof String) {\n          return \"string\";\n        }\n        if (_Array$isArray(object)) {\n          return \"array\";\n        }\n        if (object instanceof Date) {\n          return \"date\";\n        }\n        if (object.nodeType !== undefined) {\n          return \"dom\";\n        }\n        if (object._isAMomentObject === true) {\n          return \"moment\";\n        }\n        return \"object\";\n      } else if (type === \"number\") {\n        return \"number\";\n      } else if (type === \"boolean\") {\n        return \"boolean\";\n      } else if (type === \"string\") {\n        return \"string\";\n      } else if (type === undefined) {\n        return \"undefined\";\n      }\n      return type;\n    }\n\n    /**\n     * @param {string} option\n     * @param {object} options\n     * @param {Array.<string>} path\n     * @static\n     */\n  }, {\n    key: \"getSuggestion\",\n    value: function getSuggestion(option, options, path) {\n      var localSearch = Validator.findInOptions(option, options, path, false);\n      var globalSearch = Validator.findInOptions(option, allOptions$3, [], true);\n      var localSearchThreshold = 8;\n      var globalSearchThreshold = 4;\n      var msg;\n      if (localSearch.indexMatch !== undefined) {\n        msg = \" in \" + Validator.printLocation(localSearch.path, option, \"\") + 'Perhaps it was incomplete? Did you mean: \"' + localSearch.indexMatch + '\"?\\n\\n';\n      } else if (globalSearch.distance <= globalSearchThreshold && localSearch.distance > globalSearch.distance) {\n        msg = \" in \" + Validator.printLocation(localSearch.path, option, \"\") + \"Perhaps it was misplaced? Matching option found at: \" + Validator.printLocation(globalSearch.path, globalSearch.closestMatch, \"\");\n      } else if (localSearch.distance <= localSearchThreshold) {\n        msg = '. Did you mean \"' + localSearch.closestMatch + '\"?' + Validator.printLocation(localSearch.path, option);\n      } else {\n        msg = \". Did you mean one of these: \" + Validator.print(_Object$keys(options)) + Validator.printLocation(path, option);\n      }\n      console.error('%cUnknown option detected: \"' + option + '\"' + msg, VALIDATOR_PRINT_STYLE$1);\n      errorFound$1 = true;\n    }\n\n    /**\n     * traverse the options in search for a match.\n     *\n     * @param {string} option\n     * @param {object} options\n     * @param {Array} path    | where to look for the actual option\n     * @param {boolean} [recursive=false]\n     * @returns {{closestMatch: string, path: Array, distance: number}}\n     * @static\n     */\n  }, {\n    key: \"findInOptions\",\n    value: function findInOptions(option, options, path) {\n      var recursive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var min = 1e9;\n      var closestMatch = \"\";\n      var closestMatchPath = [];\n      var lowerCaseOption = option.toLowerCase();\n      var indexMatch = undefined;\n      for (var op in options) {\n        var distance = void 0;\n        if (options[op].__type__ !== undefined && recursive === true) {\n          var result = Validator.findInOptions(option, options[op], copyAndExtendArray(path, op));\n          if (min > result.distance) {\n            closestMatch = result.closestMatch;\n            closestMatchPath = result.path;\n            min = result.distance;\n            indexMatch = result.indexMatch;\n          }\n        } else {\n          var _context16;\n          if (_indexOfInstanceProperty(_context16 = op.toLowerCase()).call(_context16, lowerCaseOption) !== -1) {\n            indexMatch = op;\n          }\n          distance = Validator.levenshteinDistance(option, op);\n          if (min > distance) {\n            closestMatch = op;\n            closestMatchPath = copyArray(path);\n            min = distance;\n          }\n        }\n      }\n      return {\n        closestMatch: closestMatch,\n        path: closestMatchPath,\n        distance: min,\n        indexMatch: indexMatch\n      };\n    }\n\n    /**\n     * @param {Array.<string>} path\n     * @param {object} option\n     * @param {string} prefix\n     * @returns {string}\n     * @static\n     */\n  }, {\n    key: \"printLocation\",\n    value: function printLocation(path, option) {\n      var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : \"Problem value found at: \\n\";\n      var str = \"\\n\\n\" + prefix + \"options = {\\n\";\n      for (var i = 0; i < path.length; i++) {\n        for (var j = 0; j < i + 1; j++) {\n          str += \"  \";\n        }\n        str += path[i] + \": {\\n\";\n      }\n      for (var _j = 0; _j < path.length + 1; _j++) {\n        str += \"  \";\n      }\n      str += option + \"\\n\";\n      for (var _i5 = 0; _i5 < path.length + 1; _i5++) {\n        for (var _j2 = 0; _j2 < path.length - _i5; _j2++) {\n          str += \"  \";\n        }\n        str += \"}\\n\";\n      }\n      return str + \"\\n\\n\";\n    }\n\n    /**\n     * @param {object} options\n     * @returns {string}\n     * @static\n     */\n  }, {\n    key: \"print\",\n    value: function print(options) {\n      return _JSON$stringify(options).replace(/(\")|(\\[)|(\\])|(,\"__type__\")/g, \"\").replace(/(,)/g, \", \");\n    }\n\n    /**\n     *  Compute the edit distance between the two given strings\n     * http://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Levenshtein_distance#JavaScript\n     *\n     * Copyright (c) 2011 Andrei Mackenzie\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n     *\n     * @param {string} a\n     * @param {string} b\n     * @returns {Array.<Array.<number>>}}\n     * @static\n     */\n  }, {\n    key: \"levenshteinDistance\",\n    value: function levenshteinDistance(a, b) {\n      if (a.length === 0) return b.length;\n      if (b.length === 0) return a.length;\n      var matrix = [];\n\n      // increment along the first column of each row\n      var i;\n      for (i = 0; i <= b.length; i++) {\n        matrix[i] = [i];\n      }\n\n      // increment each column in the first row\n      var j;\n      for (j = 0; j <= a.length; j++) {\n        matrix[0][j] = j;\n      }\n\n      // Fill in the rest of the matrix\n      for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n          if (b.charAt(i - 1) == a.charAt(j - 1)) {\n            matrix[i][j] = matrix[i - 1][j - 1];\n          } else {\n            matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1,\n            // substitution\n            Math.min(matrix[i][j - 1] + 1,\n            // insertion\n            matrix[i - 1][j] + 1)); // deletion\n          }\n        }\n      }\n\n      return matrix[b.length][a.length];\n    }\n  }]);\n  return Validator;\n}();\nvar Activator$2 = Activator$1;\nvar ColorPicker$2 = ColorPicker$1;\nvar Configurator$2 = Configurator$1;\nvar Hammer$2 = Hammer$1;\nvar Popup$2 = Popup$1;\nvar VALIDATOR_PRINT_STYLE = VALIDATOR_PRINT_STYLE$1;\nvar Validator$2 = Validator$1;\n\nvar util$2 = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tActivator: Activator$2,\n\tAlea: Alea,\n\tColorPicker: ColorPicker$2,\n\tConfigurator: Configurator$2,\n\tDELETE: DELETE,\n\tHSVToHex: HSVToHex,\n\tHSVToRGB: HSVToRGB,\n\tHammer: Hammer$2,\n\tPopup: Popup$2,\n\tRGBToHSV: RGBToHSV,\n\tRGBToHex: RGBToHex,\n\tVALIDATOR_PRINT_STYLE: VALIDATOR_PRINT_STYLE,\n\tValidator: Validator$2,\n\taddClassName: addClassName,\n\taddCssText: addCssText,\n\taddEventListener: addEventListener,\n\tbinarySearchCustom: binarySearchCustom,\n\tbinarySearchValue: binarySearchValue,\n\tbridgeObject: bridgeObject,\n\tcopyAndExtendArray: copyAndExtendArray,\n\tcopyArray: copyArray,\n\tdeepExtend: deepExtend,\n\tdeepObjectAssign: deepObjectAssign,\n\teasingFunctions: easingFunctions,\n\tequalArray: equalArray,\n\textend: extend,\n\tfillIfDefined: fillIfDefined,\n\tforEach: forEach$4,\n\tgetAbsoluteLeft: getAbsoluteLeft,\n\tgetAbsoluteRight: getAbsoluteRight,\n\tgetAbsoluteTop: getAbsoluteTop,\n\tgetScrollBarWidth: getScrollBarWidth,\n\tgetTarget: getTarget,\n\tgetType: getType,\n\thasParent: hasParent,\n\thexToHSV: hexToHSV,\n\thexToRGB: hexToRGB,\n\tinsertSort: insertSort,\n\tisDate: isDate,\n\tisNumber: isNumber,\n\tisObject: isObject$7,\n\tisString: isString,\n\tisValidHex: isValidHex,\n\tisValidRGB: isValidRGB,\n\tisValidRGBA: isValidRGBA,\n\tmergeOptions: mergeOptions,\n\toption: option,\n\toverrideOpacity: overrideOpacity,\n\tparseColor: parseColor,\n\tpreventDefault: preventDefault,\n\tpureDeepObjectAssign: pureDeepObjectAssign,\n\trecursiveDOMDelete: recursiveDOMDelete,\n\tremoveClassName: removeClassName,\n\tremoveCssText: removeCssText,\n\tremoveEventListener: removeEventListener,\n\tselectiveBridgeObject: selectiveBridgeObject,\n\tselectiveDeepExtend: selectiveDeepExtend,\n\tselectiveExtend: selectiveExtend,\n\tselectiveNotDeepExtend: selectiveNotDeepExtend,\n\tthrottle: throttle,\n\ttoArray: toArray,\n\ttopMost: topMost,\n\tupdateProperty: updateProperty\n});\n\n// DOM utility methods\n\n/**\n * this prepares the JSON container for allocating SVG elements\n * @param {Object} JSONcontainer\n * @private\n */\nfunction prepareElements(JSONcontainer) {\n  // cleanup the redundant svgElements;\n  for (var elementType in JSONcontainer) {\n    if (JSONcontainer.hasOwnProperty(elementType)) {\n      JSONcontainer[elementType].redundant = JSONcontainer[elementType].used;\n      JSONcontainer[elementType].used = [];\n    }\n  }\n}\n\n/**\n * this cleans up all the unused SVG elements. By asking for the parentNode, we only need to supply the JSON container from\n * which to remove the redundant elements.\n *\n * @param {Object} JSONcontainer\n * @private\n */\nfunction cleanupElements(JSONcontainer) {\n  // cleanup the redundant svgElements;\n  for (var elementType in JSONcontainer) {\n    if (JSONcontainer.hasOwnProperty(elementType)) {\n      if (JSONcontainer[elementType].redundant) {\n        for (var i = 0; i < JSONcontainer[elementType].redundant.length; i++) {\n          JSONcontainer[elementType].redundant[i].parentNode.removeChild(JSONcontainer[elementType].redundant[i]);\n        }\n        JSONcontainer[elementType].redundant = [];\n      }\n    }\n  }\n}\n\n/**\n * Ensures that all elements are removed first up so they can be recreated cleanly\n * @param {Object} JSONcontainer\n */\nfunction resetElements(JSONcontainer) {\n  prepareElements(JSONcontainer);\n  cleanupElements(JSONcontainer);\n  prepareElements(JSONcontainer);\n}\n\n/**\n * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\n * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.\n *\n * @param {string} elementType\n * @param {Object} JSONcontainer\n * @param {Object} svgContainer\n * @returns {Element}\n * @private\n */\nfunction getSVGElement(elementType, JSONcontainer, svgContainer) {\n  var element;\n  // allocate SVG element, if it doesnt yet exist, create one.\n  if (JSONcontainer.hasOwnProperty(elementType)) {\n    // this element has been created before\n    // check if there is an redundant element\n    if (JSONcontainer[elementType].redundant.length > 0) {\n      element = JSONcontainer[elementType].redundant[0];\n      JSONcontainer[elementType].redundant.shift();\n    } else {\n      // create a new element and add it to the SVG\n      element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n      svgContainer.appendChild(element);\n    }\n  } else {\n    // create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.\n    element = document.createElementNS('http://www.w3.org/2000/svg', elementType);\n    JSONcontainer[elementType] = {\n      used: [],\n      redundant: []\n    };\n    svgContainer.appendChild(element);\n  }\n  JSONcontainer[elementType].used.push(element);\n  return element;\n}\n\n/**\n * Allocate or generate an SVG element if needed. Store a reference to it in the JSON container and draw it in the svgContainer\n * the JSON container and the SVG container have to be supplied so other svg containers (like the legend) can use this.\n *\n * @param {string} elementType\n * @param {Object} JSONcontainer\n * @param {Element} DOMContainer\n * @param {Element} insertBefore\n * @returns {*}\n */\nfunction getDOMElement(elementType, JSONcontainer, DOMContainer, insertBefore) {\n  var element;\n  // allocate DOM element, if it doesnt yet exist, create one.\n  if (JSONcontainer.hasOwnProperty(elementType)) {\n    // this element has been created before\n    // check if there is an redundant element\n    if (JSONcontainer[elementType].redundant.length > 0) {\n      element = JSONcontainer[elementType].redundant[0];\n      JSONcontainer[elementType].redundant.shift();\n    } else {\n      // create a new element and add it to the SVG\n      element = document.createElement(elementType);\n      if (insertBefore !== undefined) {\n        DOMContainer.insertBefore(element, insertBefore);\n      } else {\n        DOMContainer.appendChild(element);\n      }\n    }\n  } else {\n    // create a new element and add it to the SVG, also create a new object in the svgElements to keep track of it.\n    element = document.createElement(elementType);\n    JSONcontainer[elementType] = {\n      used: [],\n      redundant: []\n    };\n    if (insertBefore !== undefined) {\n      DOMContainer.insertBefore(element, insertBefore);\n    } else {\n      DOMContainer.appendChild(element);\n    }\n  }\n  JSONcontainer[elementType].used.push(element);\n  return element;\n}\n\n/**\n * Draw a point object. This is a separate function because it can also be called by the legend.\n * The reason the JSONcontainer and the target SVG svgContainer have to be supplied is so the legend can use these functions\n * as well.\n *\n * @param {number} x\n * @param {number} y\n * @param {Object} groupTemplate: A template containing the necessary information to draw the datapoint e.g., {style: 'circle', size: 5, className: 'className' }\n * @param {Object} JSONcontainer\n * @param {Object} svgContainer\n * @param {Object} labelObj\n * @returns {vis.PointItem}\n */\nfunction drawPoint(x, y, groupTemplate, JSONcontainer, svgContainer, labelObj) {\n  var point;\n  if (groupTemplate.style == 'circle') {\n    point = getSVGElement('circle', JSONcontainer, svgContainer);\n    point.setAttributeNS(null, \"cx\", x);\n    point.setAttributeNS(null, \"cy\", y);\n    point.setAttributeNS(null, \"r\", 0.5 * groupTemplate.size);\n  } else {\n    point = getSVGElement('rect', JSONcontainer, svgContainer);\n    point.setAttributeNS(null, \"x\", x - 0.5 * groupTemplate.size);\n    point.setAttributeNS(null, \"y\", y - 0.5 * groupTemplate.size);\n    point.setAttributeNS(null, \"width\", groupTemplate.size);\n    point.setAttributeNS(null, \"height\", groupTemplate.size);\n  }\n  if (groupTemplate.styles !== undefined) {\n    point.setAttributeNS(null, \"style\", groupTemplate.styles);\n  }\n  point.setAttributeNS(null, \"class\", groupTemplate.className + \" vis-point\");\n  //handle label\n\n  if (labelObj) {\n    var label = getSVGElement('text', JSONcontainer, svgContainer);\n    if (labelObj.xOffset) {\n      x = x + labelObj.xOffset;\n    }\n    if (labelObj.yOffset) {\n      y = y + labelObj.yOffset;\n    }\n    if (labelObj.content) {\n      label.textContent = labelObj.content;\n    }\n    if (labelObj.className) {\n      label.setAttributeNS(null, \"class\", labelObj.className + \" vis-label\");\n    }\n    label.setAttributeNS(null, \"x\", x);\n    label.setAttributeNS(null, \"y\", y);\n  }\n  return point;\n}\n\n/**\n * draw a bar SVG element centered on the X coordinate\n *\n * @param {number} x\n * @param {number} y\n * @param {number} width\n * @param {number} height\n * @param {string} className\n * @param {Object} JSONcontainer\n * @param {Object} svgContainer\n * @param {string} style\n */\nfunction drawBar(x, y, width, height, className, JSONcontainer, svgContainer, style) {\n  if (height != 0) {\n    if (height < 0) {\n      height *= -1;\n      y -= height;\n    }\n    var rect = getSVGElement('rect', JSONcontainer, svgContainer);\n    rect.setAttributeNS(null, \"x\", x - 0.5 * width);\n    rect.setAttributeNS(null, \"y\", y);\n    rect.setAttributeNS(null, \"width\", width);\n    rect.setAttributeNS(null, \"height\", height);\n    rect.setAttributeNS(null, \"class\", className);\n    if (style) {\n      rect.setAttributeNS(null, \"style\", style);\n    }\n  }\n}\n\n/**\n * get default language\n * @returns {string}\n */\nfunction getNavigatorLanguage() {\n  try {\n    if (!navigator) return 'en';\n    if (navigator.languages && navigator.languages.length) {\n      return navigator.languages;\n    } else {\n      return navigator.userLanguage || navigator.language || navigator.browserLanguage || 'en';\n    }\n  } catch (error) {\n    return 'en';\n  }\n}\n\nvar DOMutil = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tcleanupElements: cleanupElements,\n\tdrawBar: drawBar,\n\tdrawPoint: drawPoint,\n\tgetDOMElement: getDOMElement,\n\tgetNavigatorLanguage: getNavigatorLanguage,\n\tgetSVGElement: getSVGElement,\n\tprepareElements: prepareElements,\n\tresetElements: resetElements\n});\n\nfunction _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n  return self;\n}\n\nvar parent$B = create$7;\n\nvar create$5 = parent$B;\n\nvar parent$A = create$5;\n\nvar create$4 = parent$A;\n\nvar create$3 = create$4;\n\nvar _Object$create = /*@__PURE__*/getDefaultExportFromCjs(create$3);\n\nvar $$r = _export;\nvar setPrototypeOf$6 = objectSetPrototypeOf;\n\n// `Object.setPrototypeOf` method\n// https://tc39.es/ecma262/#sec-object.setprototypeof\n$$r({ target: 'Object', stat: true }, {\n  setPrototypeOf: setPrototypeOf$6\n});\n\nvar path$a = path$u;\n\nvar setPrototypeOf$5 = path$a.Object.setPrototypeOf;\n\nvar parent$z = setPrototypeOf$5;\n\nvar setPrototypeOf$4 = parent$z;\n\nvar parent$y = setPrototypeOf$4;\n\nvar setPrototypeOf$3 = parent$y;\n\nvar parent$x = setPrototypeOf$3;\n\nvar setPrototypeOf$2 = parent$x;\n\nvar setPrototypeOf$1 = setPrototypeOf$2;\n\nvar _Object$setPrototypeOf = /*@__PURE__*/getDefaultExportFromCjs(setPrototypeOf$1);\n\nvar parent$w = bind$b;\n\nvar bind$9 = parent$w;\n\nvar parent$v = bind$9;\n\nvar bind$8 = parent$v;\n\nvar bind$7 = bind$8;\n\nvar _bindInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(bind$7);\n\nfunction _setPrototypeOf(o, p) {\n  var _context;\n  _setPrototypeOf = _Object$setPrototypeOf ? _bindInstanceProperty(_context = _Object$setPrototypeOf).call(_context) : function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n  return _setPrototypeOf(o, p);\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function\");\n  }\n  subClass.prototype = _Object$create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      writable: true,\n      configurable: true\n    }\n  });\n  _Object$defineProperty$1(subClass, \"prototype\", {\n    writable: false\n  });\n  if (superClass) _setPrototypeOf(subClass, superClass);\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (call && (_typeof$1(call) === \"object\" || typeof call === \"function\")) {\n    return call;\n  } else if (call !== void 0) {\n    throw new TypeError(\"Derived constructors may only return object or undefined\");\n  }\n  return _assertThisInitialized(self);\n}\n\nvar parent$u = getPrototypeOf$5;\n\nvar getPrototypeOf$3 = parent$u;\n\nvar parent$t = getPrototypeOf$3;\n\nvar getPrototypeOf$2 = parent$t;\n\nvar getPrototypeOf$1 = getPrototypeOf$2;\n\nvar _Object$getPrototypeOf = /*@__PURE__*/getDefaultExportFromCjs(getPrototypeOf$1);\n\nfunction _getPrototypeOf(o) {\n  var _context;\n  _getPrototypeOf = _Object$setPrototypeOf ? _bindInstanceProperty(_context = _Object$getPrototypeOf).call(_context) : function _getPrototypeOf(o) {\n    return o.__proto__ || _Object$getPrototypeOf(o);\n  };\n  return _getPrototypeOf(o);\n}\n\nfunction _defineProperty(obj, key, value) {\n  key = _toPropertyKey(key);\n  if (key in obj) {\n    _Object$defineProperty$1(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar regeneratorRuntime$1 = {exports: {}};\n\nvar _typeof = {exports: {}};\n\n(function (module) {\n\tvar _Symbol = symbol$1;\n\tvar _Symbol$iterator = iterator$1;\n\tfunction _typeof(o) {\n\t  \"@babel/helpers - typeof\";\n\n\t  return (module.exports = _typeof = \"function\" == typeof _Symbol && \"symbol\" == typeof _Symbol$iterator ? function (o) {\n\t    return typeof o;\n\t  } : function (o) {\n\t    return o && \"function\" == typeof _Symbol && o.constructor === _Symbol && o !== _Symbol.prototype ? \"symbol\" : typeof o;\n\t  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports), _typeof(o);\n\t}\n\tmodule.exports = _typeof, module.exports.__esModule = true, module.exports[\"default\"] = module.exports; \n} (_typeof));\n\nvar _typeofExports = _typeof.exports;\n\nvar parent$s = forEach$6;\n\nvar forEach$3 = parent$s;\n\nvar parent$r = forEach$3;\n\nvar forEach$2 = parent$r;\n\nvar forEach$1 = forEach$2;\n\nvar hasOwn$5 = hasOwnProperty_1;\nvar ownKeys$3 = ownKeys$8;\nvar getOwnPropertyDescriptorModule$1 = objectGetOwnPropertyDescriptor;\nvar definePropertyModule = objectDefineProperty;\n\nvar copyConstructorProperties$1 = function (target, source, exceptions) {\n  var keys = ownKeys$3(source);\n  var defineProperty = definePropertyModule.f;\n  var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule$1.f;\n  for (var i = 0; i < keys.length; i++) {\n    var key = keys[i];\n    if (!hasOwn$5(target, key) && !(exceptions && hasOwn$5(exceptions, key))) {\n      defineProperty(target, key, getOwnPropertyDescriptor(source, key));\n    }\n  }\n};\n\nvar isObject$6 = isObject$j;\nvar createNonEnumerableProperty$3 = createNonEnumerableProperty$9;\n\n// `InstallErrorCause` abstract operation\n// https://tc39.es/proposal-error-cause/#sec-errorobjects-install-error-cause\nvar installErrorCause$1 = function (O, options) {\n  if (isObject$6(options) && 'cause' in options) {\n    createNonEnumerableProperty$3(O, 'cause', options.cause);\n  }\n};\n\nvar uncurryThis$3 = functionUncurryThis;\n\nvar $Error$1 = Error;\nvar replace = uncurryThis$3(''.replace);\n\nvar TEST = (function (arg) { return String(new $Error$1(arg).stack); })('zxcasd');\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar V8_OR_CHAKRA_STACK_ENTRY = /\\n\\s*at [^:]*:[^\\n]*/;\nvar IS_V8_OR_CHAKRA_STACK = V8_OR_CHAKRA_STACK_ENTRY.test(TEST);\n\nvar errorStackClear = function (stack, dropEntries) {\n  if (IS_V8_OR_CHAKRA_STACK && typeof stack == 'string' && !$Error$1.prepareStackTrace) {\n    while (dropEntries--) stack = replace(stack, V8_OR_CHAKRA_STACK_ENTRY, '');\n  } return stack;\n};\n\nvar fails$a = fails$y;\nvar createPropertyDescriptor$1 = createPropertyDescriptor$7;\n\nvar errorStackInstallable = !fails$a(function () {\n  var error = new Error('a');\n  if (!('stack' in error)) return true;\n  // eslint-disable-next-line es/no-object-defineproperty -- safe\n  Object.defineProperty(error, 'stack', createPropertyDescriptor$1(1, 7));\n  return error.stack !== 7;\n});\n\nvar createNonEnumerableProperty$2 = createNonEnumerableProperty$9;\nvar clearErrorStack = errorStackClear;\nvar ERROR_STACK_INSTALLABLE = errorStackInstallable;\n\n// non-standard V8\nvar captureStackTrace = Error.captureStackTrace;\n\nvar errorStackInstall = function (error, C, stack, dropEntries) {\n  if (ERROR_STACK_INSTALLABLE) {\n    if (captureStackTrace) captureStackTrace(error, C);\n    else createNonEnumerableProperty$2(error, 'stack', clearErrorStack(stack, dropEntries));\n  }\n};\n\nvar bind$6 = functionBindContext;\nvar call$6 = functionCall;\nvar anObject$3 = anObject$d;\nvar tryToString$1 = tryToString$6;\nvar isArrayIteratorMethod = isArrayIteratorMethod$2;\nvar lengthOfArrayLike$4 = lengthOfArrayLike$e;\nvar isPrototypeOf$d = objectIsPrototypeOf;\nvar getIterator$6 = getIterator$8;\nvar getIteratorMethod = getIteratorMethod$9;\nvar iteratorClose = iteratorClose$2;\n\nvar $TypeError$4 = TypeError;\n\nvar Result = function (stopped, result) {\n  this.stopped = stopped;\n  this.result = result;\n};\n\nvar ResultPrototype = Result.prototype;\n\nvar iterate$7 = function (iterable, unboundFunction, options) {\n  var that = options && options.that;\n  var AS_ENTRIES = !!(options && options.AS_ENTRIES);\n  var IS_RECORD = !!(options && options.IS_RECORD);\n  var IS_ITERATOR = !!(options && options.IS_ITERATOR);\n  var INTERRUPTED = !!(options && options.INTERRUPTED);\n  var fn = bind$6(unboundFunction, that);\n  var iterator, iterFn, index, length, result, next, step;\n\n  var stop = function (condition) {\n    if (iterator) iteratorClose(iterator, 'normal', condition);\n    return new Result(true, condition);\n  };\n\n  var callFn = function (value) {\n    if (AS_ENTRIES) {\n      anObject$3(value);\n      return INTERRUPTED ? fn(value[0], value[1], stop) : fn(value[0], value[1]);\n    } return INTERRUPTED ? fn(value, stop) : fn(value);\n  };\n\n  if (IS_RECORD) {\n    iterator = iterable.iterator;\n  } else if (IS_ITERATOR) {\n    iterator = iterable;\n  } else {\n    iterFn = getIteratorMethod(iterable);\n    if (!iterFn) throw new $TypeError$4(tryToString$1(iterable) + ' is not iterable');\n    // optimisation for array iterators\n    if (isArrayIteratorMethod(iterFn)) {\n      for (index = 0, length = lengthOfArrayLike$4(iterable); length > index; index++) {\n        result = callFn(iterable[index]);\n        if (result && isPrototypeOf$d(ResultPrototype, result)) return result;\n      } return new Result(false);\n    }\n    iterator = getIterator$6(iterable, iterFn);\n  }\n\n  next = IS_RECORD ? iterable.next : iterator.next;\n  while (!(step = call$6(next, iterator)).done) {\n    try {\n      result = callFn(step.value);\n    } catch (error) {\n      iteratorClose(iterator, 'throw', error);\n    }\n    if (typeof result == 'object' && result && isPrototypeOf$d(ResultPrototype, result)) return result;\n  } return new Result(false);\n};\n\nvar toString$3 = toString$c;\n\nvar normalizeStringArgument$1 = function (argument, $default) {\n  return argument === undefined ? arguments.length < 2 ? '' : $default : toString$3(argument);\n};\n\nvar $$q = _export;\nvar isPrototypeOf$c = objectIsPrototypeOf;\nvar getPrototypeOf = objectGetPrototypeOf$1;\nvar setPrototypeOf = objectSetPrototypeOf;\nvar copyConstructorProperties = copyConstructorProperties$1;\nvar create$2 = objectCreate;\nvar createNonEnumerableProperty$1 = createNonEnumerableProperty$9;\nvar createPropertyDescriptor = createPropertyDescriptor$7;\nvar installErrorCause = installErrorCause$1;\nvar installErrorStack = errorStackInstall;\nvar iterate$6 = iterate$7;\nvar normalizeStringArgument = normalizeStringArgument$1;\nvar wellKnownSymbol$3 = wellKnownSymbol$p;\n\nvar TO_STRING_TAG = wellKnownSymbol$3('toStringTag');\nvar $Error = Error;\nvar push$2 = [].push;\n\nvar $AggregateError = function AggregateError(errors, message /* , options */) {\n  var isInstance = isPrototypeOf$c(AggregateErrorPrototype, this);\n  var that;\n  if (setPrototypeOf) {\n    that = setPrototypeOf(new $Error(), isInstance ? getPrototypeOf(this) : AggregateErrorPrototype);\n  } else {\n    that = isInstance ? this : create$2(AggregateErrorPrototype);\n    createNonEnumerableProperty$1(that, TO_STRING_TAG, 'Error');\n  }\n  if (message !== undefined) createNonEnumerableProperty$1(that, 'message', normalizeStringArgument(message));\n  installErrorStack(that, $AggregateError, that.stack, 1);\n  if (arguments.length > 2) installErrorCause(that, arguments[2]);\n  var errorsArray = [];\n  iterate$6(errors, push$2, { that: errorsArray });\n  createNonEnumerableProperty$1(that, 'errors', errorsArray);\n  return that;\n};\n\nif (setPrototypeOf) setPrototypeOf($AggregateError, $Error);\nelse copyConstructorProperties($AggregateError, $Error, { name: true });\n\nvar AggregateErrorPrototype = $AggregateError.prototype = create$2($Error.prototype, {\n  constructor: createPropertyDescriptor(1, $AggregateError),\n  message: createPropertyDescriptor(1, ''),\n  name: createPropertyDescriptor(1, 'AggregateError')\n});\n\n// `AggregateError` constructor\n// https://tc39.es/ecma262/#sec-aggregate-error-constructor\n$$q({ global: true, constructor: true, arity: 2 }, {\n  AggregateError: $AggregateError\n});\n\nvar global$8 = global$q;\nvar classof$4 = classofRaw$2;\n\nvar engineIsNode = classof$4(global$8.process) === 'process';\n\nvar getBuiltIn$4 = getBuiltIn$f;\nvar defineBuiltInAccessor$1 = defineBuiltInAccessor$3;\nvar wellKnownSymbol$2 = wellKnownSymbol$p;\nvar DESCRIPTORS$5 = descriptors;\n\nvar SPECIES$2 = wellKnownSymbol$2('species');\n\nvar setSpecies$2 = function (CONSTRUCTOR_NAME) {\n  var Constructor = getBuiltIn$4(CONSTRUCTOR_NAME);\n\n  if (DESCRIPTORS$5 && Constructor && !Constructor[SPECIES$2]) {\n    defineBuiltInAccessor$1(Constructor, SPECIES$2, {\n      configurable: true,\n      get: function () { return this; }\n    });\n  }\n};\n\nvar isPrototypeOf$b = objectIsPrototypeOf;\n\nvar $TypeError$3 = TypeError;\n\nvar anInstance$3 = function (it, Prototype) {\n  if (isPrototypeOf$b(Prototype, it)) return it;\n  throw new $TypeError$3('Incorrect invocation');\n};\n\nvar isConstructor = isConstructor$4;\nvar tryToString = tryToString$6;\n\nvar $TypeError$2 = TypeError;\n\n// `Assert: IsConstructor(argument) is true`\nvar aConstructor$2 = function (argument) {\n  if (isConstructor(argument)) return argument;\n  throw new $TypeError$2(tryToString(argument) + ' is not a constructor');\n};\n\nvar anObject$2 = anObject$d;\nvar aConstructor$1 = aConstructor$2;\nvar isNullOrUndefined$2 = isNullOrUndefined$6;\nvar wellKnownSymbol$1 = wellKnownSymbol$p;\n\nvar SPECIES$1 = wellKnownSymbol$1('species');\n\n// `SpeciesConstructor` abstract operation\n// https://tc39.es/ecma262/#sec-speciesconstructor\nvar speciesConstructor$2 = function (O, defaultConstructor) {\n  var C = anObject$2(O).constructor;\n  var S;\n  return C === undefined || isNullOrUndefined$2(S = anObject$2(C)[SPECIES$1]) ? defaultConstructor : aConstructor$1(S);\n};\n\nvar userAgent$4 = engineUserAgent;\n\n// eslint-disable-next-line redos/no-vulnerable -- safe\nvar engineIsIos = /(?:ipad|iphone|ipod).*applewebkit/i.test(userAgent$4);\n\nvar global$7 = global$q;\nvar apply$1 = functionApply;\nvar bind$5 = functionBindContext;\nvar isCallable$4 = isCallable$m;\nvar hasOwn$4 = hasOwnProperty_1;\nvar fails$9 = fails$y;\nvar html = html$2;\nvar arraySlice$1 = arraySlice$5;\nvar createElement = documentCreateElement$1;\nvar validateArgumentsLength = validateArgumentsLength$2;\nvar IS_IOS$1 = engineIsIos;\nvar IS_NODE$4 = engineIsNode;\n\nvar set$3 = global$7.setImmediate;\nvar clear = global$7.clearImmediate;\nvar process$2 = global$7.process;\nvar Dispatch = global$7.Dispatch;\nvar Function$1 = global$7.Function;\nvar MessageChannel = global$7.MessageChannel;\nvar String$1 = global$7.String;\nvar counter = 0;\nvar queue$2 = {};\nvar ONREADYSTATECHANGE = 'onreadystatechange';\nvar $location, defer, channel, port;\n\nfails$9(function () {\n  // Deno throws a ReferenceError on `location` access without `--location` flag\n  $location = global$7.location;\n});\n\nvar run = function (id) {\n  if (hasOwn$4(queue$2, id)) {\n    var fn = queue$2[id];\n    delete queue$2[id];\n    fn();\n  }\n};\n\nvar runner = function (id) {\n  return function () {\n    run(id);\n  };\n};\n\nvar eventListener = function (event) {\n  run(event.data);\n};\n\nvar globalPostMessageDefer = function (id) {\n  // old engines have not location.origin\n  global$7.postMessage(String$1(id), $location.protocol + '//' + $location.host);\n};\n\n// Node.js 0.9+ & IE10+ has setImmediate, otherwise:\nif (!set$3 || !clear) {\n  set$3 = function setImmediate(handler) {\n    validateArgumentsLength(arguments.length, 1);\n    var fn = isCallable$4(handler) ? handler : Function$1(handler);\n    var args = arraySlice$1(arguments, 1);\n    queue$2[++counter] = function () {\n      apply$1(fn, undefined, args);\n    };\n    defer(counter);\n    return counter;\n  };\n  clear = function clearImmediate(id) {\n    delete queue$2[id];\n  };\n  // Node.js 0.8-\n  if (IS_NODE$4) {\n    defer = function (id) {\n      process$2.nextTick(runner(id));\n    };\n  // Sphere (JS game engine) Dispatch API\n  } else if (Dispatch && Dispatch.now) {\n    defer = function (id) {\n      Dispatch.now(runner(id));\n    };\n  // Browsers with MessageChannel, includes WebWorkers\n  // except iOS - https://github.com/zloirock/core-js/issues/624\n  } else if (MessageChannel && !IS_IOS$1) {\n    channel = new MessageChannel();\n    port = channel.port2;\n    channel.port1.onmessage = eventListener;\n    defer = bind$5(port.postMessage, port);\n  // Browsers with postMessage, skip WebWorkers\n  // IE8 has postMessage, but it's sync & typeof its postMessage is 'object'\n  } else if (\n    global$7.addEventListener &&\n    isCallable$4(global$7.postMessage) &&\n    !global$7.importScripts &&\n    $location && $location.protocol !== 'file:' &&\n    !fails$9(globalPostMessageDefer)\n  ) {\n    defer = globalPostMessageDefer;\n    global$7.addEventListener('message', eventListener, false);\n  // IE8-\n  } else if (ONREADYSTATECHANGE in createElement('script')) {\n    defer = function (id) {\n      html.appendChild(createElement('script'))[ONREADYSTATECHANGE] = function () {\n        html.removeChild(this);\n        run(id);\n      };\n    };\n  // Rest old browsers\n  } else {\n    defer = function (id) {\n      setTimeout(runner(id), 0);\n    };\n  }\n}\n\nvar task$1 = {\n  set: set$3,\n  clear: clear\n};\n\nvar Queue$3 = function () {\n  this.head = null;\n  this.tail = null;\n};\n\nQueue$3.prototype = {\n  add: function (item) {\n    var entry = { item: item, next: null };\n    var tail = this.tail;\n    if (tail) tail.next = entry;\n    else this.head = entry;\n    this.tail = entry;\n  },\n  get: function () {\n    var entry = this.head;\n    if (entry) {\n      var next = this.head = entry.next;\n      if (next === null) this.tail = null;\n      return entry.item;\n    }\n  }\n};\n\nvar queue$1 = Queue$3;\n\nvar userAgent$3 = engineUserAgent;\n\nvar engineIsIosPebble = /ipad|iphone|ipod/i.test(userAgent$3) && typeof Pebble != 'undefined';\n\nvar userAgent$2 = engineUserAgent;\n\nvar engineIsWebosWebkit = /web0s(?!.*chrome)/i.test(userAgent$2);\n\nvar global$6 = global$q;\nvar bind$4 = functionBindContext;\nvar getOwnPropertyDescriptor$4 = objectGetOwnPropertyDescriptor.f;\nvar macrotask = task$1.set;\nvar Queue$2 = queue$1;\nvar IS_IOS = engineIsIos;\nvar IS_IOS_PEBBLE = engineIsIosPebble;\nvar IS_WEBOS_WEBKIT = engineIsWebosWebkit;\nvar IS_NODE$3 = engineIsNode;\n\nvar MutationObserver = global$6.MutationObserver || global$6.WebKitMutationObserver;\nvar document$2 = global$6.document;\nvar process$1 = global$6.process;\nvar Promise$1 = global$6.Promise;\n// Node.js 11 shows ExperimentalWarning on getting `queueMicrotask`\nvar queueMicrotaskDescriptor = getOwnPropertyDescriptor$4(global$6, 'queueMicrotask');\nvar microtask$1 = queueMicrotaskDescriptor && queueMicrotaskDescriptor.value;\nvar notify$1, toggle, node, promise$5, then;\n\n// modern engines have queueMicrotask method\nif (!microtask$1) {\n  var queue = new Queue$2();\n\n  var flush = function () {\n    var parent, fn;\n    if (IS_NODE$3 && (parent = process$1.domain)) parent.exit();\n    while (fn = queue.get()) try {\n      fn();\n    } catch (error) {\n      if (queue.head) notify$1();\n      throw error;\n    }\n    if (parent) parent.enter();\n  };\n\n  // browsers with MutationObserver, except iOS - https://github.com/zloirock/core-js/issues/339\n  // also except WebOS Webkit https://github.com/zloirock/core-js/issues/898\n  if (!IS_IOS && !IS_NODE$3 && !IS_WEBOS_WEBKIT && MutationObserver && document$2) {\n    toggle = true;\n    node = document$2.createTextNode('');\n    new MutationObserver(flush).observe(node, { characterData: true });\n    notify$1 = function () {\n      node.data = toggle = !toggle;\n    };\n  // environments with maybe non-completely correct, but existent Promise\n  } else if (!IS_IOS_PEBBLE && Promise$1 && Promise$1.resolve) {\n    // Promise.resolve without an argument throws an error in LG WebOS 2\n    promise$5 = Promise$1.resolve(undefined);\n    // workaround of WebKit ~ iOS Safari 10.1 bug\n    promise$5.constructor = Promise$1;\n    then = bind$4(promise$5.then, promise$5);\n    notify$1 = function () {\n      then(flush);\n    };\n  // Node.js without promises\n  } else if (IS_NODE$3) {\n    notify$1 = function () {\n      process$1.nextTick(flush);\n    };\n  // for other environments - macrotask based on:\n  // - setImmediate\n  // - MessageChannel\n  // - window.postMessage\n  // - onreadystatechange\n  // - setTimeout\n  } else {\n    // `webpack` dev server bug on IE global methods - use bind(fn, global)\n    macrotask = bind$4(macrotask, global$6);\n    notify$1 = function () {\n      macrotask(flush);\n    };\n  }\n\n  microtask$1 = function (fn) {\n    if (!queue.head) notify$1();\n    queue.add(fn);\n  };\n}\n\nvar microtask_1 = microtask$1;\n\nvar hostReportErrors$1 = function (a, b) {\n  try {\n    // eslint-disable-next-line no-console -- safe\n    arguments.length === 1 ? console.error(a) : console.error(a, b);\n  } catch (error) { /* empty */ }\n};\n\nvar perform$6 = function (exec) {\n  try {\n    return { error: false, value: exec() };\n  } catch (error) {\n    return { error: true, value: error };\n  }\n};\n\nvar global$5 = global$q;\n\nvar promiseNativeConstructor = global$5.Promise;\n\n/* global Deno -- Deno case */\nvar engineIsDeno = typeof Deno == 'object' && Deno && typeof Deno.version == 'object';\n\nvar IS_DENO$1 = engineIsDeno;\nvar IS_NODE$2 = engineIsNode;\n\nvar engineIsBrowser = !IS_DENO$1 && !IS_NODE$2\n  && typeof window == 'object'\n  && typeof document == 'object';\n\nvar global$4 = global$q;\nvar NativePromiseConstructor$5 = promiseNativeConstructor;\nvar isCallable$3 = isCallable$m;\nvar isForced = isForced_1;\nvar inspectSource = inspectSource$2;\nvar wellKnownSymbol = wellKnownSymbol$p;\nvar IS_BROWSER = engineIsBrowser;\nvar IS_DENO = engineIsDeno;\nvar V8_VERSION = engineV8Version;\n\nvar NativePromisePrototype$2 = NativePromiseConstructor$5 && NativePromiseConstructor$5.prototype;\nvar SPECIES = wellKnownSymbol('species');\nvar SUBCLASSING = false;\nvar NATIVE_PROMISE_REJECTION_EVENT$1 = isCallable$3(global$4.PromiseRejectionEvent);\n\nvar FORCED_PROMISE_CONSTRUCTOR$5 = isForced('Promise', function () {\n  var PROMISE_CONSTRUCTOR_SOURCE = inspectSource(NativePromiseConstructor$5);\n  var GLOBAL_CORE_JS_PROMISE = PROMISE_CONSTRUCTOR_SOURCE !== String(NativePromiseConstructor$5);\n  // V8 6.6 (Node 10 and Chrome 66) have a bug with resolving custom thenables\n  // https://bugs.chromium.org/p/chromium/issues/detail?id=830565\n  // We can't detect it synchronously, so just check versions\n  if (!GLOBAL_CORE_JS_PROMISE && V8_VERSION === 66) return true;\n  // We need Promise#{ catch, finally } in the pure version for preventing prototype pollution\n  if (!(NativePromisePrototype$2['catch'] && NativePromisePrototype$2['finally'])) return true;\n  // We can't use @@species feature detection in V8 since it causes\n  // deoptimization and performance degradation\n  // https://github.com/zloirock/core-js/issues/679\n  if (!V8_VERSION || V8_VERSION < 51 || !/native code/.test(PROMISE_CONSTRUCTOR_SOURCE)) {\n    // Detect correctness of subclassing with @@species support\n    var promise = new NativePromiseConstructor$5(function (resolve) { resolve(1); });\n    var FakePromise = function (exec) {\n      exec(function () { /* empty */ }, function () { /* empty */ });\n    };\n    var constructor = promise.constructor = {};\n    constructor[SPECIES] = FakePromise;\n    SUBCLASSING = promise.then(function () { /* empty */ }) instanceof FakePromise;\n    if (!SUBCLASSING) return true;\n  // Unhandled rejections tracking support, NodeJS Promise without it fails @@species test\n  } return !GLOBAL_CORE_JS_PROMISE && (IS_BROWSER || IS_DENO) && !NATIVE_PROMISE_REJECTION_EVENT$1;\n});\n\nvar promiseConstructorDetection = {\n  CONSTRUCTOR: FORCED_PROMISE_CONSTRUCTOR$5,\n  REJECTION_EVENT: NATIVE_PROMISE_REJECTION_EVENT$1,\n  SUBCLASSING: SUBCLASSING\n};\n\nvar newPromiseCapability$2 = {};\n\nvar aCallable$8 = aCallable$e;\n\nvar $TypeError$1 = TypeError;\n\nvar PromiseCapability = function (C) {\n  var resolve, reject;\n  this.promise = new C(function ($$resolve, $$reject) {\n    if (resolve !== undefined || reject !== undefined) throw new $TypeError$1('Bad Promise constructor');\n    resolve = $$resolve;\n    reject = $$reject;\n  });\n  this.resolve = aCallable$8(resolve);\n  this.reject = aCallable$8(reject);\n};\n\n// `NewPromiseCapability` abstract operation\n// https://tc39.es/ecma262/#sec-newpromisecapability\nnewPromiseCapability$2.f = function (C) {\n  return new PromiseCapability(C);\n};\n\nvar $$p = _export;\nvar IS_NODE$1 = engineIsNode;\nvar global$3 = global$q;\nvar call$5 = functionCall;\nvar defineBuiltIn$1 = defineBuiltIn$6;\nvar setToStringTag$1 = setToStringTag$7;\nvar setSpecies$1 = setSpecies$2;\nvar aCallable$7 = aCallable$e;\nvar isCallable$2 = isCallable$m;\nvar isObject$5 = isObject$j;\nvar anInstance$2 = anInstance$3;\nvar speciesConstructor$1 = speciesConstructor$2;\nvar task = task$1.set;\nvar microtask = microtask_1;\nvar hostReportErrors = hostReportErrors$1;\nvar perform$5 = perform$6;\nvar Queue$1 = queue$1;\nvar InternalStateModule$2 = internalState;\nvar NativePromiseConstructor$4 = promiseNativeConstructor;\nvar PromiseConstructorDetection = promiseConstructorDetection;\nvar newPromiseCapabilityModule$7 = newPromiseCapability$2;\n\nvar PROMISE = 'Promise';\nvar FORCED_PROMISE_CONSTRUCTOR$4 = PromiseConstructorDetection.CONSTRUCTOR;\nvar NATIVE_PROMISE_REJECTION_EVENT = PromiseConstructorDetection.REJECTION_EVENT;\nPromiseConstructorDetection.SUBCLASSING;\nvar getInternalPromiseState = InternalStateModule$2.getterFor(PROMISE);\nvar setInternalState$2 = InternalStateModule$2.set;\nvar NativePromisePrototype$1 = NativePromiseConstructor$4 && NativePromiseConstructor$4.prototype;\nvar PromiseConstructor = NativePromiseConstructor$4;\nvar PromisePrototype = NativePromisePrototype$1;\nvar TypeError$1 = global$3.TypeError;\nvar document$1 = global$3.document;\nvar process = global$3.process;\nvar newPromiseCapability$1 = newPromiseCapabilityModule$7.f;\nvar newGenericPromiseCapability = newPromiseCapability$1;\n\nvar DISPATCH_EVENT = !!(document$1 && document$1.createEvent && global$3.dispatchEvent);\nvar UNHANDLED_REJECTION = 'unhandledrejection';\nvar REJECTION_HANDLED = 'rejectionhandled';\nvar PENDING = 0;\nvar FULFILLED = 1;\nvar REJECTED = 2;\nvar HANDLED = 1;\nvar UNHANDLED = 2;\n\nvar Internal, OwnPromiseCapability, PromiseWrapper;\n\n// helpers\nvar isThenable = function (it) {\n  var then;\n  return isObject$5(it) && isCallable$2(then = it.then) ? then : false;\n};\n\nvar callReaction = function (reaction, state) {\n  var value = state.value;\n  var ok = state.state === FULFILLED;\n  var handler = ok ? reaction.ok : reaction.fail;\n  var resolve = reaction.resolve;\n  var reject = reaction.reject;\n  var domain = reaction.domain;\n  var result, then, exited;\n  try {\n    if (handler) {\n      if (!ok) {\n        if (state.rejection === UNHANDLED) onHandleUnhandled(state);\n        state.rejection = HANDLED;\n      }\n      if (handler === true) result = value;\n      else {\n        if (domain) domain.enter();\n        result = handler(value); // can throw\n        if (domain) {\n          domain.exit();\n          exited = true;\n        }\n      }\n      if (result === reaction.promise) {\n        reject(new TypeError$1('Promise-chain cycle'));\n      } else if (then = isThenable(result)) {\n        call$5(then, result, resolve, reject);\n      } else resolve(result);\n    } else reject(value);\n  } catch (error) {\n    if (domain && !exited) domain.exit();\n    reject(error);\n  }\n};\n\nvar notify = function (state, isReject) {\n  if (state.notified) return;\n  state.notified = true;\n  microtask(function () {\n    var reactions = state.reactions;\n    var reaction;\n    while (reaction = reactions.get()) {\n      callReaction(reaction, state);\n    }\n    state.notified = false;\n    if (isReject && !state.rejection) onUnhandled(state);\n  });\n};\n\nvar dispatchEvent = function (name, promise, reason) {\n  var event, handler;\n  if (DISPATCH_EVENT) {\n    event = document$1.createEvent('Event');\n    event.promise = promise;\n    event.reason = reason;\n    event.initEvent(name, false, true);\n    global$3.dispatchEvent(event);\n  } else event = { promise: promise, reason: reason };\n  if (!NATIVE_PROMISE_REJECTION_EVENT && (handler = global$3['on' + name])) handler(event);\n  else if (name === UNHANDLED_REJECTION) hostReportErrors('Unhandled promise rejection', reason);\n};\n\nvar onUnhandled = function (state) {\n  call$5(task, global$3, function () {\n    var promise = state.facade;\n    var value = state.value;\n    var IS_UNHANDLED = isUnhandled(state);\n    var result;\n    if (IS_UNHANDLED) {\n      result = perform$5(function () {\n        if (IS_NODE$1) {\n          process.emit('unhandledRejection', value, promise);\n        } else dispatchEvent(UNHANDLED_REJECTION, promise, value);\n      });\n      // Browsers should not trigger `rejectionHandled` event if it was handled here, NodeJS - should\n      state.rejection = IS_NODE$1 || isUnhandled(state) ? UNHANDLED : HANDLED;\n      if (result.error) throw result.value;\n    }\n  });\n};\n\nvar isUnhandled = function (state) {\n  return state.rejection !== HANDLED && !state.parent;\n};\n\nvar onHandleUnhandled = function (state) {\n  call$5(task, global$3, function () {\n    var promise = state.facade;\n    if (IS_NODE$1) {\n      process.emit('rejectionHandled', promise);\n    } else dispatchEvent(REJECTION_HANDLED, promise, state.value);\n  });\n};\n\nvar bind$3 = function (fn, state, unwrap) {\n  return function (value) {\n    fn(state, value, unwrap);\n  };\n};\n\nvar internalReject = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  state.value = value;\n  state.state = REJECTED;\n  notify(state, true);\n};\n\nvar internalResolve = function (state, value, unwrap) {\n  if (state.done) return;\n  state.done = true;\n  if (unwrap) state = unwrap;\n  try {\n    if (state.facade === value) throw new TypeError$1(\"Promise can't be resolved itself\");\n    var then = isThenable(value);\n    if (then) {\n      microtask(function () {\n        var wrapper = { done: false };\n        try {\n          call$5(then, value,\n            bind$3(internalResolve, wrapper, state),\n            bind$3(internalReject, wrapper, state)\n          );\n        } catch (error) {\n          internalReject(wrapper, error, state);\n        }\n      });\n    } else {\n      state.value = value;\n      state.state = FULFILLED;\n      notify(state, false);\n    }\n  } catch (error) {\n    internalReject({ done: false }, error, state);\n  }\n};\n\n// constructor polyfill\nif (FORCED_PROMISE_CONSTRUCTOR$4) {\n  // 25.4.3.1 Promise(executor)\n  PromiseConstructor = function Promise(executor) {\n    anInstance$2(this, PromisePrototype);\n    aCallable$7(executor);\n    call$5(Internal, this);\n    var state = getInternalPromiseState(this);\n    try {\n      executor(bind$3(internalResolve, state), bind$3(internalReject, state));\n    } catch (error) {\n      internalReject(state, error);\n    }\n  };\n\n  PromisePrototype = PromiseConstructor.prototype;\n\n  // eslint-disable-next-line no-unused-vars -- required for `.length`\n  Internal = function Promise(executor) {\n    setInternalState$2(this, {\n      type: PROMISE,\n      done: false,\n      notified: false,\n      parent: false,\n      reactions: new Queue$1(),\n      rejection: false,\n      state: PENDING,\n      value: undefined\n    });\n  };\n\n  // `Promise.prototype.then` method\n  // https://tc39.es/ecma262/#sec-promise.prototype.then\n  Internal.prototype = defineBuiltIn$1(PromisePrototype, 'then', function then(onFulfilled, onRejected) {\n    var state = getInternalPromiseState(this);\n    var reaction = newPromiseCapability$1(speciesConstructor$1(this, PromiseConstructor));\n    state.parent = true;\n    reaction.ok = isCallable$2(onFulfilled) ? onFulfilled : true;\n    reaction.fail = isCallable$2(onRejected) && onRejected;\n    reaction.domain = IS_NODE$1 ? process.domain : undefined;\n    if (state.state === PENDING) state.reactions.add(reaction);\n    else microtask(function () {\n      callReaction(reaction, state);\n    });\n    return reaction.promise;\n  });\n\n  OwnPromiseCapability = function () {\n    var promise = new Internal();\n    var state = getInternalPromiseState(promise);\n    this.promise = promise;\n    this.resolve = bind$3(internalResolve, state);\n    this.reject = bind$3(internalReject, state);\n  };\n\n  newPromiseCapabilityModule$7.f = newPromiseCapability$1 = function (C) {\n    return C === PromiseConstructor || C === PromiseWrapper\n      ? new OwnPromiseCapability(C)\n      : newGenericPromiseCapability(C);\n  };\n}\n\n$$p({ global: true, constructor: true, wrap: true, forced: FORCED_PROMISE_CONSTRUCTOR$4 }, {\n  Promise: PromiseConstructor\n});\n\nsetToStringTag$1(PromiseConstructor, PROMISE, false, true);\nsetSpecies$1(PROMISE);\n\nvar NativePromiseConstructor$3 = promiseNativeConstructor;\nvar checkCorrectnessOfIteration = checkCorrectnessOfIteration$2;\nvar FORCED_PROMISE_CONSTRUCTOR$3 = promiseConstructorDetection.CONSTRUCTOR;\n\nvar promiseStaticsIncorrectIteration = FORCED_PROMISE_CONSTRUCTOR$3 || !checkCorrectnessOfIteration(function (iterable) {\n  NativePromiseConstructor$3.all(iterable).then(undefined, function () { /* empty */ });\n});\n\nvar $$o = _export;\nvar call$4 = functionCall;\nvar aCallable$6 = aCallable$e;\nvar newPromiseCapabilityModule$6 = newPromiseCapability$2;\nvar perform$4 = perform$6;\nvar iterate$5 = iterate$7;\nvar PROMISE_STATICS_INCORRECT_ITERATION$3 = promiseStaticsIncorrectIteration;\n\n// `Promise.all` method\n// https://tc39.es/ecma262/#sec-promise.all\n$$o({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$3 }, {\n  all: function all(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule$6.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform$4(function () {\n      var $promiseResolve = aCallable$6(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate$5(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call$4($promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = value;\n          --remaining || resolve(values);\n        }, reject);\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\nvar $$n = _export;\nvar FORCED_PROMISE_CONSTRUCTOR$2 = promiseConstructorDetection.CONSTRUCTOR;\nvar NativePromiseConstructor$2 = promiseNativeConstructor;\n\nNativePromiseConstructor$2 && NativePromiseConstructor$2.prototype;\n\n// `Promise.prototype.catch` method\n// https://tc39.es/ecma262/#sec-promise.prototype.catch\n$$n({ target: 'Promise', proto: true, forced: FORCED_PROMISE_CONSTRUCTOR$2, real: true }, {\n  'catch': function (onRejected) {\n    return this.then(undefined, onRejected);\n  }\n});\n\nvar $$m = _export;\nvar call$3 = functionCall;\nvar aCallable$5 = aCallable$e;\nvar newPromiseCapabilityModule$5 = newPromiseCapability$2;\nvar perform$3 = perform$6;\nvar iterate$4 = iterate$7;\nvar PROMISE_STATICS_INCORRECT_ITERATION$2 = promiseStaticsIncorrectIteration;\n\n// `Promise.race` method\n// https://tc39.es/ecma262/#sec-promise.race\n$$m({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$2 }, {\n  race: function race(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule$5.f(C);\n    var reject = capability.reject;\n    var result = perform$3(function () {\n      var $promiseResolve = aCallable$5(C.resolve);\n      iterate$4(iterable, function (promise) {\n        call$3($promiseResolve, C, promise).then(capability.resolve, reject);\n      });\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\nvar $$l = _export;\nvar call$2 = functionCall;\nvar newPromiseCapabilityModule$4 = newPromiseCapability$2;\nvar FORCED_PROMISE_CONSTRUCTOR$1 = promiseConstructorDetection.CONSTRUCTOR;\n\n// `Promise.reject` method\n// https://tc39.es/ecma262/#sec-promise.reject\n$$l({ target: 'Promise', stat: true, forced: FORCED_PROMISE_CONSTRUCTOR$1 }, {\n  reject: function reject(r) {\n    var capability = newPromiseCapabilityModule$4.f(this);\n    call$2(capability.reject, undefined, r);\n    return capability.promise;\n  }\n});\n\nvar anObject$1 = anObject$d;\nvar isObject$4 = isObject$j;\nvar newPromiseCapability = newPromiseCapability$2;\n\nvar promiseResolve$2 = function (C, x) {\n  anObject$1(C);\n  if (isObject$4(x) && x.constructor === C) return x;\n  var promiseCapability = newPromiseCapability.f(C);\n  var resolve = promiseCapability.resolve;\n  resolve(x);\n  return promiseCapability.promise;\n};\n\nvar $$k = _export;\nvar getBuiltIn$3 = getBuiltIn$f;\nvar IS_PURE = isPure;\nvar NativePromiseConstructor$1 = promiseNativeConstructor;\nvar FORCED_PROMISE_CONSTRUCTOR = promiseConstructorDetection.CONSTRUCTOR;\nvar promiseResolve$1 = promiseResolve$2;\n\nvar PromiseConstructorWrapper = getBuiltIn$3('Promise');\nvar CHECK_WRAPPER = !FORCED_PROMISE_CONSTRUCTOR;\n\n// `Promise.resolve` method\n// https://tc39.es/ecma262/#sec-promise.resolve\n$$k({ target: 'Promise', stat: true, forced: IS_PURE  }, {\n  resolve: function resolve(x) {\n    return promiseResolve$1(CHECK_WRAPPER && this === PromiseConstructorWrapper ? NativePromiseConstructor$1 : this, x);\n  }\n});\n\nvar $$j = _export;\nvar call$1 = functionCall;\nvar aCallable$4 = aCallable$e;\nvar newPromiseCapabilityModule$3 = newPromiseCapability$2;\nvar perform$2 = perform$6;\nvar iterate$3 = iterate$7;\nvar PROMISE_STATICS_INCORRECT_ITERATION$1 = promiseStaticsIncorrectIteration;\n\n// `Promise.allSettled` method\n// https://tc39.es/ecma262/#sec-promise.allsettled\n$$j({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION$1 }, {\n  allSettled: function allSettled(iterable) {\n    var C = this;\n    var capability = newPromiseCapabilityModule$3.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform$2(function () {\n      var promiseResolve = aCallable$4(C.resolve);\n      var values = [];\n      var counter = 0;\n      var remaining = 1;\n      iterate$3(iterable, function (promise) {\n        var index = counter++;\n        var alreadyCalled = false;\n        remaining++;\n        call$1(promiseResolve, C, promise).then(function (value) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'fulfilled', value: value };\n          --remaining || resolve(values);\n        }, function (error) {\n          if (alreadyCalled) return;\n          alreadyCalled = true;\n          values[index] = { status: 'rejected', reason: error };\n          --remaining || resolve(values);\n        });\n      });\n      --remaining || resolve(values);\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\nvar $$i = _export;\nvar call = functionCall;\nvar aCallable$3 = aCallable$e;\nvar getBuiltIn$2 = getBuiltIn$f;\nvar newPromiseCapabilityModule$2 = newPromiseCapability$2;\nvar perform$1 = perform$6;\nvar iterate$2 = iterate$7;\nvar PROMISE_STATICS_INCORRECT_ITERATION = promiseStaticsIncorrectIteration;\n\nvar PROMISE_ANY_ERROR = 'No one promise resolved';\n\n// `Promise.any` method\n// https://tc39.es/ecma262/#sec-promise.any\n$$i({ target: 'Promise', stat: true, forced: PROMISE_STATICS_INCORRECT_ITERATION }, {\n  any: function any(iterable) {\n    var C = this;\n    var AggregateError = getBuiltIn$2('AggregateError');\n    var capability = newPromiseCapabilityModule$2.f(C);\n    var resolve = capability.resolve;\n    var reject = capability.reject;\n    var result = perform$1(function () {\n      var promiseResolve = aCallable$3(C.resolve);\n      var errors = [];\n      var counter = 0;\n      var remaining = 1;\n      var alreadyResolved = false;\n      iterate$2(iterable, function (promise) {\n        var index = counter++;\n        var alreadyRejected = false;\n        remaining++;\n        call(promiseResolve, C, promise).then(function (value) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyResolved = true;\n          resolve(value);\n        }, function (error) {\n          if (alreadyRejected || alreadyResolved) return;\n          alreadyRejected = true;\n          errors[index] = error;\n          --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n        });\n      });\n      --remaining || reject(new AggregateError(errors, PROMISE_ANY_ERROR));\n    });\n    if (result.error) reject(result.value);\n    return capability.promise;\n  }\n});\n\nvar $$h = _export;\nvar NativePromiseConstructor = promiseNativeConstructor;\nvar fails$8 = fails$y;\nvar getBuiltIn$1 = getBuiltIn$f;\nvar isCallable$1 = isCallable$m;\nvar speciesConstructor = speciesConstructor$2;\nvar promiseResolve = promiseResolve$2;\n\nvar NativePromisePrototype = NativePromiseConstructor && NativePromiseConstructor.prototype;\n\n// Safari bug https://bugs.webkit.org/show_bug.cgi?id=200829\nvar NON_GENERIC = !!NativePromiseConstructor && fails$8(function () {\n  // eslint-disable-next-line unicorn/no-thenable -- required for testing\n  NativePromisePrototype['finally'].call({ then: function () { /* empty */ } }, function () { /* empty */ });\n});\n\n// `Promise.prototype.finally` method\n// https://tc39.es/ecma262/#sec-promise.prototype.finally\n$$h({ target: 'Promise', proto: true, real: true, forced: NON_GENERIC }, {\n  'finally': function (onFinally) {\n    var C = speciesConstructor(this, getBuiltIn$1('Promise'));\n    var isFunction = isCallable$1(onFinally);\n    return this.then(\n      isFunction ? function (x) {\n        return promiseResolve(C, onFinally()).then(function () { return x; });\n      } : onFinally,\n      isFunction ? function (e) {\n        return promiseResolve(C, onFinally()).then(function () { throw e; });\n      } : onFinally\n    );\n  }\n});\n\nvar path$9 = path$u;\n\nvar promise$4 = path$9.Promise;\n\nvar parent$q = promise$4;\n\n\nvar promise$3 = parent$q;\n\nvar $$g = _export;\nvar newPromiseCapabilityModule$1 = newPromiseCapability$2;\n\n// `Promise.withResolvers` method\n// https://github.com/tc39/proposal-promise-with-resolvers\n$$g({ target: 'Promise', stat: true }, {\n  withResolvers: function withResolvers() {\n    var promiseCapability = newPromiseCapabilityModule$1.f(this);\n    return {\n      promise: promiseCapability.promise,\n      resolve: promiseCapability.resolve,\n      reject: promiseCapability.reject\n    };\n  }\n});\n\nvar parent$p = promise$3;\n\n\nvar promise$2 = parent$p;\n\n// TODO: Remove from `core-js@4`\nvar $$f = _export;\nvar newPromiseCapabilityModule = newPromiseCapability$2;\nvar perform = perform$6;\n\n// `Promise.try` method\n// https://github.com/tc39/proposal-promise-try\n$$f({ target: 'Promise', stat: true, forced: true }, {\n  'try': function (callbackfn) {\n    var promiseCapability = newPromiseCapabilityModule.f(this);\n    var result = perform(callbackfn);\n    (result.error ? promiseCapability.reject : promiseCapability.resolve)(result.value);\n    return promiseCapability.promise;\n  }\n});\n\nvar parent$o = promise$2;\n// TODO: Remove from `core-js@4`\n\n\n\n\n\nvar promise$1 = parent$o;\n\nvar promise = promise$1;\n\nvar parent$n = reverse$4;\n\nvar reverse$2 = parent$n;\n\nvar parent$m = reverse$2;\n\nvar reverse$1 = parent$m;\n\nvar reverse = reverse$1;\n\n(function (module) {\n\tvar _typeof = _typeofExports[\"default\"];\n\tvar _Object$defineProperty = defineProperty$7;\n\tvar _Symbol = symbol$1;\n\tvar _Object$create = create$3;\n\tvar _Object$getPrototypeOf = getPrototypeOf$1;\n\tvar _forEachInstanceProperty = forEach$1;\n\tvar _pushInstanceProperty = push$4;\n\tvar _Object$setPrototypeOf = setPrototypeOf$1;\n\tvar _Promise = promise;\n\tvar _reverseInstanceProperty = reverse;\n\tvar _sliceInstanceProperty = slice$1;\n\tfunction _regeneratorRuntime() {\n\t  module.exports = _regeneratorRuntime = function _regeneratorRuntime() {\n\t    return e;\n\t  }, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;\n\t  var t,\n\t    e = {},\n\t    r = Object.prototype,\n\t    n = r.hasOwnProperty,\n\t    o = _Object$defineProperty || function (t, e, r) {\n\t      t[e] = r.value;\n\t    },\n\t    i = \"function\" == typeof _Symbol ? _Symbol : {},\n\t    a = i.iterator || \"@@iterator\",\n\t    c = i.asyncIterator || \"@@asyncIterator\",\n\t    u = i.toStringTag || \"@@toStringTag\";\n\t  function define(t, e, r) {\n\t    return _Object$defineProperty(t, e, {\n\t      value: r,\n\t      enumerable: !0,\n\t      configurable: !0,\n\t      writable: !0\n\t    }), t[e];\n\t  }\n\t  try {\n\t    define({}, \"\");\n\t  } catch (t) {\n\t    define = function define(t, e, r) {\n\t      return t[e] = r;\n\t    };\n\t  }\n\t  function wrap(t, e, r, n) {\n\t    var i = e && e.prototype instanceof Generator ? e : Generator,\n\t      a = _Object$create(i.prototype),\n\t      c = new Context(n || []);\n\t    return o(a, \"_invoke\", {\n\t      value: makeInvokeMethod(t, r, c)\n\t    }), a;\n\t  }\n\t  function tryCatch(t, e, r) {\n\t    try {\n\t      return {\n\t        type: \"normal\",\n\t        arg: t.call(e, r)\n\t      };\n\t    } catch (t) {\n\t      return {\n\t        type: \"throw\",\n\t        arg: t\n\t      };\n\t    }\n\t  }\n\t  e.wrap = wrap;\n\t  var h = \"suspendedStart\",\n\t    l = \"suspendedYield\",\n\t    f = \"executing\",\n\t    s = \"completed\",\n\t    y = {};\n\t  function Generator() {}\n\t  function GeneratorFunction() {}\n\t  function GeneratorFunctionPrototype() {}\n\t  var p = {};\n\t  define(p, a, function () {\n\t    return this;\n\t  });\n\t  var d = _Object$getPrototypeOf,\n\t    v = d && d(d(values([])));\n\t  v && v !== r && n.call(v, a) && (p = v);\n\t  var g = GeneratorFunctionPrototype.prototype = Generator.prototype = _Object$create(p);\n\t  function defineIteratorMethods(t) {\n\t    var _context;\n\t    _forEachInstanceProperty(_context = [\"next\", \"throw\", \"return\"]).call(_context, function (e) {\n\t      define(t, e, function (t) {\n\t        return this._invoke(e, t);\n\t      });\n\t    });\n\t  }\n\t  function AsyncIterator(t, e) {\n\t    function invoke(r, o, i, a) {\n\t      var c = tryCatch(t[r], t, o);\n\t      if (\"throw\" !== c.type) {\n\t        var u = c.arg,\n\t          h = u.value;\n\t        return h && \"object\" == _typeof(h) && n.call(h, \"__await\") ? e.resolve(h.__await).then(function (t) {\n\t          invoke(\"next\", t, i, a);\n\t        }, function (t) {\n\t          invoke(\"throw\", t, i, a);\n\t        }) : e.resolve(h).then(function (t) {\n\t          u.value = t, i(u);\n\t        }, function (t) {\n\t          return invoke(\"throw\", t, i, a);\n\t        });\n\t      }\n\t      a(c.arg);\n\t    }\n\t    var r;\n\t    o(this, \"_invoke\", {\n\t      value: function value(t, n) {\n\t        function callInvokeWithMethodAndArg() {\n\t          return new e(function (e, r) {\n\t            invoke(t, n, e, r);\n\t          });\n\t        }\n\t        return r = r ? r.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg();\n\t      }\n\t    });\n\t  }\n\t  function makeInvokeMethod(e, r, n) {\n\t    var o = h;\n\t    return function (i, a) {\n\t      if (o === f) throw new Error(\"Generator is already running\");\n\t      if (o === s) {\n\t        if (\"throw\" === i) throw a;\n\t        return {\n\t          value: t,\n\t          done: !0\n\t        };\n\t      }\n\t      for (n.method = i, n.arg = a;;) {\n\t        var c = n.delegate;\n\t        if (c) {\n\t          var u = maybeInvokeDelegate(c, n);\n\t          if (u) {\n\t            if (u === y) continue;\n\t            return u;\n\t          }\n\t        }\n\t        if (\"next\" === n.method) n.sent = n._sent = n.arg;else if (\"throw\" === n.method) {\n\t          if (o === h) throw o = s, n.arg;\n\t          n.dispatchException(n.arg);\n\t        } else \"return\" === n.method && n.abrupt(\"return\", n.arg);\n\t        o = f;\n\t        var p = tryCatch(e, r, n);\n\t        if (\"normal\" === p.type) {\n\t          if (o = n.done ? s : l, p.arg === y) continue;\n\t          return {\n\t            value: p.arg,\n\t            done: n.done\n\t          };\n\t        }\n\t        \"throw\" === p.type && (o = s, n.method = \"throw\", n.arg = p.arg);\n\t      }\n\t    };\n\t  }\n\t  function maybeInvokeDelegate(e, r) {\n\t    var n = r.method,\n\t      o = e.iterator[n];\n\t    if (o === t) return r.delegate = null, \"throw\" === n && e.iterator[\"return\"] && (r.method = \"return\", r.arg = t, maybeInvokeDelegate(e, r), \"throw\" === r.method) || \"return\" !== n && (r.method = \"throw\", r.arg = new TypeError(\"The iterator does not provide a '\" + n + \"' method\")), y;\n\t    var i = tryCatch(o, e.iterator, r.arg);\n\t    if (\"throw\" === i.type) return r.method = \"throw\", r.arg = i.arg, r.delegate = null, y;\n\t    var a = i.arg;\n\t    return a ? a.done ? (r[e.resultName] = a.value, r.next = e.nextLoc, \"return\" !== r.method && (r.method = \"next\", r.arg = t), r.delegate = null, y) : a : (r.method = \"throw\", r.arg = new TypeError(\"iterator result is not an object\"), r.delegate = null, y);\n\t  }\n\t  function pushTryEntry(t) {\n\t    var _context2;\n\t    var e = {\n\t      tryLoc: t[0]\n\t    };\n\t    1 in t && (e.catchLoc = t[1]), 2 in t && (e.finallyLoc = t[2], e.afterLoc = t[3]), _pushInstanceProperty(_context2 = this.tryEntries).call(_context2, e);\n\t  }\n\t  function resetTryEntry(t) {\n\t    var e = t.completion || {};\n\t    e.type = \"normal\", delete e.arg, t.completion = e;\n\t  }\n\t  function Context(t) {\n\t    this.tryEntries = [{\n\t      tryLoc: \"root\"\n\t    }], _forEachInstanceProperty(t).call(t, pushTryEntry, this), this.reset(!0);\n\t  }\n\t  function values(e) {\n\t    if (e || \"\" === e) {\n\t      var r = e[a];\n\t      if (r) return r.call(e);\n\t      if (\"function\" == typeof e.next) return e;\n\t      if (!isNaN(e.length)) {\n\t        var o = -1,\n\t          i = function next() {\n\t            for (; ++o < e.length;) if (n.call(e, o)) return next.value = e[o], next.done = !1, next;\n\t            return next.value = t, next.done = !0, next;\n\t          };\n\t        return i.next = i;\n\t      }\n\t    }\n\t    throw new TypeError(_typeof(e) + \" is not iterable\");\n\t  }\n\t  return GeneratorFunction.prototype = GeneratorFunctionPrototype, o(g, \"constructor\", {\n\t    value: GeneratorFunctionPrototype,\n\t    configurable: !0\n\t  }), o(GeneratorFunctionPrototype, \"constructor\", {\n\t    value: GeneratorFunction,\n\t    configurable: !0\n\t  }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, u, \"GeneratorFunction\"), e.isGeneratorFunction = function (t) {\n\t    var e = \"function\" == typeof t && t.constructor;\n\t    return !!e && (e === GeneratorFunction || \"GeneratorFunction\" === (e.displayName || e.name));\n\t  }, e.mark = function (t) {\n\t    return _Object$setPrototypeOf ? _Object$setPrototypeOf(t, GeneratorFunctionPrototype) : (t.__proto__ = GeneratorFunctionPrototype, define(t, u, \"GeneratorFunction\")), t.prototype = _Object$create(g), t;\n\t  }, e.awrap = function (t) {\n\t    return {\n\t      __await: t\n\t    };\n\t  }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, c, function () {\n\t    return this;\n\t  }), e.AsyncIterator = AsyncIterator, e.async = function (t, r, n, o, i) {\n\t    void 0 === i && (i = _Promise);\n\t    var a = new AsyncIterator(wrap(t, r, n, o), i);\n\t    return e.isGeneratorFunction(r) ? a : a.next().then(function (t) {\n\t      return t.done ? t.value : a.next();\n\t    });\n\t  }, defineIteratorMethods(g), define(g, u, \"Generator\"), define(g, a, function () {\n\t    return this;\n\t  }), define(g, \"toString\", function () {\n\t    return \"[object Generator]\";\n\t  }), e.keys = function (t) {\n\t    var e = Object(t),\n\t      r = [];\n\t    for (var n in e) _pushInstanceProperty(r).call(r, n);\n\t    return _reverseInstanceProperty(r).call(r), function next() {\n\t      for (; r.length;) {\n\t        var t = r.pop();\n\t        if (t in e) return next.value = t, next.done = !1, next;\n\t      }\n\t      return next.done = !0, next;\n\t    };\n\t  }, e.values = values, Context.prototype = {\n\t    constructor: Context,\n\t    reset: function reset(e) {\n\t      var _context3;\n\t      if (this.prev = 0, this.next = 0, this.sent = this._sent = t, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = t, _forEachInstanceProperty(_context3 = this.tryEntries).call(_context3, resetTryEntry), !e) for (var r in this) \"t\" === r.charAt(0) && n.call(this, r) && !isNaN(+_sliceInstanceProperty(r).call(r, 1)) && (this[r] = t);\n\t    },\n\t    stop: function stop() {\n\t      this.done = !0;\n\t      var t = this.tryEntries[0].completion;\n\t      if (\"throw\" === t.type) throw t.arg;\n\t      return this.rval;\n\t    },\n\t    dispatchException: function dispatchException(e) {\n\t      if (this.done) throw e;\n\t      var r = this;\n\t      function handle(n, o) {\n\t        return a.type = \"throw\", a.arg = e, r.next = n, o && (r.method = \"next\", r.arg = t), !!o;\n\t      }\n\t      for (var o = this.tryEntries.length - 1; o >= 0; --o) {\n\t        var i = this.tryEntries[o],\n\t          a = i.completion;\n\t        if (\"root\" === i.tryLoc) return handle(\"end\");\n\t        if (i.tryLoc <= this.prev) {\n\t          var c = n.call(i, \"catchLoc\"),\n\t            u = n.call(i, \"finallyLoc\");\n\t          if (c && u) {\n\t            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n\t            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n\t          } else if (c) {\n\t            if (this.prev < i.catchLoc) return handle(i.catchLoc, !0);\n\t          } else {\n\t            if (!u) throw new Error(\"try statement without catch or finally\");\n\t            if (this.prev < i.finallyLoc) return handle(i.finallyLoc);\n\t          }\n\t        }\n\t      }\n\t    },\n\t    abrupt: function abrupt(t, e) {\n\t      for (var r = this.tryEntries.length - 1; r >= 0; --r) {\n\t        var o = this.tryEntries[r];\n\t        if (o.tryLoc <= this.prev && n.call(o, \"finallyLoc\") && this.prev < o.finallyLoc) {\n\t          var i = o;\n\t          break;\n\t        }\n\t      }\n\t      i && (\"break\" === t || \"continue\" === t) && i.tryLoc <= e && e <= i.finallyLoc && (i = null);\n\t      var a = i ? i.completion : {};\n\t      return a.type = t, a.arg = e, i ? (this.method = \"next\", this.next = i.finallyLoc, y) : this.complete(a);\n\t    },\n\t    complete: function complete(t, e) {\n\t      if (\"throw\" === t.type) throw t.arg;\n\t      return \"break\" === t.type || \"continue\" === t.type ? this.next = t.arg : \"return\" === t.type ? (this.rval = this.arg = t.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === t.type && e && (this.next = e), y;\n\t    },\n\t    finish: function finish(t) {\n\t      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n\t        var r = this.tryEntries[e];\n\t        if (r.finallyLoc === t) return this.complete(r.completion, r.afterLoc), resetTryEntry(r), y;\n\t      }\n\t    },\n\t    \"catch\": function _catch(t) {\n\t      for (var e = this.tryEntries.length - 1; e >= 0; --e) {\n\t        var r = this.tryEntries[e];\n\t        if (r.tryLoc === t) {\n\t          var n = r.completion;\n\t          if (\"throw\" === n.type) {\n\t            var o = n.arg;\n\t            resetTryEntry(r);\n\t          }\n\t          return o;\n\t        }\n\t      }\n\t      throw new Error(\"illegal catch attempt\");\n\t    },\n\t    delegateYield: function delegateYield(e, r, n) {\n\t      return this.delegate = {\n\t        iterator: values(e),\n\t        resultName: r,\n\t        nextLoc: n\n\t      }, \"next\" === this.method && (this.arg = t), y;\n\t    }\n\t  }, e;\n\t}\n\tmodule.exports = _regeneratorRuntime, module.exports.__esModule = true, module.exports[\"default\"] = module.exports; \n} (regeneratorRuntime$1));\n\nvar regeneratorRuntimeExports = regeneratorRuntime$1.exports;\n\n// TODO(Babel 8): Remove this file.\n\nvar runtime = regeneratorRuntimeExports();\nvar regenerator = runtime;\n\n// Copied from https://github.com/facebook/regenerator/blob/main/packages/runtime/runtime.js#L736=\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n\nvar _regeneratorRuntime = /*@__PURE__*/getDefaultExportFromCjs(regenerator);\n\nvar aCallable$2 = aCallable$e;\nvar toObject$2 = toObject$f;\nvar IndexedObject = indexedObject;\nvar lengthOfArrayLike$3 = lengthOfArrayLike$e;\n\nvar $TypeError = TypeError;\n\n// `Array.prototype.{ reduce, reduceRight }` methods implementation\nvar createMethod = function (IS_RIGHT) {\n  return function (that, callbackfn, argumentsLength, memo) {\n    aCallable$2(callbackfn);\n    var O = toObject$2(that);\n    var self = IndexedObject(O);\n    var length = lengthOfArrayLike$3(O);\n    var index = IS_RIGHT ? length - 1 : 0;\n    var i = IS_RIGHT ? -1 : 1;\n    if (argumentsLength < 2) while (true) {\n      if (index in self) {\n        memo = self[index];\n        index += i;\n        break;\n      }\n      index += i;\n      if (IS_RIGHT ? index < 0 : length <= index) {\n        throw new $TypeError('Reduce of empty array with no initial value');\n      }\n    }\n    for (;IS_RIGHT ? index >= 0 : length > index; index += i) if (index in self) {\n      memo = callbackfn(memo, self[index], index, O);\n    }\n    return memo;\n  };\n};\n\nvar arrayReduce = {\n  // `Array.prototype.reduce` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduce\n  left: createMethod(false),\n  // `Array.prototype.reduceRight` method\n  // https://tc39.es/ecma262/#sec-array.prototype.reduceright\n  right: createMethod(true)\n};\n\nvar $$e = _export;\nvar $reduce = arrayReduce.left;\nvar arrayMethodIsStrict$3 = arrayMethodIsStrict$6;\nvar CHROME_VERSION = engineV8Version;\nvar IS_NODE = engineIsNode;\n\n// Chrome 80-82 has a critical bug\n// https://bugs.chromium.org/p/chromium/issues/detail?id=1049982\nvar CHROME_BUG = !IS_NODE && CHROME_VERSION > 79 && CHROME_VERSION < 83;\nvar FORCED$4 = CHROME_BUG || !arrayMethodIsStrict$3('reduce');\n\n// `Array.prototype.reduce` method\n// https://tc39.es/ecma262/#sec-array.prototype.reduce\n$$e({ target: 'Array', proto: true, forced: FORCED$4 }, {\n  reduce: function reduce(callbackfn /* , initialValue */) {\n    var length = arguments.length;\n    return $reduce(this, callbackfn, length, length > 1 ? arguments[1] : undefined);\n  }\n});\n\nvar entryVirtual$a = entryVirtual$o;\n\nvar reduce$3 = entryVirtual$a('Array').reduce;\n\nvar isPrototypeOf$a = objectIsPrototypeOf;\nvar method$a = reduce$3;\n\nvar ArrayPrototype$9 = Array.prototype;\n\nvar reduce$2 = function (it) {\n  var own = it.reduce;\n  return it === ArrayPrototype$9 || (isPrototypeOf$a(ArrayPrototype$9, it) && own === ArrayPrototype$9.reduce) ? method$a : own;\n};\n\nvar parent$l = reduce$2;\n\nvar reduce$1 = parent$l;\n\nvar reduce = reduce$1;\n\nvar _reduceInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(reduce);\n\nvar isArray = isArray$e;\nvar lengthOfArrayLike$2 = lengthOfArrayLike$e;\nvar doesNotExceedSafeInteger = doesNotExceedSafeInteger$4;\nvar bind$2 = functionBindContext;\n\n// `FlattenIntoArray` abstract operation\n// https://tc39.github.io/proposal-flatMap/#sec-FlattenIntoArray\nvar flattenIntoArray$1 = function (target, original, source, sourceLen, start, depth, mapper, thisArg) {\n  var targetIndex = start;\n  var sourceIndex = 0;\n  var mapFn = mapper ? bind$2(mapper, thisArg) : false;\n  var element, elementLen;\n\n  while (sourceIndex < sourceLen) {\n    if (sourceIndex in source) {\n      element = mapFn ? mapFn(source[sourceIndex], sourceIndex, original) : source[sourceIndex];\n\n      if (depth > 0 && isArray(element)) {\n        elementLen = lengthOfArrayLike$2(element);\n        targetIndex = flattenIntoArray$1(target, original, element, elementLen, targetIndex, depth - 1) - 1;\n      } else {\n        doesNotExceedSafeInteger(targetIndex + 1);\n        target[targetIndex] = element;\n      }\n\n      targetIndex++;\n    }\n    sourceIndex++;\n  }\n  return targetIndex;\n};\n\nvar flattenIntoArray_1 = flattenIntoArray$1;\n\nvar $$d = _export;\nvar flattenIntoArray = flattenIntoArray_1;\nvar aCallable$1 = aCallable$e;\nvar toObject$1 = toObject$f;\nvar lengthOfArrayLike$1 = lengthOfArrayLike$e;\nvar arraySpeciesCreate = arraySpeciesCreate$4;\n\n// `Array.prototype.flatMap` method\n// https://tc39.es/ecma262/#sec-array.prototype.flatmap\n$$d({ target: 'Array', proto: true }, {\n  flatMap: function flatMap(callbackfn /* , thisArg */) {\n    var O = toObject$1(this);\n    var sourceLen = lengthOfArrayLike$1(O);\n    var A;\n    aCallable$1(callbackfn);\n    A = arraySpeciesCreate(O, 0);\n    A.length = flattenIntoArray(A, O, O, sourceLen, 0, 1, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n    return A;\n  }\n});\n\nvar entryVirtual$9 = entryVirtual$o;\n\nvar flatMap$3 = entryVirtual$9('Array').flatMap;\n\nvar isPrototypeOf$9 = objectIsPrototypeOf;\nvar method$9 = flatMap$3;\n\nvar ArrayPrototype$8 = Array.prototype;\n\nvar flatMap$2 = function (it) {\n  var own = it.flatMap;\n  return it === ArrayPrototype$8 || (isPrototypeOf$9(ArrayPrototype$8, it) && own === ArrayPrototype$8.flatMap) ? method$9 : own;\n};\n\nvar parent$k = flatMap$2;\n\nvar flatMap$1 = parent$k;\n\nvar flatMap = flatMap$1;\n\nvar _flatMapInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(flatMap);\n\nvar internalMetadata = {exports: {}};\n\n// FF26- bug: ArrayBuffers are non-extensible, but Object.isExtensible does not report it\nvar fails$7 = fails$y;\n\nvar arrayBufferNonExtensible = fails$7(function () {\n  if (typeof ArrayBuffer == 'function') {\n    var buffer = new ArrayBuffer(8);\n    // eslint-disable-next-line es/no-object-isextensible, es/no-object-defineproperty -- safe\n    if (Object.isExtensible(buffer)) Object.defineProperty(buffer, 'a', { value: 8 });\n  }\n});\n\nvar fails$6 = fails$y;\nvar isObject$3 = isObject$j;\nvar classof$3 = classofRaw$2;\nvar ARRAY_BUFFER_NON_EXTENSIBLE = arrayBufferNonExtensible;\n\n// eslint-disable-next-line es/no-object-isextensible -- safe\nvar $isExtensible = Object.isExtensible;\nvar FAILS_ON_PRIMITIVES = fails$6(function () { $isExtensible(1); });\n\n// `Object.isExtensible` method\n// https://tc39.es/ecma262/#sec-object.isextensible\nvar objectIsExtensible = (FAILS_ON_PRIMITIVES || ARRAY_BUFFER_NON_EXTENSIBLE) ? function isExtensible(it) {\n  if (!isObject$3(it)) return false;\n  if (ARRAY_BUFFER_NON_EXTENSIBLE && classof$3(it) === 'ArrayBuffer') return false;\n  return $isExtensible ? $isExtensible(it) : true;\n} : $isExtensible;\n\nvar fails$5 = fails$y;\n\nvar freezing = !fails$5(function () {\n  // eslint-disable-next-line es/no-object-isextensible, es/no-object-preventextensions -- required for testing\n  return Object.isExtensible(Object.preventExtensions({}));\n});\n\nvar $$c = _export;\nvar uncurryThis$2 = functionUncurryThis;\nvar hiddenKeys = hiddenKeys$6;\nvar isObject$2 = isObject$j;\nvar hasOwn$3 = hasOwnProperty_1;\nvar defineProperty$2 = objectDefineProperty.f;\nvar getOwnPropertyNamesModule = objectGetOwnPropertyNames;\nvar getOwnPropertyNamesExternalModule = objectGetOwnPropertyNamesExternal;\nvar isExtensible = objectIsExtensible;\nvar uid = uid$4;\nvar FREEZING = freezing;\n\nvar REQUIRED = false;\nvar METADATA = uid('meta');\nvar id = 0;\n\nvar setMetadata = function (it) {\n  defineProperty$2(it, METADATA, { value: {\n    objectID: 'O' + id++, // object ID\n    weakData: {}          // weak collections IDs\n  } });\n};\n\nvar fastKey$1 = function (it, create) {\n  // return a primitive with prefix\n  if (!isObject$2(it)) return typeof it == 'symbol' ? it : (typeof it == 'string' ? 'S' : 'P') + it;\n  if (!hasOwn$3(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return 'F';\n    // not necessary to add metadata\n    if (!create) return 'E';\n    // add missing metadata\n    setMetadata(it);\n  // return object ID\n  } return it[METADATA].objectID;\n};\n\nvar getWeakData = function (it, create) {\n  if (!hasOwn$3(it, METADATA)) {\n    // can't set metadata to uncaught frozen object\n    if (!isExtensible(it)) return true;\n    // not necessary to add metadata\n    if (!create) return false;\n    // add missing metadata\n    setMetadata(it);\n  // return the store of weak collections IDs\n  } return it[METADATA].weakData;\n};\n\n// add metadata on freeze-family methods calling\nvar onFreeze = function (it) {\n  if (FREEZING && REQUIRED && isExtensible(it) && !hasOwn$3(it, METADATA)) setMetadata(it);\n  return it;\n};\n\nvar enable = function () {\n  meta.enable = function () { /* empty */ };\n  REQUIRED = true;\n  var getOwnPropertyNames = getOwnPropertyNamesModule.f;\n  var splice = uncurryThis$2([].splice);\n  var test = {};\n  test[METADATA] = 1;\n\n  // prevent exposing of metadata key\n  if (getOwnPropertyNames(test).length) {\n    getOwnPropertyNamesModule.f = function (it) {\n      var result = getOwnPropertyNames(it);\n      for (var i = 0, length = result.length; i < length; i++) {\n        if (result[i] === METADATA) {\n          splice(result, i, 1);\n          break;\n        }\n      } return result;\n    };\n\n    $$c({ target: 'Object', stat: true, forced: true }, {\n      getOwnPropertyNames: getOwnPropertyNamesExternalModule.f\n    });\n  }\n};\n\nvar meta = internalMetadata.exports = {\n  enable: enable,\n  fastKey: fastKey$1,\n  getWeakData: getWeakData,\n  onFreeze: onFreeze\n};\n\nhiddenKeys[METADATA] = true;\n\nvar internalMetadataExports = internalMetadata.exports;\n\nvar $$b = _export;\nvar global$2 = global$q;\nvar InternalMetadataModule = internalMetadataExports;\nvar fails$4 = fails$y;\nvar createNonEnumerableProperty = createNonEnumerableProperty$9;\nvar iterate$1 = iterate$7;\nvar anInstance$1 = anInstance$3;\nvar isCallable = isCallable$m;\nvar isObject$1 = isObject$j;\nvar isNullOrUndefined$1 = isNullOrUndefined$6;\nvar setToStringTag = setToStringTag$7;\nvar defineProperty$1 = objectDefineProperty.f;\nvar forEach = arrayIteration.forEach;\nvar DESCRIPTORS$4 = descriptors;\nvar InternalStateModule$1 = internalState;\n\nvar setInternalState$1 = InternalStateModule$1.set;\nvar internalStateGetterFor$1 = InternalStateModule$1.getterFor;\n\nvar collection$2 = function (CONSTRUCTOR_NAME, wrapper, common) {\n  var IS_MAP = CONSTRUCTOR_NAME.indexOf('Map') !== -1;\n  var IS_WEAK = CONSTRUCTOR_NAME.indexOf('Weak') !== -1;\n  var ADDER = IS_MAP ? 'set' : 'add';\n  var NativeConstructor = global$2[CONSTRUCTOR_NAME];\n  var NativePrototype = NativeConstructor && NativeConstructor.prototype;\n  var exported = {};\n  var Constructor;\n\n  if (!DESCRIPTORS$4 || !isCallable(NativeConstructor)\n    || !(IS_WEAK || NativePrototype.forEach && !fails$4(function () { new NativeConstructor().entries().next(); }))\n  ) {\n    // create collection constructor\n    Constructor = common.getConstructor(wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER);\n    InternalMetadataModule.enable();\n  } else {\n    Constructor = wrapper(function (target, iterable) {\n      setInternalState$1(anInstance$1(target, Prototype), {\n        type: CONSTRUCTOR_NAME,\n        collection: new NativeConstructor()\n      });\n      if (!isNullOrUndefined$1(iterable)) iterate$1(iterable, target[ADDER], { that: target, AS_ENTRIES: IS_MAP });\n    });\n\n    var Prototype = Constructor.prototype;\n\n    var getInternalState = internalStateGetterFor$1(CONSTRUCTOR_NAME);\n\n    forEach(['add', 'clear', 'delete', 'forEach', 'get', 'has', 'set', 'keys', 'values', 'entries'], function (KEY) {\n      var IS_ADDER = KEY === 'add' || KEY === 'set';\n      if (KEY in NativePrototype && !(IS_WEAK && KEY === 'clear')) {\n        createNonEnumerableProperty(Prototype, KEY, function (a, b) {\n          var collection = getInternalState(this).collection;\n          if (!IS_ADDER && IS_WEAK && !isObject$1(a)) return KEY === 'get' ? undefined : false;\n          var result = collection[KEY](a === 0 ? 0 : a, b);\n          return IS_ADDER ? this : result;\n        });\n      }\n    });\n\n    IS_WEAK || defineProperty$1(Prototype, 'size', {\n      configurable: true,\n      get: function () {\n        return getInternalState(this).collection.size;\n      }\n    });\n  }\n\n  setToStringTag(Constructor, CONSTRUCTOR_NAME, false, true);\n\n  exported[CONSTRUCTOR_NAME] = Constructor;\n  $$b({ global: true, forced: true }, exported);\n\n  if (!IS_WEAK) common.setStrong(Constructor, CONSTRUCTOR_NAME, IS_MAP);\n\n  return Constructor;\n};\n\nvar defineBuiltIn = defineBuiltIn$6;\n\nvar defineBuiltIns$1 = function (target, src, options) {\n  for (var key in src) {\n    if (options && options.unsafe && target[key]) target[key] = src[key];\n    else defineBuiltIn(target, key, src[key], options);\n  } return target;\n};\n\nvar create$1 = objectCreate;\nvar defineBuiltInAccessor = defineBuiltInAccessor$3;\nvar defineBuiltIns = defineBuiltIns$1;\nvar bind$1 = functionBindContext;\nvar anInstance = anInstance$3;\nvar isNullOrUndefined = isNullOrUndefined$6;\nvar iterate = iterate$7;\nvar defineIterator = iteratorDefine;\nvar createIterResultObject = createIterResultObject$3;\nvar setSpecies = setSpecies$2;\nvar DESCRIPTORS$3 = descriptors;\nvar fastKey = internalMetadataExports.fastKey;\nvar InternalStateModule = internalState;\n\nvar setInternalState = InternalStateModule.set;\nvar internalStateGetterFor = InternalStateModule.getterFor;\n\nvar collectionStrong$2 = {\n  getConstructor: function (wrapper, CONSTRUCTOR_NAME, IS_MAP, ADDER) {\n    var Constructor = wrapper(function (that, iterable) {\n      anInstance(that, Prototype);\n      setInternalState(that, {\n        type: CONSTRUCTOR_NAME,\n        index: create$1(null),\n        first: undefined,\n        last: undefined,\n        size: 0\n      });\n      if (!DESCRIPTORS$3) that.size = 0;\n      if (!isNullOrUndefined(iterable)) iterate(iterable, that[ADDER], { that: that, AS_ENTRIES: IS_MAP });\n    });\n\n    var Prototype = Constructor.prototype;\n\n    var getInternalState = internalStateGetterFor(CONSTRUCTOR_NAME);\n\n    var define = function (that, key, value) {\n      var state = getInternalState(that);\n      var entry = getEntry(that, key);\n      var previous, index;\n      // change existing entry\n      if (entry) {\n        entry.value = value;\n      // create new entry\n      } else {\n        state.last = entry = {\n          index: index = fastKey(key, true),\n          key: key,\n          value: value,\n          previous: previous = state.last,\n          next: undefined,\n          removed: false\n        };\n        if (!state.first) state.first = entry;\n        if (previous) previous.next = entry;\n        if (DESCRIPTORS$3) state.size++;\n        else that.size++;\n        // add to index\n        if (index !== 'F') state.index[index] = entry;\n      } return that;\n    };\n\n    var getEntry = function (that, key) {\n      var state = getInternalState(that);\n      // fast case\n      var index = fastKey(key);\n      var entry;\n      if (index !== 'F') return state.index[index];\n      // frozen object case\n      for (entry = state.first; entry; entry = entry.next) {\n        if (entry.key === key) return entry;\n      }\n    };\n\n    defineBuiltIns(Prototype, {\n      // `{ Map, Set }.prototype.clear()` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.clear\n      // https://tc39.es/ecma262/#sec-set.prototype.clear\n      clear: function clear() {\n        var that = this;\n        var state = getInternalState(that);\n        var data = state.index;\n        var entry = state.first;\n        while (entry) {\n          entry.removed = true;\n          if (entry.previous) entry.previous = entry.previous.next = undefined;\n          delete data[entry.index];\n          entry = entry.next;\n        }\n        state.first = state.last = undefined;\n        if (DESCRIPTORS$3) state.size = 0;\n        else that.size = 0;\n      },\n      // `{ Map, Set }.prototype.delete(key)` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.delete\n      // https://tc39.es/ecma262/#sec-set.prototype.delete\n      'delete': function (key) {\n        var that = this;\n        var state = getInternalState(that);\n        var entry = getEntry(that, key);\n        if (entry) {\n          var next = entry.next;\n          var prev = entry.previous;\n          delete state.index[entry.index];\n          entry.removed = true;\n          if (prev) prev.next = next;\n          if (next) next.previous = prev;\n          if (state.first === entry) state.first = next;\n          if (state.last === entry) state.last = prev;\n          if (DESCRIPTORS$3) state.size--;\n          else that.size--;\n        } return !!entry;\n      },\n      // `{ Map, Set }.prototype.forEach(callbackfn, thisArg = undefined)` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.foreach\n      // https://tc39.es/ecma262/#sec-set.prototype.foreach\n      forEach: function forEach(callbackfn /* , that = undefined */) {\n        var state = getInternalState(this);\n        var boundFunction = bind$1(callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n        var entry;\n        while (entry = entry ? entry.next : state.first) {\n          boundFunction(entry.value, entry.key, this);\n          // revert to the last existing entry\n          while (entry && entry.removed) entry = entry.previous;\n        }\n      },\n      // `{ Map, Set}.prototype.has(key)` methods\n      // https://tc39.es/ecma262/#sec-map.prototype.has\n      // https://tc39.es/ecma262/#sec-set.prototype.has\n      has: function has(key) {\n        return !!getEntry(this, key);\n      }\n    });\n\n    defineBuiltIns(Prototype, IS_MAP ? {\n      // `Map.prototype.get(key)` method\n      // https://tc39.es/ecma262/#sec-map.prototype.get\n      get: function get(key) {\n        var entry = getEntry(this, key);\n        return entry && entry.value;\n      },\n      // `Map.prototype.set(key, value)` method\n      // https://tc39.es/ecma262/#sec-map.prototype.set\n      set: function set(key, value) {\n        return define(this, key === 0 ? 0 : key, value);\n      }\n    } : {\n      // `Set.prototype.add(value)` method\n      // https://tc39.es/ecma262/#sec-set.prototype.add\n      add: function add(value) {\n        return define(this, value = value === 0 ? 0 : value, value);\n      }\n    });\n    if (DESCRIPTORS$3) defineBuiltInAccessor(Prototype, 'size', {\n      configurable: true,\n      get: function () {\n        return getInternalState(this).size;\n      }\n    });\n    return Constructor;\n  },\n  setStrong: function (Constructor, CONSTRUCTOR_NAME, IS_MAP) {\n    var ITERATOR_NAME = CONSTRUCTOR_NAME + ' Iterator';\n    var getInternalCollectionState = internalStateGetterFor(CONSTRUCTOR_NAME);\n    var getInternalIteratorState = internalStateGetterFor(ITERATOR_NAME);\n    // `{ Map, Set }.prototype.{ keys, values, entries, @@iterator }()` methods\n    // https://tc39.es/ecma262/#sec-map.prototype.entries\n    // https://tc39.es/ecma262/#sec-map.prototype.keys\n    // https://tc39.es/ecma262/#sec-map.prototype.values\n    // https://tc39.es/ecma262/#sec-map.prototype-@@iterator\n    // https://tc39.es/ecma262/#sec-set.prototype.entries\n    // https://tc39.es/ecma262/#sec-set.prototype.keys\n    // https://tc39.es/ecma262/#sec-set.prototype.values\n    // https://tc39.es/ecma262/#sec-set.prototype-@@iterator\n    defineIterator(Constructor, CONSTRUCTOR_NAME, function (iterated, kind) {\n      setInternalState(this, {\n        type: ITERATOR_NAME,\n        target: iterated,\n        state: getInternalCollectionState(iterated),\n        kind: kind,\n        last: undefined\n      });\n    }, function () {\n      var state = getInternalIteratorState(this);\n      var kind = state.kind;\n      var entry = state.last;\n      // revert to the last existing entry\n      while (entry && entry.removed) entry = entry.previous;\n      // get next entry\n      if (!state.target || !(state.last = entry = entry ? entry.next : state.state.first)) {\n        // or finish the iteration\n        state.target = undefined;\n        return createIterResultObject(undefined, true);\n      }\n      // return step by kind\n      if (kind === 'keys') return createIterResultObject(entry.key, false);\n      if (kind === 'values') return createIterResultObject(entry.value, false);\n      return createIterResultObject([entry.key, entry.value], false);\n    }, IS_MAP ? 'entries' : 'values', !IS_MAP, true);\n\n    // `{ Map, Set }.prototype[@@species]` accessors\n    // https://tc39.es/ecma262/#sec-get-map-@@species\n    // https://tc39.es/ecma262/#sec-get-set-@@species\n    setSpecies(CONSTRUCTOR_NAME);\n  }\n};\n\nvar collection$1 = collection$2;\nvar collectionStrong$1 = collectionStrong$2;\n\n// `Map` constructor\n// https://tc39.es/ecma262/#sec-map-objects\ncollection$1('Map', function (init) {\n  return function Map() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong$1);\n\nvar path$8 = path$u;\n\nvar map$2 = path$8.Map;\n\nvar parent$j = map$2;\n\n\nvar map$1 = parent$j;\n\nvar map = map$1;\n\nvar _Map = /*@__PURE__*/getDefaultExportFromCjs(map);\n\nvar collection = collection$2;\nvar collectionStrong = collectionStrong$2;\n\n// `Set` constructor\n// https://tc39.es/ecma262/#sec-set-objects\ncollection('Set', function (init) {\n  return function Set() { return init(this, arguments.length ? arguments[0] : undefined); };\n}, collectionStrong);\n\nvar path$7 = path$u;\n\nvar set$2 = path$7.Set;\n\nvar parent$i = set$2;\n\n\nvar set$1 = parent$i;\n\nvar set = set$1;\n\nvar _Set = /*@__PURE__*/getDefaultExportFromCjs(set);\n\nvar iterator = iterator$4;\n\nvar _Symbol$iterator2 = /*@__PURE__*/getDefaultExportFromCjs(iterator);\n\nvar getIterator$5 = getIterator$8;\n\nvar getIterator_1 = getIterator$5;\n\nvar parent$h = getIterator_1;\n\n\nvar getIterator$4 = parent$h;\n\nvar parent$g = getIterator$4;\n\nvar getIterator$3 = parent$g;\n\nvar parent$f = getIterator$3;\n\nvar getIterator$2 = parent$f;\n\nvar getIterator$1 = getIterator$2;\n\nvar getIterator = getIterator$1;\n\nvar _getIterator = /*@__PURE__*/getDefaultExportFromCjs(getIterator);\n\nvar arraySlice = arraySliceSimple;\n\nvar floor = Math.floor;\n\nvar mergeSort = function (array, comparefn) {\n  var length = array.length;\n  var middle = floor(length / 2);\n  return length < 8 ? insertionSort(array, comparefn) : merge(\n    array,\n    mergeSort(arraySlice(array, 0, middle), comparefn),\n    mergeSort(arraySlice(array, middle), comparefn),\n    comparefn\n  );\n};\n\nvar insertionSort = function (array, comparefn) {\n  var length = array.length;\n  var i = 1;\n  var element, j;\n\n  while (i < length) {\n    j = i;\n    element = array[i];\n    while (j && comparefn(array[j - 1], element) > 0) {\n      array[j] = array[--j];\n    }\n    if (j !== i++) array[j] = element;\n  } return array;\n};\n\nvar merge = function (array, left, right, comparefn) {\n  var llength = left.length;\n  var rlength = right.length;\n  var lindex = 0;\n  var rindex = 0;\n\n  while (lindex < llength || rindex < rlength) {\n    array[lindex + rindex] = (lindex < llength && rindex < rlength)\n      ? comparefn(left[lindex], right[rindex]) <= 0 ? left[lindex++] : right[rindex++]\n      : lindex < llength ? left[lindex++] : right[rindex++];\n  } return array;\n};\n\nvar arraySort = mergeSort;\n\nvar userAgent$1 = engineUserAgent;\n\nvar firefox = userAgent$1.match(/firefox\\/(\\d+)/i);\n\nvar engineFfVersion = !!firefox && +firefox[1];\n\nvar UA = engineUserAgent;\n\nvar engineIsIeOrEdge = /MSIE|Trident/.test(UA);\n\nvar userAgent = engineUserAgent;\n\nvar webkit = userAgent.match(/AppleWebKit\\/(\\d+)\\./);\n\nvar engineWebkitVersion = !!webkit && +webkit[1];\n\nvar $$a = _export;\nvar uncurryThis$1 = functionUncurryThis;\nvar aCallable = aCallable$e;\nvar toObject = toObject$f;\nvar lengthOfArrayLike = lengthOfArrayLike$e;\nvar deletePropertyOrThrow = deletePropertyOrThrow$2;\nvar toString$2 = toString$c;\nvar fails$3 = fails$y;\nvar internalSort = arraySort;\nvar arrayMethodIsStrict$2 = arrayMethodIsStrict$6;\nvar FF = engineFfVersion;\nvar IE_OR_EDGE = engineIsIeOrEdge;\nvar V8 = engineV8Version;\nvar WEBKIT = engineWebkitVersion;\n\nvar test = [];\nvar nativeSort = uncurryThis$1(test.sort);\nvar push$1 = uncurryThis$1(test.push);\n\n// IE8-\nvar FAILS_ON_UNDEFINED = fails$3(function () {\n  test.sort(undefined);\n});\n// V8 bug\nvar FAILS_ON_NULL = fails$3(function () {\n  test.sort(null);\n});\n// Old WebKit\nvar STRICT_METHOD$2 = arrayMethodIsStrict$2('sort');\n\nvar STABLE_SORT = !fails$3(function () {\n  // feature detection can be too slow, so check engines versions\n  if (V8) return V8 < 70;\n  if (FF && FF > 3) return;\n  if (IE_OR_EDGE) return true;\n  if (WEBKIT) return WEBKIT < 603;\n\n  var result = '';\n  var code, chr, value, index;\n\n  // generate an array with more 512 elements (Chakra and old V8 fails only in this case)\n  for (code = 65; code < 76; code++) {\n    chr = String.fromCharCode(code);\n\n    switch (code) {\n      case 66: case 69: case 70: case 72: value = 3; break;\n      case 68: case 71: value = 4; break;\n      default: value = 2;\n    }\n\n    for (index = 0; index < 47; index++) {\n      test.push({ k: chr + index, v: value });\n    }\n  }\n\n  test.sort(function (a, b) { return b.v - a.v; });\n\n  for (index = 0; index < test.length; index++) {\n    chr = test[index].k.charAt(0);\n    if (result.charAt(result.length - 1) !== chr) result += chr;\n  }\n\n  return result !== 'DGBEFHACIJK';\n});\n\nvar FORCED$3 = FAILS_ON_UNDEFINED || !FAILS_ON_NULL || !STRICT_METHOD$2 || !STABLE_SORT;\n\nvar getSortCompare = function (comparefn) {\n  return function (x, y) {\n    if (y === undefined) return -1;\n    if (x === undefined) return 1;\n    if (comparefn !== undefined) return +comparefn(x, y) || 0;\n    return toString$2(x) > toString$2(y) ? 1 : -1;\n  };\n};\n\n// `Array.prototype.sort` method\n// https://tc39.es/ecma262/#sec-array.prototype.sort\n$$a({ target: 'Array', proto: true, forced: FORCED$3 }, {\n  sort: function sort(comparefn) {\n    if (comparefn !== undefined) aCallable(comparefn);\n\n    var array = toObject(this);\n\n    if (STABLE_SORT) return comparefn === undefined ? nativeSort(array) : nativeSort(array, comparefn);\n\n    var items = [];\n    var arrayLength = lengthOfArrayLike(array);\n    var itemsLength, index;\n\n    for (index = 0; index < arrayLength; index++) {\n      if (index in array) push$1(items, array[index]);\n    }\n\n    internalSort(items, getSortCompare(comparefn));\n\n    itemsLength = lengthOfArrayLike(items);\n    index = 0;\n\n    while (index < itemsLength) array[index] = items[index++];\n    while (index < arrayLength) deletePropertyOrThrow(array, index++);\n\n    return array;\n  }\n});\n\nvar entryVirtual$8 = entryVirtual$o;\n\nvar sort$3 = entryVirtual$8('Array').sort;\n\nvar isPrototypeOf$8 = objectIsPrototypeOf;\nvar method$8 = sort$3;\n\nvar ArrayPrototype$7 = Array.prototype;\n\nvar sort$2 = function (it) {\n  var own = it.sort;\n  return it === ArrayPrototype$7 || (isPrototypeOf$8(ArrayPrototype$7, it) && own === ArrayPrototype$7.sort) ? method$8 : own;\n};\n\nvar parent$e = sort$2;\n\nvar sort$1 = parent$e;\n\nvar sort = sort$1;\n\nvar _sortInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(sort);\n\nvar $$9 = _export;\nvar $some = arrayIteration.some;\nvar arrayMethodIsStrict$1 = arrayMethodIsStrict$6;\n\nvar STRICT_METHOD$1 = arrayMethodIsStrict$1('some');\n\n// `Array.prototype.some` method\n// https://tc39.es/ecma262/#sec-array.prototype.some\n$$9({ target: 'Array', proto: true, forced: !STRICT_METHOD$1 }, {\n  some: function some(callbackfn /* , thisArg */) {\n    return $some(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nvar entryVirtual$7 = entryVirtual$o;\n\nvar some$3 = entryVirtual$7('Array').some;\n\nvar isPrototypeOf$7 = objectIsPrototypeOf;\nvar method$7 = some$3;\n\nvar ArrayPrototype$6 = Array.prototype;\n\nvar some$2 = function (it) {\n  var own = it.some;\n  return it === ArrayPrototype$6 || (isPrototypeOf$7(ArrayPrototype$6, it) && own === ArrayPrototype$6.some) ? method$7 : own;\n};\n\nvar parent$d = some$2;\n\nvar some$1 = parent$d;\n\nvar some = some$1;\n\nvar _someInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(some);\n\nvar entryVirtual$6 = entryVirtual$o;\n\nvar keys$3 = entryVirtual$6('Array').keys;\n\nvar parent$c = keys$3;\n\nvar keys$2 = parent$c;\n\nvar classof$2 = classof$g;\nvar hasOwn$2 = hasOwnProperty_1;\nvar isPrototypeOf$6 = objectIsPrototypeOf;\nvar method$6 = keys$2;\n\nvar ArrayPrototype$5 = Array.prototype;\n\nvar DOMIterables$2 = {\n  DOMTokenList: true,\n  NodeList: true\n};\n\nvar keys$1 = function (it) {\n  var own = it.keys;\n  return it === ArrayPrototype$5 || (isPrototypeOf$6(ArrayPrototype$5, it) && own === ArrayPrototype$5.keys)\n    || hasOwn$2(DOMIterables$2, classof$2(it)) ? method$6 : own;\n};\n\nvar keys = keys$1;\n\nvar _keysInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(keys);\n\nvar entryVirtual$5 = entryVirtual$o;\n\nvar values$3 = entryVirtual$5('Array').values;\n\nvar parent$b = values$3;\n\nvar values$2 = parent$b;\n\nvar classof$1 = classof$g;\nvar hasOwn$1 = hasOwnProperty_1;\nvar isPrototypeOf$5 = objectIsPrototypeOf;\nvar method$5 = values$2;\n\nvar ArrayPrototype$4 = Array.prototype;\n\nvar DOMIterables$1 = {\n  DOMTokenList: true,\n  NodeList: true\n};\n\nvar values$1 = function (it) {\n  var own = it.values;\n  return it === ArrayPrototype$4 || (isPrototypeOf$5(ArrayPrototype$4, it) && own === ArrayPrototype$4.values)\n    || hasOwn$1(DOMIterables$1, classof$1(it)) ? method$5 : own;\n};\n\nvar values = values$1;\n\nvar _valuesInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(values);\n\nvar entryVirtual$4 = entryVirtual$o;\n\nvar entries$3 = entryVirtual$4('Array').entries;\n\nvar parent$a = entries$3;\n\nvar entries$2 = parent$a;\n\nvar classof = classof$g;\nvar hasOwn = hasOwnProperty_1;\nvar isPrototypeOf$4 = objectIsPrototypeOf;\nvar method$4 = entries$2;\n\nvar ArrayPrototype$3 = Array.prototype;\n\nvar DOMIterables = {\n  DOMTokenList: true,\n  NodeList: true\n};\n\nvar entries$1 = function (it) {\n  var own = it.entries;\n  return it === ArrayPrototype$3 || (isPrototypeOf$4(ArrayPrototype$3, it) && own === ArrayPrototype$3.entries)\n    || hasOwn(DOMIterables, classof(it)) ? method$4 : own;\n};\n\nvar entries = entries$1;\n\nvar _entriesInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(entries);\n\nvar defineProperty = defineProperty$a;\n\nvar _Object$defineProperty = /*@__PURE__*/getDefaultExportFromCjs(defineProperty);\n\nvar $$8 = _export;\nvar getBuiltIn = getBuiltIn$f;\nvar apply = functionApply;\nvar bind = functionBind;\nvar aConstructor = aConstructor$2;\nvar anObject = anObject$d;\nvar isObject = isObject$j;\nvar create = objectCreate;\nvar fails$2 = fails$y;\n\nvar nativeConstruct = getBuiltIn('Reflect', 'construct');\nvar ObjectPrototype = Object.prototype;\nvar push = [].push;\n\n// `Reflect.construct` method\n// https://tc39.es/ecma262/#sec-reflect.construct\n// MS Edge supports only 2 arguments and argumentsList argument is optional\n// FF Nightly sets third argument as `new.target`, but does not create `this` from it\nvar NEW_TARGET_BUG = fails$2(function () {\n  function F() { /* empty */ }\n  return !(nativeConstruct(function () { /* empty */ }, [], F) instanceof F);\n});\n\nvar ARGS_BUG = !fails$2(function () {\n  nativeConstruct(function () { /* empty */ });\n});\n\nvar FORCED$2 = NEW_TARGET_BUG || ARGS_BUG;\n\n$$8({ target: 'Reflect', stat: true, forced: FORCED$2, sham: FORCED$2 }, {\n  construct: function construct(Target, args /* , newTarget */) {\n    aConstructor(Target);\n    anObject(args);\n    var newTarget = arguments.length < 3 ? Target : aConstructor(arguments[2]);\n    if (ARGS_BUG && !NEW_TARGET_BUG) return nativeConstruct(Target, args, newTarget);\n    if (Target === newTarget) {\n      // w/o altered newTarget, optimization for 0-4 arguments\n      switch (args.length) {\n        case 0: return new Target();\n        case 1: return new Target(args[0]);\n        case 2: return new Target(args[0], args[1]);\n        case 3: return new Target(args[0], args[1], args[2]);\n        case 4: return new Target(args[0], args[1], args[2], args[3]);\n      }\n      // w/o altered newTarget, lot of arguments case\n      var $args = [null];\n      apply(push, $args, args);\n      return new (apply(bind, Target, $args))();\n    }\n    // with altered newTarget, not support built-in constructors\n    var proto = newTarget.prototype;\n    var instance = create(isObject(proto) ? proto : ObjectPrototype);\n    var result = apply(Target, instance, args);\n    return isObject(result) ? result : instance;\n  }\n});\n\nvar path$6 = path$u;\n\nvar construct$2 = path$6.Reflect.construct;\n\nvar parent$9 = construct$2;\n\nvar construct$1 = parent$9;\n\nvar construct = construct$1;\n\nvar _Reflect$construct = /*@__PURE__*/getDefaultExportFromCjs(construct);\n\nvar path$5 = path$u;\n\nvar getOwnPropertySymbols$2 = path$5.Object.getOwnPropertySymbols;\n\nvar parent$8 = getOwnPropertySymbols$2;\n\nvar getOwnPropertySymbols$1 = parent$8;\n\nvar getOwnPropertySymbols = getOwnPropertySymbols$1;\n\nvar _Object$getOwnPropertySymbols = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertySymbols);\n\nvar getOwnPropertyDescriptor$3 = {exports: {}};\n\nvar $$7 = _export;\nvar fails$1 = fails$y;\nvar toIndexedObject$1 = toIndexedObject$b;\nvar nativeGetOwnPropertyDescriptor = objectGetOwnPropertyDescriptor.f;\nvar DESCRIPTORS$2 = descriptors;\n\nvar FORCED$1 = !DESCRIPTORS$2 || fails$1(function () { nativeGetOwnPropertyDescriptor(1); });\n\n// `Object.getOwnPropertyDescriptor` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptor\n$$7({ target: 'Object', stat: true, forced: FORCED$1, sham: !DESCRIPTORS$2 }, {\n  getOwnPropertyDescriptor: function getOwnPropertyDescriptor(it, key) {\n    return nativeGetOwnPropertyDescriptor(toIndexedObject$1(it), key);\n  }\n});\n\nvar path$4 = path$u;\n\nvar Object$2 = path$4.Object;\n\nvar getOwnPropertyDescriptor$2 = getOwnPropertyDescriptor$3.exports = function getOwnPropertyDescriptor(it, key) {\n  return Object$2.getOwnPropertyDescriptor(it, key);\n};\n\nif (Object$2.getOwnPropertyDescriptor.sham) getOwnPropertyDescriptor$2.sham = true;\n\nvar getOwnPropertyDescriptorExports = getOwnPropertyDescriptor$3.exports;\n\nvar parent$7 = getOwnPropertyDescriptorExports;\n\nvar getOwnPropertyDescriptor$1 = parent$7;\n\nvar getOwnPropertyDescriptor = getOwnPropertyDescriptor$1;\n\nvar _Object$getOwnPropertyDescriptor = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertyDescriptor);\n\nvar $$6 = _export;\nvar DESCRIPTORS$1 = descriptors;\nvar ownKeys$2 = ownKeys$8;\nvar toIndexedObject = toIndexedObject$b;\nvar getOwnPropertyDescriptorModule = objectGetOwnPropertyDescriptor;\nvar createProperty = createProperty$6;\n\n// `Object.getOwnPropertyDescriptors` method\n// https://tc39.es/ecma262/#sec-object.getownpropertydescriptors\n$$6({ target: 'Object', stat: true, sham: !DESCRIPTORS$1 }, {\n  getOwnPropertyDescriptors: function getOwnPropertyDescriptors(object) {\n    var O = toIndexedObject(object);\n    var getOwnPropertyDescriptor = getOwnPropertyDescriptorModule.f;\n    var keys = ownKeys$2(O);\n    var result = {};\n    var index = 0;\n    var key, descriptor;\n    while (keys.length > index) {\n      descriptor = getOwnPropertyDescriptor(O, key = keys[index++]);\n      if (descriptor !== undefined) createProperty(result, key, descriptor);\n    }\n    return result;\n  }\n});\n\nvar path$3 = path$u;\n\nvar getOwnPropertyDescriptors$2 = path$3.Object.getOwnPropertyDescriptors;\n\nvar parent$6 = getOwnPropertyDescriptors$2;\n\nvar getOwnPropertyDescriptors$1 = parent$6;\n\nvar getOwnPropertyDescriptors = getOwnPropertyDescriptors$1;\n\nvar _Object$getOwnPropertyDescriptors = /*@__PURE__*/getDefaultExportFromCjs(getOwnPropertyDescriptors);\n\nvar defineProperties$4 = {exports: {}};\n\nvar $$5 = _export;\nvar DESCRIPTORS = descriptors;\nvar defineProperties$3 = objectDefineProperties.f;\n\n// `Object.defineProperties` method\n// https://tc39.es/ecma262/#sec-object.defineproperties\n// eslint-disable-next-line es/no-object-defineproperties -- safe\n$$5({ target: 'Object', stat: true, forced: Object.defineProperties !== defineProperties$3, sham: !DESCRIPTORS }, {\n  defineProperties: defineProperties$3\n});\n\nvar path$2 = path$u;\n\nvar Object$1 = path$2.Object;\n\nvar defineProperties$2 = defineProperties$4.exports = function defineProperties(T, D) {\n  return Object$1.defineProperties(T, D);\n};\n\nif (Object$1.defineProperties.sham) defineProperties$2.sham = true;\n\nvar definePropertiesExports = defineProperties$4.exports;\n\nvar parent$5 = definePropertiesExports;\n\nvar defineProperties$1 = parent$5;\n\nvar defineProperties = defineProperties$1;\n\nvar _Object$defineProperties = /*@__PURE__*/getDefaultExportFromCjs(defineProperties);\n\n// Unique ID creation requires a high quality random # generator. In the browser we therefore\n// require the crypto API and do not support built-in fallback to lower quality random number\n// generators (like Math.random()).\nlet getRandomValues;\nconst rnds8 = new Uint8Array(16);\nfunction rng() {\n  // lazy load so that environments that need to polyfill have a chance to do so\n  if (!getRandomValues) {\n    // getRandomValues needs to be invoked in a context where \"this\" is a Crypto implementation.\n    getRandomValues = typeof crypto !== 'undefined' && crypto.getRandomValues && crypto.getRandomValues.bind(crypto);\n\n    if (!getRandomValues) {\n      throw new Error('crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported');\n    }\n  }\n\n  return getRandomValues(rnds8);\n}\n\n/**\n * Convert array of 16 byte values to UUID string format of the form:\n * XXXXXXXX-XXXX-XXXX-XXXX-XXXXXXXXXXXX\n */\n\nconst byteToHex = [];\n\nfor (let i = 0; i < 256; ++i) {\n  byteToHex.push((i + 0x100).toString(16).slice(1));\n}\n\nfunction unsafeStringify(arr, offset = 0) {\n  // Note: Be careful editing this code!  It's been tuned for performance\n  // and works in ways you may not expect. See https://github.com/uuidjs/uuid/pull/434\n  return byteToHex[arr[offset + 0]] + byteToHex[arr[offset + 1]] + byteToHex[arr[offset + 2]] + byteToHex[arr[offset + 3]] + '-' + byteToHex[arr[offset + 4]] + byteToHex[arr[offset + 5]] + '-' + byteToHex[arr[offset + 6]] + byteToHex[arr[offset + 7]] + '-' + byteToHex[arr[offset + 8]] + byteToHex[arr[offset + 9]] + '-' + byteToHex[arr[offset + 10]] + byteToHex[arr[offset + 11]] + byteToHex[arr[offset + 12]] + byteToHex[arr[offset + 13]] + byteToHex[arr[offset + 14]] + byteToHex[arr[offset + 15]];\n}\n\nconst randomUUID = typeof crypto !== 'undefined' && crypto.randomUUID && crypto.randomUUID.bind(crypto);\nvar native = {\n  randomUUID\n};\n\nfunction v4(options, buf, offset) {\n  if (native.randomUUID && !buf && !options) {\n    return native.randomUUID();\n  }\n\n  options = options || {};\n  const rnds = options.random || (options.rng || rng)(); // Per 4.4, set bits for version and `clock_seq_hi_and_reserved`\n\n  rnds[6] = rnds[6] & 0x0f | 0x40;\n  rnds[8] = rnds[8] & 0x3f | 0x80; // Copy bytes to buffer, if provided\n\n  if (buf) {\n    offset = offset || 0;\n\n    for (let i = 0; i < 16; ++i) {\n      buf[offset + i] = rnds[i];\n    }\n\n    return buf;\n  }\n\n  return unsafeStringify(rnds);\n}\n\nvar _Symbol$iterator;\nfunction ownKeys$1(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread$1(e) { for (var r = 1; r < arguments.length; r++) { var _context32, _context33; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context32 = ownKeys$1(Object(t), !0)).call(_context32, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context33 = ownKeys$1(Object(t))).call(_context33, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }\nfunction _createSuper$d(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$d(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$d() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _createForOfIteratorHelper$6(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray$6(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray$6(o, minLen) { var _context31; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$6(o, minLen); var n = _sliceInstanceProperty(_context31 = Object.prototype.toString.call(o)).call(_context31, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from$1(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$6(o, minLen); }\nfunction _arrayLikeToArray$6(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n/**\r\n * Create new data pipe.\r\n *\r\n * @param from - The source data set or data view.\r\n * @remarks\r\n * Example usage:\r\n * ```typescript\r\n * interface AppItem {\r\n *   whoami: string;\r\n *   appData: unknown;\r\n *   visData: VisItem;\r\n * }\r\n * interface VisItem {\r\n *   id: number;\r\n *   label: string;\r\n *   color: string;\r\n *   x: number;\r\n *   y: number;\r\n * }\r\n *\r\n * const ds1 = new DataSet<AppItem, \"whoami\">([], { fieldId: \"whoami\" });\r\n * const ds2 = new DataSet<VisItem, \"id\">();\r\n *\r\n * const pipe = createNewDataPipeFrom(ds1)\r\n *   .filter((item): boolean => item.enabled === true)\r\n *   .map<VisItem, \"id\">((item): VisItem => item.visData)\r\n *   .to(ds2);\r\n *\r\n * pipe.start();\r\n * ```\r\n * @returns A factory whose methods can be used to configure the pipe.\r\n */\nfunction createNewDataPipeFrom(from) {\n  return new DataPipeUnderConstruction(from);\n}\n/**\r\n * Internal implementation of the pipe. This should be accessible only through\r\n * `createNewDataPipeFrom` from the outside.\r\n *\r\n * @typeParam SI - Source item type.\r\n * @typeParam SP - Source item type's id property name.\r\n * @typeParam TI - Target item type.\r\n * @typeParam TP - Target item type's id property name.\r\n */\nvar SimpleDataPipe = /*#__PURE__*/function () {\n  /**\r\n   * Create a new data pipe.\r\n   *\r\n   * @param _source - The data set or data view that will be observed.\r\n   * @param _transformers - An array of transforming functions to be used to\r\n   * filter or transform the items in the pipe.\r\n   * @param _target - The data set or data view that will receive the items.\r\n   */\n  function SimpleDataPipe(_source, _transformers, _target) {\n    var _context, _context2, _context3;\n    _classCallCheck(this, SimpleDataPipe);\n    _defineProperty(this, \"_source\", void 0);\n    _defineProperty(this, \"_transformers\", void 0);\n    _defineProperty(this, \"_target\", void 0);\n    /**\r\n     * Bound listeners for use with `DataInterface['on' | 'off']`.\r\n     */\n    _defineProperty(this, \"_listeners\", {\n      add: _bindInstanceProperty$1(_context = this._add).call(_context, this),\n      remove: _bindInstanceProperty$1(_context2 = this._remove).call(_context2, this),\n      update: _bindInstanceProperty$1(_context3 = this._update).call(_context3, this)\n    });\n    this._source = _source;\n    this._transformers = _transformers;\n    this._target = _target;\n  }\n  /** @inheritDoc */\n  _createClass(SimpleDataPipe, [{\n    key: \"all\",\n    value: function all() {\n      this._target.update(this._transformItems(this._source.get()));\n      return this;\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"start\",\n    value: function start() {\n      this._source.on(\"add\", this._listeners.add);\n      this._source.on(\"remove\", this._listeners.remove);\n      this._source.on(\"update\", this._listeners.update);\n      return this;\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      this._source.off(\"add\", this._listeners.add);\n      this._source.off(\"remove\", this._listeners.remove);\n      this._source.off(\"update\", this._listeners.update);\n      return this;\n    }\n    /**\r\n     * Apply the transformers to the items.\r\n     *\r\n     * @param items - The items to be transformed.\r\n     * @returns The transformed items.\r\n     */\n  }, {\n    key: \"_transformItems\",\n    value: function _transformItems(items) {\n      var _context4;\n      return _reduceInstanceProperty(_context4 = this._transformers).call(_context4, function (items, transform) {\n        return transform(items);\n      }, items);\n    }\n    /**\r\n     * Handle an add event.\r\n     *\r\n     * @param _name - Ignored.\r\n     * @param payload - The payload containing the ids of the added items.\r\n     */\n  }, {\n    key: \"_add\",\n    value: function _add(_name, payload) {\n      if (payload == null) {\n        return;\n      }\n      this._target.add(this._transformItems(this._source.get(payload.items)));\n    }\n    /**\r\n     * Handle an update event.\r\n     *\r\n     * @param _name - Ignored.\r\n     * @param payload - The payload containing the ids of the updated items.\r\n     */\n  }, {\n    key: \"_update\",\n    value: function _update(_name, payload) {\n      if (payload == null) {\n        return;\n      }\n      this._target.update(this._transformItems(this._source.get(payload.items)));\n    }\n    /**\r\n     * Handle a remove event.\r\n     *\r\n     * @param _name - Ignored.\r\n     * @param payload - The payload containing the data of the removed items.\r\n     */\n  }, {\n    key: \"_remove\",\n    value: function _remove(_name, payload) {\n      if (payload == null) {\n        return;\n      }\n      this._target.remove(this._transformItems(payload.oldData));\n    }\n  }]);\n  return SimpleDataPipe;\n}();\n/**\r\n * Internal implementation of the pipe factory. This should be accessible\r\n * only through `createNewDataPipeFrom` from the outside.\r\n *\r\n * @typeParam TI - Target item type.\r\n * @typeParam TP - Target item type's id property name.\r\n */\nvar DataPipeUnderConstruction = /*#__PURE__*/function () {\n  /**\r\n   * Create a new data pipe factory. This is an internal constructor that\r\n   * should never be called from outside of this file.\r\n   *\r\n   * @param _source - The source data set or data view for this pipe.\r\n   */\n  function DataPipeUnderConstruction(_source) {\n    _classCallCheck(this, DataPipeUnderConstruction);\n    _defineProperty(this, \"_source\", void 0);\n    /**\r\n     * Array transformers used to transform items within the pipe. This is typed\r\n     * as any for the sake of simplicity.\r\n     */\n    _defineProperty(this, \"_transformers\", []);\n    this._source = _source;\n  }\n  /**\r\n   * Filter the items.\r\n   *\r\n   * @param callback - A filtering function that returns true if given item\r\n   * should be piped and false if not.\r\n   * @returns This factory for further configuration.\r\n   */\n  _createClass(DataPipeUnderConstruction, [{\n    key: \"filter\",\n    value: function filter(callback) {\n      this._transformers.push(function (input) {\n        return _filterInstanceProperty(input).call(input, callback);\n      });\n      return this;\n    }\n    /**\r\n     * Map each source item to a new type.\r\n     *\r\n     * @param callback - A mapping function that takes a source item and returns\r\n     * corresponding mapped item.\r\n     * @typeParam TI - Target item type.\r\n     * @typeParam TP - Target item type's id property name.\r\n     * @returns This factory for further configuration.\r\n     */\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      this._transformers.push(function (input) {\n        return _mapInstanceProperty(input).call(input, callback);\n      });\n      return this;\n    }\n    /**\r\n     * Map each source item to zero or more items of a new type.\r\n     *\r\n     * @param callback - A mapping function that takes a source item and returns\r\n     * an array of corresponding mapped items.\r\n     * @typeParam TI - Target item type.\r\n     * @typeParam TP - Target item type's id property name.\r\n     * @returns This factory for further configuration.\r\n     */\n  }, {\n    key: \"flatMap\",\n    value: function flatMap(callback) {\n      this._transformers.push(function (input) {\n        return _flatMapInstanceProperty(input).call(input, callback);\n      });\n      return this;\n    }\n    /**\r\n     * Connect this pipe to given data set.\r\n     *\r\n     * @param target - The data set that will receive the items from this pipe.\r\n     * @returns The pipe connected between given data sets and performing\r\n     * configured transformation on the processed items.\r\n     */\n  }, {\n    key: \"to\",\n    value: function to(target) {\n      return new SimpleDataPipe(this._source, this._transformers, target);\n    }\n  }]);\n  return DataPipeUnderConstruction;\n}();\n/**\r\n * Determine whether a value can be used as an id.\r\n *\r\n * @param value - Input value of unknown type.\r\n * @returns True if the value is valid id, false otherwise.\r\n */\nfunction isId(value) {\n  return typeof value === \"string\" || typeof value === \"number\";\n}\n\n/**\r\n * A queue.\r\n *\r\n * @typeParam T - The type of method names to be replaced by queued versions.\r\n */\nvar Queue = /*#__PURE__*/function () {\n  /**\r\n   * Construct a new Queue.\r\n   *\r\n   * @param options - Queue configuration.\r\n   */\n  function Queue(options) {\n    _classCallCheck(this, Queue);\n    /** Delay in milliseconds. If defined the queue will be periodically flushed. */\n    _defineProperty(this, \"delay\", void 0);\n    /** Maximum number of entries in the queue before it will be flushed. */\n    _defineProperty(this, \"max\", void 0);\n    _defineProperty(this, \"_queue\", []);\n    _defineProperty(this, \"_timeout\", null);\n    _defineProperty(this, \"_extended\", null);\n    // options\n    this.delay = null;\n    this.max = Infinity;\n    this.setOptions(options);\n  }\n  /**\r\n   * Update the configuration of the queue.\r\n   *\r\n   * @param options - Queue configuration.\r\n   */\n  _createClass(Queue, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options && typeof options.delay !== \"undefined\") {\n        this.delay = options.delay;\n      }\n      if (options && typeof options.max !== \"undefined\") {\n        this.max = options.max;\n      }\n      this._flushIfNeeded();\n    }\n    /**\r\n     * Extend an object with queuing functionality.\r\n     * The object will be extended with a function flush, and the methods provided in options.replace will be replaced with queued ones.\r\n     *\r\n     * @param object - The object to be extended.\r\n     * @param options - Additional options.\r\n     * @returns The created queue.\r\n     */\n  }, {\n    key: \"destroy\",\n    value:\n    /**\r\n     * Destroy the queue. The queue will first flush all queued actions, and in case it has extended an object, will restore the original object.\r\n     */\n    function destroy() {\n      this.flush();\n      if (this._extended) {\n        var object = this._extended.object;\n        var methods = this._extended.methods;\n        for (var i = 0; i < methods.length; i++) {\n          var method = methods[i];\n          if (method.original) {\n            // @TODO: better solution?\n            object[method.name] = method.original;\n          } else {\n            // @TODO: better solution?\n            delete object[method.name];\n          }\n        }\n        this._extended = null;\n      }\n    }\n    /**\r\n     * Replace a method on an object with a queued version.\r\n     *\r\n     * @param object - Object having the method.\r\n     * @param method - The method name.\r\n     */\n  }, {\n    key: \"replace\",\n    value: function replace(object, method) {\n      /* eslint-disable-next-line @typescript-eslint/no-this-alias -- Function this is necessary in the function bellow, so class this has to be saved into a variable here. */\n      var me = this;\n      var original = object[method];\n      if (!original) {\n        throw new Error(\"Method \" + method + \" undefined\");\n      }\n      object[method] = function () {\n        for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n          args[_key] = arguments[_key];\n        }\n        // add this call to the queue\n        me.queue({\n          args: args,\n          fn: original,\n          context: this\n        });\n      };\n    }\n    /**\r\n     * Queue a call.\r\n     *\r\n     * @param entry - The function or entry to be queued.\r\n     */\n  }, {\n    key: \"queue\",\n    value: function queue(entry) {\n      if (typeof entry === \"function\") {\n        this._queue.push({\n          fn: entry\n        });\n      } else {\n        this._queue.push(entry);\n      }\n      this._flushIfNeeded();\n    }\n    /**\r\n     * Check whether the queue needs to be flushed.\r\n     */\n  }, {\n    key: \"_flushIfNeeded\",\n    value: function _flushIfNeeded() {\n      var _this = this;\n      // flush when the maximum is exceeded.\n      if (this._queue.length > this.max) {\n        this.flush();\n      }\n      // flush after a period of inactivity when a delay is configured\n      if (this._timeout != null) {\n        clearTimeout(this._timeout);\n        this._timeout = null;\n      }\n      if (this.queue.length > 0 && typeof this.delay === \"number\") {\n        this._timeout = _setTimeout(function () {\n          _this.flush();\n        }, this.delay);\n      }\n    }\n    /**\r\n     * Flush all queued calls\r\n     */\n  }, {\n    key: \"flush\",\n    value: function flush() {\n      var _context5, _context6;\n      _forEachInstanceProperty(_context5 = _spliceInstanceProperty(_context6 = this._queue).call(_context6, 0)).call(_context5, function (entry) {\n        entry.fn.apply(entry.context || entry.fn, entry.args || []);\n      });\n    }\n  }], [{\n    key: \"extend\",\n    value: function extend(object, options) {\n      var queue = new Queue(options);\n      if (object.flush !== undefined) {\n        throw new Error(\"Target object already has a property flush\");\n      }\n      object.flush = function () {\n        queue.flush();\n      };\n      var methods = [{\n        name: \"flush\",\n        original: undefined\n      }];\n      if (options && options.replace) {\n        for (var i = 0; i < options.replace.length; i++) {\n          var name = options.replace[i];\n          methods.push({\n            name: name,\n            // @TODO: better solution?\n            original: object[name]\n          });\n          // @TODO: better solution?\n          queue.replace(object, name);\n        }\n      }\n      queue._extended = {\n        object: object,\n        methods: methods\n      };\n      return queue;\n    }\n  }]);\n  return Queue;\n}();\n/**\r\n * {@link DataSet} code that can be reused in {@link DataView} or other similar implementations of {@link DataInterface}.\r\n *\r\n * @typeParam Item - Item type that may or may not have an id.\r\n * @typeParam IdProp - Name of the property that contains the id.\r\n */\nvar DataSetPart = /*#__PURE__*/function () {\n  function DataSetPart() {\n    _classCallCheck(this, DataSetPart);\n    _defineProperty(this, \"_subscribers\", {\n      \"*\": [],\n      add: [],\n      remove: [],\n      update: []\n    });\n    /**\r\n     * @deprecated Use on instead (PS: DataView.subscribe === DataView.on).\r\n     */\n    _defineProperty(this, \"subscribe\", DataSetPart.prototype.on);\n    /**\r\n     * @deprecated Use off instead (PS: DataView.unsubscribe === DataView.off).\r\n     */\n    _defineProperty(this, \"unsubscribe\", DataSetPart.prototype.off);\n  }\n  _createClass(DataSetPart, [{\n    key: \"_trigger\",\n    value:\n    /**\r\n     * Trigger an event\r\n     *\r\n     * @param event - Event name.\r\n     * @param payload - Event payload.\r\n     * @param senderId - Id of the sender.\r\n     */\n    function _trigger(event, payload, senderId) {\n      var _context7, _context8;\n      if (event === \"*\") {\n        throw new Error(\"Cannot trigger event *\");\n      }\n      _forEachInstanceProperty(_context7 = _concatInstanceProperty(_context8 = []).call(_context8, _toConsumableArray(this._subscribers[event]), _toConsumableArray(this._subscribers[\"*\"]))).call(_context7, function (subscriber) {\n        subscriber(event, payload, senderId != null ? senderId : null);\n      });\n    }\n    /**\r\n     * Subscribe to an event, add an event listener.\r\n     *\r\n     * @remarks Non-function callbacks are ignored.\r\n     * @param event - Event name.\r\n     * @param callback - Callback method.\r\n     */\n  }, {\n    key: \"on\",\n    value: function on(event, callback) {\n      if (typeof callback === \"function\") {\n        this._subscribers[event].push(callback);\n      }\n      // @TODO: Maybe throw for invalid callbacks?\n    }\n    /**\r\n     * Unsubscribe from an event, remove an event listener.\r\n     *\r\n     * @remarks If the same callback was subscribed more than once **all** occurences will be removed.\r\n     * @param event - Event name.\r\n     * @param callback - Callback method.\r\n     */\n  }, {\n    key: \"off\",\n    value: function off(event, callback) {\n      var _context9;\n      this._subscribers[event] = _filterInstanceProperty(_context9 = this._subscribers[event]).call(_context9, function (subscriber) {\n        return subscriber !== callback;\n      });\n    }\n  }]);\n  return DataSetPart;\n}();\n/**\r\n * Data stream\r\n *\r\n * @remarks\r\n * {@link DataStream} offers an always up to date stream of items from a {@link DataSet} or {@link DataView}.\r\n * That means that the stream is evaluated at the time of iteration, conversion to another data type or when {@link cache} is called, not when the {@link DataStream} was created.\r\n * Multiple invocations of for example {@link toItemArray} may yield different results (if the data source like for example {@link DataSet} gets modified).\r\n * @typeParam Item - The item type this stream is going to work with.\r\n */\n_Symbol$iterator = _Symbol$iterator2;\nvar DataStream = /*#__PURE__*/function () {\n  /**\r\n   * Create a new data stream.\r\n   *\r\n   * @param pairs - The id, item pairs.\r\n   */\n  function DataStream(pairs) {\n    _classCallCheck(this, DataStream);\n    _defineProperty(this, \"_pairs\", void 0);\n    this._pairs = pairs;\n  }\n  /**\r\n   * Return an iterable of key, value pairs for every entry in the stream.\r\n   */\n  _createClass(DataStream, [{\n    key: _Symbol$iterator,\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function value() {\n      var _iterator, _step, _step$value, id, item;\n      return _regeneratorRuntime.wrap(function value$(_context10) {\n        while (1) switch (_context10.prev = _context10.next) {\n          case 0:\n            _iterator = _createForOfIteratorHelper$6(this._pairs);\n            _context10.prev = 1;\n            _iterator.s();\n          case 3:\n            if ((_step = _iterator.n()).done) {\n              _context10.next = 9;\n              break;\n            }\n            _step$value = _slicedToArray(_step.value, 2), id = _step$value[0], item = _step$value[1];\n            _context10.next = 7;\n            return [id, item];\n          case 7:\n            _context10.next = 3;\n            break;\n          case 9:\n            _context10.next = 14;\n            break;\n          case 11:\n            _context10.prev = 11;\n            _context10.t0 = _context10[\"catch\"](1);\n            _iterator.e(_context10.t0);\n          case 14:\n            _context10.prev = 14;\n            _iterator.f();\n            return _context10.finish(14);\n          case 17:\n          case \"end\":\n            return _context10.stop();\n        }\n      }, value, this, [[1, 11, 14, 17]]);\n    })\n    /**\r\n     * Return an iterable of key, value pairs for every entry in the stream.\r\n     */\n  }, {\n    key: \"entries\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function entries() {\n      var _iterator2, _step2, _step2$value, id, item;\n      return _regeneratorRuntime.wrap(function entries$(_context11) {\n        while (1) switch (_context11.prev = _context11.next) {\n          case 0:\n            _iterator2 = _createForOfIteratorHelper$6(this._pairs);\n            _context11.prev = 1;\n            _iterator2.s();\n          case 3:\n            if ((_step2 = _iterator2.n()).done) {\n              _context11.next = 9;\n              break;\n            }\n            _step2$value = _slicedToArray(_step2.value, 2), id = _step2$value[0], item = _step2$value[1];\n            _context11.next = 7;\n            return [id, item];\n          case 7:\n            _context11.next = 3;\n            break;\n          case 9:\n            _context11.next = 14;\n            break;\n          case 11:\n            _context11.prev = 11;\n            _context11.t0 = _context11[\"catch\"](1);\n            _iterator2.e(_context11.t0);\n          case 14:\n            _context11.prev = 14;\n            _iterator2.f();\n            return _context11.finish(14);\n          case 17:\n          case \"end\":\n            return _context11.stop();\n        }\n      }, entries, this, [[1, 11, 14, 17]]);\n    })\n    /**\r\n     * Return an iterable of keys in the stream.\r\n     */\n  }, {\n    key: \"keys\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function keys() {\n      var _iterator3, _step3, _step3$value, id;\n      return _regeneratorRuntime.wrap(function keys$(_context12) {\n        while (1) switch (_context12.prev = _context12.next) {\n          case 0:\n            _iterator3 = _createForOfIteratorHelper$6(this._pairs);\n            _context12.prev = 1;\n            _iterator3.s();\n          case 3:\n            if ((_step3 = _iterator3.n()).done) {\n              _context12.next = 9;\n              break;\n            }\n            _step3$value = _slicedToArray(_step3.value, 1), id = _step3$value[0];\n            _context12.next = 7;\n            return id;\n          case 7:\n            _context12.next = 3;\n            break;\n          case 9:\n            _context12.next = 14;\n            break;\n          case 11:\n            _context12.prev = 11;\n            _context12.t0 = _context12[\"catch\"](1);\n            _iterator3.e(_context12.t0);\n          case 14:\n            _context12.prev = 14;\n            _iterator3.f();\n            return _context12.finish(14);\n          case 17:\n          case \"end\":\n            return _context12.stop();\n        }\n      }, keys, this, [[1, 11, 14, 17]]);\n    })\n    /**\r\n     * Return an iterable of values in the stream.\r\n     */\n  }, {\n    key: \"values\",\n    value:\n    /*#__PURE__*/\n    _regeneratorRuntime.mark(function values() {\n      var _iterator4, _step4, _step4$value, item;\n      return _regeneratorRuntime.wrap(function values$(_context13) {\n        while (1) switch (_context13.prev = _context13.next) {\n          case 0:\n            _iterator4 = _createForOfIteratorHelper$6(this._pairs);\n            _context13.prev = 1;\n            _iterator4.s();\n          case 3:\n            if ((_step4 = _iterator4.n()).done) {\n              _context13.next = 9;\n              break;\n            }\n            _step4$value = _slicedToArray(_step4.value, 2), item = _step4$value[1];\n            _context13.next = 7;\n            return item;\n          case 7:\n            _context13.next = 3;\n            break;\n          case 9:\n            _context13.next = 14;\n            break;\n          case 11:\n            _context13.prev = 11;\n            _context13.t0 = _context13[\"catch\"](1);\n            _iterator4.e(_context13.t0);\n          case 14:\n            _context13.prev = 14;\n            _iterator4.f();\n            return _context13.finish(14);\n          case 17:\n          case \"end\":\n            return _context13.stop();\n        }\n      }, values, this, [[1, 11, 14, 17]]);\n    })\n    /**\r\n     * Return an array containing all the ids in this stream.\r\n     *\r\n     * @remarks\r\n     * The array may contain duplicities.\r\n     * @returns The array with all ids from this stream.\r\n     */\n  }, {\n    key: \"toIdArray\",\n    value: function toIdArray() {\n      var _context14;\n      return _mapInstanceProperty(_context14 = _toConsumableArray(this._pairs)).call(_context14, function (pair) {\n        return pair[0];\n      });\n    }\n    /**\r\n     * Return an array containing all the items in this stream.\r\n     *\r\n     * @remarks\r\n     * The array may contain duplicities.\r\n     * @returns The array with all items from this stream.\r\n     */\n  }, {\n    key: \"toItemArray\",\n    value: function toItemArray() {\n      var _context15;\n      return _mapInstanceProperty(_context15 = _toConsumableArray(this._pairs)).call(_context15, function (pair) {\n        return pair[1];\n      });\n    }\n    /**\r\n     * Return an array containing all the entries in this stream.\r\n     *\r\n     * @remarks\r\n     * The array may contain duplicities.\r\n     * @returns The array with all entries from this stream.\r\n     */\n  }, {\n    key: \"toEntryArray\",\n    value: function toEntryArray() {\n      return _toConsumableArray(this._pairs);\n    }\n    /**\r\n     * Return an object map containing all the items in this stream accessible by ids.\r\n     *\r\n     * @remarks\r\n     * In case of duplicate ids (coerced to string so `7 == '7'`) the last encoutered appears in the returned object.\r\n     * @returns The object map of all id → item pairs from this stream.\r\n     */\n  }, {\n    key: \"toObjectMap\",\n    value: function toObjectMap() {\n      var map = _Object$create$1(null);\n      var _iterator5 = _createForOfIteratorHelper$6(this._pairs),\n        _step5;\n      try {\n        for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n          var _step5$value = _slicedToArray(_step5.value, 2),\n            id = _step5$value[0],\n            item = _step5$value[1];\n          map[id] = item;\n        }\n      } catch (err) {\n        _iterator5.e(err);\n      } finally {\n        _iterator5.f();\n      }\n      return map;\n    }\n    /**\r\n     * Return a map containing all the items in this stream accessible by ids.\r\n     *\r\n     * @returns The map of all id → item pairs from this stream.\r\n     */\n  }, {\n    key: \"toMap\",\n    value: function toMap() {\n      return new _Map(this._pairs);\n    }\n    /**\r\n     * Return a set containing all the (unique) ids in this stream.\r\n     *\r\n     * @returns The set of all ids from this stream.\r\n     */\n  }, {\n    key: \"toIdSet\",\n    value: function toIdSet() {\n      return new _Set(this.toIdArray());\n    }\n    /**\r\n     * Return a set containing all the (unique) items in this stream.\r\n     *\r\n     * @returns The set of all items from this stream.\r\n     */\n  }, {\n    key: \"toItemSet\",\n    value: function toItemSet() {\n      return new _Set(this.toItemArray());\n    }\n    /**\r\n     * Cache the items from this stream.\r\n     *\r\n     * @remarks\r\n     * This method allows for items to be fetched immediatelly and used (possibly multiple times) later.\r\n     * It can also be used to optimize performance as {@link DataStream} would otherwise reevaluate everything upon each iteration.\r\n     *\r\n     * ## Example\r\n     * ```javascript\r\n     * const ds = new DataSet([…])\r\n     *\r\n     * const cachedStream = ds.stream()\r\n     *   .filter(…)\r\n     *   .sort(…)\r\n     *   .map(…)\r\n     *   .cached(…) // Data are fetched, processed and cached here.\r\n     *\r\n     * ds.clear()\r\n     * chachedStream // Still has all the items.\r\n     * ```\r\n     * @returns A new {@link DataStream} with cached items (detached from the original {@link DataSet}).\r\n     */\n  }, {\n    key: \"cache\",\n    value: function cache() {\n      return new DataStream(_toConsumableArray(this._pairs));\n    }\n    /**\r\n     * Get the distinct values of given property.\r\n     *\r\n     * @param callback - The function that picks and possibly converts the property.\r\n     * @typeParam T - The type of the distinct value.\r\n     * @returns A set of all distinct properties.\r\n     */\n  }, {\n    key: \"distinct\",\n    value: function distinct(callback) {\n      var set = new _Set();\n      var _iterator6 = _createForOfIteratorHelper$6(this._pairs),\n        _step6;\n      try {\n        for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n          var _step6$value = _slicedToArray(_step6.value, 2),\n            id = _step6$value[0],\n            item = _step6$value[1];\n          set.add(callback(item, id));\n        }\n      } catch (err) {\n        _iterator6.e(err);\n      } finally {\n        _iterator6.f();\n      }\n      return set;\n    }\n    /**\r\n     * Filter the items of the stream.\r\n     *\r\n     * @param callback - The function that decides whether an item will be included.\r\n     * @returns A new data stream with the filtered items.\r\n     */\n  }, {\n    key: \"filter\",\n    value: function filter(callback) {\n      var pairs = this._pairs;\n      return new DataStream(_defineProperty({}, _Symbol$iterator2, /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var _iterator7, _step7, _step7$value, id, item;\n        return _regeneratorRuntime.wrap(function _callee$(_context16) {\n          while (1) switch (_context16.prev = _context16.next) {\n            case 0:\n              _iterator7 = _createForOfIteratorHelper$6(pairs);\n              _context16.prev = 1;\n              _iterator7.s();\n            case 3:\n              if ((_step7 = _iterator7.n()).done) {\n                _context16.next = 10;\n                break;\n              }\n              _step7$value = _slicedToArray(_step7.value, 2), id = _step7$value[0], item = _step7$value[1];\n              if (!callback(item, id)) {\n                _context16.next = 8;\n                break;\n              }\n              _context16.next = 8;\n              return [id, item];\n            case 8:\n              _context16.next = 3;\n              break;\n            case 10:\n              _context16.next = 15;\n              break;\n            case 12:\n              _context16.prev = 12;\n              _context16.t0 = _context16[\"catch\"](1);\n              _iterator7.e(_context16.t0);\n            case 15:\n              _context16.prev = 15;\n              _iterator7.f();\n              return _context16.finish(15);\n            case 18:\n            case \"end\":\n              return _context16.stop();\n          }\n        }, _callee, null, [[1, 12, 15, 18]]);\n      })));\n    }\n    /**\r\n     * Execute a callback for each item of the stream.\r\n     *\r\n     * @param callback - The function that will be invoked for each item.\r\n     */\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback) {\n      var _iterator8 = _createForOfIteratorHelper$6(this._pairs),\n        _step8;\n      try {\n        for (_iterator8.s(); !(_step8 = _iterator8.n()).done;) {\n          var _step8$value = _slicedToArray(_step8.value, 2),\n            id = _step8$value[0],\n            item = _step8$value[1];\n          callback(item, id);\n        }\n      } catch (err) {\n        _iterator8.e(err);\n      } finally {\n        _iterator8.f();\n      }\n    }\n    /**\r\n     * Map the items into a different type.\r\n     *\r\n     * @param callback - The function that does the conversion.\r\n     * @typeParam Mapped - The type of the item after mapping.\r\n     * @returns A new data stream with the mapped items.\r\n     */\n  }, {\n    key: \"map\",\n    value: function map(callback) {\n      var pairs = this._pairs;\n      return new DataStream(_defineProperty({}, _Symbol$iterator2, /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var _iterator9, _step9, _step9$value, id, item;\n        return _regeneratorRuntime.wrap(function _callee2$(_context17) {\n          while (1) switch (_context17.prev = _context17.next) {\n            case 0:\n              _iterator9 = _createForOfIteratorHelper$6(pairs);\n              _context17.prev = 1;\n              _iterator9.s();\n            case 3:\n              if ((_step9 = _iterator9.n()).done) {\n                _context17.next = 9;\n                break;\n              }\n              _step9$value = _slicedToArray(_step9.value, 2), id = _step9$value[0], item = _step9$value[1];\n              _context17.next = 7;\n              return [id, callback(item, id)];\n            case 7:\n              _context17.next = 3;\n              break;\n            case 9:\n              _context17.next = 14;\n              break;\n            case 11:\n              _context17.prev = 11;\n              _context17.t0 = _context17[\"catch\"](1);\n              _iterator9.e(_context17.t0);\n            case 14:\n              _context17.prev = 14;\n              _iterator9.f();\n              return _context17.finish(14);\n            case 17:\n            case \"end\":\n              return _context17.stop();\n          }\n        }, _callee2, null, [[1, 11, 14, 17]]);\n      })));\n    }\n    /**\r\n     * Get the item with the maximum value of given property.\r\n     *\r\n     * @param callback - The function that picks and possibly converts the property.\r\n     * @returns The item with the maximum if found otherwise null.\r\n     */\n  }, {\n    key: \"max\",\n    value: function max(callback) {\n      var iter = _getIterator(this._pairs);\n      var curr = iter.next();\n      if (curr.done) {\n        return null;\n      }\n      var maxItem = curr.value[1];\n      var maxValue = callback(curr.value[1], curr.value[0]);\n      while (!(curr = iter.next()).done) {\n        var _curr$value = _slicedToArray(curr.value, 2),\n          id = _curr$value[0],\n          item = _curr$value[1];\n        var _value = callback(item, id);\n        if (_value > maxValue) {\n          maxValue = _value;\n          maxItem = item;\n        }\n      }\n      return maxItem;\n    }\n    /**\r\n     * Get the item with the minimum value of given property.\r\n     *\r\n     * @param callback - The function that picks and possibly converts the property.\r\n     * @returns The item with the minimum if found otherwise null.\r\n     */\n  }, {\n    key: \"min\",\n    value: function min(callback) {\n      var iter = _getIterator(this._pairs);\n      var curr = iter.next();\n      if (curr.done) {\n        return null;\n      }\n      var minItem = curr.value[1];\n      var minValue = callback(curr.value[1], curr.value[0]);\n      while (!(curr = iter.next()).done) {\n        var _curr$value2 = _slicedToArray(curr.value, 2),\n          id = _curr$value2[0],\n          item = _curr$value2[1];\n        var _value2 = callback(item, id);\n        if (_value2 < minValue) {\n          minValue = _value2;\n          minItem = item;\n        }\n      }\n      return minItem;\n    }\n    /**\r\n     * Reduce the items into a single value.\r\n     *\r\n     * @param callback - The function that does the reduction.\r\n     * @param accumulator - The initial value of the accumulator.\r\n     * @typeParam T - The type of the accumulated value.\r\n     * @returns The reduced value.\r\n     */\n  }, {\n    key: \"reduce\",\n    value: function reduce(callback, accumulator) {\n      var _iterator10 = _createForOfIteratorHelper$6(this._pairs),\n        _step10;\n      try {\n        for (_iterator10.s(); !(_step10 = _iterator10.n()).done;) {\n          var _step10$value = _slicedToArray(_step10.value, 2),\n            id = _step10$value[0],\n            item = _step10$value[1];\n          accumulator = callback(accumulator, item, id);\n        }\n      } catch (err) {\n        _iterator10.e(err);\n      } finally {\n        _iterator10.f();\n      }\n      return accumulator;\n    }\n    /**\r\n     * Sort the items.\r\n     *\r\n     * @param callback - Item comparator.\r\n     * @returns A new stream with sorted items.\r\n     */\n  }, {\n    key: \"sort\",\n    value: function sort(callback) {\n      var _this2 = this;\n      return new DataStream(_defineProperty({}, _Symbol$iterator2, function () {\n        var _context18;\n        return _getIterator(_sortInstanceProperty(_context18 = _toConsumableArray(_this2._pairs)).call(_context18, function (_ref, _ref2) {\n          var _ref3 = _slicedToArray(_ref, 2),\n            idA = _ref3[0],\n            itemA = _ref3[1];\n          var _ref4 = _slicedToArray(_ref2, 2),\n            idB = _ref4[0],\n            itemB = _ref4[1];\n          return callback(itemA, itemB, idA, idB);\n        }));\n      }));\n    }\n  }]);\n  return DataStream;\n}();\n/**\r\n * Add an id to given item if it doesn't have one already.\r\n *\r\n * @remarks\r\n * The item will be modified.\r\n * @param item - The item that will have an id after a call to this function.\r\n * @param idProp - The key of the id property.\r\n * @typeParam Item - Item type that may or may not have an id.\r\n * @typeParam IdProp - Name of the property that contains the id.\r\n * @returns true\r\n */\nfunction ensureFullItem(item, idProp) {\n  if (item[idProp] == null) {\n    // generate an id\n    item[idProp] = v4();\n  }\n  return item;\n}\n/**\r\n * # DataSet\r\n *\r\n * Vis.js comes with a flexible DataSet, which can be used to hold and\r\n * manipulate unstructured data and listen for changes in the data. The DataSet\r\n * is key/value based. Data items can be added, updated and removed from the\r\n * DataSet, and one can subscribe to changes in the DataSet. The data in the\r\n * DataSet can be filtered and ordered. Data can be normalized when appending it\r\n * to the DataSet as well.\r\n *\r\n * ## Example\r\n *\r\n * The following example shows how to use a DataSet.\r\n *\r\n * ```javascript\r\n * // create a DataSet\r\n * var options = {};\r\n * var data = new vis.DataSet(options);\r\n *\r\n * // add items\r\n * // note that the data items can contain different properties and data formats\r\n * data.add([\r\n *   {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},\r\n *   {id: 2, text: 'item 2', date: '2013-06-23', group: 2},\r\n *   {id: 3, text: 'item 3', date: '2013-06-25', group: 2},\r\n *   {id: 4, text: 'item 4'}\r\n * ]);\r\n *\r\n * // subscribe to any change in the DataSet\r\n * data.on('*', function (event, properties, senderId) {\r\n *   console.log('event', event, properties);\r\n * });\r\n *\r\n * // update an existing item\r\n * data.update({id: 2, group: 1});\r\n *\r\n * // remove an item\r\n * data.remove(4);\r\n *\r\n * // get all ids\r\n * var ids = data.getIds();\r\n * console.log('ids', ids);\r\n *\r\n * // get a specific item\r\n * var item1 = data.get(1);\r\n * console.log('item1', item1);\r\n *\r\n * // retrieve a filtered subset of the data\r\n * var items = data.get({\r\n *   filter: function (item) {\r\n *     return item.group == 1;\r\n *   }\r\n * });\r\n * console.log('filtered items', items);\r\n * ```\r\n *\r\n * @typeParam Item - Item type that may or may not have an id.\r\n * @typeParam IdProp - Name of the property that contains the id.\r\n */\nvar DataSet = /*#__PURE__*/function (_DataSetPart) {\n  _inherits(DataSet, _DataSetPart);\n  var _super = _createSuper$d(DataSet);\n  /**\r\n   * Construct a new DataSet.\r\n   *\r\n   * @param data - Initial data or options.\r\n   * @param options - Options (type error if data is also options).\r\n   */\n  function DataSet(data, options) {\n    var _this3;\n    _classCallCheck(this, DataSet);\n    _this3 = _super.call(this);\n    // correctly read optional arguments\n    /** Flush all queued calls. */\n    _defineProperty(_assertThisInitialized(_this3), \"flush\", void 0);\n    /** @inheritDoc */\n    _defineProperty(_assertThisInitialized(_this3), \"length\", void 0);\n    _defineProperty(_assertThisInitialized(_this3), \"_options\", void 0);\n    _defineProperty(_assertThisInitialized(_this3), \"_data\", void 0);\n    _defineProperty(_assertThisInitialized(_this3), \"_idProp\", void 0);\n    _defineProperty(_assertThisInitialized(_this3), \"_queue\", null);\n    if (data && !_Array$isArray(data)) {\n      options = data;\n      data = [];\n    }\n    _this3._options = options || {};\n    _this3._data = new _Map(); // map with data indexed by id\n    _this3.length = 0; // number of items in the DataSet\n    _this3._idProp = _this3._options.fieldId || \"id\"; // name of the field containing id\n    // add initial data when provided\n    if (data && data.length) {\n      _this3.add(data);\n    }\n    _this3.setOptions(options);\n    return _this3;\n  }\n  /**\r\n   * Set new options.\r\n   *\r\n   * @param options - The new options.\r\n   */\n  _createClass(DataSet, [{\n    key: \"idProp\",\n    get: /** @inheritDoc */\n    function get() {\n      return this._idProp;\n    }\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options && options.queue !== undefined) {\n        if (options.queue === false) {\n          // delete queue if loaded\n          if (this._queue) {\n            this._queue.destroy();\n            this._queue = null;\n          }\n        } else {\n          // create queue and update its options\n          if (!this._queue) {\n            this._queue = Queue.extend(this, {\n              replace: [\"add\", \"update\", \"remove\"]\n            });\n          }\n          if (options.queue && _typeof$1(options.queue) === \"object\") {\n            this._queue.setOptions(options.queue);\n          }\n        }\n      }\n    }\n    /**\r\n     * Add a data item or an array with items.\r\n     *\r\n     * After the items are added to the DataSet, the DataSet will trigger an event `add`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n     *\r\n     * ## Example\r\n     *\r\n     * ```javascript\r\n     * // create a DataSet\r\n     * const data = new vis.DataSet()\r\n     *\r\n     * // add items\r\n     * const ids = data.add([\r\n     *   { id: 1, text: 'item 1' },\r\n     *   { id: 2, text: 'item 2' },\r\n     *   { text: 'item without an id' }\r\n     * ])\r\n     *\r\n     * console.log(ids) // [1, 2, '<UUIDv4>']\r\n     * ```\r\n     *\r\n     * @param data - Items to be added (ids will be generated if missing).\r\n     * @param senderId - Sender id.\r\n     * @returns addedIds - Array with the ids (generated if not present) of the added items.\r\n     * @throws When an item with the same id as any of the added items already exists.\r\n     */\n  }, {\n    key: \"add\",\n    value: function add(data, senderId) {\n      var _this4 = this;\n      var addedIds = [];\n      var id;\n      if (_Array$isArray(data)) {\n        // Array\n        var idsToAdd = _mapInstanceProperty(data).call(data, function (d) {\n          return d[_this4._idProp];\n        });\n        if (_someInstanceProperty(idsToAdd).call(idsToAdd, function (id) {\n          return _this4._data.has(id);\n        })) {\n          throw new Error(\"A duplicate id was found in the parameter array.\");\n        }\n        for (var i = 0, len = data.length; i < len; i++) {\n          id = this._addItem(data[i]);\n          addedIds.push(id);\n        }\n      } else if (data && _typeof$1(data) === \"object\") {\n        // Single item\n        id = this._addItem(data);\n        addedIds.push(id);\n      } else {\n        throw new Error(\"Unknown dataType\");\n      }\n      if (addedIds.length) {\n        this._trigger(\"add\", {\n          items: addedIds\n        }, senderId);\n      }\n      return addedIds;\n    }\n    /**\r\n     * Update existing items. When an item does not exist, it will be created.\r\n     *\r\n     * @remarks\r\n     * The provided properties will be merged in the existing item. When an item does not exist, it will be created.\r\n     *\r\n     * After the items are updated, the DataSet will trigger an event `add` for the added items, and an event `update`. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n     *\r\n     * ## Example\r\n     *\r\n     * ```javascript\r\n     * // create a DataSet\r\n     * const data = new vis.DataSet([\r\n     *   { id: 1, text: 'item 1' },\r\n     *   { id: 2, text: 'item 2' },\r\n     *   { id: 3, text: 'item 3' }\r\n     * ])\r\n     *\r\n     * // update items\r\n     * const ids = data.update([\r\n     *   { id: 2, text: 'item 2 (updated)' },\r\n     *   { id: 4, text: 'item 4 (new)' }\r\n     * ])\r\n     *\r\n     * console.log(ids) // [2, 4]\r\n     * ```\r\n     *\r\n     * ## Warning for TypeScript users\r\n     * This method may introduce partial items into the data set. Use add or updateOnly instead for better type safety.\r\n     * @param data - Items to be updated (if the id is already present) or added (if the id is missing).\r\n     * @param senderId - Sender id.\r\n     * @returns updatedIds - The ids of the added (these may be newly generated if there was no id in the item from the data) or updated items.\r\n     * @throws When the supplied data is neither an item nor an array of items.\r\n     */\n  }, {\n    key: \"update\",\n    value: function update(data, senderId) {\n      var _this5 = this;\n      var addedIds = [];\n      var updatedIds = [];\n      var oldData = [];\n      var updatedData = [];\n      var idProp = this._idProp;\n      var addOrUpdate = function addOrUpdate(item) {\n        var origId = item[idProp];\n        if (origId != null && _this5._data.has(origId)) {\n          var fullItem = item; // it has an id, therefore it is a fullitem\n          var oldItem = _Object$assign({}, _this5._data.get(origId));\n          // update item\n          var id = _this5._updateItem(fullItem);\n          updatedIds.push(id);\n          updatedData.push(fullItem);\n          oldData.push(oldItem);\n        } else {\n          // add new item\n          var _id = _this5._addItem(item);\n          addedIds.push(_id);\n        }\n      };\n      if (_Array$isArray(data)) {\n        // Array\n        for (var i = 0, len = data.length; i < len; i++) {\n          if (data[i] && _typeof$1(data[i]) === \"object\") {\n            addOrUpdate(data[i]);\n          } else {\n            console.warn(\"Ignoring input item, which is not an object at index \" + i);\n          }\n        }\n      } else if (data && _typeof$1(data) === \"object\") {\n        // Single item\n        addOrUpdate(data);\n      } else {\n        throw new Error(\"Unknown dataType\");\n      }\n      if (addedIds.length) {\n        this._trigger(\"add\", {\n          items: addedIds\n        }, senderId);\n      }\n      if (updatedIds.length) {\n        var props = {\n          items: updatedIds,\n          oldData: oldData,\n          data: updatedData\n        };\n        // TODO: remove deprecated property 'data' some day\n        //Object.defineProperty(props, 'data', {\n        //  'get': (function() {\n        //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');\n        //    return updatedData;\n        //  }).bind(this)\n        //});\n        this._trigger(\"update\", props, senderId);\n      }\n      return _concatInstanceProperty(addedIds).call(addedIds, updatedIds);\n    }\n    /**\r\n     * Update existing items. When an item does not exist, an error will be thrown.\r\n     *\r\n     * @remarks\r\n     * The provided properties will be deeply merged into the existing item.\r\n     * When an item does not exist (id not present in the data set or absent), an error will be thrown and nothing will be changed.\r\n     *\r\n     * After the items are updated, the DataSet will trigger an event `update`.\r\n     * When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n     *\r\n     * ## Example\r\n     *\r\n     * ```javascript\r\n     * // create a DataSet\r\n     * const data = new vis.DataSet([\r\n     *   { id: 1, text: 'item 1' },\r\n     *   { id: 2, text: 'item 2' },\r\n     *   { id: 3, text: 'item 3' },\r\n     * ])\r\n     *\r\n     * // update items\r\n     * const ids = data.update([\r\n     *   { id: 2, text: 'item 2 (updated)' }, // works\r\n     *   // { id: 4, text: 'item 4 (new)' }, // would throw\r\n     *   // { text: 'item 4 (new)' }, // would also throw\r\n     * ])\r\n     *\r\n     * console.log(ids) // [2]\r\n     * ```\r\n     * @param data - Updates (the id and optionally other props) to the items in this data set.\r\n     * @param senderId - Sender id.\r\n     * @returns updatedIds - The ids of the updated items.\r\n     * @throws When the supplied data is neither an item nor an array of items, when the ids are missing.\r\n     */\n  }, {\n    key: \"updateOnly\",\n    value: function updateOnly(data, senderId) {\n      var _context19,\n        _this6 = this;\n      if (!_Array$isArray(data)) {\n        data = [data];\n      }\n      var updateEventData = _mapInstanceProperty(_context19 = _mapInstanceProperty(data).call(data, function (update) {\n        var oldData = _this6._data.get(update[_this6._idProp]);\n        if (oldData == null) {\n          throw new Error(\"Updating non-existent items is not allowed.\");\n        }\n        return {\n          oldData: oldData,\n          update: update\n        };\n      })).call(_context19, function (_ref5) {\n        var oldData = _ref5.oldData,\n          update = _ref5.update;\n        var id = oldData[_this6._idProp];\n        var updatedData = pureDeepObjectAssign(oldData, update);\n        _this6._data.set(id, updatedData);\n        return {\n          id: id,\n          oldData: oldData,\n          updatedData: updatedData\n        };\n      });\n      if (updateEventData.length) {\n        var props = {\n          items: _mapInstanceProperty(updateEventData).call(updateEventData, function (value) {\n            return value.id;\n          }),\n          oldData: _mapInstanceProperty(updateEventData).call(updateEventData, function (value) {\n            return value.oldData;\n          }),\n          data: _mapInstanceProperty(updateEventData).call(updateEventData, function (value) {\n            return value.updatedData;\n          })\n        };\n        // TODO: remove deprecated property 'data' some day\n        //Object.defineProperty(props, 'data', {\n        //  'get': (function() {\n        //    console.warn('Property data is deprecated. Use DataSet.get(ids) to retrieve the new data, use the oldData property on this object to get the old data');\n        //    return updatedData;\n        //  }).bind(this)\n        //});\n        this._trigger(\"update\", props, senderId);\n        return props.items;\n      } else {\n        return [];\n      }\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"get\",\n    value: function get(first, second) {\n      // @TODO: Woudn't it be better to split this into multiple methods?\n      // parse the arguments\n      var id = undefined;\n      var ids = undefined;\n      var options = undefined;\n      if (isId(first)) {\n        // get(id [, options])\n        id = first;\n        options = second;\n      } else if (_Array$isArray(first)) {\n        // get(ids [, options])\n        ids = first;\n        options = second;\n      } else {\n        // get([, options])\n        options = first;\n      }\n      // determine the return type\n      var returnType = options && options.returnType === \"Object\" ? \"Object\" : \"Array\";\n      // @TODO: WTF is this? Or am I missing something?\n      // var returnType\n      // if (options && options.returnType) {\n      //   var allowedValues = ['Array', 'Object']\n      //   returnType =\n      //     allowedValues.indexOf(options.returnType) == -1\n      //       ? 'Array'\n      //       : options.returnType\n      // } else {\n      //   returnType = 'Array'\n      // }\n      // build options\n      var filter = options && _filterInstanceProperty(options);\n      var items = [];\n      var item = undefined;\n      var itemIds = undefined;\n      var itemId = undefined;\n      // convert items\n      if (id != null) {\n        // return a single item\n        item = this._data.get(id);\n        if (item && filter && !filter(item)) {\n          item = undefined;\n        }\n      } else if (ids != null) {\n        // return a subset of items\n        for (var i = 0, len = ids.length; i < len; i++) {\n          item = this._data.get(ids[i]);\n          if (item != null && (!filter || filter(item))) {\n            items.push(item);\n          }\n        }\n      } else {\n        var _context20;\n        // return all items\n        itemIds = _toConsumableArray(_keysInstanceProperty(_context20 = this._data).call(_context20));\n        for (var _i = 0, _len2 = itemIds.length; _i < _len2; _i++) {\n          itemId = itemIds[_i];\n          item = this._data.get(itemId);\n          if (item != null && (!filter || filter(item))) {\n            items.push(item);\n          }\n        }\n      }\n      // order the results\n      if (options && options.order && id == undefined) {\n        this._sort(items, options.order);\n      }\n      // filter fields of the items\n      if (options && options.fields) {\n        var fields = options.fields;\n        if (id != undefined && item != null) {\n          item = this._filterFields(item, fields);\n        } else {\n          for (var _i2 = 0, _len3 = items.length; _i2 < _len3; _i2++) {\n            items[_i2] = this._filterFields(items[_i2], fields);\n          }\n        }\n      }\n      // return the results\n      if (returnType == \"Object\") {\n        var result = {};\n        for (var _i3 = 0, _len4 = items.length; _i3 < _len4; _i3++) {\n          var resultant = items[_i3];\n          // @TODO: Shoudn't this be this._fieldId?\n          // result[resultant.id] = resultant\n          var _id2 = resultant[this._idProp];\n          result[_id2] = resultant;\n        }\n        return result;\n      } else {\n        if (id != null) {\n          var _item;\n          // a single item\n          return (_item = item) !== null && _item !== void 0 ? _item : null;\n        } else {\n          // just return our array\n          return items;\n        }\n      }\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"getIds\",\n    value: function getIds(options) {\n      var data = this._data;\n      var filter = options && _filterInstanceProperty(options);\n      var order = options && options.order;\n      var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));\n      var ids = [];\n      if (filter) {\n        // get filtered items\n        if (order) {\n          // create ordered list\n          var items = [];\n          for (var i = 0, len = itemIds.length; i < len; i++) {\n            var id = itemIds[i];\n            var item = this._data.get(id);\n            if (item != null && filter(item)) {\n              items.push(item);\n            }\n          }\n          this._sort(items, order);\n          for (var _i4 = 0, _len5 = items.length; _i4 < _len5; _i4++) {\n            ids.push(items[_i4][this._idProp]);\n          }\n        } else {\n          // create unordered list\n          for (var _i5 = 0, _len6 = itemIds.length; _i5 < _len6; _i5++) {\n            var _id3 = itemIds[_i5];\n            var _item2 = this._data.get(_id3);\n            if (_item2 != null && filter(_item2)) {\n              ids.push(_item2[this._idProp]);\n            }\n          }\n        }\n      } else {\n        // get all items\n        if (order) {\n          // create an ordered list\n          var _items = [];\n          for (var _i6 = 0, _len7 = itemIds.length; _i6 < _len7; _i6++) {\n            var _id4 = itemIds[_i6];\n            _items.push(data.get(_id4));\n          }\n          this._sort(_items, order);\n          for (var _i7 = 0, _len8 = _items.length; _i7 < _len8; _i7++) {\n            ids.push(_items[_i7][this._idProp]);\n          }\n        } else {\n          // create unordered list\n          for (var _i8 = 0, _len9 = itemIds.length; _i8 < _len9; _i8++) {\n            var _id5 = itemIds[_i8];\n            var _item3 = data.get(_id5);\n            if (_item3 != null) {\n              ids.push(_item3[this._idProp]);\n            }\n          }\n        }\n      }\n      return ids;\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"getDataSet\",\n    value: function getDataSet() {\n      return this;\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback, options) {\n      var filter = options && _filterInstanceProperty(options);\n      var data = this._data;\n      var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));\n      if (options && options.order) {\n        // execute forEach on ordered list\n        var items = this.get(options);\n        for (var i = 0, len = items.length; i < len; i++) {\n          var item = items[i];\n          var id = item[this._idProp];\n          callback(item, id);\n        }\n      } else {\n        // unordered\n        for (var _i9 = 0, _len10 = itemIds.length; _i9 < _len10; _i9++) {\n          var _id6 = itemIds[_i9];\n          var _item4 = this._data.get(_id6);\n          if (_item4 != null && (!filter || filter(_item4))) {\n            callback(_item4, _id6);\n          }\n        }\n      }\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"map\",\n    value: function map(callback, options) {\n      var filter = options && _filterInstanceProperty(options);\n      var mappedItems = [];\n      var data = this._data;\n      var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));\n      // convert and filter items\n      for (var i = 0, len = itemIds.length; i < len; i++) {\n        var id = itemIds[i];\n        var item = this._data.get(id);\n        if (item != null && (!filter || filter(item))) {\n          mappedItems.push(callback(item, id));\n        }\n      }\n      // order items\n      if (options && options.order) {\n        this._sort(mappedItems, options.order);\n      }\n      return mappedItems;\n    }\n    /**\r\n     * Filter the fields of an item.\r\n     *\r\n     * @param item - The item whose fields should be filtered.\r\n     * @param fields - The names of the fields that will be kept.\r\n     * @typeParam K - Field name type.\r\n     * @returns The item without any additional fields.\r\n     */\n  }, {\n    key: \"_filterFields\",\n    value: function _filterFields(item, fields) {\n      var _context21;\n      if (!item) {\n        // item is null\n        return item;\n      }\n      return _reduceInstanceProperty(_context21 = _Array$isArray(fields) ?\n      // Use the supplied array\n      fields :\n      // Use the keys of the supplied object\n      _Object$keys(fields)).call(_context21, function (filteredItem, field) {\n        filteredItem[field] = item[field];\n        return filteredItem;\n      }, {});\n    }\n    /**\r\n     * Sort the provided array with items.\r\n     *\r\n     * @param items - Items to be sorted in place.\r\n     * @param order - A field name or custom sort function.\r\n     * @typeParam T - The type of the items in the items array.\r\n     */\n  }, {\n    key: \"_sort\",\n    value: function _sort(items, order) {\n      if (typeof order === \"string\") {\n        // order by provided field name\n        var name = order; // field name\n        _sortInstanceProperty(items).call(items, function (a, b) {\n          // @TODO: How to treat missing properties?\n          var av = a[name];\n          var bv = b[name];\n          return av > bv ? 1 : av < bv ? -1 : 0;\n        });\n      } else if (typeof order === \"function\") {\n        // order by sort function\n        _sortInstanceProperty(items).call(items, order);\n      } else {\n        // TODO: extend order by an Object {field:string, direction:string}\n        //       where direction can be 'asc' or 'desc'\n        throw new TypeError(\"Order must be a function or a string\");\n      }\n    }\n    /**\r\n     * Remove an item or multiple items by “reference” (only the id is used) or by id.\r\n     *\r\n     * The method ignores removal of non-existing items, and returns an array containing the ids of the items which are actually removed from the DataSet.\r\n     *\r\n     * After the items are removed, the DataSet will trigger an event `remove` for the removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n     *\r\n     * ## Example\r\n     * ```javascript\r\n     * // create a DataSet\r\n     * const data = new vis.DataSet([\r\n     *   { id: 1, text: 'item 1' },\r\n     *   { id: 2, text: 'item 2' },\r\n     *   { id: 3, text: 'item 3' }\r\n     * ])\r\n     *\r\n     * // remove items\r\n     * const ids = data.remove([2, { id: 3 }, 4])\r\n     *\r\n     * console.log(ids) // [2, 3]\r\n     * ```\r\n     *\r\n     * @param id - One or more items or ids of items to be removed.\r\n     * @param senderId - Sender id.\r\n     * @returns The ids of the removed items.\r\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(id, senderId) {\n      var removedIds = [];\n      var removedItems = [];\n      // force everything to be an array for simplicity\n      var ids = _Array$isArray(id) ? id : [id];\n      for (var i = 0, len = ids.length; i < len; i++) {\n        var item = this._remove(ids[i]);\n        if (item) {\n          var itemId = item[this._idProp];\n          if (itemId != null) {\n            removedIds.push(itemId);\n            removedItems.push(item);\n          }\n        }\n      }\n      if (removedIds.length) {\n        this._trigger(\"remove\", {\n          items: removedIds,\n          oldData: removedItems\n        }, senderId);\n      }\n      return removedIds;\n    }\n    /**\r\n     * Remove an item by its id or reference.\r\n     *\r\n     * @param id - Id of an item or the item itself.\r\n     * @returns The removed item if removed, null otherwise.\r\n     */\n  }, {\n    key: \"_remove\",\n    value: function _remove(id) {\n      // @TODO: It origianlly returned the item although the docs say id.\n      // The code expects the item, so probably an error in the docs.\n      var ident;\n      // confirm the id to use based on the args type\n      if (isId(id)) {\n        ident = id;\n      } else if (id && _typeof$1(id) === \"object\") {\n        ident = id[this._idProp]; // look for the identifier field using ._idProp\n      }\n      // do the removing if the item is found\n      if (ident != null && this._data.has(ident)) {\n        var item = this._data.get(ident) || null;\n        this._data.delete(ident);\n        --this.length;\n        return item;\n      }\n      return null;\n    }\n    /**\r\n     * Clear the entire data set.\r\n     *\r\n     * After the items are removed, the {@link DataSet} will trigger an event `remove` for all removed items. When a `senderId` is provided, this id will be passed with the triggered event to all subscribers.\r\n     *\r\n     * @param senderId - Sender id.\r\n     * @returns removedIds - The ids of all removed items.\r\n     */\n  }, {\n    key: \"clear\",\n    value: function clear(senderId) {\n      var _context22;\n      var ids = _toConsumableArray(_keysInstanceProperty(_context22 = this._data).call(_context22));\n      var items = [];\n      for (var i = 0, len = ids.length; i < len; i++) {\n        items.push(this._data.get(ids[i]));\n      }\n      this._data.clear();\n      this.length = 0;\n      this._trigger(\"remove\", {\n        items: ids,\n        oldData: items\n      }, senderId);\n      return ids;\n    }\n    /**\r\n     * Find the item with maximum value of a specified field.\r\n     *\r\n     * @param field - Name of the property that should be searched for max value.\r\n     * @returns Item containing max value, or null if no items.\r\n     */\n  }, {\n    key: \"max\",\n    value: function max(field) {\n      var _context23;\n      var max = null;\n      var maxField = null;\n      var _iterator11 = _createForOfIteratorHelper$6(_valuesInstanceProperty(_context23 = this._data).call(_context23)),\n        _step11;\n      try {\n        for (_iterator11.s(); !(_step11 = _iterator11.n()).done;) {\n          var item = _step11.value;\n          var itemField = item[field];\n          if (typeof itemField === \"number\" && (maxField == null || itemField > maxField)) {\n            max = item;\n            maxField = itemField;\n          }\n        }\n      } catch (err) {\n        _iterator11.e(err);\n      } finally {\n        _iterator11.f();\n      }\n      return max || null;\n    }\n    /**\r\n     * Find the item with minimum value of a specified field.\r\n     *\r\n     * @param field - Name of the property that should be searched for min value.\r\n     * @returns Item containing min value, or null if no items.\r\n     */\n  }, {\n    key: \"min\",\n    value: function min(field) {\n      var _context24;\n      var min = null;\n      var minField = null;\n      var _iterator12 = _createForOfIteratorHelper$6(_valuesInstanceProperty(_context24 = this._data).call(_context24)),\n        _step12;\n      try {\n        for (_iterator12.s(); !(_step12 = _iterator12.n()).done;) {\n          var item = _step12.value;\n          var itemField = item[field];\n          if (typeof itemField === \"number\" && (minField == null || itemField < minField)) {\n            min = item;\n            minField = itemField;\n          }\n        }\n      } catch (err) {\n        _iterator12.e(err);\n      } finally {\n        _iterator12.f();\n      }\n      return min || null;\n    }\n    /**\r\n     * Find all distinct values of a specified field\r\n     *\r\n     * @param prop - The property name whose distinct values should be returned.\r\n     * @returns Unordered array containing all distinct values. Items without specified property are ignored.\r\n     */\n  }, {\n    key: \"distinct\",\n    value: function distinct(prop) {\n      var data = this._data;\n      var itemIds = _toConsumableArray(_keysInstanceProperty(data).call(data));\n      var values = [];\n      var count = 0;\n      for (var i = 0, len = itemIds.length; i < len; i++) {\n        var id = itemIds[i];\n        var item = data.get(id);\n        var _value3 = item[prop];\n        var exists = false;\n        for (var j = 0; j < count; j++) {\n          if (values[j] == _value3) {\n            exists = true;\n            break;\n          }\n        }\n        if (!exists && _value3 !== undefined) {\n          values[count] = _value3;\n          count++;\n        }\n      }\n      return values;\n    }\n    /**\r\n     * Add a single item. Will fail when an item with the same id already exists.\r\n     *\r\n     * @param item - A new item to be added.\r\n     * @returns Added item's id. An id is generated when it is not present in the item.\r\n     */\n  }, {\n    key: \"_addItem\",\n    value: function _addItem(item) {\n      var fullItem = ensureFullItem(item, this._idProp);\n      var id = fullItem[this._idProp];\n      // check whether this id is already taken\n      if (this._data.has(id)) {\n        // item already exists\n        throw new Error(\"Cannot add item: item with id \" + id + \" already exists\");\n      }\n      this._data.set(id, fullItem);\n      ++this.length;\n      return id;\n    }\n    /**\r\n     * Update a single item: merge with existing item.\r\n     * Will fail when the item has no id, or when there does not exist an item with the same id.\r\n     *\r\n     * @param update - The new item\r\n     * @returns The id of the updated item.\r\n     */\n  }, {\n    key: \"_updateItem\",\n    value: function _updateItem(update) {\n      var id = update[this._idProp];\n      if (id == null) {\n        throw new Error(\"Cannot update item: item has no id (item: \" + _JSON$stringify(update) + \")\");\n      }\n      var item = this._data.get(id);\n      if (!item) {\n        // item doesn't exist\n        throw new Error(\"Cannot update item: no item with id \" + id + \" found\");\n      }\n      this._data.set(id, _objectSpread$1(_objectSpread$1({}, item), update));\n      return id;\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"stream\",\n    value: function stream(ids) {\n      if (ids) {\n        var data = this._data;\n        return new DataStream(_defineProperty({}, _Symbol$iterator2, /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n          var _iterator13, _step13, id, item;\n          return _regeneratorRuntime.wrap(function _callee3$(_context25) {\n            while (1) switch (_context25.prev = _context25.next) {\n              case 0:\n                _iterator13 = _createForOfIteratorHelper$6(ids);\n                _context25.prev = 1;\n                _iterator13.s();\n              case 3:\n                if ((_step13 = _iterator13.n()).done) {\n                  _context25.next = 11;\n                  break;\n                }\n                id = _step13.value;\n                item = data.get(id);\n                if (!(item != null)) {\n                  _context25.next = 9;\n                  break;\n                }\n                _context25.next = 9;\n                return [id, item];\n              case 9:\n                _context25.next = 3;\n                break;\n              case 11:\n                _context25.next = 16;\n                break;\n              case 13:\n                _context25.prev = 13;\n                _context25.t0 = _context25[\"catch\"](1);\n                _iterator13.e(_context25.t0);\n              case 16:\n                _context25.prev = 16;\n                _iterator13.f();\n                return _context25.finish(16);\n              case 19:\n              case \"end\":\n                return _context25.stop();\n            }\n          }, _callee3, null, [[1, 13, 16, 19]]);\n        })));\n      } else {\n        var _context26;\n        return new DataStream(_defineProperty({}, _Symbol$iterator2, _bindInstanceProperty$1(_context26 = _entriesInstanceProperty(this._data)).call(_context26, this._data)));\n      }\n    }\n  }]);\n  return DataSet;\n}(DataSetPart);\n/**\r\n * DataView\r\n *\r\n * A DataView offers a filtered and/or formatted view on a DataSet. One can subscribe to changes in a DataView, and easily get filtered or formatted data without having to specify filters and field types all the time.\r\n *\r\n * ## Example\r\n * ```javascript\r\n * // create a DataSet\r\n * var data = new vis.DataSet();\r\n * data.add([\r\n *   {id: 1, text: 'item 1', date: new Date(2013, 6, 20), group: 1, first: true},\r\n *   {id: 2, text: 'item 2', date: '2013-06-23', group: 2},\r\n *   {id: 3, text: 'item 3', date: '2013-06-25', group: 2},\r\n *   {id: 4, text: 'item 4'}\r\n * ]);\r\n *\r\n * // create a DataView\r\n * // the view will only contain items having a property group with value 1,\r\n * // and will only output fields id, text, and date.\r\n * var view = new vis.DataView(data, {\r\n *   filter: function (item) {\r\n *     return (item.group == 1);\r\n *   },\r\n *   fields: ['id', 'text', 'date']\r\n * });\r\n *\r\n * // subscribe to any change in the DataView\r\n * view.on('*', function (event, properties, senderId) {\r\n *   console.log('event', event, properties);\r\n * });\r\n *\r\n * // update an item in the data set\r\n * data.update({id: 2, group: 1});\r\n *\r\n * // get all ids in the view\r\n * var ids = view.getIds();\r\n * console.log('ids', ids); // will output [1, 2]\r\n *\r\n * // get all items in the view\r\n * var items = view.get();\r\n * ```\r\n *\r\n * @typeParam Item - Item type that may or may not have an id.\r\n * @typeParam IdProp - Name of the property that contains the id.\r\n */\nvar DataView = /*#__PURE__*/function (_DataSetPart2) {\n  _inherits(DataView, _DataSetPart2);\n  var _super2 = _createSuper$d(DataView);\n  /**\r\n   * Create a DataView.\r\n   *\r\n   * @param data - The instance containing data (directly or indirectly).\r\n   * @param options - Options to configure this data view.\r\n   */\n  function DataView(data, options) {\n    var _context27;\n    var _this7;\n    _classCallCheck(this, DataView);\n    _this7 = _super2.call(this);\n    /** @inheritDoc */\n    _defineProperty(_assertThisInitialized(_this7), \"length\", 0);\n    _defineProperty(_assertThisInitialized(_this7), \"_listener\", void 0);\n    _defineProperty(_assertThisInitialized(_this7), \"_data\", void 0);\n    // constructor → setData\n    _defineProperty(_assertThisInitialized(_this7), \"_ids\", new _Set());\n    // ids of the items currently in memory (just contains a boolean true)\n    _defineProperty(_assertThisInitialized(_this7), \"_options\", void 0);\n    _this7._options = options || {};\n    _this7._listener = _bindInstanceProperty$1(_context27 = _this7._onEvent).call(_context27, _assertThisInitialized(_this7));\n    _this7.setData(data);\n    return _this7;\n  }\n  // TODO: implement a function .config() to dynamically update things like configured filter\n  // and trigger changes accordingly\n  /**\r\n   * Set a data source for the view.\r\n   *\r\n   * @param data - The instance containing data (directly or indirectly).\r\n   * @remarks\r\n   * Note that when the data view is bound to a data set it won't be garbage\r\n   * collected unless the data set is too. Use `dataView.setData(null)` or\r\n   * `dataView.dispose()` to enable garbage collection before you lose the last\r\n   * reference.\r\n   */\n  _createClass(DataView, [{\n    key: \"idProp\",\n    get: /** @inheritDoc */\n    function get() {\n      return this.getDataSet().idProp;\n    }\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      if (this._data) {\n        // unsubscribe from current dataset\n        if (this._data.off) {\n          this._data.off(\"*\", this._listener);\n        }\n        // trigger a remove of all items in memory\n        var ids = this._data.getIds({\n          filter: _filterInstanceProperty(this._options)\n        });\n        var items = this._data.get(ids);\n        this._ids.clear();\n        this.length = 0;\n        this._trigger(\"remove\", {\n          items: ids,\n          oldData: items\n        });\n      }\n      if (data != null) {\n        this._data = data;\n        // trigger an add of all added items\n        var _ids = this._data.getIds({\n          filter: _filterInstanceProperty(this._options)\n        });\n        for (var i = 0, len = _ids.length; i < len; i++) {\n          var id = _ids[i];\n          this._ids.add(id);\n        }\n        this.length = _ids.length;\n        this._trigger(\"add\", {\n          items: _ids\n        });\n      } else {\n        this._data = new DataSet();\n      }\n      // subscribe to new dataset\n      if (this._data.on) {\n        this._data.on(\"*\", this._listener);\n      }\n    }\n    /**\r\n     * Refresh the DataView.\r\n     * Useful when the DataView has a filter function containing a variable parameter.\r\n     */\n  }, {\n    key: \"refresh\",\n    value: function refresh() {\n      var ids = this._data.getIds({\n        filter: _filterInstanceProperty(this._options)\n      });\n      var oldIds = _toConsumableArray(this._ids);\n      var newIds = {};\n      var addedIds = [];\n      var removedIds = [];\n      var removedItems = [];\n      // check for additions\n      for (var i = 0, len = ids.length; i < len; i++) {\n        var id = ids[i];\n        newIds[id] = true;\n        if (!this._ids.has(id)) {\n          addedIds.push(id);\n          this._ids.add(id);\n        }\n      }\n      // check for removals\n      for (var _i10 = 0, _len11 = oldIds.length; _i10 < _len11; _i10++) {\n        var _id7 = oldIds[_i10];\n        var item = this._data.get(_id7);\n        if (item == null) {\n          // @TODO: Investigate.\n          // Doesn't happen during tests or examples.\n          // Is it really impossible or could it eventually happen?\n          // How to handle it if it does? The types guarantee non-nullable items.\n          console.error(\"If you see this, report it please.\");\n        } else if (!newIds[_id7]) {\n          removedIds.push(_id7);\n          removedItems.push(item);\n          this._ids.delete(_id7);\n        }\n      }\n      this.length += addedIds.length - removedIds.length;\n      // trigger events\n      if (addedIds.length) {\n        this._trigger(\"add\", {\n          items: addedIds\n        });\n      }\n      if (removedIds.length) {\n        this._trigger(\"remove\", {\n          items: removedIds,\n          oldData: removedItems\n        });\n      }\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"get\",\n    value: function get(first, second) {\n      if (this._data == null) {\n        return null;\n      }\n      // parse the arguments\n      var ids = null;\n      var options;\n      if (isId(first) || _Array$isArray(first)) {\n        ids = first;\n        options = second;\n      } else {\n        options = first;\n      }\n      // extend the options with the default options and provided options\n      var viewOptions = _Object$assign({}, this._options, options);\n      // create a combined filter method when needed\n      var thisFilter = _filterInstanceProperty(this._options);\n      var optionsFilter = options && _filterInstanceProperty(options);\n      if (thisFilter && optionsFilter) {\n        viewOptions.filter = function (item) {\n          return thisFilter(item) && optionsFilter(item);\n        };\n      }\n      if (ids == null) {\n        return this._data.get(viewOptions);\n      } else {\n        return this._data.get(ids, viewOptions);\n      }\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"getIds\",\n    value: function getIds(options) {\n      if (this._data.length) {\n        var defaultFilter = _filterInstanceProperty(this._options);\n        var optionsFilter = options != null ? _filterInstanceProperty(options) : null;\n        var filter;\n        if (optionsFilter) {\n          if (defaultFilter) {\n            filter = function filter(item) {\n              return defaultFilter(item) && optionsFilter(item);\n            };\n          } else {\n            filter = optionsFilter;\n          }\n        } else {\n          filter = defaultFilter;\n        }\n        return this._data.getIds({\n          filter: filter,\n          order: options && options.order\n        });\n      } else {\n        return [];\n      }\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"forEach\",\n    value: function forEach(callback, options) {\n      if (this._data) {\n        var _context28;\n        var defaultFilter = _filterInstanceProperty(this._options);\n        var optionsFilter = options && _filterInstanceProperty(options);\n        var filter;\n        if (optionsFilter) {\n          if (defaultFilter) {\n            filter = function filter(item) {\n              return defaultFilter(item) && optionsFilter(item);\n            };\n          } else {\n            filter = optionsFilter;\n          }\n        } else {\n          filter = defaultFilter;\n        }\n        _forEachInstanceProperty(_context28 = this._data).call(_context28, callback, {\n          filter: filter,\n          order: options && options.order\n        });\n      }\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"map\",\n    value: function map(callback, options) {\n      if (this._data) {\n        var _context29;\n        var defaultFilter = _filterInstanceProperty(this._options);\n        var optionsFilter = options && _filterInstanceProperty(options);\n        var filter;\n        if (optionsFilter) {\n          if (defaultFilter) {\n            filter = function filter(item) {\n              return defaultFilter(item) && optionsFilter(item);\n            };\n          } else {\n            filter = optionsFilter;\n          }\n        } else {\n          filter = defaultFilter;\n        }\n        return _mapInstanceProperty(_context29 = this._data).call(_context29, callback, {\n          filter: filter,\n          order: options && options.order\n        });\n      } else {\n        return [];\n      }\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"getDataSet\",\n    value: function getDataSet() {\n      return this._data.getDataSet();\n    }\n    /** @inheritDoc */\n  }, {\n    key: \"stream\",\n    value: function stream(ids) {\n      var _context30;\n      return this._data.stream(ids || _defineProperty({}, _Symbol$iterator2, _bindInstanceProperty$1(_context30 = _keysInstanceProperty(this._ids)).call(_context30, this._ids)));\n    }\n    /**\r\n     * Render the instance unusable prior to garbage collection.\r\n     *\r\n     * @remarks\r\n     * The intention of this method is to help discover scenarios where the data\r\n     * view is being used when the programmer thinks it has been garbage collected\r\n     * already. It's stricter version of `dataView.setData(null)`.\r\n     */\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      var _this$_data;\n      if ((_this$_data = this._data) !== null && _this$_data !== void 0 && _this$_data.off) {\n        this._data.off(\"*\", this._listener);\n      }\n      var message = \"This data view has already been disposed of.\";\n      var replacement = {\n        get: function get() {\n          throw new Error(message);\n        },\n        set: function set() {\n          throw new Error(message);\n        },\n        configurable: false\n      };\n      var _iterator14 = _createForOfIteratorHelper$6(_Reflect$ownKeys(DataView.prototype)),\n        _step14;\n      try {\n        for (_iterator14.s(); !(_step14 = _iterator14.n()).done;) {\n          var key = _step14.value;\n          _Object$defineProperty(this, key, replacement);\n        }\n      } catch (err) {\n        _iterator14.e(err);\n      } finally {\n        _iterator14.f();\n      }\n    }\n    /**\r\n     * Event listener. Will propagate all events from the connected data set to the subscribers of the DataView, but will filter the items and only trigger when there are changes in the filtered data set.\r\n     *\r\n     * @param event - The name of the event.\r\n     * @param params - Parameters of the event.\r\n     * @param senderId - Id supplied by the sender.\r\n     */\n  }, {\n    key: \"_onEvent\",\n    value: function _onEvent(event, params, senderId) {\n      if (!params || !params.items || !this._data) {\n        return;\n      }\n      var ids = params.items;\n      var addedIds = [];\n      var updatedIds = [];\n      var removedIds = [];\n      var oldItems = [];\n      var updatedItems = [];\n      var removedItems = [];\n      switch (event) {\n        case \"add\":\n          // filter the ids of the added items\n          for (var i = 0, len = ids.length; i < len; i++) {\n            var id = ids[i];\n            var item = this.get(id);\n            if (item) {\n              this._ids.add(id);\n              addedIds.push(id);\n            }\n          }\n          break;\n        case \"update\":\n          // determine the event from the views viewpoint: an updated\n          // item can be added, updated, or removed from this view.\n          for (var _i11 = 0, _len12 = ids.length; _i11 < _len12; _i11++) {\n            var _id8 = ids[_i11];\n            var _item5 = this.get(_id8);\n            if (_item5) {\n              if (this._ids.has(_id8)) {\n                updatedIds.push(_id8);\n                updatedItems.push(params.data[_i11]);\n                oldItems.push(params.oldData[_i11]);\n              } else {\n                this._ids.add(_id8);\n                addedIds.push(_id8);\n              }\n            } else {\n              if (this._ids.has(_id8)) {\n                this._ids.delete(_id8);\n                removedIds.push(_id8);\n                removedItems.push(params.oldData[_i11]);\n              }\n            }\n          }\n          break;\n        case \"remove\":\n          // filter the ids of the removed items\n          for (var _i12 = 0, _len13 = ids.length; _i12 < _len13; _i12++) {\n            var _id9 = ids[_i12];\n            if (this._ids.has(_id9)) {\n              this._ids.delete(_id9);\n              removedIds.push(_id9);\n              removedItems.push(params.oldData[_i12]);\n            }\n          }\n          break;\n      }\n      this.length += addedIds.length - removedIds.length;\n      if (addedIds.length) {\n        this._trigger(\"add\", {\n          items: addedIds\n        }, senderId);\n      }\n      if (updatedIds.length) {\n        this._trigger(\"update\", {\n          items: updatedIds,\n          oldData: oldItems,\n          data: updatedItems\n        }, senderId);\n      }\n      if (removedIds.length) {\n        this._trigger(\"remove\", {\n          items: removedIds,\n          oldData: removedItems\n        }, senderId);\n      }\n    }\n  }]);\n  return DataView;\n}(DataSetPart);\n/**\r\n * Check that given value is compatible with Vis Data Set interface.\r\n *\r\n * @param idProp - The expected property to contain item id.\r\n * @param v - The value to be tested.\r\n * @returns True if all expected values and methods match, false otherwise.\r\n */\nfunction isDataSetLike(idProp, v) {\n  return _typeof$1(v) === \"object\" && v !== null && idProp === v.idProp && typeof v.add === \"function\" && typeof v.clear === \"function\" && typeof v.distinct === \"function\" && typeof _forEachInstanceProperty(v) === \"function\" && typeof v.get === \"function\" && typeof v.getDataSet === \"function\" && typeof v.getIds === \"function\" && typeof v.length === \"number\" && typeof _mapInstanceProperty(v) === \"function\" && typeof v.max === \"function\" && typeof v.min === \"function\" && typeof v.off === \"function\" && typeof v.on === \"function\" && typeof v.remove === \"function\" && typeof v.setOptions === \"function\" && typeof v.stream === \"function\" && typeof v.update === \"function\" && typeof v.updateOnly === \"function\";\n}\n\n/**\r\n * Check that given value is compatible with Vis Data View interface.\r\n *\r\n * @param idProp - The expected property to contain item id.\r\n * @param v - The value to be tested.\r\n * @returns True if all expected values and methods match, false otherwise.\r\n */\nfunction isDataViewLike$1(idProp, v) {\n  return _typeof$1(v) === \"object\" && v !== null && idProp === v.idProp && typeof _forEachInstanceProperty(v) === \"function\" && typeof v.get === \"function\" && typeof v.getDataSet === \"function\" && typeof v.getIds === \"function\" && typeof v.length === \"number\" && typeof _mapInstanceProperty(v) === \"function\" && typeof v.off === \"function\" && typeof v.on === \"function\" && typeof v.stream === \"function\" && isDataSetLike(idProp, v.getDataSet());\n}\n\n// first check if moment.js is already loaded in the browser window, if so,\n// use this instance. Else, load via commonjs.\n//\n// Note: This doesn't work in ESM.\nvar moment$3 = typeof window !== 'undefined' && window['moment'] || requireMoment();\nvar moment$4 = /*@__PURE__*/getDefaultExportFromCjs(moment$3);\n\nvar momentExports = requireMoment();\nvar moment$2 = /*@__PURE__*/getDefaultExportFromCjs(momentExports);\n\nvar lib$1 = {exports: {}};\n\nvar _default$1 = {};\n\nvar lib = {exports: {}};\n\nvar _default = {};\n\n/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nfunction getDefaultWhiteList$1 () {\n  // 白名单值说明：\n  // true: 允许该属性\n  // Function: function (val) { } 返回true表示允许该属性，其他值均表示不允许\n  // RegExp: regexp.test(val) 返回true表示允许该属性，其他值均表示不允许\n  // 除上面列出的值外均表示不允许\n  var whiteList = {};\n\n  whiteList['align-content'] = false; // default: auto\n  whiteList['align-items'] = false; // default: auto\n  whiteList['align-self'] = false; // default: auto\n  whiteList['alignment-adjust'] = false; // default: auto\n  whiteList['alignment-baseline'] = false; // default: baseline\n  whiteList['all'] = false; // default: depending on individual properties\n  whiteList['anchor-point'] = false; // default: none\n  whiteList['animation'] = false; // default: depending on individual properties\n  whiteList['animation-delay'] = false; // default: 0\n  whiteList['animation-direction'] = false; // default: normal\n  whiteList['animation-duration'] = false; // default: 0\n  whiteList['animation-fill-mode'] = false; // default: none\n  whiteList['animation-iteration-count'] = false; // default: 1\n  whiteList['animation-name'] = false; // default: none\n  whiteList['animation-play-state'] = false; // default: running\n  whiteList['animation-timing-function'] = false; // default: ease\n  whiteList['azimuth'] = false; // default: center\n  whiteList['backface-visibility'] = false; // default: visible\n  whiteList['background'] = true; // default: depending on individual properties\n  whiteList['background-attachment'] = true; // default: scroll\n  whiteList['background-clip'] = true; // default: border-box\n  whiteList['background-color'] = true; // default: transparent\n  whiteList['background-image'] = true; // default: none\n  whiteList['background-origin'] = true; // default: padding-box\n  whiteList['background-position'] = true; // default: 0% 0%\n  whiteList['background-repeat'] = true; // default: repeat\n  whiteList['background-size'] = true; // default: auto\n  whiteList['baseline-shift'] = false; // default: baseline\n  whiteList['binding'] = false; // default: none\n  whiteList['bleed'] = false; // default: 6pt\n  whiteList['bookmark-label'] = false; // default: content()\n  whiteList['bookmark-level'] = false; // default: none\n  whiteList['bookmark-state'] = false; // default: open\n  whiteList['border'] = true; // default: depending on individual properties\n  whiteList['border-bottom'] = true; // default: depending on individual properties\n  whiteList['border-bottom-color'] = true; // default: current color\n  whiteList['border-bottom-left-radius'] = true; // default: 0\n  whiteList['border-bottom-right-radius'] = true; // default: 0\n  whiteList['border-bottom-style'] = true; // default: none\n  whiteList['border-bottom-width'] = true; // default: medium\n  whiteList['border-collapse'] = true; // default: separate\n  whiteList['border-color'] = true; // default: depending on individual properties\n  whiteList['border-image'] = true; // default: none\n  whiteList['border-image-outset'] = true; // default: 0\n  whiteList['border-image-repeat'] = true; // default: stretch\n  whiteList['border-image-slice'] = true; // default: 100%\n  whiteList['border-image-source'] = true; // default: none\n  whiteList['border-image-width'] = true; // default: 1\n  whiteList['border-left'] = true; // default: depending on individual properties\n  whiteList['border-left-color'] = true; // default: current color\n  whiteList['border-left-style'] = true; // default: none\n  whiteList['border-left-width'] = true; // default: medium\n  whiteList['border-radius'] = true; // default: 0\n  whiteList['border-right'] = true; // default: depending on individual properties\n  whiteList['border-right-color'] = true; // default: current color\n  whiteList['border-right-style'] = true; // default: none\n  whiteList['border-right-width'] = true; // default: medium\n  whiteList['border-spacing'] = true; // default: 0\n  whiteList['border-style'] = true; // default: depending on individual properties\n  whiteList['border-top'] = true; // default: depending on individual properties\n  whiteList['border-top-color'] = true; // default: current color\n  whiteList['border-top-left-radius'] = true; // default: 0\n  whiteList['border-top-right-radius'] = true; // default: 0\n  whiteList['border-top-style'] = true; // default: none\n  whiteList['border-top-width'] = true; // default: medium\n  whiteList['border-width'] = true; // default: depending on individual properties\n  whiteList['bottom'] = false; // default: auto\n  whiteList['box-decoration-break'] = true; // default: slice\n  whiteList['box-shadow'] = true; // default: none\n  whiteList['box-sizing'] = true; // default: content-box\n  whiteList['box-snap'] = true; // default: none\n  whiteList['box-suppress'] = true; // default: show\n  whiteList['break-after'] = true; // default: auto\n  whiteList['break-before'] = true; // default: auto\n  whiteList['break-inside'] = true; // default: auto\n  whiteList['caption-side'] = false; // default: top\n  whiteList['chains'] = false; // default: none\n  whiteList['clear'] = true; // default: none\n  whiteList['clip'] = false; // default: auto\n  whiteList['clip-path'] = false; // default: none\n  whiteList['clip-rule'] = false; // default: nonzero\n  whiteList['color'] = true; // default: implementation dependent\n  whiteList['color-interpolation-filters'] = true; // default: auto\n  whiteList['column-count'] = false; // default: auto\n  whiteList['column-fill'] = false; // default: balance\n  whiteList['column-gap'] = false; // default: normal\n  whiteList['column-rule'] = false; // default: depending on individual properties\n  whiteList['column-rule-color'] = false; // default: current color\n  whiteList['column-rule-style'] = false; // default: medium\n  whiteList['column-rule-width'] = false; // default: medium\n  whiteList['column-span'] = false; // default: none\n  whiteList['column-width'] = false; // default: auto\n  whiteList['columns'] = false; // default: depending on individual properties\n  whiteList['contain'] = false; // default: none\n  whiteList['content'] = false; // default: normal\n  whiteList['counter-increment'] = false; // default: none\n  whiteList['counter-reset'] = false; // default: none\n  whiteList['counter-set'] = false; // default: none\n  whiteList['crop'] = false; // default: auto\n  whiteList['cue'] = false; // default: depending on individual properties\n  whiteList['cue-after'] = false; // default: none\n  whiteList['cue-before'] = false; // default: none\n  whiteList['cursor'] = false; // default: auto\n  whiteList['direction'] = false; // default: ltr\n  whiteList['display'] = true; // default: depending on individual properties\n  whiteList['display-inside'] = true; // default: auto\n  whiteList['display-list'] = true; // default: none\n  whiteList['display-outside'] = true; // default: inline-level\n  whiteList['dominant-baseline'] = false; // default: auto\n  whiteList['elevation'] = false; // default: level\n  whiteList['empty-cells'] = false; // default: show\n  whiteList['filter'] = false; // default: none\n  whiteList['flex'] = false; // default: depending on individual properties\n  whiteList['flex-basis'] = false; // default: auto\n  whiteList['flex-direction'] = false; // default: row\n  whiteList['flex-flow'] = false; // default: depending on individual properties\n  whiteList['flex-grow'] = false; // default: 0\n  whiteList['flex-shrink'] = false; // default: 1\n  whiteList['flex-wrap'] = false; // default: nowrap\n  whiteList['float'] = false; // default: none\n  whiteList['float-offset'] = false; // default: 0 0\n  whiteList['flood-color'] = false; // default: black\n  whiteList['flood-opacity'] = false; // default: 1\n  whiteList['flow-from'] = false; // default: none\n  whiteList['flow-into'] = false; // default: none\n  whiteList['font'] = true; // default: depending on individual properties\n  whiteList['font-family'] = true; // default: implementation dependent\n  whiteList['font-feature-settings'] = true; // default: normal\n  whiteList['font-kerning'] = true; // default: auto\n  whiteList['font-language-override'] = true; // default: normal\n  whiteList['font-size'] = true; // default: medium\n  whiteList['font-size-adjust'] = true; // default: none\n  whiteList['font-stretch'] = true; // default: normal\n  whiteList['font-style'] = true; // default: normal\n  whiteList['font-synthesis'] = true; // default: weight style\n  whiteList['font-variant'] = true; // default: normal\n  whiteList['font-variant-alternates'] = true; // default: normal\n  whiteList['font-variant-caps'] = true; // default: normal\n  whiteList['font-variant-east-asian'] = true; // default: normal\n  whiteList['font-variant-ligatures'] = true; // default: normal\n  whiteList['font-variant-numeric'] = true; // default: normal\n  whiteList['font-variant-position'] = true; // default: normal\n  whiteList['font-weight'] = true; // default: normal\n  whiteList['grid'] = false; // default: depending on individual properties\n  whiteList['grid-area'] = false; // default: depending on individual properties\n  whiteList['grid-auto-columns'] = false; // default: auto\n  whiteList['grid-auto-flow'] = false; // default: none\n  whiteList['grid-auto-rows'] = false; // default: auto\n  whiteList['grid-column'] = false; // default: depending on individual properties\n  whiteList['grid-column-end'] = false; // default: auto\n  whiteList['grid-column-start'] = false; // default: auto\n  whiteList['grid-row'] = false; // default: depending on individual properties\n  whiteList['grid-row-end'] = false; // default: auto\n  whiteList['grid-row-start'] = false; // default: auto\n  whiteList['grid-template'] = false; // default: depending on individual properties\n  whiteList['grid-template-areas'] = false; // default: none\n  whiteList['grid-template-columns'] = false; // default: none\n  whiteList['grid-template-rows'] = false; // default: none\n  whiteList['hanging-punctuation'] = false; // default: none\n  whiteList['height'] = true; // default: auto\n  whiteList['hyphens'] = false; // default: manual\n  whiteList['icon'] = false; // default: auto\n  whiteList['image-orientation'] = false; // default: auto\n  whiteList['image-resolution'] = false; // default: normal\n  whiteList['ime-mode'] = false; // default: auto\n  whiteList['initial-letters'] = false; // default: normal\n  whiteList['inline-box-align'] = false; // default: last\n  whiteList['justify-content'] = false; // default: auto\n  whiteList['justify-items'] = false; // default: auto\n  whiteList['justify-self'] = false; // default: auto\n  whiteList['left'] = false; // default: auto\n  whiteList['letter-spacing'] = true; // default: normal\n  whiteList['lighting-color'] = true; // default: white\n  whiteList['line-box-contain'] = false; // default: block inline replaced\n  whiteList['line-break'] = false; // default: auto\n  whiteList['line-grid'] = false; // default: match-parent\n  whiteList['line-height'] = false; // default: normal\n  whiteList['line-snap'] = false; // default: none\n  whiteList['line-stacking'] = false; // default: depending on individual properties\n  whiteList['line-stacking-ruby'] = false; // default: exclude-ruby\n  whiteList['line-stacking-shift'] = false; // default: consider-shifts\n  whiteList['line-stacking-strategy'] = false; // default: inline-line-height\n  whiteList['list-style'] = true; // default: depending on individual properties\n  whiteList['list-style-image'] = true; // default: none\n  whiteList['list-style-position'] = true; // default: outside\n  whiteList['list-style-type'] = true; // default: disc\n  whiteList['margin'] = true; // default: depending on individual properties\n  whiteList['margin-bottom'] = true; // default: 0\n  whiteList['margin-left'] = true; // default: 0\n  whiteList['margin-right'] = true; // default: 0\n  whiteList['margin-top'] = true; // default: 0\n  whiteList['marker-offset'] = false; // default: auto\n  whiteList['marker-side'] = false; // default: list-item\n  whiteList['marks'] = false; // default: none\n  whiteList['mask'] = false; // default: border-box\n  whiteList['mask-box'] = false; // default: see individual properties\n  whiteList['mask-box-outset'] = false; // default: 0\n  whiteList['mask-box-repeat'] = false; // default: stretch\n  whiteList['mask-box-slice'] = false; // default: 0 fill\n  whiteList['mask-box-source'] = false; // default: none\n  whiteList['mask-box-width'] = false; // default: auto\n  whiteList['mask-clip'] = false; // default: border-box\n  whiteList['mask-image'] = false; // default: none\n  whiteList['mask-origin'] = false; // default: border-box\n  whiteList['mask-position'] = false; // default: center\n  whiteList['mask-repeat'] = false; // default: no-repeat\n  whiteList['mask-size'] = false; // default: border-box\n  whiteList['mask-source-type'] = false; // default: auto\n  whiteList['mask-type'] = false; // default: luminance\n  whiteList['max-height'] = true; // default: none\n  whiteList['max-lines'] = false; // default: none\n  whiteList['max-width'] = true; // default: none\n  whiteList['min-height'] = true; // default: 0\n  whiteList['min-width'] = true; // default: 0\n  whiteList['move-to'] = false; // default: normal\n  whiteList['nav-down'] = false; // default: auto\n  whiteList['nav-index'] = false; // default: auto\n  whiteList['nav-left'] = false; // default: auto\n  whiteList['nav-right'] = false; // default: auto\n  whiteList['nav-up'] = false; // default: auto\n  whiteList['object-fit'] = false; // default: fill\n  whiteList['object-position'] = false; // default: 50% 50%\n  whiteList['opacity'] = false; // default: 1\n  whiteList['order'] = false; // default: 0\n  whiteList['orphans'] = false; // default: 2\n  whiteList['outline'] = false; // default: depending on individual properties\n  whiteList['outline-color'] = false; // default: invert\n  whiteList['outline-offset'] = false; // default: 0\n  whiteList['outline-style'] = false; // default: none\n  whiteList['outline-width'] = false; // default: medium\n  whiteList['overflow'] = false; // default: depending on individual properties\n  whiteList['overflow-wrap'] = false; // default: normal\n  whiteList['overflow-x'] = false; // default: visible\n  whiteList['overflow-y'] = false; // default: visible\n  whiteList['padding'] = true; // default: depending on individual properties\n  whiteList['padding-bottom'] = true; // default: 0\n  whiteList['padding-left'] = true; // default: 0\n  whiteList['padding-right'] = true; // default: 0\n  whiteList['padding-top'] = true; // default: 0\n  whiteList['page'] = false; // default: auto\n  whiteList['page-break-after'] = false; // default: auto\n  whiteList['page-break-before'] = false; // default: auto\n  whiteList['page-break-inside'] = false; // default: auto\n  whiteList['page-policy'] = false; // default: start\n  whiteList['pause'] = false; // default: implementation dependent\n  whiteList['pause-after'] = false; // default: implementation dependent\n  whiteList['pause-before'] = false; // default: implementation dependent\n  whiteList['perspective'] = false; // default: none\n  whiteList['perspective-origin'] = false; // default: 50% 50%\n  whiteList['pitch'] = false; // default: medium\n  whiteList['pitch-range'] = false; // default: 50\n  whiteList['play-during'] = false; // default: auto\n  whiteList['position'] = false; // default: static\n  whiteList['presentation-level'] = false; // default: 0\n  whiteList['quotes'] = false; // default: text\n  whiteList['region-fragment'] = false; // default: auto\n  whiteList['resize'] = false; // default: none\n  whiteList['rest'] = false; // default: depending on individual properties\n  whiteList['rest-after'] = false; // default: none\n  whiteList['rest-before'] = false; // default: none\n  whiteList['richness'] = false; // default: 50\n  whiteList['right'] = false; // default: auto\n  whiteList['rotation'] = false; // default: 0\n  whiteList['rotation-point'] = false; // default: 50% 50%\n  whiteList['ruby-align'] = false; // default: auto\n  whiteList['ruby-merge'] = false; // default: separate\n  whiteList['ruby-position'] = false; // default: before\n  whiteList['shape-image-threshold'] = false; // default: 0.0\n  whiteList['shape-outside'] = false; // default: none\n  whiteList['shape-margin'] = false; // default: 0\n  whiteList['size'] = false; // default: auto\n  whiteList['speak'] = false; // default: auto\n  whiteList['speak-as'] = false; // default: normal\n  whiteList['speak-header'] = false; // default: once\n  whiteList['speak-numeral'] = false; // default: continuous\n  whiteList['speak-punctuation'] = false; // default: none\n  whiteList['speech-rate'] = false; // default: medium\n  whiteList['stress'] = false; // default: 50\n  whiteList['string-set'] = false; // default: none\n  whiteList['tab-size'] = false; // default: 8\n  whiteList['table-layout'] = false; // default: auto\n  whiteList['text-align'] = true; // default: start\n  whiteList['text-align-last'] = true; // default: auto\n  whiteList['text-combine-upright'] = true; // default: none\n  whiteList['text-decoration'] = true; // default: none\n  whiteList['text-decoration-color'] = true; // default: currentColor\n  whiteList['text-decoration-line'] = true; // default: none\n  whiteList['text-decoration-skip'] = true; // default: objects\n  whiteList['text-decoration-style'] = true; // default: solid\n  whiteList['text-emphasis'] = true; // default: depending on individual properties\n  whiteList['text-emphasis-color'] = true; // default: currentColor\n  whiteList['text-emphasis-position'] = true; // default: over right\n  whiteList['text-emphasis-style'] = true; // default: none\n  whiteList['text-height'] = true; // default: auto\n  whiteList['text-indent'] = true; // default: 0\n  whiteList['text-justify'] = true; // default: auto\n  whiteList['text-orientation'] = true; // default: mixed\n  whiteList['text-overflow'] = true; // default: clip\n  whiteList['text-shadow'] = true; // default: none\n  whiteList['text-space-collapse'] = true; // default: collapse\n  whiteList['text-transform'] = true; // default: none\n  whiteList['text-underline-position'] = true; // default: auto\n  whiteList['text-wrap'] = true; // default: normal\n  whiteList['top'] = false; // default: auto\n  whiteList['transform'] = false; // default: none\n  whiteList['transform-origin'] = false; // default: 50% 50% 0\n  whiteList['transform-style'] = false; // default: flat\n  whiteList['transition'] = false; // default: depending on individual properties\n  whiteList['transition-delay'] = false; // default: 0s\n  whiteList['transition-duration'] = false; // default: 0s\n  whiteList['transition-property'] = false; // default: all\n  whiteList['transition-timing-function'] = false; // default: ease\n  whiteList['unicode-bidi'] = false; // default: normal\n  whiteList['vertical-align'] = false; // default: baseline\n  whiteList['visibility'] = false; // default: visible\n  whiteList['voice-balance'] = false; // default: center\n  whiteList['voice-duration'] = false; // default: auto\n  whiteList['voice-family'] = false; // default: implementation dependent\n  whiteList['voice-pitch'] = false; // default: medium\n  whiteList['voice-range'] = false; // default: medium\n  whiteList['voice-rate'] = false; // default: normal\n  whiteList['voice-stress'] = false; // default: normal\n  whiteList['voice-volume'] = false; // default: medium\n  whiteList['volume'] = false; // default: medium\n  whiteList['white-space'] = false; // default: normal\n  whiteList['widows'] = false; // default: 2\n  whiteList['width'] = true; // default: auto\n  whiteList['will-change'] = false; // default: auto\n  whiteList['word-break'] = true; // default: normal\n  whiteList['word-spacing'] = true; // default: normal\n  whiteList['word-wrap'] = true; // default: normal\n  whiteList['wrap-flow'] = false; // default: auto\n  whiteList['wrap-through'] = false; // default: wrap\n  whiteList['writing-mode'] = false; // default: horizontal-tb\n  whiteList['z-index'] = false; // default: auto\n\n  return whiteList;\n}\n\n\n/**\n * 匹配到白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onAttr (name, value, options) {\n  // do nothing\n}\n\n/**\n * 匹配到不在白名单上的一个属性时\n *\n * @param {String} name\n * @param {String} value\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreAttr (name, value, options) {\n  // do nothing\n}\n\nvar REGEXP_URL_JAVASCRIPT = /javascript\\s*\\:/img;\n\n/**\n * 过滤属性值\n *\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction safeAttrValue$1(name, value) {\n  if (REGEXP_URL_JAVASCRIPT.test(value)) return '';\n  return value;\n}\n\n\n_default.whiteList = getDefaultWhiteList$1();\n_default.getDefaultWhiteList = getDefaultWhiteList$1;\n_default.onAttr = onAttr;\n_default.onIgnoreAttr = onIgnoreAttr;\n_default.safeAttrValue = safeAttrValue$1;\n\nvar util$1 = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, '');\n  },\n  trimRight: function (str) {\n    if (String.prototype.trimRight) {\n      return str.trimRight();\n    }\n    return str.replace(/(\\s*$)/g, '');\n  }\n};\n\n/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar _$3 = util$1;\n\n\n/**\n * 解析style\n *\n * @param {String} css\n * @param {Function} onAttr 处理属性的函数\n *   参数格式： function (sourcePosition, position, name, value, source)\n * @return {String}\n */\nfunction parseStyle$1 (css, onAttr) {\n  css = _$3.trimRight(css);\n  if (css[css.length - 1] !== ';') css += ';';\n  var cssLength = css.length;\n  var isParenthesisOpen = false;\n  var lastPos = 0;\n  var i = 0;\n  var retCSS = '';\n\n  function addNewAttr () {\n    // 如果没有正常的闭合圆括号，则直接忽略当前属性\n    if (!isParenthesisOpen) {\n      var source = _$3.trim(css.slice(lastPos, i));\n      var j = source.indexOf(':');\n      if (j !== -1) {\n        var name = _$3.trim(source.slice(0, j));\n        var value = _$3.trim(source.slice(j + 1));\n        // 必须有属性名称\n        if (name) {\n          var ret = onAttr(lastPos, retCSS.length, name, value, source);\n          if (ret) retCSS += ret + '; ';\n        }\n      }\n    }\n    lastPos = i + 1;\n  }\n\n  for (; i < cssLength; i++) {\n    var c = css[i];\n    if (c === '/' && css[i + 1] === '*') {\n      // 备注开始\n      var j = css.indexOf('*/', i + 2);\n      // 如果没有正常的备注结束，则后面的部分全部跳过\n      if (j === -1) break;\n      // 直接将当前位置调到备注结尾，并且初始化状态\n      i = j + 1;\n      lastPos = i + 1;\n      isParenthesisOpen = false;\n    } else if (c === '(') {\n      isParenthesisOpen = true;\n    } else if (c === ')') {\n      isParenthesisOpen = false;\n    } else if (c === ';') {\n      if (isParenthesisOpen) ; else {\n        addNewAttr();\n      }\n    } else if (c === '\\n') {\n      addNewAttr();\n    }\n  }\n\n  return _$3.trim(retCSS);\n}\n\nvar parser$2 = parseStyle$1;\n\n/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\nvar DEFAULT$1 = _default;\nvar parseStyle = parser$2;\n\n\n/**\n * 返回值是否为空\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull$1 (obj) {\n  return (obj === undefined || obj === null);\n}\n\n/**\n * 浅拷贝对象\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject$1 (obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\n/**\n * 创建CSS过滤器\n *\n * @param {Object} options\n *   - {Object} whiteList\n *   - {Function} onAttr\n *   - {Function} onIgnoreAttr\n *   - {Function} safeAttrValue\n */\nfunction FilterCSS$2 (options) {\n  options = shallowCopyObject$1(options || {});\n  options.whiteList = options.whiteList || DEFAULT$1.whiteList;\n  options.onAttr = options.onAttr || DEFAULT$1.onAttr;\n  options.onIgnoreAttr = options.onIgnoreAttr || DEFAULT$1.onIgnoreAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT$1.safeAttrValue;\n  this.options = options;\n}\n\nFilterCSS$2.prototype.process = function (css) {\n  // 兼容各种奇葩输入\n  css = css || '';\n  css = css.toString();\n  if (!css) return '';\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onAttr = options.onAttr;\n  var onIgnoreAttr = options.onIgnoreAttr;\n  var safeAttrValue = options.safeAttrValue;\n\n  var retCSS = parseStyle(css, function (sourcePosition, position, name, value, source) {\n\n    var check = whiteList[name];\n    var isWhite = false;\n    if (check === true) isWhite = check;\n    else if (typeof check === 'function') isWhite = check(value);\n    else if (check instanceof RegExp) isWhite = check.test(value);\n    if (isWhite !== true) isWhite = false;\n\n    // 如果过滤后 value 为空则直接忽略\n    value = safeAttrValue(name, value);\n    if (!value) return;\n\n    var opts = {\n      position: position,\n      sourcePosition: sourcePosition,\n      source: source,\n      isWhite: isWhite\n    };\n\n    if (isWhite) {\n\n      var ret = onAttr(name, value, opts);\n      if (isNull$1(ret)) {\n        return name + ':' + value;\n      } else {\n        return ret;\n      }\n\n    } else {\n\n      var ret = onIgnoreAttr(name, value, opts);\n      if (!isNull$1(ret)) {\n        return ret;\n      }\n\n    }\n  });\n\n  return retCSS;\n};\n\n\nvar css = FilterCSS$2;\n\n/**\n * cssfilter\n *\n * @author 老雷<leizongmin@gmail.com>\n */\n\n(function (module, exports) {\n\tvar DEFAULT = _default;\n\tvar FilterCSS = css;\n\n\n\t/**\n\t * XSS过滤\n\t *\n\t * @param {String} css 要过滤的CSS代码\n\t * @param {Object} options 选项：whiteList, onAttr, onIgnoreAttr\n\t * @return {String}\n\t */\n\tfunction filterCSS (html, options) {\n\t  var xss = new FilterCSS(options);\n\t  return xss.process(html);\n\t}\n\n\n\t// 输出\n\texports = module.exports = filterCSS;\n\texports.FilterCSS = FilterCSS;\n\tfor (var i in DEFAULT) exports[i] = DEFAULT[i];\n\n\t// 在浏览器端使用\n\tif (typeof window !== 'undefined') {\n\t  window.filterCSS = module.exports;\n\t} \n} (lib, lib.exports));\n\nvar libExports$1 = lib.exports;\n\nvar util = {\n  indexOf: function (arr, item) {\n    var i, j;\n    if (Array.prototype.indexOf) {\n      return arr.indexOf(item);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      if (arr[i] === item) {\n        return i;\n      }\n    }\n    return -1;\n  },\n  forEach: function (arr, fn, scope) {\n    var i, j;\n    if (Array.prototype.forEach) {\n      return arr.forEach(fn, scope);\n    }\n    for (i = 0, j = arr.length; i < j; i++) {\n      fn.call(scope, arr[i], i, arr);\n    }\n  },\n  trim: function (str) {\n    if (String.prototype.trim) {\n      return str.trim();\n    }\n    return str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n  },\n  spaceIndex: function (str) {\n    var reg = /\\s|\\n|\\t/;\n    var match = reg.exec(str);\n    return match ? match.index : -1;\n  },\n};\n\n/**\n * default settings\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS$1 = libExports$1.FilterCSS;\nvar getDefaultCSSWhiteList = libExports$1.getDefaultWhiteList;\nvar _$2 = util;\n\nfunction getDefaultWhiteList() {\n  return {\n    a: [\"target\", \"href\", \"title\"],\n    abbr: [\"title\"],\n    address: [],\n    area: [\"shape\", \"coords\", \"href\", \"alt\"],\n    article: [],\n    aside: [],\n    audio: [\n      \"autoplay\",\n      \"controls\",\n      \"crossorigin\",\n      \"loop\",\n      \"muted\",\n      \"preload\",\n      \"src\",\n    ],\n    b: [],\n    bdi: [\"dir\"],\n    bdo: [\"dir\"],\n    big: [],\n    blockquote: [\"cite\"],\n    br: [],\n    caption: [],\n    center: [],\n    cite: [],\n    code: [],\n    col: [\"align\", \"valign\", \"span\", \"width\"],\n    colgroup: [\"align\", \"valign\", \"span\", \"width\"],\n    dd: [],\n    del: [\"datetime\"],\n    details: [\"open\"],\n    div: [],\n    dl: [],\n    dt: [],\n    em: [],\n    figcaption: [],\n    figure: [],\n    font: [\"color\", \"size\", \"face\"],\n    footer: [],\n    h1: [],\n    h2: [],\n    h3: [],\n    h4: [],\n    h5: [],\n    h6: [],\n    header: [],\n    hr: [],\n    i: [],\n    img: [\"src\", \"alt\", \"title\", \"width\", \"height\"],\n    ins: [\"datetime\"],\n    li: [],\n    mark: [],\n    nav: [],\n    ol: [],\n    p: [],\n    pre: [],\n    s: [],\n    section: [],\n    small: [],\n    span: [],\n    sub: [],\n    summary: [],\n    sup: [],\n    strong: [],\n    strike: [],\n    table: [\"width\", \"border\", \"align\", \"valign\"],\n    tbody: [\"align\", \"valign\"],\n    td: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    tfoot: [\"align\", \"valign\"],\n    th: [\"width\", \"rowspan\", \"colspan\", \"align\", \"valign\"],\n    thead: [\"align\", \"valign\"],\n    tr: [\"rowspan\", \"align\", \"valign\"],\n    tt: [],\n    u: [],\n    ul: [],\n    video: [\n      \"autoplay\",\n      \"controls\",\n      \"crossorigin\",\n      \"loop\",\n      \"muted\",\n      \"playsinline\",\n      \"poster\",\n      \"preload\",\n      \"src\",\n      \"height\",\n      \"width\",\n    ],\n  };\n}\n\nvar defaultCSSFilter = new FilterCSS$1();\n\n/**\n * default onTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTag function\n *\n * @param {String} tag\n * @param {String} html\n * @param {Object} options\n * @return {String}\n */\nfunction onIgnoreTag(tag, html, options) {\n  // do nothing\n}\n\n/**\n * default onTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default onIgnoreTagAttr function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @return {String}\n */\nfunction onIgnoreTagAttr(tag, name, value) {\n  // do nothing\n}\n\n/**\n * default escapeHtml function\n *\n * @param {String} html\n */\nfunction escapeHtml(html) {\n  return html.replace(REGEXP_LT, \"&lt;\").replace(REGEXP_GT, \"&gt;\");\n}\n\n/**\n * default safeAttrValue function\n *\n * @param {String} tag\n * @param {String} name\n * @param {String} value\n * @param {Object} cssFilter\n * @return {String}\n */\nfunction safeAttrValue(tag, name, value, cssFilter) {\n  // unescape attribute value firstly\n  value = friendlyAttrValue(value);\n\n  if (name === \"href\" || name === \"src\") {\n    // filter `href` and `src` attribute\n    // only allow the value that starts with `http://` | `https://` | `mailto:` | `/` | `#`\n    value = _$2.trim(value);\n    if (value === \"#\") return \"#\";\n    if (\n      !(\n        value.substr(0, 7) === \"http://\" ||\n        value.substr(0, 8) === \"https://\" ||\n        value.substr(0, 7) === \"mailto:\" ||\n        value.substr(0, 4) === \"tel:\" ||\n        value.substr(0, 11) === \"data:image/\" ||\n        value.substr(0, 6) === \"ftp://\" ||\n        value.substr(0, 2) === \"./\" ||\n        value.substr(0, 3) === \"../\" ||\n        value[0] === \"#\" ||\n        value[0] === \"/\"\n      )\n    ) {\n      return \"\";\n    }\n  } else if (name === \"background\") {\n    // filter `background` attribute (maybe no use)\n    // `javascript:`\n    REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n      return \"\";\n    }\n  } else if (name === \"style\") {\n    // `expression()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_7.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_7.test(value)) {\n      return \"\";\n    }\n    // `url()`\n    REGEXP_DEFAULT_ON_TAG_ATTR_8.lastIndex = 0;\n    if (REGEXP_DEFAULT_ON_TAG_ATTR_8.test(value)) {\n      REGEXP_DEFAULT_ON_TAG_ATTR_4.lastIndex = 0;\n      if (REGEXP_DEFAULT_ON_TAG_ATTR_4.test(value)) {\n        return \"\";\n      }\n    }\n    if (cssFilter !== false) {\n      cssFilter = cssFilter || defaultCSSFilter;\n      value = cssFilter.process(value);\n    }\n  }\n\n  // escape `<>\"` before returns\n  value = escapeAttrValue(value);\n  return value;\n}\n\n// RegExp list\nvar REGEXP_LT = /</g;\nvar REGEXP_GT = />/g;\nvar REGEXP_QUOTE = /\"/g;\nvar REGEXP_QUOTE_2 = /&quot;/g;\nvar REGEXP_ATTR_VALUE_1 = /&#([a-zA-Z0-9]*);?/gim;\nvar REGEXP_ATTR_VALUE_COLON = /&colon;?/gim;\nvar REGEXP_ATTR_VALUE_NEWLINE = /&newline;?/gim;\n// var REGEXP_DEFAULT_ON_TAG_ATTR_3 = /\\/\\*|\\*\\//gm;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_4 =\n  /((j\\s*a\\s*v\\s*a|v\\s*b|l\\s*i\\s*v\\s*e)\\s*s\\s*c\\s*r\\s*i\\s*p\\s*t\\s*|m\\s*o\\s*c\\s*h\\s*a):/gi;\n// var REGEXP_DEFAULT_ON_TAG_ATTR_5 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:/gi;\n// var REGEXP_DEFAULT_ON_TAG_ATTR_6 = /^[\\s\"'`]*(d\\s*a\\s*t\\s*a\\s*)\\:\\s*image\\//gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_7 =\n  /e\\s*x\\s*p\\s*r\\s*e\\s*s\\s*s\\s*i\\s*o\\s*n\\s*\\(.*/gi;\nvar REGEXP_DEFAULT_ON_TAG_ATTR_8 = /u\\s*r\\s*l\\s*\\(.*/gi;\n\n/**\n * escape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction escapeQuote(str) {\n  return str.replace(REGEXP_QUOTE, \"&quot;\");\n}\n\n/**\n * unescape double quote\n *\n * @param {String} str\n * @return {String} str\n */\nfunction unescapeQuote(str) {\n  return str.replace(REGEXP_QUOTE_2, '\"');\n}\n\n/**\n * escape html entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeHtmlEntities(str) {\n  return str.replace(REGEXP_ATTR_VALUE_1, function replaceUnicode(str, code) {\n    return code[0] === \"x\" || code[0] === \"X\"\n      ? String.fromCharCode(parseInt(code.substr(1), 16))\n      : String.fromCharCode(parseInt(code, 10));\n  });\n}\n\n/**\n * escape html5 new danger entities\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeDangerHtml5Entities(str) {\n  return str\n    .replace(REGEXP_ATTR_VALUE_COLON, \":\")\n    .replace(REGEXP_ATTR_VALUE_NEWLINE, \" \");\n}\n\n/**\n * clear nonprintable characters\n *\n * @param {String} str\n * @return {String}\n */\nfunction clearNonPrintableCharacter(str) {\n  var str2 = \"\";\n  for (var i = 0, len = str.length; i < len; i++) {\n    str2 += str.charCodeAt(i) < 32 ? \" \" : str.charAt(i);\n  }\n  return _$2.trim(str2);\n}\n\n/**\n * get friendly attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction friendlyAttrValue(str) {\n  str = unescapeQuote(str);\n  str = escapeHtmlEntities(str);\n  str = escapeDangerHtml5Entities(str);\n  str = clearNonPrintableCharacter(str);\n  return str;\n}\n\n/**\n * unescape attribute value\n *\n * @param {String} str\n * @return {String}\n */\nfunction escapeAttrValue(str) {\n  str = escapeQuote(str);\n  str = escapeHtml(str);\n  return str;\n}\n\n/**\n * `onIgnoreTag` function for removing all the tags that are not in whitelist\n */\nfunction onIgnoreTagStripAll() {\n  return \"\";\n}\n\n/**\n * remove tag body\n * specify a `tags` list, if the tag is not in the `tags` list then process by the specify function (optional)\n *\n * @param {array} tags\n * @param {function} next\n */\nfunction StripTagBody(tags, next) {\n  if (typeof next !== \"function\") {\n    next = function () {};\n  }\n\n  var isRemoveAllTag = !Array.isArray(tags);\n  function isRemoveTag(tag) {\n    if (isRemoveAllTag) return true;\n    return _$2.indexOf(tags, tag) !== -1;\n  }\n\n  var removeList = [];\n  var posStart = false;\n\n  return {\n    onIgnoreTag: function (tag, html, options) {\n      if (isRemoveTag(tag)) {\n        if (options.isClosing) {\n          var ret = \"[/removed]\";\n          var end = options.position + ret.length;\n          removeList.push([\n            posStart !== false ? posStart : options.position,\n            end,\n          ]);\n          posStart = false;\n          return ret;\n        } else {\n          if (!posStart) {\n            posStart = options.position;\n          }\n          return \"[removed]\";\n        }\n      } else {\n        return next(tag, html, options);\n      }\n    },\n    remove: function (html) {\n      var rethtml = \"\";\n      var lastPos = 0;\n      _$2.forEach(removeList, function (pos) {\n        rethtml += html.slice(lastPos, pos[0]);\n        lastPos = pos[1];\n      });\n      rethtml += html.slice(lastPos);\n      return rethtml;\n    },\n  };\n}\n\n/**\n * remove html comments\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripCommentTag(html) {\n  var retHtml = \"\";\n  var lastPos = 0;\n  while (lastPos < html.length) {\n    var i = html.indexOf(\"<!--\", lastPos);\n    if (i === -1) {\n      retHtml += html.slice(lastPos);\n      break;\n    }\n    retHtml += html.slice(lastPos, i);\n    var j = html.indexOf(\"-->\", i);\n    if (j === -1) {\n      break;\n    }\n    lastPos = j + 3;\n  }\n  return retHtml;\n}\n\n/**\n * remove invisible characters\n *\n * @param {String} html\n * @return {String}\n */\nfunction stripBlankChar(html) {\n  var chars = html.split(\"\");\n  chars = chars.filter(function (char) {\n    var c = char.charCodeAt(0);\n    if (c === 127) return false;\n    if (c <= 31) {\n      if (c === 10 || c === 13) return true;\n      return false;\n    }\n    return true;\n  });\n  return chars.join(\"\");\n}\n\n_default$1.whiteList = getDefaultWhiteList();\n_default$1.getDefaultWhiteList = getDefaultWhiteList;\n_default$1.onTag = onTag;\n_default$1.onIgnoreTag = onIgnoreTag;\n_default$1.onTagAttr = onTagAttr;\n_default$1.onIgnoreTagAttr = onIgnoreTagAttr;\n_default$1.safeAttrValue = safeAttrValue;\n_default$1.escapeHtml = escapeHtml;\n_default$1.escapeQuote = escapeQuote;\n_default$1.unescapeQuote = unescapeQuote;\n_default$1.escapeHtmlEntities = escapeHtmlEntities;\n_default$1.escapeDangerHtml5Entities = escapeDangerHtml5Entities;\n_default$1.clearNonPrintableCharacter = clearNonPrintableCharacter;\n_default$1.friendlyAttrValue = friendlyAttrValue;\n_default$1.escapeAttrValue = escapeAttrValue;\n_default$1.onIgnoreTagStripAll = onIgnoreTagStripAll;\n_default$1.StripTagBody = StripTagBody;\n_default$1.stripCommentTag = stripCommentTag;\n_default$1.stripBlankChar = stripBlankChar;\n_default$1.cssFilter = defaultCSSFilter;\n_default$1.getDefaultCSSWhiteList = getDefaultCSSWhiteList;\n\nvar parser$1 = {};\n\n/**\n * Simple HTML Parser\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar _$1 = util;\n\n/**\n * get tag name\n *\n * @param {String} html e.g. '<a hef=\"#\">'\n * @return {String}\n */\nfunction getTagName(html) {\n  var i = _$1.spaceIndex(html);\n  var tagName;\n  if (i === -1) {\n    tagName = html.slice(1, -1);\n  } else {\n    tagName = html.slice(1, i + 1);\n  }\n  tagName = _$1.trim(tagName).toLowerCase();\n  if (tagName.slice(0, 1) === \"/\") tagName = tagName.slice(1);\n  if (tagName.slice(-1) === \"/\") tagName = tagName.slice(0, -1);\n  return tagName;\n}\n\n/**\n * is close tag?\n *\n * @param {String} html 如：'<a hef=\"#\">'\n * @return {Boolean}\n */\nfunction isClosing(html) {\n  return html.slice(0, 2) === \"</\";\n}\n\n/**\n * parse input html and returns processed html\n *\n * @param {String} html\n * @param {Function} onTag e.g. function (sourcePosition, position, tag, html, isClosing)\n * @param {Function} escapeHtml\n * @return {String}\n */\nfunction parseTag$1(html, onTag, escapeHtml) {\n\n  var rethtml = \"\";\n  var lastPos = 0;\n  var tagStart = false;\n  var quoteStart = false;\n  var currentPos = 0;\n  var len = html.length;\n  var currentTagName = \"\";\n  var currentHtml = \"\";\n\n  chariterator: for (currentPos = 0; currentPos < len; currentPos++) {\n    var c = html.charAt(currentPos);\n    if (tagStart === false) {\n      if (c === \"<\") {\n        tagStart = currentPos;\n        continue;\n      }\n    } else {\n      if (quoteStart === false) {\n        if (c === \"<\") {\n          rethtml += escapeHtml(html.slice(lastPos, currentPos));\n          tagStart = currentPos;\n          lastPos = currentPos;\n          continue;\n        }\n        if (c === \">\" || currentPos === len - 1) {\n          rethtml += escapeHtml(html.slice(lastPos, tagStart));\n          currentHtml = html.slice(tagStart, currentPos + 1);\n          currentTagName = getTagName(currentHtml);\n          rethtml += onTag(\n            tagStart,\n            rethtml.length,\n            currentTagName,\n            currentHtml,\n            isClosing(currentHtml)\n          );\n          lastPos = currentPos + 1;\n          tagStart = false;\n          continue;\n        }\n        if (c === '\"' || c === \"'\") {\n          var i = 1;\n          var ic = html.charAt(currentPos - i);\n\n          while (ic.trim() === \"\" || ic === \"=\") {\n            if (ic === \"=\") {\n              quoteStart = c;\n              continue chariterator;\n            }\n            ic = html.charAt(currentPos - ++i);\n          }\n        }\n      } else {\n        if (c === quoteStart) {\n          quoteStart = false;\n          continue;\n        }\n      }\n    }\n  }\n  if (lastPos < len) {\n    rethtml += escapeHtml(html.substr(lastPos));\n  }\n\n  return rethtml;\n}\n\nvar REGEXP_ILLEGAL_ATTR_NAME = /[^a-zA-Z0-9\\\\_:.-]/gim;\n\n/**\n * parse input attributes and returns processed attributes\n *\n * @param {String} html e.g. `href=\"#\" target=\"_blank\"`\n * @param {Function} onAttr e.g. `function (name, value)`\n * @return {String}\n */\nfunction parseAttr$1(html, onAttr) {\n\n  var lastPos = 0;\n  var lastMarkPos = 0;\n  var retAttrs = [];\n  var tmpName = false;\n  var len = html.length;\n\n  function addAttr(name, value) {\n    name = _$1.trim(name);\n    name = name.replace(REGEXP_ILLEGAL_ATTR_NAME, \"\").toLowerCase();\n    if (name.length < 1) return;\n    var ret = onAttr(name, value || \"\");\n    if (ret) retAttrs.push(ret);\n  }\n\n  // 逐个分析字符\n  for (var i = 0; i < len; i++) {\n    var c = html.charAt(i);\n    var v, j;\n    if (tmpName === false && c === \"=\") {\n      tmpName = html.slice(lastPos, i);\n      lastPos = i + 1;\n      lastMarkPos = html.charAt(lastPos) === '\"' || html.charAt(lastPos) === \"'\" ? lastPos : findNextQuotationMark(html, i + 1);\n      continue;\n    }\n    if (tmpName !== false) {\n      if (\n        i === lastMarkPos\n      ) {\n        j = html.indexOf(c, i + 1);\n        if (j === -1) {\n          break;\n        } else {\n          v = _$1.trim(html.slice(lastMarkPos + 1, j));\n          addAttr(tmpName, v);\n          tmpName = false;\n          i = j;\n          lastPos = i + 1;\n          continue;\n        }\n      }\n    }\n    if (/\\s|\\n|\\t/.test(c)) {\n      html = html.replace(/\\s|\\n|\\t/g, \" \");\n      if (tmpName === false) {\n        j = findNextEqual(html, i);\n        if (j === -1) {\n          v = _$1.trim(html.slice(lastPos, i));\n          addAttr(v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          i = j - 1;\n          continue;\n        }\n      } else {\n        j = findBeforeEqual(html, i - 1);\n        if (j === -1) {\n          v = _$1.trim(html.slice(lastPos, i));\n          v = stripQuoteWrap(v);\n          addAttr(tmpName, v);\n          tmpName = false;\n          lastPos = i + 1;\n          continue;\n        } else {\n          continue;\n        }\n      }\n    }\n  }\n\n  if (lastPos < html.length) {\n    if (tmpName === false) {\n      addAttr(html.slice(lastPos));\n    } else {\n      addAttr(tmpName, stripQuoteWrap(_$1.trim(html.slice(lastPos))));\n    }\n  }\n\n  return _$1.trim(retAttrs.join(\" \"));\n}\n\nfunction findNextEqual(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction findNextQuotationMark(str, i) {\n  for (; i < str.length; i++) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"'\" || c === '\"') return i;\n    return -1;\n  }\n}\n\nfunction findBeforeEqual(str, i) {\n  for (; i > 0; i--) {\n    var c = str[i];\n    if (c === \" \") continue;\n    if (c === \"=\") return i;\n    return -1;\n  }\n}\n\nfunction isQuoteWrapString(text) {\n  if (\n    (text[0] === '\"' && text[text.length - 1] === '\"') ||\n    (text[0] === \"'\" && text[text.length - 1] === \"'\")\n  ) {\n    return true;\n  } else {\n    return false;\n  }\n}\n\nfunction stripQuoteWrap(text) {\n  if (isQuoteWrapString(text)) {\n    return text.substr(1, text.length - 2);\n  } else {\n    return text;\n  }\n}\n\nparser$1.parseTag = parseTag$1;\nparser$1.parseAttr = parseAttr$1;\n\n/**\n * filter xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\nvar FilterCSS = libExports$1.FilterCSS;\nvar DEFAULT = _default$1;\nvar parser = parser$1;\nvar parseTag = parser.parseTag;\nvar parseAttr = parser.parseAttr;\nvar _ = util;\n\n/**\n * returns `true` if the input value is `undefined` or `null`\n *\n * @param {Object} obj\n * @return {Boolean}\n */\nfunction isNull(obj) {\n  return obj === undefined || obj === null;\n}\n\n/**\n * get attributes for a tag\n *\n * @param {String} html\n * @return {Object}\n *   - {String} html\n *   - {Boolean} closing\n */\nfunction getAttrs(html) {\n  var i = _.spaceIndex(html);\n  if (i === -1) {\n    return {\n      html: \"\",\n      closing: html[html.length - 2] === \"/\",\n    };\n  }\n  html = _.trim(html.slice(i + 1, -1));\n  var isClosing = html[html.length - 1] === \"/\";\n  if (isClosing) html = _.trim(html.slice(0, -1));\n  return {\n    html: html,\n    closing: isClosing,\n  };\n}\n\n/**\n * shallow copy\n *\n * @param {Object} obj\n * @return {Object}\n */\nfunction shallowCopyObject(obj) {\n  var ret = {};\n  for (var i in obj) {\n    ret[i] = obj[i];\n  }\n  return ret;\n}\n\nfunction keysToLowerCase(obj) {\n  var ret = {};\n  for (var i in obj) {\n    if (Array.isArray(obj[i])) {\n      ret[i.toLowerCase()] = obj[i].map(function (item) {\n        return item.toLowerCase();\n      });\n    } else {\n      ret[i.toLowerCase()] = obj[i];\n    }\n  }\n  return ret;\n}\n\n/**\n * FilterXSS class\n *\n * @param {Object} options\n *        whiteList (or allowList), onTag, onTagAttr, onIgnoreTag,\n *        onIgnoreTagAttr, safeAttrValue, escapeHtml\n *        stripIgnoreTagBody, allowCommentTag, stripBlankChar\n *        css{whiteList, onAttr, onIgnoreAttr} `css=false` means don't use `cssfilter`\n */\nfunction FilterXSS(options) {\n  options = shallowCopyObject(options || {});\n\n  if (options.stripIgnoreTag) {\n    if (options.onIgnoreTag) {\n      console.error(\n        'Notes: cannot use these two options \"stripIgnoreTag\" and \"onIgnoreTag\" at the same time'\n      );\n    }\n    options.onIgnoreTag = DEFAULT.onIgnoreTagStripAll;\n  }\n  if (options.whiteList || options.allowList) {\n    options.whiteList = keysToLowerCase(options.whiteList || options.allowList);\n  } else {\n    options.whiteList = DEFAULT.whiteList;\n  }\n\n  options.onTag = options.onTag || DEFAULT.onTag;\n  options.onTagAttr = options.onTagAttr || DEFAULT.onTagAttr;\n  options.onIgnoreTag = options.onIgnoreTag || DEFAULT.onIgnoreTag;\n  options.onIgnoreTagAttr = options.onIgnoreTagAttr || DEFAULT.onIgnoreTagAttr;\n  options.safeAttrValue = options.safeAttrValue || DEFAULT.safeAttrValue;\n  options.escapeHtml = options.escapeHtml || DEFAULT.escapeHtml;\n  this.options = options;\n\n  if (options.css === false) {\n    this.cssFilter = false;\n  } else {\n    options.css = options.css || {};\n    this.cssFilter = new FilterCSS(options.css);\n  }\n}\n\n/**\n * start process and returns result\n *\n * @param {String} html\n * @return {String}\n */\nFilterXSS.prototype.process = function (html) {\n  // compatible with the input\n  html = html || \"\";\n  html = html.toString();\n  if (!html) return \"\";\n\n  var me = this;\n  var options = me.options;\n  var whiteList = options.whiteList;\n  var onTag = options.onTag;\n  var onIgnoreTag = options.onIgnoreTag;\n  var onTagAttr = options.onTagAttr;\n  var onIgnoreTagAttr = options.onIgnoreTagAttr;\n  var safeAttrValue = options.safeAttrValue;\n  var escapeHtml = options.escapeHtml;\n  var cssFilter = me.cssFilter;\n\n  // remove invisible characters\n  if (options.stripBlankChar) {\n    html = DEFAULT.stripBlankChar(html);\n  }\n\n  // remove html comments\n  if (!options.allowCommentTag) {\n    html = DEFAULT.stripCommentTag(html);\n  }\n\n  // if enable stripIgnoreTagBody\n  var stripIgnoreTagBody = false;\n  if (options.stripIgnoreTagBody) {\n    stripIgnoreTagBody = DEFAULT.StripTagBody(\n      options.stripIgnoreTagBody,\n      onIgnoreTag\n    );\n    onIgnoreTag = stripIgnoreTagBody.onIgnoreTag;\n  }\n\n  var retHtml = parseTag(\n    html,\n    function (sourcePosition, position, tag, html, isClosing) {\n      var info = {\n        sourcePosition: sourcePosition,\n        position: position,\n        isClosing: isClosing,\n        isWhite: Object.prototype.hasOwnProperty.call(whiteList, tag),\n      };\n\n      // call `onTag()`\n      var ret = onTag(tag, html, info);\n      if (!isNull(ret)) return ret;\n\n      if (info.isWhite) {\n        if (info.isClosing) {\n          return \"</\" + tag + \">\";\n        }\n\n        var attrs = getAttrs(html);\n        var whiteAttrList = whiteList[tag];\n        var attrsHtml = parseAttr(attrs.html, function (name, value) {\n          // call `onTagAttr()`\n          var isWhiteAttr = _.indexOf(whiteAttrList, name) !== -1;\n          var ret = onTagAttr(tag, name, value, isWhiteAttr);\n          if (!isNull(ret)) return ret;\n\n          if (isWhiteAttr) {\n            // call `safeAttrValue()`\n            value = safeAttrValue(tag, name, value, cssFilter);\n            if (value) {\n              return name + '=\"' + value + '\"';\n            } else {\n              return name;\n            }\n          } else {\n            // call `onIgnoreTagAttr()`\n            ret = onIgnoreTagAttr(tag, name, value, isWhiteAttr);\n            if (!isNull(ret)) return ret;\n            return;\n          }\n        });\n\n        // build new tag html\n        html = \"<\" + tag;\n        if (attrsHtml) html += \" \" + attrsHtml;\n        if (attrs.closing) html += \" /\";\n        html += \">\";\n        return html;\n      } else {\n        // call `onIgnoreTag()`\n        ret = onIgnoreTag(tag, html, info);\n        if (!isNull(ret)) return ret;\n        return escapeHtml(html);\n      }\n    },\n    escapeHtml\n  );\n\n  // if enable stripIgnoreTagBody\n  if (stripIgnoreTagBody) {\n    retHtml = stripIgnoreTagBody.remove(retHtml);\n  }\n\n  return retHtml;\n};\n\nvar xss = FilterXSS;\n\n/**\n * xss\n *\n * @author Zongmin Lei<leizongmin@gmail.com>\n */\n\n(function (module, exports) {\n\tvar DEFAULT = _default$1;\n\tvar parser = parser$1;\n\tvar FilterXSS = xss;\n\n\t/**\n\t * filter xss function\n\t *\n\t * @param {String} html\n\t * @param {Object} options { whiteList, onTag, onTagAttr, onIgnoreTag, onIgnoreTagAttr, safeAttrValue, escapeHtml }\n\t * @return {String}\n\t */\n\tfunction filterXSS(html, options) {\n\t  var xss = new FilterXSS(options);\n\t  return xss.process(html);\n\t}\n\n\texports = module.exports = filterXSS;\n\texports.filterXSS = filterXSS;\n\texports.FilterXSS = FilterXSS;\n\n\t(function () {\n\t  for (var i in DEFAULT) {\n\t    exports[i] = DEFAULT[i];\n\t  }\n\t  for (var j in parser) {\n\t    exports[j] = parser[j];\n\t  }\n\t})();\n\n\t// using `xss` on the browser, output `filterXSS` to the globals\n\tif (typeof window !== \"undefined\") {\n\t  window.filterXSS = module.exports;\n\t}\n\n\t// using `xss` on the WebWorker, output `filterXSS` to the globals\n\tfunction isWorkerEnv() {\n\t  return (\n\t    typeof self !== \"undefined\" &&\n\t    typeof DedicatedWorkerGlobalScope !== \"undefined\" &&\n\t    self instanceof DedicatedWorkerGlobalScope\n\t  );\n\t}\n\tif (isWorkerEnv()) {\n\t  self.filterXSS = module.exports;\n\t} \n} (lib$1, lib$1.exports));\n\nvar libExports = lib$1.exports;\nvar xssFilter = /*@__PURE__*/getDefaultExportFromCjs(libExports);\n\nfunction ownKeys(e, r) { var t = _Object$keys(e); if (_Object$getOwnPropertySymbols) { var o = _Object$getOwnPropertySymbols(e); r && (o = _filterInstanceProperty(o).call(o, function (r) { return _Object$getOwnPropertyDescriptor(e, r).enumerable; })), t.push.apply(t, o); } return t; }\nfunction _objectSpread(e) { for (var r = 1; r < arguments.length; r++) { var _context8, _context9; var t = null != arguments[r] ? arguments[r] : {}; r % 2 ? _forEachInstanceProperty(_context8 = ownKeys(Object(t), !0)).call(_context8, function (r) { _defineProperty(e, r, t[r]); }) : _Object$getOwnPropertyDescriptors ? _Object$defineProperties(e, _Object$getOwnPropertyDescriptors(t)) : _forEachInstanceProperty(_context9 = ownKeys(Object(t))).call(_context9, function (r) { _Object$defineProperty(e, r, _Object$getOwnPropertyDescriptor(t, r)); }); } return e; }\n/**\n * Test if an object implements the DataView interface from vis-data.\n * Uses the idProp property instead of expecting a hardcoded id field \"id\".\n */\nfunction isDataViewLike(obj) {\n  var _obj$idProp;\n  if (!obj) {\n    return false;\n  }\n  var idProp = (_obj$idProp = obj.idProp) !== null && _obj$idProp !== void 0 ? _obj$idProp : obj._idProp;\n  if (!idProp) {\n    return false;\n  }\n  return isDataViewLike$1(idProp, obj);\n}\n\n// parse ASP.Net Date pattern,\n// for example '/Date(1198908717056)/' or '/Date(1198908717056-0700)/'\n// code from http://momentjs.com/\nvar ASPDateRegex = /^\\/?Date\\((-?\\d+)/i;\nvar NumericRegex = /^\\d+$/;\n/**\n * Convert an object into another type\n *\n * @param object - Value of unknown type.\n * @param type - Name of the desired type.\n *\n * @returns Object in the desired type.\n * @throws Error\n */\nfunction convert(object, type) {\n  var match;\n  if (object === undefined) {\n    return undefined;\n  }\n  if (object === null) {\n    return null;\n  }\n  if (!type) {\n    return object;\n  }\n  if (!(typeof type === \"string\") && !(type instanceof String)) {\n    throw new Error(\"Type must be a string\");\n  }\n\n  //noinspection FallthroughInSwitchStatementJS\n  switch (type) {\n    case \"boolean\":\n    case \"Boolean\":\n      return Boolean(object);\n    case \"number\":\n    case \"Number\":\n      if (isString(object) && !isNaN(Date.parse(object))) {\n        return moment$2(object).valueOf();\n      } else {\n        // @TODO: I don't think that Number and String constructors are a good idea.\n        // This could also fail if the object doesn't have valueOf method or if it's redefined.\n        // For example: Object.create(null) or { valueOf: 7 }.\n        return Number(object.valueOf());\n      }\n    case \"string\":\n    case \"String\":\n      return String(object);\n    case \"Date\":\n      try {\n        return convert(object, \"Moment\").toDate();\n      } catch (e) {\n        if (e instanceof TypeError) {\n          throw new TypeError(\"Cannot convert object of type \" + getType(object) + \" to type \" + type);\n        } else {\n          throw e;\n        }\n      }\n    case \"Moment\":\n      if (isNumber(object)) {\n        return moment$2(object);\n      }\n      if (object instanceof Date) {\n        return moment$2(object.valueOf());\n      } else if (moment$2.isMoment(object)) {\n        return moment$2(object);\n      }\n      if (isString(object)) {\n        match = ASPDateRegex.exec(object);\n        if (match) {\n          // object is an ASP date\n          return moment$2(Number(match[1])); // parse number\n        }\n\n        match = NumericRegex.exec(object);\n        if (match) {\n          return moment$2(Number(object));\n        }\n        return moment$2(object); // parse string\n      } else {\n        throw new TypeError(\"Cannot convert object of type \" + getType(object) + \" to type \" + type);\n      }\n    case \"ISODate\":\n      if (isNumber(object)) {\n        return new Date(object);\n      } else if (object instanceof Date) {\n        return object.toISOString();\n      } else if (moment$2.isMoment(object)) {\n        return object.toDate().toISOString();\n      } else if (isString(object)) {\n        match = ASPDateRegex.exec(object);\n        if (match) {\n          // object is an ASP date\n          return new Date(Number(match[1])).toISOString(); // parse number\n        } else {\n          return moment$2(object).format(); // ISO 8601\n        }\n      } else {\n        throw new Error(\"Cannot convert object of type \" + getType(object) + \" to type ISODate\");\n      }\n    case \"ASPDate\":\n      if (isNumber(object)) {\n        return \"/Date(\" + object + \")/\";\n      } else if (object instanceof Date || moment$2.isMoment(object)) {\n        return \"/Date(\" + object.valueOf() + \")/\";\n      } else if (isString(object)) {\n        match = ASPDateRegex.exec(object);\n        var value;\n        if (match) {\n          // object is an ASP date\n          value = new Date(Number(match[1])).valueOf(); // parse number\n        } else {\n          value = new Date(object).valueOf(); // parse string\n        }\n\n        return \"/Date(\" + value + \")/\";\n      } else {\n        throw new Error(\"Cannot convert object of type \" + getType(object) + \" to type ASPDate\");\n      }\n    default:\n      throw new Error(\"Unknown type \".concat(type));\n  }\n}\n\n/**\n * Create a Data Set like wrapper to seamlessly coerce data types.\n *\n * @param rawDS - The Data Set with raw uncoerced data.\n * @param type - A record assigning a data type to property name.\n *\n * @remarks\n * The write operations (`add`, `remove`, `update` and `updateOnly`) write into\n * the raw (uncoerced) data set. These values are then picked up by a pipe\n * which coerces the values using the [[convert]] function and feeds them into\n * the coerced data set. When querying (`forEach`, `get`, `getIds`, `off` and\n * `on`) the values are then fetched from the coerced data set and already have\n * the required data types. The values are coerced only once when inserted and\n * then the same value is returned each time until it is updated or deleted.\n *\n * For example: `typeCoercedDataSet.add({ id: 7, start: \"2020-01-21\" })` would\n * result in `typeCoercedDataSet.get(7)` returning `{ id: 7, start: moment(new\n * Date(\"2020-01-21\")).toDate() }`.\n *\n * Use the dispose method prior to throwing a reference to this away. Otherwise\n * the pipe connecting the two Data Sets will keep the unaccessible coerced\n * Data Set alive and updated as long as the raw Data Set exists.\n *\n * @returns A Data Set like object that saves data into the raw Data Set and\n * retrieves them from the coerced Data Set.\n */\nfunction typeCoerceDataSet(rawDS) {\n  var _context, _context3, _context4, _context5, _context6, _context7;\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {\n    start: \"Date\",\n    end: \"Date\"\n  };\n  var idProp = rawDS._idProp;\n  var coercedDS = new DataSet({\n    fieldId: idProp\n  });\n  var pipe = _mapInstanceProperty(_context = createNewDataPipeFrom(rawDS)).call(_context, function (item) {\n    var _context2;\n    return _reduceInstanceProperty(_context2 = _Object$keys(item)).call(_context2, function (acc, key) {\n      acc[key] = convert(item[key], type[key]);\n      return acc;\n    }, {});\n  }).to(coercedDS);\n  pipe.all().start();\n  return {\n    // Write only.\n    add: function add() {\n      var _rawDS$getDataSet;\n      return (_rawDS$getDataSet = rawDS.getDataSet()).add.apply(_rawDS$getDataSet, arguments);\n    },\n    remove: function remove() {\n      var _rawDS$getDataSet2;\n      return (_rawDS$getDataSet2 = rawDS.getDataSet()).remove.apply(_rawDS$getDataSet2, arguments);\n    },\n    update: function update() {\n      var _rawDS$getDataSet3;\n      return (_rawDS$getDataSet3 = rawDS.getDataSet()).update.apply(_rawDS$getDataSet3, arguments);\n    },\n    updateOnly: function updateOnly() {\n      var _rawDS$getDataSet4;\n      return (_rawDS$getDataSet4 = rawDS.getDataSet()).updateOnly.apply(_rawDS$getDataSet4, arguments);\n    },\n    clear: function clear() {\n      var _rawDS$getDataSet5;\n      return (_rawDS$getDataSet5 = rawDS.getDataSet()).clear.apply(_rawDS$getDataSet5, arguments);\n    },\n    // Read only.\n    forEach: _bindInstanceProperty$1(_context3 = _forEachInstanceProperty(coercedDS)).call(_context3, coercedDS),\n    get: _bindInstanceProperty$1(_context4 = coercedDS.get).call(_context4, coercedDS),\n    getIds: _bindInstanceProperty$1(_context5 = coercedDS.getIds).call(_context5, coercedDS),\n    off: _bindInstanceProperty$1(_context6 = coercedDS.off).call(_context6, coercedDS),\n    on: _bindInstanceProperty$1(_context7 = coercedDS.on).call(_context7, coercedDS),\n    get length() {\n      return coercedDS.length;\n    },\n    // Non standard.\n    idProp: idProp,\n    type: type,\n    rawDS: rawDS,\n    coercedDS: coercedDS,\n    dispose: function dispose() {\n      return pipe.stop();\n    }\n  };\n}\n\n// Configure XSS protection\nvar setupXSSCleaner = function setupXSSCleaner(options) {\n  var customXSS = new xssFilter.FilterXSS(options);\n  return function (string) {\n    return customXSS.process(string);\n  };\n};\nvar setupNoOpCleaner = function setupNoOpCleaner(string) {\n  return string;\n};\n\n// when nothing else is configured: filter XSS with the lib's default options\nvar configuredXSSProtection = setupXSSCleaner();\nvar setupXSSProtection = function setupXSSProtection(options) {\n  // No options? Do nothing.\n  if (!options) {\n    return;\n  }\n\n  // Disable XSS protection completely on request\n  if (options.disabled === true) {\n    configuredXSSProtection = setupNoOpCleaner;\n    console.warn('You disabled XSS protection for vis-Timeline. I sure hope you know what you\\'re doing!');\n  } else {\n    // Configure XSS protection with some custom options.\n    // For a list of valid options check the lib's documentation:\n    // https://github.com/leizongmin/js-xss#custom-filter-rules\n    if (options.filterOptions) {\n      configuredXSSProtection = setupXSSCleaner(options.filterOptions);\n    }\n  }\n};\nvar availableUtils = _objectSpread(_objectSpread({}, util$2), {}, {\n  convert: convert,\n  setupXSSProtection: setupXSSProtection\n});\n_Object$defineProperty(availableUtils, 'xss', {\n  get: function get() {\n    return configuredXSSProtection;\n  }\n});\n\nvar global$1 = global$q;\nvar fails = fails$y;\nvar uncurryThis = functionUncurryThis;\nvar toString$1 = toString$c;\nvar trim = stringTrim.trim;\nvar whitespaces = whitespaces$3;\n\nvar charAt = uncurryThis(''.charAt);\nvar $parseFloat$1 = global$1.parseFloat;\nvar Symbol$1 = global$1.Symbol;\nvar ITERATOR = Symbol$1 && Symbol$1.iterator;\nvar FORCED = 1 / $parseFloat$1(whitespaces + '-0') !== -Infinity\n  // MS Edge 18- broken with boxed symbols\n  || (ITERATOR && !fails(function () { $parseFloat$1(Object(ITERATOR)); }));\n\n// `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\nvar numberParseFloat = FORCED ? function parseFloat(string) {\n  var trimmedString = trim(toString$1(string));\n  var result = $parseFloat$1(trimmedString);\n  return result === 0 && charAt(trimmedString, 0) === '-' ? -0 : result;\n} : $parseFloat$1;\n\nvar $$4 = _export;\nvar $parseFloat = numberParseFloat;\n\n// `parseFloat` method\n// https://tc39.es/ecma262/#sec-parsefloat-string\n$$4({ global: true, forced: parseFloat !== $parseFloat }, {\n  parseFloat: $parseFloat\n});\n\nvar path$1 = path$u;\n\nvar _parseFloat$3 = path$1.parseFloat;\n\nvar parent$4 = _parseFloat$3;\n\nvar _parseFloat$2 = parent$4;\n\nvar _parseFloat = _parseFloat$2;\n\nvar _parseFloat$1 = /*@__PURE__*/getDefaultExportFromCjs(_parseFloat);\n\n/** Prototype for visual components */\nvar Component = /*#__PURE__*/function () {\n  /**\n  * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} [body]\n  * @param {Object} [options]\n  */\n  function Component(body, options) {\n    _classCallCheck(this, Component);\n    // eslint-disable-line no-unused-vars\n    this.options = null;\n    this.props = null;\n  }\n\n  /**\n   * Set options for the component. The new options will be merged into the\n   * current options.\n   * @param {Object} options\n   */\n  _createClass(Component, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options) {\n        availableUtils.extend(this.options, options);\n      }\n    }\n\n    /**\n     * Repaint the component\n     * @return {boolean} Returns true if the component is resized\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      // should be implemented by the component\n      return false;\n    }\n\n    /**\n     * Destroy the component. Cleanup DOM and event listeners\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // should be implemented by the component\n    }\n\n    /**\n     * Test whether the component is resized since the last time _isResized() was\n     * called.\n     * @return {Boolean} Returns true if the component is resized\n     * @protected\n     */\n  }, {\n    key: \"_isResized\",\n    value: function _isResized() {\n      var resized = this.props._previousWidth !== this.props.width || this.props._previousHeight !== this.props.height;\n      this.props._previousWidth = this.props.width;\n      this.props._previousHeight = this.props.height;\n      return resized;\n    }\n  }]);\n  return Component;\n}();\n\nvar toIntegerOrInfinity = toIntegerOrInfinity$5;\nvar toString = toString$c;\nvar requireObjectCoercible = requireObjectCoercible$6;\n\nvar $RangeError = RangeError;\n\n// `String.prototype.repeat` method implementation\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\nvar stringRepeat = function repeat(count) {\n  var str = toString(requireObjectCoercible(this));\n  var result = '';\n  var n = toIntegerOrInfinity(count);\n  if (n < 0 || n === Infinity) throw new $RangeError('Wrong number of repetitions');\n  for (;n > 0; (n >>>= 1) && (str += str)) if (n & 1) result += str;\n  return result;\n};\n\nvar $$3 = _export;\nvar repeat$4 = stringRepeat;\n\n// `String.prototype.repeat` method\n// https://tc39.es/ecma262/#sec-string.prototype.repeat\n$$3({ target: 'String', proto: true }, {\n  repeat: repeat$4\n});\n\nvar entryVirtual$3 = entryVirtual$o;\n\nvar repeat$3 = entryVirtual$3('String').repeat;\n\nvar isPrototypeOf$3 = objectIsPrototypeOf;\nvar method$3 = repeat$3;\n\nvar StringPrototype = String.prototype;\n\nvar repeat$2 = function (it) {\n  var own = it.repeat;\n  return typeof it == 'string' || it === StringPrototype\n    || (isPrototypeOf$3(StringPrototype, it) && own === StringPrototype.repeat) ? method$3 : own;\n};\n\nvar parent$3 = repeat$2;\n\nvar repeat$1 = parent$3;\n\nvar repeat = repeat$1;\n\nvar _repeatInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(repeat);\n\n/**\n * used in Core to convert the options into a volatile variable\n * \n * @param {function} moment\n * @param {Object} body\n * @param {Array | Object} hiddenDates\n * @returns {number}\n */\nfunction convertHiddenOptions(moment, body, hiddenDates) {\n  if (hiddenDates && !_Array$isArray(hiddenDates)) {\n    return convertHiddenOptions(moment, body, [hiddenDates]);\n  }\n  body.hiddenDates = [];\n  if (hiddenDates) {\n    if (_Array$isArray(hiddenDates) == true) {\n      var _context;\n      for (var i = 0; i < hiddenDates.length; i++) {\n        if (_repeatInstanceProperty(hiddenDates[i]) === undefined) {\n          var dateItem = {};\n          dateItem.start = moment(hiddenDates[i].start).toDate().valueOf();\n          dateItem.end = moment(hiddenDates[i].end).toDate().valueOf();\n          body.hiddenDates.push(dateItem);\n        }\n      }\n      _sortInstanceProperty(_context = body.hiddenDates).call(_context, function (a, b) {\n        return a.start - b.start;\n      }); // sort by start time\n    }\n  }\n}\n\n/**\n * create new entrees for the repeating hidden dates\n *\n * @param {function} moment\n * @param {Object} body\n * @param {Array | Object} hiddenDates\n * @returns {null}\n */\nfunction updateHiddenDates(moment, body, hiddenDates) {\n  if (hiddenDates && !_Array$isArray(hiddenDates)) {\n    return updateHiddenDates(moment, body, [hiddenDates]);\n  }\n  if (hiddenDates && body.domProps.centerContainer.width !== undefined) {\n    convertHiddenOptions(moment, body, hiddenDates);\n    var start = moment(body.range.start);\n    var end = moment(body.range.end);\n    var totalRange = body.range.end - body.range.start;\n    var pixelTime = totalRange / body.domProps.centerContainer.width;\n    for (var i = 0; i < hiddenDates.length; i++) {\n      if (_repeatInstanceProperty(hiddenDates[i]) !== undefined) {\n        var startDate = moment(hiddenDates[i].start);\n        var endDate = moment(hiddenDates[i].end);\n        if (startDate._d == \"Invalid Date\") {\n          throw new Error(\"Supplied start date is not valid: \".concat(hiddenDates[i].start));\n        }\n        if (endDate._d == \"Invalid Date\") {\n          throw new Error(\"Supplied end date is not valid: \".concat(hiddenDates[i].end));\n        }\n        var duration = endDate - startDate;\n        if (duration >= 4 * pixelTime) {\n          var offset = 0;\n          var runUntil = end.clone();\n          switch (_repeatInstanceProperty(hiddenDates[i])) {\n            case \"daily\":\n              // case of time\n              if (startDate.day() != endDate.day()) {\n                offset = 1;\n              }\n              startDate.dayOfYear(start.dayOfYear());\n              startDate.year(start.year());\n              startDate.subtract(7, 'days');\n              endDate.dayOfYear(start.dayOfYear());\n              endDate.year(start.year());\n              endDate.subtract(7 - offset, 'days');\n              runUntil.add(1, 'weeks');\n              break;\n            case \"weekly\":\n              {\n                var dayOffset = endDate.diff(startDate, 'days');\n                var day = startDate.day();\n\n                // set the start date to the range.start\n                startDate.date(start.date());\n                startDate.month(start.month());\n                startDate.year(start.year());\n                endDate = startDate.clone();\n\n                // force\n                startDate.day(day);\n                endDate.day(day);\n                endDate.add(dayOffset, 'days');\n                startDate.subtract(1, 'weeks');\n                endDate.subtract(1, 'weeks');\n                runUntil.add(1, 'weeks');\n                break;\n              }\n            case \"monthly\":\n              if (startDate.month() != endDate.month()) {\n                offset = 1;\n              }\n              startDate.month(start.month());\n              startDate.year(start.year());\n              startDate.subtract(1, 'months');\n              endDate.month(start.month());\n              endDate.year(start.year());\n              endDate.subtract(1, 'months');\n              endDate.add(offset, 'months');\n              runUntil.add(1, 'months');\n              break;\n            case \"yearly\":\n              if (startDate.year() != endDate.year()) {\n                offset = 1;\n              }\n              startDate.year(start.year());\n              startDate.subtract(1, 'years');\n              endDate.year(start.year());\n              endDate.subtract(1, 'years');\n              endDate.add(offset, 'years');\n              runUntil.add(1, 'years');\n              break;\n            default:\n              console.log(\"Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:\", _repeatInstanceProperty(hiddenDates[i]));\n              return;\n          }\n          while (startDate < runUntil) {\n            body.hiddenDates.push({\n              start: startDate.valueOf(),\n              end: endDate.valueOf()\n            });\n            switch (_repeatInstanceProperty(hiddenDates[i])) {\n              case \"daily\":\n                startDate.add(1, 'days');\n                endDate.add(1, 'days');\n                break;\n              case \"weekly\":\n                startDate.add(1, 'weeks');\n                endDate.add(1, 'weeks');\n                break;\n              case \"monthly\":\n                startDate.add(1, 'months');\n                endDate.add(1, 'months');\n                break;\n              case \"yearly\":\n                startDate.add(1, 'y');\n                endDate.add(1, 'y');\n                break;\n              default:\n                console.log(\"Wrong repeat format, allowed are: daily, weekly, monthly, yearly. Given:\", _repeatInstanceProperty(hiddenDates[i]));\n                return;\n            }\n          }\n          body.hiddenDates.push({\n            start: startDate.valueOf(),\n            end: endDate.valueOf()\n          });\n        }\n      }\n    }\n    // remove duplicates, merge where possible\n    removeDuplicates(body);\n    // ensure the new positions are not on hidden dates\n    var startHidden = getIsHidden(body.range.start, body.hiddenDates);\n    var endHidden = getIsHidden(body.range.end, body.hiddenDates);\n    var rangeStart = body.range.start;\n    var rangeEnd = body.range.end;\n    if (startHidden.hidden == true) {\n      rangeStart = body.range.startToFront == true ? startHidden.startDate - 1 : startHidden.endDate + 1;\n    }\n    if (endHidden.hidden == true) {\n      rangeEnd = body.range.endToFront == true ? endHidden.startDate - 1 : endHidden.endDate + 1;\n    }\n    if (startHidden.hidden == true || endHidden.hidden == true) {\n      body.range._applyRange(rangeStart, rangeEnd);\n    }\n  }\n}\n\n/**\n * remove duplicates from the hidden dates list. Duplicates are evil. They mess everything up.\n * Scales with N^2\n *\n * @param {Object} body\n */\nfunction removeDuplicates(body) {\n  var _context2;\n  var hiddenDates = body.hiddenDates;\n  var safeDates = [];\n  for (var i = 0; i < hiddenDates.length; i++) {\n    for (var j = 0; j < hiddenDates.length; j++) {\n      if (i != j && hiddenDates[j].remove != true && hiddenDates[i].remove != true) {\n        // j inside i\n        if (hiddenDates[j].start >= hiddenDates[i].start && hiddenDates[j].end <= hiddenDates[i].end) {\n          hiddenDates[j].remove = true;\n        }\n        // j start inside i\n        else if (hiddenDates[j].start >= hiddenDates[i].start && hiddenDates[j].start <= hiddenDates[i].end) {\n          hiddenDates[i].end = hiddenDates[j].end;\n          hiddenDates[j].remove = true;\n        }\n        // j end inside i\n        else if (hiddenDates[j].end >= hiddenDates[i].start && hiddenDates[j].end <= hiddenDates[i].end) {\n          hiddenDates[i].start = hiddenDates[j].start;\n          hiddenDates[j].remove = true;\n        }\n      }\n    }\n  }\n  for (i = 0; i < hiddenDates.length; i++) {\n    if (hiddenDates[i].remove !== true) {\n      safeDates.push(hiddenDates[i]);\n    }\n  }\n  body.hiddenDates = safeDates;\n  _sortInstanceProperty(_context2 = body.hiddenDates).call(_context2, function (a, b) {\n    return a.start - b.start;\n  }); // sort by start time\n}\n\n/**\n * Prints dates to console\n * @param {array} dates\n */\nfunction printDates(dates) {\n  for (var i = 0; i < dates.length; i++) {\n    console.log(i, new Date(dates[i].start), new Date(dates[i].end), dates[i].start, dates[i].end, dates[i].remove);\n  }\n}\n\n/**\n * Used in TimeStep to avoid the hidden times.\n * @param {function} moment\n * @param {TimeStep} timeStep\n * @param {Date} previousTime\n */\nfunction stepOverHiddenDates(moment, timeStep, previousTime) {\n  var stepInHidden = false;\n  var currentValue = timeStep.current.valueOf();\n  for (var i = 0; i < timeStep.hiddenDates.length; i++) {\n    var startDate = timeStep.hiddenDates[i].start;\n    var endDate = timeStep.hiddenDates[i].end;\n    if (currentValue >= startDate && currentValue < endDate) {\n      stepInHidden = true;\n      break;\n    }\n  }\n  if (stepInHidden == true && currentValue < timeStep._end.valueOf() && currentValue != previousTime) {\n    var prevValue = moment(previousTime);\n    var newValue = moment(endDate);\n    //check if the next step should be major\n    if (prevValue.year() != newValue.year()) {\n      timeStep.switchedYear = true;\n    } else if (prevValue.month() != newValue.month()) {\n      timeStep.switchedMonth = true;\n    } else if (prevValue.dayOfYear() != newValue.dayOfYear()) {\n      timeStep.switchedDay = true;\n    }\n    timeStep.current = newValue;\n  }\n}\n\n///**\n// * Used in TimeStep to avoid the hidden times.\n// * @param timeStep\n// * @param previousTime\n// */\n//checkFirstStep = function(timeStep) {\n//  var stepInHidden = false;\n//  var currentValue = timeStep.current.valueOf();\n//  for (var i = 0; i < timeStep.hiddenDates.length; i++) {\n//    var startDate = timeStep.hiddenDates[i].start;\n//    var endDate = timeStep.hiddenDates[i].end;\n//    if (currentValue >= startDate && currentValue < endDate) {\n//      stepInHidden = true;\n//      break;\n//    }\n//  }\n//\n//  if (stepInHidden == true && currentValue <= timeStep._end.valueOf()) {\n//    var newValue = moment(endDate);\n//    timeStep.current = newValue.toDate();\n//  }\n//};\n\n/**\n * replaces the Core toScreen methods\n *\n * @param {timeline.Core} Core\n * @param {Date} time\n * @param {number} width\n * @returns {number}\n */\nfunction toScreen(Core, time, width) {\n  var conversion;\n  if (Core.body.hiddenDates.length == 0) {\n    conversion = Core.range.conversion(width);\n    return (time.valueOf() - conversion.offset) * conversion.scale;\n  } else {\n    var hidden = getIsHidden(time, Core.body.hiddenDates);\n    if (hidden.hidden == true) {\n      time = hidden.startDate;\n    }\n    var duration = getHiddenDurationBetween(Core.body.hiddenDates, Core.range.start, Core.range.end);\n    if (time < Core.range.start) {\n      conversion = Core.range.conversion(width, duration);\n      var hiddenBeforeStart = getHiddenDurationBeforeStart(Core.body.hiddenDates, time, conversion.offset);\n      time = Core.options.moment(time).toDate().valueOf();\n      time = time + hiddenBeforeStart;\n      return -(conversion.offset - time.valueOf()) * conversion.scale;\n    } else if (time > Core.range.end) {\n      var rangeAfterEnd = {\n        start: Core.range.start,\n        end: time\n      };\n      time = correctTimeForHidden(Core.options.moment, Core.body.hiddenDates, rangeAfterEnd, time);\n      conversion = Core.range.conversion(width, duration);\n      return (time.valueOf() - conversion.offset) * conversion.scale;\n    } else {\n      time = correctTimeForHidden(Core.options.moment, Core.body.hiddenDates, Core.range, time);\n      conversion = Core.range.conversion(width, duration);\n      return (time.valueOf() - conversion.offset) * conversion.scale;\n    }\n  }\n}\n\n/**\n * Replaces the core toTime methods\n *\n * @param {timeline.Core} Core\n * @param {number} x\n * @param {number} width\n * @returns {Date}\n */\nfunction toTime(Core, x, width) {\n  if (Core.body.hiddenDates.length == 0) {\n    var conversion = Core.range.conversion(width);\n    return new Date(x / conversion.scale + conversion.offset);\n  } else {\n    var hiddenDuration = getHiddenDurationBetween(Core.body.hiddenDates, Core.range.start, Core.range.end);\n    var totalDuration = Core.range.end - Core.range.start - hiddenDuration;\n    var partialDuration = totalDuration * x / width;\n    var accumulatedHiddenDuration = getAccumulatedHiddenDuration(Core.body.hiddenDates, Core.range, partialDuration);\n    return new Date(accumulatedHiddenDuration + partialDuration + Core.range.start);\n  }\n}\n\n/**\n * Support function\n *\n * @param {Array.<{start: Window.start, end: *}>} hiddenDates\n * @param {number} start\n * @param {number} end\n * @returns {number}\n */\nfunction getHiddenDurationBetween(hiddenDates, start, end) {\n  var duration = 0;\n  for (var i = 0; i < hiddenDates.length; i++) {\n    var startDate = hiddenDates[i].start;\n    var endDate = hiddenDates[i].end;\n    // if time after the cutout, and the\n    if (startDate >= start && endDate < end) {\n      duration += endDate - startDate;\n    }\n  }\n  return duration;\n}\n\n/**\n * Support function\n *\n * @param {Array.<{start: Window.start, end: *}>} hiddenDates\n * @param {number} start\n * @param {number} end\n * @returns {number}\n */\nfunction getHiddenDurationBeforeStart(hiddenDates, start, end) {\n  var duration = 0;\n  for (var i = 0; i < hiddenDates.length; i++) {\n    var startDate = hiddenDates[i].start;\n    var endDate = hiddenDates[i].end;\n    if (startDate >= start && endDate <= end) {\n      duration += endDate - startDate;\n    }\n  }\n  return duration;\n}\n\n/**\n * Support function\n * @param {function} moment\n * @param {Array.<{start: Window.start, end: *}>} hiddenDates\n * @param {{start: number, end: number}} range\n * @param {Date} time\n * @returns {number}\n */\nfunction correctTimeForHidden(moment, hiddenDates, range, time) {\n  time = moment(time).toDate().valueOf();\n  time -= getHiddenDurationBefore(moment, hiddenDates, range, time);\n  return time;\n}\n\n/**\n * Support function\n * @param {function} moment\n * @param {Array.<{start: Window.start, end: *}>} hiddenDates\n * @param {{start: number, end: number}} range\n * @param {Date} time\n * @returns {number}\n */\nfunction getHiddenDurationBefore(moment, hiddenDates, range, time) {\n  var timeOffset = 0;\n  time = moment(time).toDate().valueOf();\n  for (var i = 0; i < hiddenDates.length; i++) {\n    var startDate = hiddenDates[i].start;\n    var endDate = hiddenDates[i].end;\n    // if time after the cutout, and the\n    if (startDate >= range.start && endDate < range.end) {\n      if (time >= endDate) {\n        timeOffset += endDate - startDate;\n      }\n    }\n  }\n  return timeOffset;\n}\n\n/**\n * sum the duration from start to finish, including the hidden duration,\n * until the required amount has been reached, return the accumulated hidden duration\n * @param {Array.<{start: Window.start, end: *}>} hiddenDates\n * @param {{start: number, end: number}} range\n * @param {number} [requiredDuration=0]\n * @returns {number}\n */\nfunction getAccumulatedHiddenDuration(hiddenDates, range, requiredDuration) {\n  var hiddenDuration = 0;\n  var duration = 0;\n  var previousPoint = range.start;\n  //printDates(hiddenDates)\n  for (var i = 0; i < hiddenDates.length; i++) {\n    var startDate = hiddenDates[i].start;\n    var endDate = hiddenDates[i].end;\n    // if time after the cutout, and the\n    if (startDate >= range.start && endDate < range.end) {\n      duration += startDate - previousPoint;\n      previousPoint = endDate;\n      if (duration >= requiredDuration) {\n        break;\n      } else {\n        hiddenDuration += endDate - startDate;\n      }\n    }\n  }\n  return hiddenDuration;\n}\n\n/**\n * used to step over to either side of a hidden block. Correction is disabled on tablets, might be set to true\n * @param {Array.<{start: Window.start, end: *}>} hiddenDates\n * @param {Date} time\n * @param {number} direction\n * @param {boolean} correctionEnabled\n * @returns {Date|number}\n */\nfunction snapAwayFromHidden(hiddenDates, time, direction, correctionEnabled) {\n  var isHidden = getIsHidden(time, hiddenDates);\n  if (isHidden.hidden == true) {\n    if (direction < 0) {\n      if (correctionEnabled == true) {\n        return isHidden.startDate - (isHidden.endDate - time) - 1;\n      } else {\n        return isHidden.startDate - 1;\n      }\n    } else {\n      if (correctionEnabled == true) {\n        return isHidden.endDate + (time - isHidden.startDate) + 1;\n      } else {\n        return isHidden.endDate + 1;\n      }\n    }\n  } else {\n    return time;\n  }\n}\n\n/**\n * Check if a time is hidden\n *\n * @param {Date} time\n * @param {Array.<{start: Window.start, end: *}>} hiddenDates\n * @returns {{hidden: boolean, startDate: Window.start, endDate: *}}\n */\nfunction getIsHidden(time, hiddenDates) {\n  for (var i = 0; i < hiddenDates.length; i++) {\n    var startDate = hiddenDates[i].start;\n    var endDate = hiddenDates[i].end;\n    if (time >= startDate && time < endDate) {\n      // if the start is entering a hidden zone\n      return {\n        hidden: true,\n        startDate: startDate,\n        endDate: endDate\n      };\n    }\n  }\n  return {\n    hidden: false,\n    startDate: startDate,\n    endDate: endDate\n  };\n}\n\nvar DateUtil = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tconvertHiddenOptions: convertHiddenOptions,\n\tcorrectTimeForHidden: correctTimeForHidden,\n\tgetAccumulatedHiddenDuration: getAccumulatedHiddenDuration,\n\tgetHiddenDurationBefore: getHiddenDurationBefore,\n\tgetHiddenDurationBeforeStart: getHiddenDurationBeforeStart,\n\tgetHiddenDurationBetween: getHiddenDurationBetween,\n\tgetIsHidden: getIsHidden,\n\tprintDates: printDates,\n\tremoveDuplicates: removeDuplicates,\n\tsnapAwayFromHidden: snapAwayFromHidden,\n\tstepOverHiddenDates: stepOverHiddenDates,\n\ttoScreen: toScreen,\n\ttoTime: toTime,\n\tupdateHiddenDates: updateHiddenDates\n});\n\nfunction _createSuper$c(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$c(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$c() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * A Range controls a numeric range with a start and end value.\n * The Range adjusts the range based on mouse events or programmatic changes,\n * and triggers events when the range is changing or has been changed.\n */\nvar Range = /*#__PURE__*/function (_Component) {\n  _inherits(Range, _Component);\n  var _super = _createSuper$c(Range);\n  /**\n  * @param {{dom: Object, domProps: Object, emitter: Emitter}} body\n  * @param {Object} [options]    See description at Range.setOptions\n  * @constructor Range\n  * @extends Component\n  */\n  function Range(body, options) {\n    var _context, _context2, _context3, _context4, _context5, _context6, _context7;\n    var _this;\n    _classCallCheck(this, Range);\n    _this = _super.call(this);\n    var now = moment$4().hours(0).minutes(0).seconds(0).milliseconds(0);\n    var start = now.clone().add(-3, 'days').valueOf();\n    var end = now.clone().add(3, 'days').valueOf();\n    _this.millisecondsPerPixelCache = undefined;\n    if (options === undefined) {\n      _this.start = start;\n      _this.end = end;\n    } else {\n      _this.start = options.start || start;\n      _this.end = options.end || end;\n    }\n    _this.rolling = false;\n    _this.body = body;\n    _this.deltaDifference = 0;\n    _this.scaleOffset = 0;\n    _this.startToFront = false;\n    _this.endToFront = true;\n\n    // default options\n    _this.defaultOptions = {\n      rtl: false,\n      start: null,\n      end: null,\n      moment: moment$4,\n      direction: 'horizontal',\n      // 'horizontal' or 'vertical'\n      moveable: true,\n      zoomable: true,\n      min: null,\n      max: null,\n      zoomMin: 10,\n      // milliseconds\n      zoomMax: 1000 * 60 * 60 * 24 * 365 * 10000,\n      // milliseconds\n      rollingMode: {\n        follow: false,\n        offset: 0.5\n      }\n    };\n    _this.options = availableUtils.extend({}, _this.defaultOptions);\n    _this.props = {\n      touch: {}\n    };\n    _this.animationTimer = null;\n\n    // drag listeners for dragging\n    _this.body.emitter.on('panstart', _bindInstanceProperty$1(_context = _this._onDragStart).call(_context, _assertThisInitialized(_this)));\n    _this.body.emitter.on('panmove', _bindInstanceProperty$1(_context2 = _this._onDrag).call(_context2, _assertThisInitialized(_this)));\n    _this.body.emitter.on('panend', _bindInstanceProperty$1(_context3 = _this._onDragEnd).call(_context3, _assertThisInitialized(_this)));\n\n    // mouse wheel for zooming\n    _this.body.emitter.on('mousewheel', _bindInstanceProperty$1(_context4 = _this._onMouseWheel).call(_context4, _assertThisInitialized(_this)));\n\n    // pinch to zoom\n    _this.body.emitter.on('touch', _bindInstanceProperty$1(_context5 = _this._onTouch).call(_context5, _assertThisInitialized(_this)));\n    _this.body.emitter.on('pinch', _bindInstanceProperty$1(_context6 = _this._onPinch).call(_context6, _assertThisInitialized(_this)));\n\n    // on click of rolling mode button\n    _this.body.dom.rollingModeBtn.addEventListener('click', _bindInstanceProperty$1(_context7 = _this.startRolling).call(_context7, _assertThisInitialized(_this)));\n    _this.setOptions(options);\n    return _this;\n  }\n\n  /**\n   * Set options for the range controller\n   * @param {Object} options      Available options:\n   *                              {number | Date | String} start  Start date for the range\n   *                              {number | Date | String} end    End date for the range\n   *                              {number} min    Minimum value for start\n   *                              {number} max    Maximum value for end\n   *                              {number} zoomMin    Set a minimum value for\n   *                                                  (end - start).\n   *                              {number} zoomMax    Set a maximum value for\n   *                                                  (end - start).\n   *                              {boolean} moveable Enable moving of the range\n   *                                                 by dragging. True by default\n   *                              {boolean} zoomable Enable zooming of the range\n   *                                                 by pinching/scrolling. True by default\n   */\n  _createClass(Range, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options) {\n        // copy the options that we know\n        var fields = ['animation', 'direction', 'min', 'max', 'zoomMin', 'zoomMax', 'moveable', 'zoomable', 'moment', 'activate', 'hiddenDates', 'zoomKey', 'zoomFriction', 'rtl', 'showCurrentTime', 'rollingMode', 'horizontalScroll'];\n        availableUtils.selectiveExtend(fields, this.options, options);\n        if (options.rollingMode && options.rollingMode.follow) {\n          this.startRolling();\n        }\n        if ('start' in options || 'end' in options) {\n          // apply a new range. both start and end are optional\n          this.setRange(options.start, options.end);\n        }\n      }\n    }\n\n    /**\n     * Start auto refreshing the current time bar\n     */\n  }, {\n    key: \"startRolling\",\n    value: function startRolling() {\n      var me = this;\n\n      /**\n       *  Updates the current time.\n       */\n      function update() {\n        me.stopRolling();\n        me.rolling = true;\n        var interval = me.end - me.start;\n        var t = availableUtils.convert(new Date(), 'Date').valueOf();\n        var rollingModeOffset = me.options.rollingMode && me.options.rollingMode.offset || 0.5;\n        var start = t - interval * rollingModeOffset;\n        var end = t + interval * (1 - rollingModeOffset);\n        var options = {\n          animation: false\n        };\n        me.setRange(start, end, options);\n\n        // determine interval to refresh\n        var scale = me.conversion(me.body.domProps.center.width).scale;\n        interval = 1 / scale / 10;\n        if (interval < 30) interval = 30;\n        if (interval > 1000) interval = 1000;\n        me.body.dom.rollingModeBtn.style.visibility = \"hidden\";\n        // start a renderTimer to adjust for the new time\n        me.currentTimeTimer = _setTimeout(update, interval);\n      }\n      update();\n    }\n\n    /**\n     * Stop auto refreshing the current time bar\n     */\n  }, {\n    key: \"stopRolling\",\n    value: function stopRolling() {\n      if (this.currentTimeTimer !== undefined) {\n        clearTimeout(this.currentTimeTimer);\n        this.rolling = false;\n        this.body.dom.rollingModeBtn.style.visibility = \"visible\";\n      }\n    }\n\n    /**\n     * Set a new start and end range\n     * @param {Date | number | string} start\n     * @param {Date | number | string} end\n     * @param {Object} options      Available options:\n     *                              {boolean | {duration: number, easingFunction: string}} [animation=false]\n     *                                    If true, the range is animated\n     *                                    smoothly to the new window. An object can be\n     *                                    provided to specify duration and easing function.\n     *                                    Default duration is 500 ms, and default easing\n     *                                    function is 'easeInOutQuad'.\n     *                              {boolean} [byUser=false]\n     *                              {Event}  event  Mouse event\n     * @param {Function} callback     a callback function to be executed at the end of this function  \n     * @param {Function} frameCallback    a callback function executed each frame of the range animation.\n     *                                    The callback will be passed three parameters:\n     *                                    {number} easeCoefficient    an easing coefficent\n     *                                    {boolean} willDraw          If true the caller will redraw after the callback completes\n     *                                    {boolean} done              If true then animation is ending after the current frame\n     * @return {void}\n     */\n  }, {\n    key: \"setRange\",\n    value: function setRange(start, end, options, callback, frameCallback) {\n      if (!options) {\n        options = {};\n      }\n      if (options.byUser !== true) {\n        options.byUser = false;\n      }\n      var me = this;\n      var finalStart = start != undefined ? availableUtils.convert(start, 'Date').valueOf() : null;\n      var finalEnd = end != undefined ? availableUtils.convert(end, 'Date').valueOf() : null;\n      this._cancelAnimation();\n      this.millisecondsPerPixelCache = undefined;\n      if (options.animation) {\n        // true or an Object\n        var initStart = this.start;\n        var initEnd = this.end;\n        var duration = _typeof$1(options.animation) === 'object' && 'duration' in options.animation ? options.animation.duration : 500;\n        var easingName = _typeof$1(options.animation) === 'object' && 'easingFunction' in options.animation ? options.animation.easingFunction : 'easeInOutQuad';\n        var easingFunction = availableUtils.easingFunctions[easingName];\n        if (!easingFunction) {\n          var _context8;\n          throw new Error(_concatInstanceProperty(_context8 = \"Unknown easing function \".concat(_JSON$stringify(easingName), \". Choose from: \")).call(_context8, _Object$keys(availableUtils.easingFunctions).join(', ')));\n        }\n        var initTime = _Date$now();\n        var anyChanged = false;\n        var next = function next() {\n          if (!me.props.touch.dragging) {\n            var now = _Date$now();\n            var time = now - initTime;\n            var ease = easingFunction(time / duration);\n            var done = time > duration;\n            var s = done || finalStart === null ? finalStart : initStart + (finalStart - initStart) * ease;\n            var e = done || finalEnd === null ? finalEnd : initEnd + (finalEnd - initEnd) * ease;\n            changed = me._applyRange(s, e);\n            updateHiddenDates(me.options.moment, me.body, me.options.hiddenDates);\n            anyChanged = anyChanged || changed;\n            var params = {\n              start: new Date(me.start),\n              end: new Date(me.end),\n              byUser: options.byUser,\n              event: options.event\n            };\n            if (frameCallback) {\n              frameCallback(ease, changed, done);\n            }\n            if (changed) {\n              me.body.emitter.emit('rangechange', params);\n            }\n            if (done) {\n              if (anyChanged) {\n                me.body.emitter.emit('rangechanged', params);\n                if (callback) {\n                  return callback();\n                }\n              }\n            } else {\n              // animate with as high as possible frame rate, leave 20 ms in between\n              // each to prevent the browser from blocking\n              me.animationTimer = _setTimeout(next, 20);\n            }\n          }\n        };\n        return next();\n      } else {\n        var changed = this._applyRange(finalStart, finalEnd);\n        updateHiddenDates(this.options.moment, this.body, this.options.hiddenDates);\n        if (changed) {\n          var params = {\n            start: new Date(this.start),\n            end: new Date(this.end),\n            byUser: options.byUser,\n            event: options.event\n          };\n          this.body.emitter.emit('rangechange', params);\n          clearTimeout(me.timeoutID);\n          me.timeoutID = _setTimeout(function () {\n            me.body.emitter.emit('rangechanged', params);\n          }, 200);\n          if (callback) {\n            return callback();\n          }\n        }\n      }\n    }\n\n    /**\n     * Get the number of milliseconds per pixel.\n     *\n     * @returns {undefined|number}\n     */\n  }, {\n    key: \"getMillisecondsPerPixel\",\n    value: function getMillisecondsPerPixel() {\n      if (this.millisecondsPerPixelCache === undefined) {\n        this.millisecondsPerPixelCache = (this.end - this.start) / this.body.dom.center.clientWidth;\n      }\n      return this.millisecondsPerPixelCache;\n    }\n\n    /**\n     * Stop an animation\n     * @private\n     */\n  }, {\n    key: \"_cancelAnimation\",\n    value: function _cancelAnimation() {\n      if (this.animationTimer) {\n        clearTimeout(this.animationTimer);\n        this.animationTimer = null;\n      }\n    }\n\n    /**\n     * Set a new start and end range. This method is the same as setRange, but\n     * does not trigger a range change and range changed event, and it returns\n     * true when the range is changed\n     * @param {number} [start]\n     * @param {number} [end]\n     * @return {boolean} changed\n     * @private\n     */\n  }, {\n    key: \"_applyRange\",\n    value: function _applyRange(start, end) {\n      var newStart = start != null ? availableUtils.convert(start, 'Date').valueOf() : this.start;\n      var newEnd = end != null ? availableUtils.convert(end, 'Date').valueOf() : this.end;\n      var max = this.options.max != null ? availableUtils.convert(this.options.max, 'Date').valueOf() : null;\n      var min = this.options.min != null ? availableUtils.convert(this.options.min, 'Date').valueOf() : null;\n      var diff;\n\n      // check for valid number\n      if (isNaN(newStart) || newStart === null) {\n        throw new Error(\"Invalid start \\\"\".concat(start, \"\\\"\"));\n      }\n      if (isNaN(newEnd) || newEnd === null) {\n        throw new Error(\"Invalid end \\\"\".concat(end, \"\\\"\"));\n      }\n\n      // prevent end < start\n      if (newEnd < newStart) {\n        newEnd = newStart;\n      }\n\n      // prevent start < min\n      if (min !== null) {\n        if (newStart < min) {\n          diff = min - newStart;\n          newStart += diff;\n          newEnd += diff;\n\n          // prevent end > max\n          if (max != null) {\n            if (newEnd > max) {\n              newEnd = max;\n            }\n          }\n        }\n      }\n\n      // prevent end > max\n      if (max !== null) {\n        if (newEnd > max) {\n          diff = newEnd - max;\n          newStart -= diff;\n          newEnd -= diff;\n\n          // prevent start < min\n          if (min != null) {\n            if (newStart < min) {\n              newStart = min;\n            }\n          }\n        }\n      }\n\n      // prevent (end-start) < zoomMin\n      if (this.options.zoomMin !== null) {\n        var zoomMin = _parseFloat$1(this.options.zoomMin);\n        if (zoomMin < 0) {\n          zoomMin = 0;\n        }\n        if (newEnd - newStart < zoomMin) {\n          // compensate for a scale of 0.5 ms\n          var compensation = 0.5;\n          if (this.end - this.start === zoomMin && newStart >= this.start - compensation && newEnd <= this.end) {\n            // ignore this action, we are already zoomed to the minimum\n            newStart = this.start;\n            newEnd = this.end;\n          } else {\n            // zoom to the minimum\n            diff = zoomMin - (newEnd - newStart);\n            newStart -= diff / 2;\n            newEnd += diff / 2;\n          }\n        }\n      }\n\n      // prevent (end-start) > zoomMax\n      if (this.options.zoomMax !== null) {\n        var zoomMax = _parseFloat$1(this.options.zoomMax);\n        if (zoomMax < 0) {\n          zoomMax = 0;\n        }\n        if (newEnd - newStart > zoomMax) {\n          if (this.end - this.start === zoomMax && newStart < this.start && newEnd > this.end) {\n            // ignore this action, we are already zoomed to the maximum\n            newStart = this.start;\n            newEnd = this.end;\n          } else {\n            // zoom to the maximum\n            diff = newEnd - newStart - zoomMax;\n            newStart += diff / 2;\n            newEnd -= diff / 2;\n          }\n        }\n      }\n      var changed = this.start != newStart || this.end != newEnd;\n\n      // if the new range does NOT overlap with the old range, emit checkRangedItems to avoid not showing ranged items (ranged meaning has end time, not necessarily of type Range)\n      if (!(newStart >= this.start && newStart <= this.end || newEnd >= this.start && newEnd <= this.end) && !(this.start >= newStart && this.start <= newEnd || this.end >= newStart && this.end <= newEnd)) {\n        this.body.emitter.emit('checkRangedItems');\n      }\n      this.start = newStart;\n      this.end = newEnd;\n      return changed;\n    }\n\n    /**\n     * Retrieve the current range.\n     * @return {Object} An object with start and end properties\n     */\n  }, {\n    key: \"getRange\",\n    value: function getRange() {\n      return {\n        start: this.start,\n        end: this.end\n      };\n    }\n\n    /**\n     * Calculate the conversion offset and scale for current range, based on\n     * the provided width\n     * @param {number} width\n     * @param {number} [totalHidden=0]\n     * @returns {{offset: number, scale: number}} conversion\n     */\n  }, {\n    key: \"conversion\",\n    value: function conversion(width, totalHidden) {\n      return Range.conversion(this.start, this.end, width, totalHidden);\n    }\n\n    /**\n     * Static method to calculate the conversion offset and scale for a range,\n     * based on the provided start, end, and width\n     * @param {number} start\n     * @param {number} end\n     * @param {number} width\n     * @param {number} [totalHidden=0]\n     * @returns {{offset: number, scale: number}} conversion\n     */\n  }, {\n    key: \"_onDragStart\",\n    value:\n    /**\n     * Start dragging horizontally or vertically\n     * @param {Event} event\n     * @private\n     */\n    function _onDragStart(event) {\n      this.deltaDifference = 0;\n      this.previousDelta = 0;\n\n      // only allow dragging when configured as movable\n      if (!this.options.moveable) return;\n\n      // only start dragging when the mouse is inside the current range\n      if (!this._isInsideRange(event)) return;\n\n      // refuse to drag when we where pinching to prevent the timeline make a jump\n      // when releasing the fingers in opposite order from the touch screen\n      if (!this.props.touch.allowDragging) return;\n      this.stopRolling();\n      this.props.touch.start = this.start;\n      this.props.touch.end = this.end;\n      this.props.touch.dragging = true;\n      if (this.body.dom.root) {\n        this.body.dom.root.style.cursor = 'move';\n      }\n    }\n\n    /**\n     * Perform dragging operation\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onDrag\",\n    value: function _onDrag(event) {\n      if (!event) return;\n      if (!this.props.touch.dragging) return;\n\n      // only allow dragging when configured as movable\n      if (!this.options.moveable) return;\n\n      // TODO: this may be redundant in hammerjs2\n      // refuse to drag when we where pinching to prevent the timeline make a jump\n      // when releasing the fingers in opposite order from the touch screen\n      if (!this.props.touch.allowDragging) return;\n      var direction = this.options.direction;\n      validateDirection(direction);\n      var delta = direction == 'horizontal' ? event.deltaX : event.deltaY;\n      delta -= this.deltaDifference;\n      var interval = this.props.touch.end - this.props.touch.start;\n\n      // normalize dragging speed if cutout is in between.\n      var duration = getHiddenDurationBetween(this.body.hiddenDates, this.start, this.end);\n      interval -= duration;\n      var width = direction == 'horizontal' ? this.body.domProps.center.width : this.body.domProps.center.height;\n      var diffRange;\n      if (this.options.rtl) {\n        diffRange = delta / width * interval;\n      } else {\n        diffRange = -delta / width * interval;\n      }\n      var newStart = this.props.touch.start + diffRange;\n      var newEnd = this.props.touch.end + diffRange;\n\n      // snapping times away from hidden zones\n      var safeStart = snapAwayFromHidden(this.body.hiddenDates, newStart, this.previousDelta - delta, true);\n      var safeEnd = snapAwayFromHidden(this.body.hiddenDates, newEnd, this.previousDelta - delta, true);\n      if (safeStart != newStart || safeEnd != newEnd) {\n        this.deltaDifference += delta;\n        this.props.touch.start = safeStart;\n        this.props.touch.end = safeEnd;\n        this._onDrag(event);\n        return;\n      }\n      this.previousDelta = delta;\n      this._applyRange(newStart, newEnd);\n      var startDate = new Date(this.start);\n      var endDate = new Date(this.end);\n\n      // fire a rangechange event\n      this.body.emitter.emit('rangechange', {\n        start: startDate,\n        end: endDate,\n        byUser: true,\n        event: event\n      });\n\n      // fire a panmove event\n      this.body.emitter.emit('panmove');\n    }\n\n    /**\n     * Stop dragging operation\n     * @param {event} event\n     * @private\n     */\n  }, {\n    key: \"_onDragEnd\",\n    value: function _onDragEnd(event) {\n      if (!this.props.touch.dragging) return;\n\n      // only allow dragging when configured as movable\n      if (!this.options.moveable) return;\n\n      // TODO: this may be redundant in hammerjs2\n      // refuse to drag when we where pinching to prevent the timeline make a jump\n      // when releasing the fingers in opposite order from the touch screen\n      if (!this.props.touch.allowDragging) return;\n      this.props.touch.dragging = false;\n      if (this.body.dom.root) {\n        this.body.dom.root.style.cursor = 'auto';\n      }\n\n      // fire a rangechanged event\n      this.body.emitter.emit('rangechanged', {\n        start: new Date(this.start),\n        end: new Date(this.end),\n        byUser: true,\n        event: event\n      });\n    }\n\n    /**\n     * Event handler for mouse wheel event, used to zoom\n     * Code from http://adomas.org/javascript-mouse-wheel/\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onMouseWheel\",\n    value: function _onMouseWheel(event) {\n      // retrieve delta\n      var delta = 0;\n      if (event.wheelDelta) {\n        /* IE/Opera. */\n        delta = event.wheelDelta / 120;\n      } else if (event.detail) {\n        /* Mozilla case. */\n        // In Mozilla, sign of delta is different than in IE.\n        // Also, delta is multiple of 3.\n        delta = -event.detail / 3;\n      } else if (event.deltaY) {\n        delta = -event.deltaY / 3;\n      }\n\n      // don't allow zoom when the according key is pressed and the zoomKey option or not zoomable but movable\n      if (this.options.zoomKey && !event[this.options.zoomKey] && this.options.zoomable || !this.options.zoomable && this.options.moveable) {\n        return;\n      }\n\n      // only allow zooming when configured as zoomable and moveable\n      if (!(this.options.zoomable && this.options.moveable)) return;\n\n      // only zoom when the mouse is inside the current range\n      if (!this._isInsideRange(event)) return;\n\n      // If delta is nonzero, handle it.\n      // Basically, delta is now positive if wheel was scrolled up,\n      // and negative, if wheel was scrolled down.\n      if (delta) {\n        // perform the zoom action. Delta is normally 1 or -1\n\n        // adjust a negative delta such that zooming in with delta 0.1\n        // equals zooming out with a delta -0.1\n\n        var zoomFriction = this.options.zoomFriction || 5;\n        var scale;\n        if (delta < 0) {\n          scale = 1 - delta / zoomFriction;\n        } else {\n          scale = 1 / (1 + delta / zoomFriction);\n        }\n\n        // calculate center, the date to zoom around\n        var pointerDate;\n        if (this.rolling) {\n          var rollingModeOffset = this.options.rollingMode && this.options.rollingMode.offset || 0.5;\n          pointerDate = this.start + (this.end - this.start) * rollingModeOffset;\n        } else {\n          var pointer = this.getPointer({\n            x: event.clientX,\n            y: event.clientY\n          }, this.body.dom.center);\n          pointerDate = this._pointerToDate(pointer);\n        }\n        this.zoom(scale, pointerDate, delta, event);\n\n        // Prevent default actions caused by mouse wheel\n        // (else the page and timeline both scroll)\n        event.preventDefault();\n      }\n    }\n\n    /**\n     * Start of a touch gesture\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onTouch\",\n    value: function _onTouch(event) {\n      // eslint-disable-line no-unused-vars\n      this.props.touch.start = this.start;\n      this.props.touch.end = this.end;\n      this.props.touch.allowDragging = true;\n      this.props.touch.center = null;\n      this.props.touch.centerDate = null;\n      this.scaleOffset = 0;\n      this.deltaDifference = 0;\n      // Disable the browser default handling of this event.\n      availableUtils.preventDefault(event);\n    }\n\n    /**\n     * Handle pinch event\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onPinch\",\n    value: function _onPinch(event) {\n      // only allow zooming when configured as zoomable and moveable\n      if (!(this.options.zoomable && this.options.moveable)) return;\n\n      // Disable the browser default handling of this event.\n      availableUtils.preventDefault(event);\n      this.props.touch.allowDragging = false;\n      if (!this.props.touch.center) {\n        this.props.touch.center = this.getPointer(event.center, this.body.dom.center);\n        this.props.touch.centerDate = this._pointerToDate(this.props.touch.center);\n      }\n      this.stopRolling();\n      var scale = 1 / (event.scale + this.scaleOffset);\n      var centerDate = this.props.touch.centerDate;\n      var hiddenDuration = getHiddenDurationBetween(this.body.hiddenDates, this.start, this.end);\n      var hiddenDurationBefore = getHiddenDurationBefore(this.options.moment, this.body.hiddenDates, this, centerDate);\n      var hiddenDurationAfter = hiddenDuration - hiddenDurationBefore;\n\n      // calculate new start and end\n      var newStart = centerDate - hiddenDurationBefore + (this.props.touch.start - (centerDate - hiddenDurationBefore)) * scale;\n      var newEnd = centerDate + hiddenDurationAfter + (this.props.touch.end - (centerDate + hiddenDurationAfter)) * scale;\n\n      // snapping times away from hidden zones\n      this.startToFront = 1 - scale <= 0; // used to do the right auto correction with periodic hidden times\n      this.endToFront = scale - 1 <= 0; // used to do the right auto correction with periodic hidden times\n\n      var safeStart = snapAwayFromHidden(this.body.hiddenDates, newStart, 1 - scale, true);\n      var safeEnd = snapAwayFromHidden(this.body.hiddenDates, newEnd, scale - 1, true);\n      if (safeStart != newStart || safeEnd != newEnd) {\n        this.props.touch.start = safeStart;\n        this.props.touch.end = safeEnd;\n        this.scaleOffset = 1 - event.scale;\n        newStart = safeStart;\n        newEnd = safeEnd;\n      }\n      var options = {\n        animation: false,\n        byUser: true,\n        event: event\n      };\n      this.setRange(newStart, newEnd, options);\n      this.startToFront = false; // revert to default\n      this.endToFront = true; // revert to default\n    }\n\n    /**\n     * Test whether the mouse from a mouse event is inside the visible window,\n     * between the current start and end date\n     * @param {Object} event\n     * @return {boolean} Returns true when inside the visible window\n     * @private\n     */\n  }, {\n    key: \"_isInsideRange\",\n    value: function _isInsideRange(event) {\n      // calculate the time where the mouse is, check whether inside\n      // and no scroll action should happen.\n      var clientX = event.center ? event.center.x : event.clientX;\n      var centerContainerRect = this.body.dom.centerContainer.getBoundingClientRect();\n      var x = this.options.rtl ? clientX - centerContainerRect.left : centerContainerRect.right - clientX;\n      var time = this.body.util.toTime(x);\n      return time >= this.start && time <= this.end;\n    }\n\n    /**\n     * Helper function to calculate the center date for zooming\n     * @param {{x: number, y: number}} pointer\n     * @return {number} date\n     * @private\n     */\n  }, {\n    key: \"_pointerToDate\",\n    value: function _pointerToDate(pointer) {\n      var conversion;\n      var direction = this.options.direction;\n      validateDirection(direction);\n      if (direction == 'horizontal') {\n        return this.body.util.toTime(pointer.x).valueOf();\n      } else {\n        var height = this.body.domProps.center.height;\n        conversion = this.conversion(height);\n        return pointer.y / conversion.scale + conversion.offset;\n      }\n    }\n\n    /**\n     * Get the pointer location relative to the location of the dom element\n     * @param {{x: number, y: number}} touch\n     * @param {Element} element   HTML DOM element\n     * @return {{x: number, y: number}} pointer\n     * @private\n     */\n  }, {\n    key: \"getPointer\",\n    value: function getPointer(touch, element) {\n      var elementRect = element.getBoundingClientRect();\n      if (this.options.rtl) {\n        return {\n          x: elementRect.right - touch.x,\n          y: touch.y - elementRect.top\n        };\n      } else {\n        return {\n          x: touch.x - elementRect.left,\n          y: touch.y - elementRect.top\n        };\n      }\n    }\n\n    /**\n     * Zoom the range the given scale in or out. Start and end date will\n     * be adjusted, and the timeline will be redrawn. You can optionally give a\n     * date around which to zoom.\n     * For example, try scale = 0.9 or 1.1\n     * @param {number} scale      Scaling factor. Values above 1 will zoom out,\n     *                            values below 1 will zoom in.\n     * @param {number} [center]   Value representing a date around which will\n     *                            be zoomed.\n     * @param {number} delta\n     * @param {Event} event\n     */\n  }, {\n    key: \"zoom\",\n    value: function zoom(scale, center, delta, event) {\n      // if centerDate is not provided, take it half between start Date and end Date\n      if (center == null) {\n        center = (this.start + this.end) / 2;\n      }\n      var hiddenDuration = getHiddenDurationBetween(this.body.hiddenDates, this.start, this.end);\n      var hiddenDurationBefore = getHiddenDurationBefore(this.options.moment, this.body.hiddenDates, this, center);\n      var hiddenDurationAfter = hiddenDuration - hiddenDurationBefore;\n\n      // calculate new start and end\n      var newStart = center - hiddenDurationBefore + (this.start - (center - hiddenDurationBefore)) * scale;\n      var newEnd = center + hiddenDurationAfter + (this.end - (center + hiddenDurationAfter)) * scale;\n\n      // snapping times away from hidden zones\n      this.startToFront = delta > 0 ? false : true; // used to do the right autocorrection with periodic hidden times\n      this.endToFront = -delta > 0 ? false : true; // used to do the right autocorrection with periodic hidden times\n      var safeStart = snapAwayFromHidden(this.body.hiddenDates, newStart, delta, true);\n      var safeEnd = snapAwayFromHidden(this.body.hiddenDates, newEnd, -delta, true);\n      if (safeStart != newStart || safeEnd != newEnd) {\n        newStart = safeStart;\n        newEnd = safeEnd;\n      }\n      var options = {\n        animation: false,\n        byUser: true,\n        event: event\n      };\n      this.setRange(newStart, newEnd, options);\n      this.startToFront = false; // revert to default\n      this.endToFront = true; // revert to default\n    }\n\n    /**\n     * Move the range with a given delta to the left or right. Start and end\n     * value will be adjusted. For example, try delta = 0.1 or -0.1\n     * @param {number}  delta     Moving amount. Positive value will move right,\n     *                            negative value will move left\n     */\n  }, {\n    key: \"move\",\n    value: function move(delta) {\n      // zoom start Date and end Date relative to the centerDate\n      var diff = this.end - this.start;\n\n      // apply new values\n      var newStart = this.start + diff * delta;\n      var newEnd = this.end + diff * delta;\n\n      // TODO: reckon with min and max range\n\n      this.start = newStart;\n      this.end = newEnd;\n    }\n\n    /**\n     * Move the range to a new center point\n     * @param {number} moveTo      New center point of the range\n     */\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(_moveTo) {\n      var center = (this.start + this.end) / 2;\n      var diff = center - _moveTo;\n\n      // calculate new start and end\n      var newStart = this.start - diff;\n      var newEnd = this.end - diff;\n      var options = {\n        animation: false,\n        byUser: true,\n        event: null\n      };\n      this.setRange(newStart, newEnd, options);\n    }\n\n    /**\n     * Destroy the Range\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.stopRolling();\n    }\n  }], [{\n    key: \"conversion\",\n    value: function conversion(start, end, width, totalHidden) {\n      if (totalHidden === undefined) {\n        totalHidden = 0;\n      }\n      if (width != 0 && end - start != 0) {\n        return {\n          offset: start,\n          scale: width / (end - start - totalHidden)\n        };\n      } else {\n        return {\n          offset: 0,\n          scale: 1\n        };\n      }\n    }\n  }]);\n  return Range;\n}(Component);\nfunction validateDirection(direction) {\n  if (direction != 'horizontal' && direction != 'vertical') {\n    throw new TypeError(\"Unknown direction \\\"\".concat(direction, \"\\\". Choose \\\"horizontal\\\" or \\\"vertical\\\".\"));\n  }\n}\n\nvar path = path$u;\n\nvar setInterval$1 = path.setInterval;\n\nvar setInterval = setInterval$1;\n\nvar _setInterval = /*@__PURE__*/getDefaultExportFromCjs(setInterval);\n\nvar _firstTarget = null; // singleton, will contain the target element where the touch event started\n\n/**\n * Extend an Hammer.js instance with event propagation.\n *\n * Features:\n * - Events emitted by hammer will propagate in order from child to parent\n *   elements.\n * - Events are extended with a function `event.stopPropagation()` to stop\n *   propagation to parent elements.\n * - An option `preventDefault` to stop all default browser behavior.\n *\n * Usage:\n *   var hammer = propagatingHammer(new Hammer(element));\n *   var hammer = propagatingHammer(new Hammer(element), {preventDefault: true});\n *\n * @param {Hammer.Manager} hammer   An hammer instance.\n * @param {Object} [options]        Available options:\n *                                  - `preventDefault: true | false | 'mouse' | 'touch' | 'pen'`.\n *                                    Enforce preventing the default browser behavior.\n *                                    Cannot be set to `false`.\n * @return {Hammer.Manager} Returns the same hammer instance with extended\n *                          functionality\n */\nfunction propagating(hammer, options) {\n  var _options = options || {\n    preventDefault: false\n  };\n\n  if (hammer.Manager) {\n    // This looks like the Hammer constructor.\n    // Overload the constructors with our own.\n    var Hammer = hammer;\n\n    var PropagatingHammer = function(element, options) {\n      var o = Object.create(_options);\n      if (options) Hammer.assign(o, options);\n      return propagating(new Hammer(element, o), o);\n    };\n    Hammer.assign(PropagatingHammer, Hammer);\n\n    PropagatingHammer.Manager = function (element, options) {\n      var o = Object.create(_options);\n      if (options) Hammer.assign(o, options);\n      return propagating(new Hammer.Manager(element, o), o);\n    };\n\n    return PropagatingHammer;\n  }\n\n  // create a wrapper object which will override the functions\n  // `on`, `off`, `destroy`, and `emit` of the hammer instance\n  var wrapper = Object.create(hammer);\n\n  // attach to DOM element\n  var element = hammer.element;\n\n  if(!element.hammer) element.hammer = [];\n  element.hammer.push(wrapper);\n\n  // register an event to catch the start of a gesture and store the\n  // target in a singleton\n  hammer.on('hammer.input', function (event) {\n    if (_options.preventDefault === true || (_options.preventDefault === event.pointerType)) {\n      event.preventDefault();\n    }\n    if (event.isFirst) {\n      _firstTarget = event.target;\n    }\n  });\n\n  /** @type {Object.<String, Array.<function>>} */\n  wrapper._handlers = {};\n\n  /**\n   * Register a handler for one or multiple events\n   * @param {String} events    A space separated string with events\n   * @param {function} handler A callback function, called as handler(event)\n   * @returns {Hammer.Manager} Returns the hammer instance\n   */\n  wrapper.on = function (events, handler) {\n    // register the handler\n    split(events).forEach(function (event) {\n      var _handlers = wrapper._handlers[event];\n      if (!_handlers) {\n        wrapper._handlers[event] = _handlers = [];\n\n        // register the static, propagated handler\n        hammer.on(event, propagatedHandler);\n      }\n      _handlers.push(handler);\n    });\n\n    return wrapper;\n  };\n\n  /**\n   * Unregister a handler for one or multiple events\n   * @param {String} events      A space separated string with events\n   * @param {function} [handler] Optional. The registered handler. If not\n   *                             provided, all handlers for given events\n   *                             are removed.\n   * @returns {Hammer.Manager}   Returns the hammer instance\n   */\n  wrapper.off = function (events, handler) {\n    // unregister the handler\n    split(events).forEach(function (event) {\n      var _handlers = wrapper._handlers[event];\n      if (_handlers) {\n        _handlers = handler ? _handlers.filter(function (h) {\n          return h !== handler;\n        }) : [];\n\n        if (_handlers.length > 0) {\n          wrapper._handlers[event] = _handlers;\n        }\n        else {\n          // remove static, propagated handler\n          hammer.off(event, propagatedHandler);\n          delete wrapper._handlers[event];\n        }\n      }\n    });\n\n    return wrapper;\n  };\n\n  /**\n   * Emit to the event listeners\n   * @param {string} eventType\n   * @param {Event} event\n   */\n  wrapper.emit = function(eventType, event) {\n    _firstTarget = event.target;\n    hammer.emit(eventType, event);\n  };\n\n  wrapper.destroy = function () {\n    // Detach from DOM element\n    var hammers = hammer.element.hammer;\n    var idx = hammers.indexOf(wrapper);\n    if(idx !== -1) hammers.splice(idx,1);\n    if(!hammers.length) delete hammer.element.hammer;\n\n    // clear all handlers\n    wrapper._handlers = {};\n\n    // call original hammer destroy\n    hammer.destroy();\n  };\n\n  // split a string with space separated words\n  function split(events) {\n    return events.match(/[^ ]+/g);\n  }\n\n  /**\n   * A static event handler, applying event propagation.\n   * @param {Object} event\n   */\n  function propagatedHandler(event) {\n    // let only a single hammer instance handle this event\n    if (event.type !== 'hammer.input') {\n      // it is possible that the same srcEvent is used with multiple hammer events,\n      // we keep track on which events are handled in an object _handled\n      if (!event.srcEvent._handled) {\n        event.srcEvent._handled = {};\n      }\n\n      if (event.srcEvent._handled[event.type]) {\n        return;\n      }\n      else {\n        event.srcEvent._handled[event.type] = true;\n      }\n    }\n\n    // attach a stopPropagation function to the event\n    var stopped = false;\n    event.stopPropagation = function () {\n      stopped = true;\n    };\n\n    //wrap the srcEvent's stopPropagation to also stop hammer propagation:\n    var srcStop = event.srcEvent.stopPropagation.bind(event.srcEvent);\n    if(typeof srcStop == \"function\") {\n      event.srcEvent.stopPropagation = function(){\n        srcStop();\n        event.stopPropagation();\n      };\n    }\n\n    // attach firstTarget property to the event\n    event.firstTarget = _firstTarget;\n\n    // propagate over all elements (until stopped)\n    var elem = _firstTarget;\n    while (elem && !stopped) {\n      var elemHammer = elem.hammer;\n      if(elemHammer){\n        var _handlers;\n        for(var k = 0; k < elemHammer.length; k++){\n          _handlers = elemHammer[k]._handlers[event.type];\n          if(_handlers) for (var i = 0; i < _handlers.length && !stopped; i++) {\n            _handlers[i](event);\n          }\n        }\n      }\n      elem = elem.parentNode;\n    }\n  }\n\n  return wrapper;\n}\n\n/**\n * Setup a mock hammer.js object, for unit testing.\n *\n * Inspiration: https://github.com/uber/deck.gl/pull/658\n *\n * @returns {{on: noop, off: noop, destroy: noop, emit: noop, get: get}}\n */\nfunction hammerMock() {\n  var noop = function noop() {};\n  return {\n    on: noop,\n    off: noop,\n    destroy: noop,\n    emit: noop,\n    get: function get(m) {\n      //eslint-disable-line no-unused-vars\n      return {\n        set: noop\n      };\n    }\n  };\n}\nvar modifiedHammer;\nif (typeof window !== 'undefined') {\n  var OurHammer = window['Hammer'] || Hammer$4;\n  modifiedHammer = propagating(OurHammer, {\n    preventDefault: 'mouse'\n  });\n} else {\n  modifiedHammer = function modifiedHammer() {\n    return (\n      // hammer.js is only available in a browser, not in node.js. Replacing it with a mock object.\n      hammerMock()\n    );\n  };\n}\nvar Hammer = modifiedHammer;\n\n/**\n * Register a touch event, taking place before a gesture\n * @param {Hammer} hammer       A hammer instance\n * @param {function} callback   Callback, called as callback(event)\n */\nfunction onTouch(hammer, callback) {\n  callback.inputHandler = function (event) {\n    if (event.isFirst) {\n      callback(event);\n    }\n  };\n  hammer.on('hammer.input', callback.inputHandler);\n}\n\n/**\n * Register a release event, taking place after a gesture\n * @param {Hammer} hammer       A hammer instance\n * @param {function} callback   Callback, called as callback(event)\n * @returns {*}\n */\nfunction onRelease(hammer, callback) {\n  callback.inputHandler = function (event) {\n    if (event.isFinal) {\n      callback(event);\n    }\n  };\n  return hammer.on('hammer.input', callback.inputHandler);\n}\n\n/**\n * Hack the PinchRecognizer such that it doesn't prevent default behavior\n * for vertical panning.\n *\n * Yeah ... this is quite a hack ... see https://github.com/hammerjs/hammer.js/issues/932\n *\n * @param {Hammer.Pinch} pinchRecognizer\n * @return {Hammer.Pinch} returns the pinchRecognizer\n */\nfunction disablePreventDefaultVertically(pinchRecognizer) {\n  var TOUCH_ACTION_PAN_Y = 'pan-y';\n  pinchRecognizer.getTouchAction = function () {\n    // default method returns [TOUCH_ACTION_NONE]\n    return [TOUCH_ACTION_PAN_Y];\n  };\n  return pinchRecognizer;\n}\n\n/**\n * The class TimeStep is an iterator for dates. You provide a start date and an\n * end date. The class itself determines the best scale (step size) based on the\n * provided start Date, end Date, and minimumStep.\n *\n * If minimumStep is provided, the step size is chosen as close as possible\n * to the minimumStep but larger than minimumStep. If minimumStep is not\n * provided, the scale is set to 1 DAY.\n * The minimumStep should correspond with the onscreen size of about 6 characters\n *\n * Alternatively, you can set a scale by hand.\n * After creation, you can initialize the class by executing first(). Then you\n * can iterate from the start date to the end date via next(). You can check if\n * the end date is reached with the function hasNext(). After each step, you can\n * retrieve the current date via getCurrent().\n * The TimeStep has scales ranging from milliseconds, seconds, minutes, hours,\n * days, to years.\n *\n * Version: 1.2\n *\n */\nvar TimeStep = /*#__PURE__*/function () {\n  /**\n    * @param {Date} [start]         The start date, for example new Date(2010, 9, 21)\n    *                               or new Date(2010, 9, 21, 23, 45, 00)\n    * @param {Date} [end]           The end date\n    * @param {number} [minimumStep] Optional. Minimum step size in milliseconds\n    * @param {Date|Array.<Date>} [hiddenDates] Optional.\n    * @param {{showMajorLabels: boolean, showWeekScale: boolean}} [options] Optional.\n    * @constructor  TimeStep\n    */\n  function TimeStep(start, end, minimumStep, hiddenDates, options) {\n    _classCallCheck(this, TimeStep);\n    this.moment = options && options.moment || moment$4;\n    this.options = options ? options : {};\n\n    // variables\n    this.current = this.moment();\n    this._start = this.moment();\n    this._end = this.moment();\n    this.autoScale = true;\n    this.scale = 'day';\n    this.step = 1;\n\n    // initialize the range\n    this.setRange(start, end, minimumStep);\n\n    // hidden Dates options\n    this.switchedDay = false;\n    this.switchedMonth = false;\n    this.switchedYear = false;\n    if (_Array$isArray(hiddenDates)) {\n      this.hiddenDates = hiddenDates;\n    } else if (hiddenDates != undefined) {\n      this.hiddenDates = [hiddenDates];\n    } else {\n      this.hiddenDates = [];\n    }\n    this.format = TimeStep.FORMAT; // default formatting\n  }\n\n  /**\n   * Set custom constructor function for moment. Can be used to set dates\n   * to UTC or to set a utcOffset.\n   * @param {function} moment\n   */\n  _createClass(TimeStep, [{\n    key: \"setMoment\",\n    value: function setMoment(moment) {\n      this.moment = moment;\n\n      // update the date properties, can have a new utcOffset\n      this.current = this.moment(this.current.valueOf());\n      this._start = this.moment(this._start.valueOf());\n      this._end = this.moment(this._end.valueOf());\n    }\n\n    /**\n     * Set custom formatting for the minor an major labels of the TimeStep.\n     * Both `minorLabels` and `majorLabels` are an Object with properties:\n     * 'millisecond', 'second', 'minute', 'hour', 'weekday', 'day', 'week', 'month', 'year'.\n     * @param {{minorLabels: Object, majorLabels: Object}} format\n     */\n  }, {\n    key: \"setFormat\",\n    value: function setFormat(format) {\n      var defaultFormat = availableUtils.deepExtend({}, TimeStep.FORMAT);\n      this.format = availableUtils.deepExtend(defaultFormat, format);\n    }\n\n    /**\n     * Set a new range\n     * If minimumStep is provided, the step size is chosen as close as possible\n     * to the minimumStep but larger than minimumStep. If minimumStep is not\n     * provided, the scale is set to 1 DAY.\n     * The minimumStep should correspond with the onscreen size of about 6 characters\n     * @param {Date} [start]      The start date and time.\n     * @param {Date} [end]        The end date and time.\n     * @param {int} [minimumStep] Optional. Minimum step size in milliseconds\n     */\n  }, {\n    key: \"setRange\",\n    value: function setRange(start, end, minimumStep) {\n      if (!(start instanceof Date) || !(end instanceof Date)) {\n        throw \"No legal start or end date in method setRange\";\n      }\n      this._start = start != undefined ? this.moment(start.valueOf()) : _Date$now();\n      this._end = end != undefined ? this.moment(end.valueOf()) : _Date$now();\n      if (this.autoScale) {\n        this.setMinimumStep(minimumStep);\n      }\n    }\n\n    /**\n     * Set the range iterator to the start date.\n     */\n  }, {\n    key: \"start\",\n    value: function start() {\n      this.current = this._start.clone();\n      this.roundToMinor();\n    }\n\n    /**\n     * Round the current date to the first minor date value\n     * This must be executed once when the current date is set to start Date\n     */\n  }, {\n    key: \"roundToMinor\",\n    value: function roundToMinor() {\n      // round to floor\n      // to prevent year & month scales rounding down to the first day of week we perform this separately\n      if (this.scale == 'week') {\n        this.current.weekday(0);\n      }\n      // IMPORTANT: we have no breaks in this switch! (this is no bug)\n      // noinspection FallThroughInSwitchStatementJS\n      switch (this.scale) {\n        case 'year':\n          this.current.year(this.step * Math.floor(this.current.year() / this.step));\n          this.current.month(0);\n        // eslint-disable-line no-fallthrough\n        case 'month':\n          this.current.date(1);\n        // eslint-disable-line no-fallthrough\n        case 'week': // eslint-disable-line no-fallthrough\n        case 'day': // eslint-disable-line no-fallthrough\n        case 'weekday':\n          this.current.hours(0);\n        // eslint-disable-line no-fallthrough\n        case 'hour':\n          this.current.minutes(0);\n        // eslint-disable-line no-fallthrough\n        case 'minute':\n          this.current.seconds(0);\n        // eslint-disable-line no-fallthrough\n        case 'second':\n          this.current.milliseconds(0);\n        // eslint-disable-line no-fallthrough\n        //case 'millisecond': // nothing to do for milliseconds\n      }\n\n      if (this.step != 1) {\n        // round down to the first minor value that is a multiple of the current step size\n        var priorCurrent = this.current.clone();\n        switch (this.scale) {\n          case 'millisecond':\n            this.current.subtract(this.current.milliseconds() % this.step, 'milliseconds');\n            break;\n          case 'second':\n            this.current.subtract(this.current.seconds() % this.step, 'seconds');\n            break;\n          case 'minute':\n            this.current.subtract(this.current.minutes() % this.step, 'minutes');\n            break;\n          case 'hour':\n            this.current.subtract(this.current.hours() % this.step, 'hours');\n            break;\n          case 'weekday': // intentional fall through\n          case 'day':\n            this.current.subtract((this.current.date() - 1) % this.step, 'day');\n            break;\n          case 'week':\n            this.current.subtract(this.current.week() % this.step, 'week');\n            break;\n          case 'month':\n            this.current.subtract(this.current.month() % this.step, 'month');\n            break;\n          case 'year':\n            this.current.subtract(this.current.year() % this.step, 'year');\n            break;\n        }\n        if (!priorCurrent.isSame(this.current)) {\n          this.current = this.moment(snapAwayFromHidden(this.hiddenDates, this.current.valueOf(), -1, true));\n        }\n      }\n    }\n\n    /**\n     * Check if the there is a next step\n     * @return {boolean}  true if the current date has not passed the end date\n     */\n  }, {\n    key: \"hasNext\",\n    value: function hasNext() {\n      return this.current.valueOf() <= this._end.valueOf();\n    }\n\n    /**\n     * Do the next step\n     */\n  }, {\n    key: \"next\",\n    value: function next() {\n      var prev = this.current.valueOf();\n\n      // Two cases, needed to prevent issues with switching daylight savings\n      // (end of March and end of October)\n      switch (this.scale) {\n        case 'millisecond':\n          this.current.add(this.step, 'millisecond');\n          break;\n        case 'second':\n          this.current.add(this.step, 'second');\n          break;\n        case 'minute':\n          this.current.add(this.step, 'minute');\n          break;\n        case 'hour':\n          this.current.add(this.step, 'hour');\n          if (this.current.month() < 6) {\n            this.current.subtract(this.current.hours() % this.step, 'hour');\n          } else {\n            if (this.current.hours() % this.step !== 0) {\n              this.current.add(this.step - this.current.hours() % this.step, 'hour');\n            }\n          }\n          break;\n        case 'weekday': // intentional fall through\n        case 'day':\n          this.current.add(this.step, 'day');\n          break;\n        case 'week':\n          if (this.current.weekday() !== 0) {\n            // we had a month break not correlating with a week's start before\n            this.current.weekday(0); // switch back to week cycles\n            this.current.add(this.step, 'week');\n          } else if (this.options.showMajorLabels === false) {\n            this.current.add(this.step, 'week'); // the default case\n          } else {\n            // first day of the week\n            var nextWeek = this.current.clone();\n            nextWeek.add(1, 'week');\n            if (nextWeek.isSame(this.current, 'month')) {\n              // is the first day of the next week in the same month?\n              this.current.add(this.step, 'week'); // the default case\n            } else {\n              // inject a step at each first day of the month\n              this.current.add(this.step, 'week');\n              this.current.date(1);\n            }\n          }\n          break;\n        case 'month':\n          this.current.add(this.step, 'month');\n          break;\n        case 'year':\n          this.current.add(this.step, 'year');\n          break;\n      }\n      if (this.step != 1) {\n        // round down to the correct major value\n        switch (this.scale) {\n          case 'millisecond':\n            if (this.current.milliseconds() > 0 && this.current.milliseconds() < this.step) this.current.milliseconds(0);\n            break;\n          case 'second':\n            if (this.current.seconds() > 0 && this.current.seconds() < this.step) this.current.seconds(0);\n            break;\n          case 'minute':\n            if (this.current.minutes() > 0 && this.current.minutes() < this.step) this.current.minutes(0);\n            break;\n          case 'hour':\n            if (this.current.hours() > 0 && this.current.hours() < this.step) this.current.hours(0);\n            break;\n          case 'weekday': // intentional fall through\n          case 'day':\n            if (this.current.date() < this.step + 1) this.current.date(1);\n            break;\n          case 'week':\n            if (this.current.week() < this.step) this.current.week(1);\n            break;\n          // week numbering starts at 1, not 0\n          case 'month':\n            if (this.current.month() < this.step) this.current.month(0);\n            break;\n        }\n      }\n\n      // safety mechanism: if current time is still unchanged, move to the end\n      if (this.current.valueOf() == prev) {\n        this.current = this._end.clone();\n      }\n\n      // Reset switches for year, month and day. Will get set to true where appropriate in DateUtil.stepOverHiddenDates\n      this.switchedDay = false;\n      this.switchedMonth = false;\n      this.switchedYear = false;\n      stepOverHiddenDates(this.moment, this, prev);\n    }\n\n    /**\n     * Get the current datetime\n     * @return {Moment}  current The current date\n     */\n  }, {\n    key: \"getCurrent\",\n    value: function getCurrent() {\n      return this.current.clone();\n    }\n\n    /**\n     * Set a custom scale. Autoscaling will be disabled.\n     * For example setScale('minute', 5) will result\n     * in minor steps of 5 minutes, and major steps of an hour.\n     *\n     * @param {{scale: string, step: number}} params\n     *                               An object containing two properties:\n     *                               - A string 'scale'. Choose from 'millisecond', 'second',\n     *                                 'minute', 'hour', 'weekday', 'day', 'week', 'month', 'year'.\n     *                               - A number 'step'. A step size, by default 1.\n     *                                 Choose for example 1, 2, 5, or 10.\n     */\n  }, {\n    key: \"setScale\",\n    value: function setScale(params) {\n      if (params && typeof params.scale == 'string') {\n        this.scale = params.scale;\n        this.step = params.step > 0 ? params.step : 1;\n        this.autoScale = false;\n      }\n    }\n\n    /**\n     * Enable or disable autoscaling\n     * @param {boolean} enable  If true, autoascaling is set true\n     */\n  }, {\n    key: \"setAutoScale\",\n    value: function setAutoScale(enable) {\n      this.autoScale = enable;\n    }\n\n    /**\n     * Automatically determine the scale that bests fits the provided minimum step\n     * @param {number} [minimumStep]  The minimum step size in milliseconds\n     */\n  }, {\n    key: \"setMinimumStep\",\n    value: function setMinimumStep(minimumStep) {\n      if (minimumStep == undefined) {\n        return;\n      }\n\n      //var b = asc + ds;\n\n      var stepYear = 1000 * 60 * 60 * 24 * 30 * 12;\n      var stepMonth = 1000 * 60 * 60 * 24 * 30;\n      var stepDay = 1000 * 60 * 60 * 24;\n      var stepHour = 1000 * 60 * 60;\n      var stepMinute = 1000 * 60;\n      var stepSecond = 1000;\n      var stepMillisecond = 1;\n\n      // find the smallest step that is larger than the provided minimumStep\n      if (stepYear * 1000 > minimumStep) {\n        this.scale = 'year';\n        this.step = 1000;\n      }\n      if (stepYear * 500 > minimumStep) {\n        this.scale = 'year';\n        this.step = 500;\n      }\n      if (stepYear * 100 > minimumStep) {\n        this.scale = 'year';\n        this.step = 100;\n      }\n      if (stepYear * 50 > minimumStep) {\n        this.scale = 'year';\n        this.step = 50;\n      }\n      if (stepYear * 10 > minimumStep) {\n        this.scale = 'year';\n        this.step = 10;\n      }\n      if (stepYear * 5 > minimumStep) {\n        this.scale = 'year';\n        this.step = 5;\n      }\n      if (stepYear > minimumStep) {\n        this.scale = 'year';\n        this.step = 1;\n      }\n      if (stepMonth * 3 > minimumStep) {\n        this.scale = 'month';\n        this.step = 3;\n      }\n      if (stepMonth > minimumStep) {\n        this.scale = 'month';\n        this.step = 1;\n      }\n      if (stepDay * 7 > minimumStep && this.options.showWeekScale) {\n        this.scale = 'week';\n        this.step = 1;\n      }\n      if (stepDay * 2 > minimumStep) {\n        this.scale = 'day';\n        this.step = 2;\n      }\n      if (stepDay > minimumStep) {\n        this.scale = 'day';\n        this.step = 1;\n      }\n      if (stepDay / 2 > minimumStep) {\n        this.scale = 'weekday';\n        this.step = 1;\n      }\n      if (stepHour * 4 > minimumStep) {\n        this.scale = 'hour';\n        this.step = 4;\n      }\n      if (stepHour > minimumStep) {\n        this.scale = 'hour';\n        this.step = 1;\n      }\n      if (stepMinute * 15 > minimumStep) {\n        this.scale = 'minute';\n        this.step = 15;\n      }\n      if (stepMinute * 10 > minimumStep) {\n        this.scale = 'minute';\n        this.step = 10;\n      }\n      if (stepMinute * 5 > minimumStep) {\n        this.scale = 'minute';\n        this.step = 5;\n      }\n      if (stepMinute > minimumStep) {\n        this.scale = 'minute';\n        this.step = 1;\n      }\n      if (stepSecond * 15 > minimumStep) {\n        this.scale = 'second';\n        this.step = 15;\n      }\n      if (stepSecond * 10 > minimumStep) {\n        this.scale = 'second';\n        this.step = 10;\n      }\n      if (stepSecond * 5 > minimumStep) {\n        this.scale = 'second';\n        this.step = 5;\n      }\n      if (stepSecond > minimumStep) {\n        this.scale = 'second';\n        this.step = 1;\n      }\n      if (stepMillisecond * 200 > minimumStep) {\n        this.scale = 'millisecond';\n        this.step = 200;\n      }\n      if (stepMillisecond * 100 > minimumStep) {\n        this.scale = 'millisecond';\n        this.step = 100;\n      }\n      if (stepMillisecond * 50 > minimumStep) {\n        this.scale = 'millisecond';\n        this.step = 50;\n      }\n      if (stepMillisecond * 10 > minimumStep) {\n        this.scale = 'millisecond';\n        this.step = 10;\n      }\n      if (stepMillisecond * 5 > minimumStep) {\n        this.scale = 'millisecond';\n        this.step = 5;\n      }\n      if (stepMillisecond > minimumStep) {\n        this.scale = 'millisecond';\n        this.step = 1;\n      }\n    }\n\n    /**\n     * Snap a date to a rounded value.\n     * The snap intervals are dependent on the current scale and step.\n     * Static function\n     * @param {Date} date    the date to be snapped.\n     * @param {string} scale Current scale, can be 'millisecond', 'second',\n     *                       'minute', 'hour', 'weekday, 'day', 'week', 'month', 'year'.\n     * @param {number} step  Current step (1, 2, 4, 5, ...\n     * @return {Date} snappedDate\n     */\n  }, {\n    key: \"isMajor\",\n    value:\n    /**\n     * Check if the current value is a major value (for example when the step\n     * is DAY, a major value is each first day of the MONTH)\n     * @return {boolean} true if current date is major, else false.\n     */\n    function isMajor() {\n      if (this.switchedYear == true) {\n        switch (this.scale) {\n          case 'year':\n          case 'month':\n          case 'week':\n          case 'weekday':\n          case 'day':\n          case 'hour':\n          case 'minute':\n          case 'second':\n          case 'millisecond':\n            return true;\n          default:\n            return false;\n        }\n      } else if (this.switchedMonth == true) {\n        switch (this.scale) {\n          case 'week':\n          case 'weekday':\n          case 'day':\n          case 'hour':\n          case 'minute':\n          case 'second':\n          case 'millisecond':\n            return true;\n          default:\n            return false;\n        }\n      } else if (this.switchedDay == true) {\n        switch (this.scale) {\n          case 'millisecond':\n          case 'second':\n          case 'minute':\n          case 'hour':\n            return true;\n          default:\n            return false;\n        }\n      }\n      var date = this.moment(this.current);\n      switch (this.scale) {\n        case 'millisecond':\n          return date.milliseconds() == 0;\n        case 'second':\n          return date.seconds() == 0;\n        case 'minute':\n          return date.hours() == 0 && date.minutes() == 0;\n        case 'hour':\n          return date.hours() == 0;\n        case 'weekday': // intentional fall through\n        case 'day':\n          return this.options.showWeekScale ? date.isoWeekday() == 1 : date.date() == 1;\n        case 'week':\n          return date.date() == 1;\n        case 'month':\n          return date.month() == 0;\n        case 'year':\n          return false;\n        default:\n          return false;\n      }\n    }\n\n    /**\n     * Returns formatted text for the minor axislabel, depending on the current\n     * date and the scale. For example when scale is MINUTE, the current time is\n     * formatted as \"hh:mm\".\n     * @param {Date} [date=this.current] custom date. if not provided, current date is taken\n     * @returns {String}\n     */\n  }, {\n    key: \"getLabelMinor\",\n    value: function getLabelMinor(date) {\n      if (date == undefined) {\n        date = this.current;\n      }\n      if (date instanceof Date) {\n        date = this.moment(date);\n      }\n      if (typeof this.format.minorLabels === \"function\") {\n        return this.format.minorLabels(date, this.scale, this.step);\n      }\n      var format = this.format.minorLabels[this.scale];\n      // noinspection FallThroughInSwitchStatementJS\n      switch (this.scale) {\n        case 'week':\n          // Don't draw the minor label if this date is the first day of a month AND if it's NOT the start of the week.\n          // The 'date' variable may actually be the 'next' step when called from TimeAxis' _repaintLabels.\n          if (date.date() === 1 && date.weekday() !== 0) {\n            return \"\";\n          }\n        default:\n          // eslint-disable-line no-fallthrough\n          return format && format.length > 0 ? this.moment(date).format(format) : '';\n      }\n    }\n\n    /**\n     * Returns formatted text for the major axis label, depending on the current\n     * date and the scale. For example when scale is MINUTE, the major scale is\n     * hours, and the hour will be formatted as \"hh\".\n     * @param {Date} [date=this.current] custom date. if not provided, current date is taken\n     * @returns {String}\n     */\n  }, {\n    key: \"getLabelMajor\",\n    value: function getLabelMajor(date) {\n      if (date == undefined) {\n        date = this.current;\n      }\n      if (date instanceof Date) {\n        date = this.moment(date);\n      }\n      if (typeof this.format.majorLabels === \"function\") {\n        return this.format.majorLabels(date, this.scale, this.step);\n      }\n      var format = this.format.majorLabels[this.scale];\n      return format && format.length > 0 ? this.moment(date).format(format) : '';\n    }\n\n    /**\n     * get class name\n     * @return {string} class name\n     */\n  }, {\n    key: \"getClassName\",\n    value: function getClassName() {\n      var _context;\n      var _moment = this.moment;\n      var m = this.moment(this.current);\n      var current = m.locale ? m.locale('en') : m.lang('en'); // old versions of moment have .lang() function\n      var step = this.step;\n      var classNames = [];\n\n      /**\n       *\n       * @param {number} value\n       * @returns {String}\n       */\n      function even(value) {\n        return value / step % 2 == 0 ? ' vis-even' : ' vis-odd';\n      }\n\n      /**\n       *\n       * @param {Date} date\n       * @returns {String}\n       */\n      function today(date) {\n        if (date.isSame(_Date$now(), 'day')) {\n          return ' vis-today';\n        }\n        if (date.isSame(_moment().add(1, 'day'), 'day')) {\n          return ' vis-tomorrow';\n        }\n        if (date.isSame(_moment().add(-1, 'day'), 'day')) {\n          return ' vis-yesterday';\n        }\n        return '';\n      }\n\n      /**\n       *\n       * @param {Date} date\n       * @returns {String}\n       */\n      function currentWeek(date) {\n        return date.isSame(_Date$now(), 'week') ? ' vis-current-week' : '';\n      }\n\n      /**\n       *\n       * @param {Date} date\n       * @returns {String}\n       */\n      function currentMonth(date) {\n        return date.isSame(_Date$now(), 'month') ? ' vis-current-month' : '';\n      }\n\n      /**\n       *\n       * @param {Date} date\n       * @returns {String}\n       */\n      function currentYear(date) {\n        return date.isSame(_Date$now(), 'year') ? ' vis-current-year' : '';\n      }\n      switch (this.scale) {\n        case 'millisecond':\n          classNames.push(today(current));\n          classNames.push(even(current.milliseconds()));\n          break;\n        case 'second':\n          classNames.push(today(current));\n          classNames.push(even(current.seconds()));\n          break;\n        case 'minute':\n          classNames.push(today(current));\n          classNames.push(even(current.minutes()));\n          break;\n        case 'hour':\n          classNames.push(_concatInstanceProperty(_context = \"vis-h\".concat(current.hours())).call(_context, this.step == 4 ? '-h' + (current.hours() + 4) : ''));\n          classNames.push(today(current));\n          classNames.push(even(current.hours()));\n          break;\n        case 'weekday':\n          classNames.push(\"vis-\".concat(current.format('dddd').toLowerCase()));\n          classNames.push(today(current));\n          classNames.push(currentWeek(current));\n          classNames.push(even(current.date()));\n          break;\n        case 'day':\n          classNames.push(\"vis-day\".concat(current.date()));\n          classNames.push(\"vis-\".concat(current.format('MMMM').toLowerCase()));\n          classNames.push(today(current));\n          classNames.push(currentMonth(current));\n          classNames.push(this.step <= 2 ? today(current) : '');\n          classNames.push(this.step <= 2 ? \"vis-\".concat(current.format('dddd').toLowerCase()) : '');\n          classNames.push(even(current.date() - 1));\n          break;\n        case 'week':\n          classNames.push(\"vis-week\".concat(current.format('w')));\n          classNames.push(currentWeek(current));\n          classNames.push(even(current.week()));\n          break;\n        case 'month':\n          classNames.push(\"vis-\".concat(current.format('MMMM').toLowerCase()));\n          classNames.push(currentMonth(current));\n          classNames.push(even(current.month()));\n          break;\n        case 'year':\n          classNames.push(\"vis-year\".concat(current.year()));\n          classNames.push(currentYear(current));\n          classNames.push(even(current.year()));\n          break;\n      }\n      return _filterInstanceProperty(classNames).call(classNames, String).join(\" \");\n    }\n  }], [{\n    key: \"snap\",\n    value: function snap(date, scale, step) {\n      var clone = moment$4(date);\n      if (scale == 'year') {\n        var year = clone.year() + Math.round(clone.month() / 12);\n        clone.year(Math.round(year / step) * step);\n        clone.month(0);\n        clone.date(0);\n        clone.hours(0);\n        clone.minutes(0);\n        clone.seconds(0);\n        clone.milliseconds(0);\n      } else if (scale == 'month') {\n        if (clone.date() > 15) {\n          clone.date(1);\n          clone.add(1, 'month');\n          // important: first set Date to 1, after that change the month.\n        } else {\n          clone.date(1);\n        }\n        clone.hours(0);\n        clone.minutes(0);\n        clone.seconds(0);\n        clone.milliseconds(0);\n      } else if (scale == 'week') {\n        if (clone.weekday() > 2) {\n          // doing it the momentjs locale aware way\n          clone.weekday(0);\n          clone.add(1, 'week');\n        } else {\n          clone.weekday(0);\n        }\n        clone.hours(0);\n        clone.minutes(0);\n        clone.seconds(0);\n        clone.milliseconds(0);\n      } else if (scale == 'day') {\n        //noinspection FallthroughInSwitchStatementJS\n        switch (step) {\n          case 5:\n          case 2:\n            clone.hours(Math.round(clone.hours() / 24) * 24);\n            break;\n          default:\n            clone.hours(Math.round(clone.hours() / 12) * 12);\n            break;\n        }\n        clone.minutes(0);\n        clone.seconds(0);\n        clone.milliseconds(0);\n      } else if (scale == 'weekday') {\n        //noinspection FallthroughInSwitchStatementJS\n        switch (step) {\n          case 5:\n          case 2:\n            clone.hours(Math.round(clone.hours() / 12) * 12);\n            break;\n          default:\n            clone.hours(Math.round(clone.hours() / 6) * 6);\n            break;\n        }\n        clone.minutes(0);\n        clone.seconds(0);\n        clone.milliseconds(0);\n      } else if (scale == 'hour') {\n        switch (step) {\n          case 4:\n            clone.minutes(Math.round(clone.minutes() / 60) * 60);\n            break;\n          default:\n            clone.minutes(Math.round(clone.minutes() / 30) * 30);\n            break;\n        }\n        clone.seconds(0);\n        clone.milliseconds(0);\n      } else if (scale == 'minute') {\n        //noinspection FallthroughInSwitchStatementJS\n        switch (step) {\n          case 15:\n          case 10:\n            clone.minutes(Math.round(clone.minutes() / 5) * 5);\n            clone.seconds(0);\n            break;\n          case 5:\n            clone.seconds(Math.round(clone.seconds() / 60) * 60);\n            break;\n          default:\n            clone.seconds(Math.round(clone.seconds() / 30) * 30);\n            break;\n        }\n        clone.milliseconds(0);\n      } else if (scale == 'second') {\n        //noinspection FallthroughInSwitchStatementJS\n        switch (step) {\n          case 15:\n          case 10:\n            clone.seconds(Math.round(clone.seconds() / 5) * 5);\n            clone.milliseconds(0);\n            break;\n          case 5:\n            clone.milliseconds(Math.round(clone.milliseconds() / 1000) * 1000);\n            break;\n          default:\n            clone.milliseconds(Math.round(clone.milliseconds() / 500) * 500);\n            break;\n        }\n      } else if (scale == 'millisecond') {\n        var _step = step > 5 ? step / 2 : 1;\n        clone.milliseconds(Math.round(clone.milliseconds() / _step) * _step);\n      }\n      return clone;\n    }\n  }]);\n  return TimeStep;\n}(); // Time formatting\nTimeStep.FORMAT = {\n  minorLabels: {\n    millisecond: 'SSS',\n    second: 's',\n    minute: 'HH:mm',\n    hour: 'HH:mm',\n    weekday: 'ddd D',\n    day: 'D',\n    week: 'w',\n    month: 'MMM',\n    year: 'YYYY'\n  },\n  majorLabels: {\n    millisecond: 'HH:mm:ss',\n    second: 'D MMMM HH:mm',\n    minute: 'ddd D MMMM',\n    hour: 'ddd D MMMM',\n    weekday: 'MMMM YYYY',\n    day: 'MMMM YYYY',\n    week: 'MMMM YYYY',\n    month: 'YYYY',\n    year: ''\n  }\n};\n\nfunction styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nvar css_248z$e = \".vis-time-axis {\\n  position: relative;\\n  overflow: hidden;\\n}\\n\\n.vis-time-axis.vis-foreground {\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n}\\n\\n.vis-time-axis.vis-background {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n}\\n\\n.vis-time-axis .vis-text {\\n  position: absolute;\\n  color: #4d4d4d;\\n  padding: 3px;\\n  overflow: hidden;\\n  box-sizing: border-box;\\n\\n  white-space: nowrap;\\n}\\n\\n.vis-time-axis .vis-text.vis-measure {\\n  position: absolute;\\n  padding-left: 0;\\n  padding-right: 0;\\n  margin-left: 0;\\n  margin-right: 0;\\n  visibility: hidden;\\n}\\n\\n.vis-time-axis .vis-grid.vis-vertical {\\n  position: absolute;\\n  border-left: 1px solid;\\n}\\n\\n.vis-time-axis .vis-grid.vis-vertical-rtl {\\n  position: absolute;\\n  border-right: 1px solid;\\n}\\n\\n.vis-time-axis .vis-grid.vis-minor {\\n  border-color: #e5e5e5;\\n}\\n\\n.vis-time-axis .vis-grid.vis-major {\\n  border-color: #bfbfbf;\\n}\\n\";\nstyleInject(css_248z$e);\n\nfunction _createSuper$b(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$b(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$b() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/** A horizontal time axis */\nvar TimeAxis = /*#__PURE__*/function (_Component) {\n  _inherits(TimeAxis, _Component);\n  var _super = _createSuper$b(TimeAxis);\n  /**\n   * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body\n   * @param {Object} [options]        See TimeAxis.setOptions for the available\n   *                                  options.\n   * @constructor TimeAxis\n   * @extends Component\n   */\n  function TimeAxis(body, options) {\n    var _this;\n    _classCallCheck(this, TimeAxis);\n    _this = _super.call(this);\n    _this.dom = {\n      foreground: null,\n      lines: [],\n      majorTexts: [],\n      minorTexts: [],\n      redundant: {\n        lines: [],\n        majorTexts: [],\n        minorTexts: []\n      }\n    };\n    _this.props = {\n      range: {\n        start: 0,\n        end: 0,\n        minimumStep: 0\n      },\n      lineTop: 0\n    };\n    _this.defaultOptions = {\n      orientation: {\n        axis: 'bottom'\n      },\n      // axis orientation: 'top' or 'bottom'\n      showMinorLabels: true,\n      showMajorLabels: true,\n      showWeekScale: false,\n      maxMinorChars: 7,\n      format: availableUtils.extend({}, TimeStep.FORMAT),\n      moment: moment$4,\n      timeAxis: null\n    };\n    _this.options = availableUtils.extend({}, _this.defaultOptions);\n    _this.body = body;\n\n    // create the HTML DOM\n    _this._create();\n    _this.setOptions(options);\n    return _this;\n  }\n\n  /**\n   * Set options for the TimeAxis.\n   * Parameters will be merged in current options.\n   * @param {Object} options  Available options:\n   *                          {string} [orientation.axis]\n   *                          {boolean} [showMinorLabels]\n   *                          {boolean} [showMajorLabels]\n   *                          {boolean} [showWeekScale]\n   */\n  _createClass(TimeAxis, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options) {\n        // copy all options that we know\n        availableUtils.selectiveExtend(['showMinorLabels', 'showMajorLabels', 'showWeekScale', 'maxMinorChars', 'hiddenDates', 'timeAxis', 'moment', 'rtl'], this.options, options);\n\n        // deep copy the format options\n        availableUtils.selectiveDeepExtend(['format'], this.options, options);\n        if ('orientation' in options) {\n          if (typeof options.orientation === 'string') {\n            this.options.orientation.axis = options.orientation;\n          } else if (_typeof$1(options.orientation) === 'object' && 'axis' in options.orientation) {\n            this.options.orientation.axis = options.orientation.axis;\n          }\n        }\n\n        // apply locale to moment.js\n        // TODO: not so nice, this is applied globally to moment.js\n        if ('locale' in options) {\n          if (typeof moment$4.locale === 'function') {\n            // moment.js 2.8.1+\n            moment$4.locale(options.locale);\n          } else {\n            moment$4.lang(options.locale);\n          }\n        }\n      }\n    }\n\n    /**\n     * Create the HTML DOM for the TimeAxis\n     */\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      this.dom.foreground = document.createElement('div');\n      this.dom.background = document.createElement('div');\n      this.dom.foreground.className = 'vis-time-axis vis-foreground';\n      this.dom.background.className = 'vis-time-axis vis-background';\n    }\n\n    /**\n     * Destroy the TimeAxis\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      // remove from DOM\n      if (this.dom.foreground.parentNode) {\n        this.dom.foreground.parentNode.removeChild(this.dom.foreground);\n      }\n      if (this.dom.background.parentNode) {\n        this.dom.background.parentNode.removeChild(this.dom.background);\n      }\n      this.body = null;\n    }\n\n    /**\n     * Repaint the component\n     * @return {boolean} Returns true if the component is resized\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      var props = this.props;\n      var foreground = this.dom.foreground;\n      var background = this.dom.background;\n\n      // determine the correct parent DOM element (depending on option orientation)\n      var parent = this.options.orientation.axis == 'top' ? this.body.dom.top : this.body.dom.bottom;\n      var parentChanged = foreground.parentNode !== parent;\n\n      // calculate character width and height\n      this._calculateCharSize();\n\n      // TODO: recalculate sizes only needed when parent is resized or options is changed\n      var showMinorLabels = this.options.showMinorLabels && this.options.orientation.axis !== 'none';\n      var showMajorLabels = this.options.showMajorLabels && this.options.orientation.axis !== 'none';\n\n      // determine the width and height of the elemens for the axis\n      props.minorLabelHeight = showMinorLabels ? props.minorCharHeight : 0;\n      props.majorLabelHeight = showMajorLabels ? props.majorCharHeight : 0;\n      props.height = props.minorLabelHeight + props.majorLabelHeight;\n      props.width = foreground.offsetWidth;\n      props.minorLineHeight = this.body.domProps.root.height - props.majorLabelHeight - (this.options.orientation.axis == 'top' ? this.body.domProps.bottom.height : this.body.domProps.top.height);\n      props.minorLineWidth = 1; // TODO: really calculate width\n      props.majorLineHeight = props.minorLineHeight + props.majorLabelHeight;\n      props.majorLineWidth = 1; // TODO: really calculate width\n\n      //  take foreground and background offline while updating (is almost twice as fast)\n      var foregroundNextSibling = foreground.nextSibling;\n      var backgroundNextSibling = background.nextSibling;\n      foreground.parentNode && foreground.parentNode.removeChild(foreground);\n      background.parentNode && background.parentNode.removeChild(background);\n      foreground.style.height = \"\".concat(this.props.height, \"px\");\n      this._repaintLabels();\n\n      // put DOM online again (at the same place)\n      if (foregroundNextSibling) {\n        parent.insertBefore(foreground, foregroundNextSibling);\n      } else {\n        parent.appendChild(foreground);\n      }\n      if (backgroundNextSibling) {\n        this.body.dom.backgroundVertical.insertBefore(background, backgroundNextSibling);\n      } else {\n        this.body.dom.backgroundVertical.appendChild(background);\n      }\n      return this._isResized() || parentChanged;\n    }\n\n    /**\n     * Repaint major and minor text labels and vertical grid lines\n     * @private\n     */\n  }, {\n    key: \"_repaintLabels\",\n    value: function _repaintLabels() {\n      var orientation = this.options.orientation.axis;\n\n      // calculate range and step (step such that we have space for 7 characters per label)\n      var start = availableUtils.convert(this.body.range.start, 'Number');\n      var end = availableUtils.convert(this.body.range.end, 'Number');\n      var timeLabelsize = this.body.util.toTime((this.props.minorCharWidth || 10) * this.options.maxMinorChars).valueOf();\n      var minimumStep = timeLabelsize - getHiddenDurationBefore(this.options.moment, this.body.hiddenDates, this.body.range, timeLabelsize);\n      minimumStep -= this.body.util.toTime(0).valueOf();\n      var step = new TimeStep(new Date(start), new Date(end), minimumStep, this.body.hiddenDates, this.options);\n      step.setMoment(this.options.moment);\n      if (this.options.format) {\n        step.setFormat(this.options.format);\n      }\n      if (this.options.timeAxis) {\n        step.setScale(this.options.timeAxis);\n      }\n      this.step = step;\n\n      // Move all DOM elements to a \"redundant\" list, where they\n      // can be picked for re-use, and clear the lists with lines and texts.\n      // At the end of the function _repaintLabels, left over elements will be cleaned up\n      var dom = this.dom;\n      dom.redundant.lines = dom.lines;\n      dom.redundant.majorTexts = dom.majorTexts;\n      dom.redundant.minorTexts = dom.minorTexts;\n      dom.lines = [];\n      dom.majorTexts = [];\n      dom.minorTexts = [];\n      var current;\n      var next;\n      var x;\n      var xNext;\n      var isMajor;\n      var showMinorGrid;\n      var width = 0;\n      var prevWidth;\n      var line;\n      var xFirstMajorLabel = undefined;\n      var count = 0;\n      var MAX = 1000;\n      var className;\n      step.start();\n      next = step.getCurrent();\n      xNext = this.body.util.toScreen(next);\n      while (step.hasNext() && count < MAX) {\n        count++;\n        isMajor = step.isMajor();\n        className = step.getClassName();\n        current = next;\n        x = xNext;\n        step.next();\n        next = step.getCurrent();\n        xNext = this.body.util.toScreen(next);\n        prevWidth = width;\n        width = xNext - x;\n        switch (step.scale) {\n          case 'week':\n            showMinorGrid = true;\n            break;\n          default:\n            showMinorGrid = width >= prevWidth * 0.4;\n            break;\n          // prevent displaying of the 31th of the month on a scale of 5 days\n        }\n\n        if (this.options.showMinorLabels && showMinorGrid) {\n          var label = this._repaintMinorText(x, step.getLabelMinor(current), orientation, className);\n          label.style.width = \"\".concat(width, \"px\"); // set width to prevent overflow\n        }\n\n        if (isMajor && this.options.showMajorLabels) {\n          if (x > 0) {\n            if (xFirstMajorLabel == undefined) {\n              xFirstMajorLabel = x;\n            }\n            label = this._repaintMajorText(x, step.getLabelMajor(current), orientation, className);\n          }\n          line = this._repaintMajorLine(x, width, orientation, className);\n        } else {\n          // minor line\n          if (showMinorGrid) {\n            line = this._repaintMinorLine(x, width, orientation, className);\n          } else {\n            if (line) {\n              // adjust the width of the previous grid\n              line.style.width = \"\".concat(_parseInt$1(line.style.width) + width, \"px\");\n            }\n          }\n        }\n      }\n      if (count === MAX && !warnedForOverflow) {\n        console.warn(\"Something is wrong with the Timeline scale. Limited drawing of grid lines to \".concat(MAX, \" lines.\"));\n        warnedForOverflow = true;\n      }\n\n      // create a major label on the left when needed\n      if (this.options.showMajorLabels) {\n        var leftTime = this.body.util.toTime(0); // upper bound estimation\n        var leftText = step.getLabelMajor(leftTime);\n        var widthText = leftText.length * (this.props.majorCharWidth || 10) + 10;\n        if (xFirstMajorLabel == undefined || widthText < xFirstMajorLabel) {\n          this._repaintMajorText(0, leftText, orientation, className);\n        }\n      }\n\n      // Cleanup leftover DOM elements from the redundant list\n      _forEachInstanceProperty(availableUtils).call(availableUtils, this.dom.redundant, function (arr) {\n        while (arr.length) {\n          var elem = arr.pop();\n          if (elem && elem.parentNode) {\n            elem.parentNode.removeChild(elem);\n          }\n        }\n      });\n    }\n\n    /**\n     * Create a minor label for the axis at position x\n     * @param {number} x\n     * @param {string} text\n     * @param {string} orientation   \"top\" or \"bottom\" (default)\n     * @param {string} className\n     * @return {Element} Returns the HTML element of the created label\n     * @private\n     */\n  }, {\n    key: \"_repaintMinorText\",\n    value: function _repaintMinorText(x, text, orientation, className) {\n      // reuse redundant label\n      var label = this.dom.redundant.minorTexts.shift();\n      if (!label) {\n        // create new label\n        var content = document.createTextNode('');\n        label = document.createElement('div');\n        label.appendChild(content);\n        this.dom.foreground.appendChild(label);\n      }\n      this.dom.minorTexts.push(label);\n      label.innerHTML = availableUtils.xss(text);\n      var y = orientation == 'top' ? this.props.majorLabelHeight : 0;\n      this._setXY(label, x, y);\n      label.className = \"vis-text vis-minor \".concat(className);\n      //label.title = title;  // TODO: this is a heavy operation\n\n      return label;\n    }\n\n    /**\n     * Create a Major label for the axis at position x\n     * @param {number} x\n     * @param {string} text\n     * @param {string} orientation   \"top\" or \"bottom\" (default)\n     * @param {string} className\n     * @return {Element} Returns the HTML element of the created label\n     * @private\n     */\n  }, {\n    key: \"_repaintMajorText\",\n    value: function _repaintMajorText(x, text, orientation, className) {\n      // reuse redundant label\n      var label = this.dom.redundant.majorTexts.shift();\n      if (!label) {\n        // create label\n        var content = document.createElement('div');\n        label = document.createElement('div');\n        label.appendChild(content);\n        this.dom.foreground.appendChild(label);\n      }\n      label.childNodes[0].innerHTML = availableUtils.xss(text);\n      label.className = \"vis-text vis-major \".concat(className);\n      //label.title = title; // TODO: this is a heavy operation\n\n      var y = orientation == 'top' ? 0 : this.props.minorLabelHeight;\n      this._setXY(label, x, y);\n      this.dom.majorTexts.push(label);\n      return label;\n    }\n\n    /**\n     * sets xy\n     * @param {string} label\n     * @param {number} x\n     * @param {number} y\n     * @private\n     */\n  }, {\n    key: \"_setXY\",\n    value: function _setXY(label, x, y) {\n      var _context;\n      // If rtl is true, inverse x.\n      var directionX = this.options.rtl ? x * -1 : x;\n      label.style.transform = _concatInstanceProperty(_context = \"translate(\".concat(directionX, \"px, \")).call(_context, y, \"px)\");\n    }\n\n    /**\n     * Create a minor line for the axis at position x\n     * @param {number} left\n     * @param {number} width\n     * @param {string} orientation   \"top\" or \"bottom\" (default)\n     * @param {string} className\n     * @return {Element} Returns the created line\n     * @private\n     */\n  }, {\n    key: \"_repaintMinorLine\",\n    value: function _repaintMinorLine(left, width, orientation, className) {\n      var _context2;\n      // reuse redundant line\n      var line = this.dom.redundant.lines.shift();\n      if (!line) {\n        // create vertical line\n        line = document.createElement('div');\n        this.dom.background.appendChild(line);\n      }\n      this.dom.lines.push(line);\n      var props = this.props;\n      line.style.width = \"\".concat(width, \"px\");\n      line.style.height = \"\".concat(props.minorLineHeight, \"px\");\n      var y = orientation == 'top' ? props.majorLabelHeight : this.body.domProps.top.height;\n      var x = left - props.minorLineWidth / 2;\n      this._setXY(line, x, y);\n      line.className = _concatInstanceProperty(_context2 = \"vis-grid \".concat(this.options.rtl ? 'vis-vertical-rtl' : 'vis-vertical', \" vis-minor \")).call(_context2, className);\n      return line;\n    }\n\n    /**\n     * Create a Major line for the axis at position x\n     * @param {number} left\n     * @param {number} width\n     * @param {string} orientation   \"top\" or \"bottom\" (default)\n     * @param {string} className\n     * @return {Element} Returns the created line\n     * @private\n     */\n  }, {\n    key: \"_repaintMajorLine\",\n    value: function _repaintMajorLine(left, width, orientation, className) {\n      var _context3;\n      // reuse redundant line\n      var line = this.dom.redundant.lines.shift();\n      if (!line) {\n        // create vertical line\n        line = document.createElement('div');\n        this.dom.background.appendChild(line);\n      }\n      this.dom.lines.push(line);\n      var props = this.props;\n      line.style.width = \"\".concat(width, \"px\");\n      line.style.height = \"\".concat(props.majorLineHeight, \"px\");\n      var y = orientation == 'top' ? 0 : this.body.domProps.top.height;\n      var x = left - props.majorLineWidth / 2;\n      this._setXY(line, x, y);\n      line.className = _concatInstanceProperty(_context3 = \"vis-grid \".concat(this.options.rtl ? 'vis-vertical-rtl' : 'vis-vertical', \" vis-major \")).call(_context3, className);\n      return line;\n    }\n\n    /**\n     * Determine the size of text on the axis (both major and minor axis).\n     * The size is calculated only once and then cached in this.props.\n     * @private\n     */\n  }, {\n    key: \"_calculateCharSize\",\n    value: function _calculateCharSize() {\n      // Note: We calculate char size with every redraw. Size may change, for\n      // example when any of the timelines parents had display:none for example.\n\n      // determine the char width and height on the minor axis\n      if (!this.dom.measureCharMinor) {\n        this.dom.measureCharMinor = document.createElement('DIV');\n        this.dom.measureCharMinor.className = 'vis-text vis-minor vis-measure';\n        this.dom.measureCharMinor.style.position = 'absolute';\n        this.dom.measureCharMinor.appendChild(document.createTextNode('0'));\n        this.dom.foreground.appendChild(this.dom.measureCharMinor);\n      }\n      this.props.minorCharHeight = this.dom.measureCharMinor.clientHeight;\n      this.props.minorCharWidth = this.dom.measureCharMinor.clientWidth;\n\n      // determine the char width and height on the major axis\n      if (!this.dom.measureCharMajor) {\n        this.dom.measureCharMajor = document.createElement('DIV');\n        this.dom.measureCharMajor.className = 'vis-text vis-major vis-measure';\n        this.dom.measureCharMajor.style.position = 'absolute';\n        this.dom.measureCharMajor.appendChild(document.createTextNode('0'));\n        this.dom.foreground.appendChild(this.dom.measureCharMajor);\n      }\n      this.props.majorCharHeight = this.dom.measureCharMajor.clientHeight;\n      this.props.majorCharWidth = this.dom.measureCharMajor.clientWidth;\n    }\n  }]);\n  return TimeAxis;\n}(Component);\nvar warnedForOverflow = false;\n\n/**\r\n * Created by Alex on 11/6/2014.\r\n */\r\nfunction keycharm(options) {\r\n  var preventDefault = options && options.preventDefault || false;\r\n\r\n  var container = options && options.container || window;\r\n\r\n  var _exportFunctions = {};\r\n  var _bound = {keydown:{}, keyup:{}};\r\n  var _keys = {};\r\n  var i;\r\n\r\n  // a - z\r\n  for (i = 97; i <= 122; i++) {_keys[String.fromCharCode(i)] = {code:65 + (i - 97), shift: false};}\r\n  // A - Z\r\n  for (i = 65; i <= 90; i++) {_keys[String.fromCharCode(i)] = {code:i, shift: true};}\r\n  // 0 - 9\r\n  for (i = 0;  i <= 9;   i++) {_keys['' + i] = {code:48 + i, shift: false};}\r\n  // F1 - F12\r\n  for (i = 1;  i <= 12;   i++) {_keys['F' + i] = {code:111 + i, shift: false};}\r\n  // num0 - num9\r\n  for (i = 0;  i <= 9;   i++) {_keys['num' + i] = {code:96 + i, shift: false};}\r\n\r\n  // numpad misc\r\n  _keys['num*'] = {code:106, shift: false};\r\n  _keys['num+'] = {code:107, shift: false};\r\n  _keys['num-'] = {code:109, shift: false};\r\n  _keys['num/'] = {code:111, shift: false};\r\n  _keys['num.'] = {code:110, shift: false};\r\n  // arrows\r\n  _keys['left']  = {code:37, shift: false};\r\n  _keys['up']    = {code:38, shift: false};\r\n  _keys['right'] = {code:39, shift: false};\r\n  _keys['down']  = {code:40, shift: false};\r\n  // extra keys\r\n  _keys['space'] = {code:32, shift: false};\r\n  _keys['enter'] = {code:13, shift: false};\r\n  _keys['shift'] = {code:16, shift: undefined};\r\n  _keys['esc']   = {code:27, shift: false};\r\n  _keys['backspace'] = {code:8, shift: false};\r\n  _keys['tab']       = {code:9, shift: false};\r\n  _keys['ctrl']      = {code:17, shift: false};\r\n  _keys['alt']       = {code:18, shift: false};\r\n  _keys['delete']    = {code:46, shift: false};\r\n  _keys['pageup']    = {code:33, shift: false};\r\n  _keys['pagedown']  = {code:34, shift: false};\r\n  // symbols\r\n  _keys['=']     = {code:187, shift: false};\r\n  _keys['-']     = {code:189, shift: false};\r\n  _keys[']']     = {code:221, shift: false};\r\n  _keys['[']     = {code:219, shift: false};\r\n\r\n\r\n\r\n  var down = function(event) {handleEvent(event,'keydown');};\r\n  var up = function(event) {handleEvent(event,'keyup');};\r\n\r\n  // handle the actualy bound key with the event\r\n  var handleEvent = function(event,type) {\r\n    if (_bound[type][event.keyCode] !== undefined) {\r\n      var bound = _bound[type][event.keyCode];\r\n      for (var i = 0; i < bound.length; i++) {\r\n        if (bound[i].shift === undefined) {\r\n          bound[i].fn(event);\r\n        }\r\n        else if (bound[i].shift == true && event.shiftKey == true) {\r\n          bound[i].fn(event);\r\n        }\r\n        else if (bound[i].shift == false && event.shiftKey == false) {\r\n          bound[i].fn(event);\r\n        }\r\n      }\r\n\r\n      if (preventDefault == true) {\r\n        event.preventDefault();\r\n      }\r\n    }\r\n  };\r\n\r\n  // bind a key to a callback\r\n  _exportFunctions.bind = function(key, callback, type) {\r\n    if (type === undefined) {\r\n      type = 'keydown';\r\n    }\r\n    if (_keys[key] === undefined) {\r\n      throw new Error(\"unsupported key: \" + key);\r\n    }\r\n    if (_bound[type][_keys[key].code] === undefined) {\r\n      _bound[type][_keys[key].code] = [];\r\n    }\r\n    _bound[type][_keys[key].code].push({fn:callback, shift:_keys[key].shift});\r\n  };\r\n\r\n\r\n  // bind all keys to a call back (demo purposes)\r\n  _exportFunctions.bindAll = function(callback, type) {\r\n    if (type === undefined) {\r\n      type = 'keydown';\r\n    }\r\n    for (var key in _keys) {\r\n      if (_keys.hasOwnProperty(key)) {\r\n        _exportFunctions.bind(key,callback,type);\r\n      }\r\n    }\r\n  };\r\n\r\n  // get the key label from an event\r\n  _exportFunctions.getKey = function(event) {\r\n    for (var key in _keys) {\r\n      if (_keys.hasOwnProperty(key)) {\r\n        if (event.shiftKey == true && _keys[key].shift == true && event.keyCode == _keys[key].code) {\r\n          return key;\r\n        }\r\n        else if (event.shiftKey == false && _keys[key].shift == false && event.keyCode == _keys[key].code) {\r\n          return key;\r\n        }\r\n        else if (event.keyCode == _keys[key].code && key == 'shift') {\r\n          return key;\r\n        }\r\n      }\r\n    }\r\n    return \"unknown key, currently not supported\";\r\n  };\r\n\r\n  // unbind either a specific callback from a key or all of them (by leaving callback undefined)\r\n  _exportFunctions.unbind = function(key, callback, type) {\r\n    if (type === undefined) {\r\n      type = 'keydown';\r\n    }\r\n    if (_keys[key] === undefined) {\r\n      throw new Error(\"unsupported key: \" + key);\r\n    }\r\n    if (callback !== undefined) {\r\n      var newBindings = [];\r\n      var bound = _bound[type][_keys[key].code];\r\n      if (bound !== undefined) {\r\n        for (var i = 0; i < bound.length; i++) {\r\n          if (!(bound[i].fn == callback && bound[i].shift == _keys[key].shift)) {\r\n            newBindings.push(_bound[type][_keys[key].code][i]);\r\n          }\r\n        }\r\n      }\r\n      _bound[type][_keys[key].code] = newBindings;\r\n    }\r\n    else {\r\n      _bound[type][_keys[key].code] = [];\r\n    }\r\n  };\r\n\r\n  // reset all bound variables.\r\n  _exportFunctions.reset = function() {\r\n    _bound = {keydown:{}, keyup:{}};\r\n  };\r\n\r\n  // unbind all listeners and reset all variables.\r\n  _exportFunctions.destroy = function() {\r\n    _bound = {keydown:{}, keyup:{}};\r\n    container.removeEventListener('keydown', down, true);\r\n    container.removeEventListener('keyup', up, true);\r\n  };\r\n\r\n  // create listeners.\r\n  container.addEventListener('keydown',down,true);\r\n  container.addEventListener('keyup',up,true);\r\n\r\n  // return the public functions.\r\n  return _exportFunctions;\r\n}\n\nvar css_248z$d = \".vis .overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n\\n  /* Must be displayed above for example selected Timeline items */\\n  z-index: 10;\\n}\\n\\n.vis-active {\\n  box-shadow: 0 0 10px #86d5f8;\\n}\\n\";\nstyleInject(css_248z$d);\n\n/**\n * Turn an element into an clickToUse element.\n * When not active, the element has a transparent overlay. When the overlay is\n * clicked, the mode is changed to active.\n * When active, the element is displayed with a blue border around it, and\n * the interactive contents of the element can be used. When clicked outside\n * the element, the elements mode is changed to inactive.\n * @param {Element} container\n * @constructor Activator\n */\nfunction Activator(container) {\n  var _context, _context2;\n  this.active = false;\n  this.dom = {\n    container: container\n  };\n  this.dom.overlay = document.createElement('div');\n  this.dom.overlay.className = 'vis-overlay';\n  this.dom.container.appendChild(this.dom.overlay);\n  this.hammer = Hammer(this.dom.overlay);\n  this.hammer.on('tap', _bindInstanceProperty$1(_context = this._onTapOverlay).call(_context, this));\n\n  // block all touch events (except tap)\n  var me = this;\n  var events = ['tap', 'doubletap', 'press', 'pinch', 'pan', 'panstart', 'panmove', 'panend'];\n  _forEachInstanceProperty(events).call(events, function (event) {\n    me.hammer.on(event, function (event) {\n      event.stopPropagation();\n    });\n  });\n\n  // attach a click event to the window, in order to deactivate when clicking outside the timeline\n  if (document && document.body) {\n    this.onClick = function (event) {\n      if (!_hasParent(event.target, container)) {\n        me.deactivate();\n      }\n    };\n    document.body.addEventListener('click', this.onClick);\n  }\n  if (this.keycharm !== undefined) {\n    this.keycharm.destroy();\n  }\n  this.keycharm = keycharm();\n\n  // keycharm listener only bounded when active)\n  this.escListener = _bindInstanceProperty$1(_context2 = this.deactivate).call(_context2, this);\n}\n\n// turn into an event emitter\nEmitter(Activator.prototype);\n\n// The currently active activator\nActivator.current = null;\n\n/**\n * Destroy the activator. Cleans up all created DOM and event listeners\n */\nActivator.prototype.destroy = function () {\n  this.deactivate();\n\n  // remove dom\n  this.dom.overlay.parentNode.removeChild(this.dom.overlay);\n\n  // remove global event listener\n  if (this.onClick) {\n    document.body.removeEventListener('click', this.onClick);\n  }\n  // remove keycharm\n  if (this.keycharm !== undefined) {\n    this.keycharm.destroy();\n  }\n  this.keycharm = null;\n  // cleanup hammer instances\n  this.hammer.destroy();\n  this.hammer = null;\n  // FIXME: cleaning up hammer instances doesn't work (Timeline not removed from memory)\n};\n\n/**\n * Activate the element\n * Overlay is hidden, element is decorated with a blue shadow border\n */\nActivator.prototype.activate = function () {\n  var _context3;\n  // we allow only one active activator at a time\n  if (Activator.current) {\n    Activator.current.deactivate();\n  }\n  Activator.current = this;\n  this.active = true;\n  this.dom.overlay.style.display = 'none';\n  availableUtils.addClassName(this.dom.container, 'vis-active');\n  this.emit('change');\n  this.emit('activate');\n\n  // ugly hack: bind ESC after emitting the events, as the Network rebinds all\n  // keyboard events on a 'change' event\n  _bindInstanceProperty$1(_context3 = this.keycharm).call(_context3, 'esc', this.escListener);\n};\n\n/**\n * Deactivate the element\n * Overlay is displayed on top of the element\n */\nActivator.prototype.deactivate = function () {\n  if (Activator.current === this) {\n    Activator.current = null;\n  }\n  this.active = false;\n  this.dom.overlay.style.display = '';\n  availableUtils.removeClassName(this.dom.container, 'vis-active');\n  this.keycharm.unbind('esc', this.escListener);\n  this.emit('change');\n  this.emit('deactivate');\n};\n\n/**\n * Handle a tap event: activate the container\n * @param {Event}  event   The event\n * @private\n */\nActivator.prototype._onTapOverlay = function (event) {\n  // activate the container\n  this.activate();\n  event.stopPropagation();\n};\n\n/**\n * Test whether the element has the requested parent element somewhere in\n * its chain of parent nodes.\n * @param {HTMLElement} element\n * @param {HTMLElement} parent\n * @returns {boolean} Returns true when the parent is found somewhere in the\n *                    chain of parent nodes.\n * @private\n */\nfunction _hasParent(element, parent) {\n  while (element) {\n    if (element === parent) {\n      return true;\n    }\n    element = element.parentNode;\n  }\n  return false;\n}\n\n/*\n * IMPORTANT: Locales for Moment has to be imported in the legacy and standalone\n * entry points. For the peer build it's users responsibility to do so.\n */\n\n// English\nvar en = {\n  current: 'current',\n  time: 'time',\n  deleteSelected: 'Delete selected'\n};\nvar en_EN = en;\nvar en_US = en;\n\n// Italiano\nvar it = {\n  current: 'attuale',\n  time: 'tempo',\n  deleteSelected: 'Cancella la selezione'\n};\nvar it_IT = it;\nvar it_CH = it;\n\n// Dutch\nvar nl = {\n  current: 'huidige',\n  time: 'tijd',\n  deleteSelected: 'Selectie verwijderen'\n};\nvar nl_NL = nl;\nvar nl_BE = nl;\n\n// German\nvar de = {\n  current: 'Aktuelle',\n  time: 'Zeit',\n  deleteSelected: \"L\\xF6sche Auswahl\"\n};\nvar de_DE = de;\n\n// French\nvar fr = {\n  current: 'actuel',\n  time: 'heure',\n  deleteSelected: 'Effacer la selection'\n};\nvar fr_FR = fr;\nvar fr_CA = fr;\nvar fr_BE = fr;\n\n// Espanol\nvar es = {\n  current: 'corriente',\n  time: 'hora',\n  deleteSelected: \"Eliminar selecci\\xF3n\"\n};\nvar es_ES = es;\n\n// Ukrainian\nvar uk = {\n  current: 'поточний',\n  time: 'час',\n  deleteSelected: 'Видалити обране'\n};\nvar uk_UA = uk;\n\n// Russian\nvar ru = {\n  current: 'текущее',\n  time: 'время',\n  deleteSelected: 'Удалить выбранное'\n};\nvar ru_RU = ru;\n\n// Polish\nvar pl = {\n  current: 'aktualny',\n  time: 'czas',\n  deleteSelected: 'Usuń wybrane'\n};\nvar pl_PL = pl;\n\n// Portuguese\nvar pt = {\n  current: 'atual',\n  time: 'data',\n  deleteSelected: 'Apagar selecionado'\n};\nvar pt_BR = pt;\nvar pt_PT = pt;\n\n// Japanese\nvar ja = {\n  current: '現在',\n  time: '時刻',\n  deleteSelected: '選択されたものを削除'\n};\nvar ja_JP = ja;\n\n// Swedish\nvar sv = {\n  current: 'nuvarande',\n  time: 'tid',\n  deleteSelected: 'Radera valda'\n};\nvar sv_SE = sv;\n\n// Norwegian\nvar nb = {\n  current: 'nåværende',\n  time: 'tid',\n  deleteSelected: 'Slett valgte'\n};\nvar nb_NO = nb;\nvar nn = nb;\nvar nn_NO = nb;\n\n// Lithuanian\nvar lt = {\n  current: 'einamas',\n  time: 'laikas',\n  deleteSelected: 'Pašalinti pasirinktą'\n};\nvar lt_LT = lt;\nvar locales = {\n  en: en,\n  en_EN: en_EN,\n  en_US: en_US,\n  it: it,\n  it_IT: it_IT,\n  it_CH: it_CH,\n  nl: nl,\n  nl_NL: nl_NL,\n  nl_BE: nl_BE,\n  de: de,\n  de_DE: de_DE,\n  fr: fr,\n  fr_FR: fr_FR,\n  fr_CA: fr_CA,\n  fr_BE: fr_BE,\n  es: es,\n  es_ES: es_ES,\n  uk: uk,\n  uk_UA: uk_UA,\n  ru: ru,\n  ru_RU: ru_RU,\n  pl: pl,\n  pl_PL: pl_PL,\n  pt: pt,\n  pt_BR: pt_BR,\n  pt_PT: pt_PT,\n  ja: ja,\n  ja_JP: ja_JP,\n  lt: lt,\n  lt_LT: lt_LT,\n  sv: sv,\n  sv_SE: sv_SE,\n  nb: nb,\n  nn: nn,\n  nb_NO: nb_NO,\n  nn_NO: nn_NO\n};\n\nvar css_248z$c = \".vis-custom-time {\\n  background-color: #6E94FF;\\n  width: 2px;\\n  cursor: move;\\n  z-index: 1;\\n}\\n\\n.vis-custom-time > .vis-custom-time-marker {\\n  background-color: inherit;\\n  color: white;\\n  font-size: 12px;\\n  white-space: nowrap;\\n  padding: 3px 5px;\\n  top: 0px;\\n  cursor: initial;\\n  z-index: inherit;\\n}\";\nstyleInject(css_248z$c);\n\nfunction _createSuper$a(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$a(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$a() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/** A custom time bar */\nvar CustomTime = /*#__PURE__*/function (_Component) {\n  _inherits(CustomTime, _Component);\n  var _super = _createSuper$a(CustomTime);\n  /**\n  * @param {{range: Range, dom: Object}} body\n  * @param {Object} [options]        Available parameters:\n  *                                  {number | string} id\n  *                                  {string} locales\n  *                                  {string} locale\n  * @constructor CustomTime\n  * @extends Component\n  */\n  function CustomTime(body, options) {\n    var _context;\n    var _this;\n    _classCallCheck(this, CustomTime);\n    _this = _super.call(this);\n    _this.body = body;\n\n    // default options\n    _this.defaultOptions = {\n      moment: moment$4,\n      locales: locales,\n      locale: 'en',\n      id: undefined,\n      title: undefined\n    };\n    _this.options = availableUtils.extend({}, _this.defaultOptions);\n    _this.setOptions(options);\n    _this.options.locales = availableUtils.extend({}, locales, _this.options.locales);\n    var defaultLocales = _this.defaultOptions.locales[_this.defaultOptions.locale];\n    _forEachInstanceProperty(_context = _Object$keys(_this.options.locales)).call(_context, function (locale) {\n      _this.options.locales[locale] = availableUtils.extend({}, defaultLocales, _this.options.locales[locale]);\n    });\n    if (options && options.time != null) {\n      _this.customTime = options.time;\n    } else {\n      _this.customTime = new Date();\n    }\n    _this.eventParams = {}; // stores state parameters while dragging the bar\n\n    // create the DOM\n    _this._create();\n    return _this;\n  }\n\n  /**\n   * Set options for the component. Options will be merged in current options.\n   * @param {Object} options  Available parameters:\n   *                                  {number | string} id\n   *                                  {string} locales\n   *                                  {string} locale\n   */\n  _createClass(CustomTime, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options) {\n        // copy all options that we know\n        availableUtils.selectiveExtend(['moment', 'locale', 'locales', 'id', 'title', 'rtl', 'snap'], this.options, options);\n      }\n    }\n\n    /**\n     * Create the DOM for the custom time\n     * @private\n     */\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      var _context2, _context3, _context4;\n      var bar = document.createElement('div');\n      bar['custom-time'] = this;\n      bar.className = \"vis-custom-time \".concat(this.options.id || '');\n      bar.style.position = 'absolute';\n      bar.style.top = '0px';\n      bar.style.height = '100%';\n      this.bar = bar;\n      var drag = document.createElement('div');\n      drag.style.position = 'relative';\n      drag.style.top = '0px';\n      if (this.options.rtl) {\n        drag.style.right = '-10px';\n      } else {\n        drag.style.left = '-10px';\n      }\n      drag.style.height = '100%';\n      drag.style.width = '20px';\n\n      /**\n       *\n       * @param {WheelEvent} e\n       */\n      function onMouseWheel(e) {\n        this.body.range._onMouseWheel(e);\n      }\n      if (drag.addEventListener) {\n        // IE9, Chrome, Safari, Opera\n        drag.addEventListener(\"mousewheel\", _bindInstanceProperty$1(onMouseWheel).call(onMouseWheel, this), false);\n        // Firefox\n        drag.addEventListener(\"DOMMouseScroll\", _bindInstanceProperty$1(onMouseWheel).call(onMouseWheel, this), false);\n      } else {\n        // IE 6/7/8\n        drag.attachEvent(\"onmousewheel\", _bindInstanceProperty$1(onMouseWheel).call(onMouseWheel, this));\n      }\n      bar.appendChild(drag);\n      // attach event listeners\n      this.hammer = new Hammer(drag);\n      this.hammer.on('panstart', _bindInstanceProperty$1(_context2 = this._onDragStart).call(_context2, this));\n      this.hammer.on('panmove', _bindInstanceProperty$1(_context3 = this._onDrag).call(_context3, this));\n      this.hammer.on('panend', _bindInstanceProperty$1(_context4 = this._onDragEnd).call(_context4, this));\n      this.hammer.get('pan').set({\n        threshold: 5,\n        direction: Hammer.DIRECTION_ALL\n      });\n      // delay addition on item click for trackpads...\n      this.hammer.get('press').set({\n        time: 10000\n      });\n    }\n\n    /**\n     * Destroy the CustomTime bar\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.hide();\n      this.hammer.destroy();\n      this.hammer = null;\n      this.body = null;\n    }\n\n    /**\n     * Repaint the component\n     * @return {boolean} Returns true if the component is resized\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      var parent = this.body.dom.backgroundVertical;\n      if (this.bar.parentNode != parent) {\n        // attach to the dom\n        if (this.bar.parentNode) {\n          this.bar.parentNode.removeChild(this.bar);\n        }\n        parent.appendChild(this.bar);\n      }\n      var x = this.body.util.toScreen(this.customTime);\n      var locale = this.options.locales[this.options.locale];\n      if (!locale) {\n        if (!this.warned) {\n          console.warn(\"WARNING: options.locales['\".concat(this.options.locale, \"'] not found. See https://visjs.github.io/vis-timeline/docs/timeline/#Localization\"));\n          this.warned = true;\n        }\n        locale = this.options.locales['en']; // fall back on english when not available\n      }\n\n      var title = this.options.title;\n      // To hide the title completely use empty string ''.\n      if (title === undefined) {\n        var _context5;\n        title = _concatInstanceProperty(_context5 = \"\".concat(locale.time, \": \")).call(_context5, this.options.moment(this.customTime).format('dddd, MMMM Do YYYY, H:mm:ss'));\n        title = title.charAt(0).toUpperCase() + title.substring(1);\n      } else if (typeof title === \"function\") {\n        title = title.call(this, this.customTime);\n      }\n      this.options.rtl ? this.bar.style.right = \"\".concat(x, \"px\") : this.bar.style.left = \"\".concat(x, \"px\");\n      this.bar.title = title;\n      return false;\n    }\n\n    /**\n     * Remove the CustomTime from the DOM\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      // remove the line from the DOM\n      if (this.bar.parentNode) {\n        this.bar.parentNode.removeChild(this.bar);\n      }\n    }\n\n    /**\n     * Set custom time.\n     * @param {Date | number | string} time\n     */\n  }, {\n    key: \"setCustomTime\",\n    value: function setCustomTime(time) {\n      this.customTime = availableUtils.convert(time, 'Date');\n      this.redraw();\n    }\n\n    /**\n     * Retrieve the current custom time.\n     * @return {Date} customTime\n     */\n  }, {\n    key: \"getCustomTime\",\n    value: function getCustomTime() {\n      return new Date(this.customTime.valueOf());\n    }\n\n    /**\n     * Set custom marker.\n     * @param {string} [title] Title of the custom marker\n     * @param {boolean} [editable] Make the custom marker editable.\n     */\n  }, {\n    key: \"setCustomMarker\",\n    value: function setCustomMarker(title, editable) {\n      if (this.marker) {\n        this.bar.removeChild(this.marker);\n      }\n      this.marker = document.createElement('div');\n      this.marker.className = \"vis-custom-time-marker\";\n      this.marker.innerHTML = availableUtils.xss(title);\n      this.marker.style.position = 'absolute';\n      if (editable) {\n        var _context6, _context7;\n        this.marker.setAttribute('contenteditable', 'true');\n        this.marker.addEventListener('pointerdown', function () {\n          this.marker.focus();\n        });\n        this.marker.addEventListener('input', _bindInstanceProperty$1(_context6 = this._onMarkerChange).call(_context6, this));\n        // The editable div element has no change event, so here emulates the change event.\n        this.marker.title = title;\n        this.marker.addEventListener('blur', _bindInstanceProperty$1(_context7 = function _context7(event) {\n          if (this.title != event.target.innerHTML) {\n            this._onMarkerChanged(event);\n            this.title = event.target.innerHTML;\n          }\n        }).call(_context7, this));\n      }\n      this.bar.appendChild(this.marker);\n    }\n\n    /**\n      * Set custom title.\n      * @param {Date | number | string} title\n      */\n  }, {\n    key: \"setCustomTitle\",\n    value: function setCustomTitle(title) {\n      this.options.title = title;\n    }\n\n    /**\n     * Start moving horizontally\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onDragStart\",\n    value: function _onDragStart(event) {\n      this.eventParams.dragging = true;\n      this.eventParams.customTime = this.customTime;\n      event.stopPropagation();\n    }\n\n    /**\n     * Perform moving operating.\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onDrag\",\n    value: function _onDrag(event) {\n      if (!this.eventParams.dragging) return;\n      var deltaX = this.options.rtl ? -1 * event.deltaX : event.deltaX;\n      var x = this.body.util.toScreen(this.eventParams.customTime) + deltaX;\n      var time = this.body.util.toTime(x);\n      var scale = this.body.util.getScale();\n      var step = this.body.util.getStep();\n      var snap = this.options.snap;\n      var snappedTime = snap ? snap(time, scale, step) : time;\n      this.setCustomTime(snappedTime);\n\n      // fire a timechange event\n      this.body.emitter.emit('timechange', {\n        id: this.options.id,\n        time: new Date(this.customTime.valueOf()),\n        event: event\n      });\n      event.stopPropagation();\n    }\n\n    /**\n     * Stop moving operating.\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onDragEnd\",\n    value: function _onDragEnd(event) {\n      if (!this.eventParams.dragging) return;\n\n      // fire a timechanged event\n      this.body.emitter.emit('timechanged', {\n        id: this.options.id,\n        time: new Date(this.customTime.valueOf()),\n        event: event\n      });\n      event.stopPropagation();\n    }\n\n    /**\n     * Perform input operating.\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onMarkerChange\",\n    value: function _onMarkerChange(event) {\n      this.body.emitter.emit('markerchange', {\n        id: this.options.id,\n        title: event.target.innerHTML,\n        event: event\n      });\n      event.stopPropagation();\n    }\n\n    /**\n     * Perform change operating.\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onMarkerChanged\",\n    value: function _onMarkerChanged(event) {\n      this.body.emitter.emit('markerchanged', {\n        id: this.options.id,\n        title: event.target.innerHTML,\n        event: event\n      });\n      event.stopPropagation();\n    }\n\n    /**\n     * Find a custom time from an event target:\n     * searches for the attribute 'custom-time' in the event target's element tree\n     * @param {Event} event\n     * @return {CustomTime | null} customTime\n     */\n  }], [{\n    key: \"customTimeFromTarget\",\n    value: function customTimeFromTarget(event) {\n      var target = event.target;\n      while (target) {\n        if (target.hasOwnProperty('custom-time')) {\n          return target['custom-time'];\n        }\n        target = target.parentNode;\n      }\n      return null;\n    }\n  }]);\n  return CustomTime;\n}(Component);\n\nvar css_248z$b = \".vis-timeline {\\n  /*\\n  -webkit-transition: height .4s ease-in-out;\\n  transition:         height .4s ease-in-out;\\n  */\\n}\\n\\n.vis-panel {\\n  /*\\n  -webkit-transition: height .4s ease-in-out, top .4s ease-in-out;\\n  transition:         height .4s ease-in-out, top .4s ease-in-out;\\n  */\\n}\\n\\n.vis-axis {\\n  /*\\n  -webkit-transition: top .4s ease-in-out;\\n  transition:         top .4s ease-in-out;\\n  */\\n}\\n\\n/* TODO: get animation working nicely\\n\\n.vis-item {\\n  -webkit-transition: top .4s ease-in-out;\\n  transition:         top .4s ease-in-out;\\n}\\n\\n.vis-item.line {\\n  -webkit-transition: height .4s ease-in-out, top .4s ease-in-out;\\n  transition:         height .4s ease-in-out, top .4s ease-in-out;\\n}\\n/**/\";\nstyleInject(css_248z$b);\n\nvar css_248z$a = \".vis-current-time {\\n  background-color: #FF7F6E;\\n  width: 2px;\\n  z-index: 1;\\n  pointer-events: none;\\n}\\n\\n.vis-rolling-mode-btn {\\n  height: 40px;\\n  width: 40px;\\n  position: absolute;\\n  top: 7px;\\n  right: 20px;\\n  border-radius: 50%;\\n  font-size: 28px;\\n  cursor: pointer;\\n  opacity: 0.8;\\n  color: white;\\n  font-weight: bold;\\n  text-align: center;\\n  background: #3876c2;\\n}\\n.vis-rolling-mode-btn:before {\\n  content: \\\"\\\\26F6\\\";\\n}\\n\\n.vis-rolling-mode-btn:hover {\\n  opacity: 1;\\n}\";\nstyleInject(css_248z$a);\n\nvar css_248z$9 = \".vis-panel {\\n  position: absolute;\\n\\n  padding: 0;\\n  margin: 0;\\n\\n  box-sizing: border-box;\\n}\\n\\n.vis-panel.vis-center,\\n.vis-panel.vis-left,\\n.vis-panel.vis-right,\\n.vis-panel.vis-top,\\n.vis-panel.vis-bottom {\\n  border: 1px #bfbfbf;\\n}\\n\\n.vis-panel.vis-center,\\n.vis-panel.vis-left,\\n.vis-panel.vis-right {\\n  border-top-style: solid;\\n  border-bottom-style: solid;\\n  overflow: hidden;\\n}\\n\\n.vis-left.vis-panel.vis-vertical-scroll, .vis-right.vis-panel.vis-vertical-scroll {\\n  height: 100%;\\n  overflow-x: hidden;\\n  overflow-y: scroll;\\n} \\n\\n.vis-left.vis-panel.vis-vertical-scroll {\\n  direction: rtl;\\n}\\n\\n.vis-left.vis-panel.vis-vertical-scroll .vis-content {\\n  direction: ltr;\\n}\\n\\n.vis-right.vis-panel.vis-vertical-scroll {\\n  direction: ltr;\\n}\\n\\n.vis-right.vis-panel.vis-vertical-scroll .vis-content {\\n  direction: rtl;\\n}\\n\\n.vis-panel.vis-center,\\n.vis-panel.vis-top,\\n.vis-panel.vis-bottom {\\n  border-left-style: solid;\\n  border-right-style: solid;\\n}\\n\\n.vis-background {\\n  overflow: hidden;\\n}\\n\\n.vis-panel > .vis-content {\\n  position: relative;\\n}\\n\\n.vis-panel .vis-shadow {\\n  position: absolute;\\n  width: 100%;\\n  height: 1px;\\n  box-shadow: 0 0 10px rgba(0,0,0,0.8);\\n  /* TODO: find a nice way to ensure vis-shadows are drawn on top of items\\n  z-index: 1;\\n  */\\n}\\n\\n.vis-panel .vis-shadow.vis-top {\\n  top: -1px;\\n  left: 0;\\n}\\n\\n.vis-panel .vis-shadow.vis-bottom {\\n  bottom: -1px;\\n  left: 0;\\n}\";\nstyleInject(css_248z$9);\n\nvar css_248z$8 = \".vis-graph-group0 {\\n    fill:#4f81bd;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #4f81bd;\\n}\\n\\n.vis-graph-group1 {\\n    fill:#f79646;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #f79646;\\n}\\n\\n.vis-graph-group2 {\\n    fill: #8c51cf;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #8c51cf;\\n}\\n\\n.vis-graph-group3 {\\n    fill: #75c841;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #75c841;\\n}\\n\\n.vis-graph-group4 {\\n    fill: #ff0100;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #ff0100;\\n}\\n\\n.vis-graph-group5 {\\n    fill: #37d8e6;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #37d8e6;\\n}\\n\\n.vis-graph-group6 {\\n    fill: #042662;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #042662;\\n}\\n\\n.vis-graph-group7 {\\n    fill:#00ff26;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #00ff26;\\n}\\n\\n.vis-graph-group8 {\\n    fill:#ff00ff;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #ff00ff;\\n}\\n\\n.vis-graph-group9 {\\n    fill: #8f3938;\\n    fill-opacity:0;\\n    stroke-width:2px;\\n    stroke: #8f3938;\\n}\\n\\n.vis-timeline .vis-fill {\\n    fill-opacity:0.1;\\n    stroke: none;\\n}\\n\\n\\n.vis-timeline .vis-bar {\\n    fill-opacity:0.5;\\n    stroke-width:1px;\\n}\\n\\n.vis-timeline .vis-point {\\n    stroke-width:2px;\\n    fill-opacity:1.0;\\n}\\n\\n\\n.vis-timeline .vis-legend-background {\\n    stroke-width:1px;\\n    fill-opacity:0.9;\\n    fill: #ffffff;\\n    stroke: #c2c2c2;\\n}\\n\\n\\n.vis-timeline .vis-outline {\\n    stroke-width:1px;\\n    fill-opacity:1;\\n    fill: #ffffff;\\n    stroke: #e5e5e5;\\n}\\n\\n.vis-timeline .vis-icon-fill {\\n    fill-opacity:0.3;\\n    stroke: none;\\n}\\n\";\nstyleInject(css_248z$8);\n\nvar css_248z$7 = \"\\n.vis-timeline {\\n  position: relative;\\n  border: 1px solid #bfbfbf;\\n  overflow: hidden;\\n  padding: 0;\\n  margin: 0;\\n  box-sizing: border-box;\\n}\\n\\n.vis-loading-screen {\\n  width: 100%;\\n  height: 100%;\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n}\";\nstyleInject(css_248z$7);\n\nvar css_248z$6 = \"/* override some bootstrap styles screwing up the timelines css */\\n\\n.vis [class*=\\\"span\\\"] {\\n  min-height: 0;\\n  width: auto;\\n}\\n\";\nstyleInject(css_248z$6);\n\n/**\n * Create a timeline visualization\n * @constructor Core\n */\nvar Core = /*#__PURE__*/function () {\n  function Core() {\n    _classCallCheck(this, Core);\n  }\n  _createClass(Core, [{\n    key: \"_create\",\n    value:\n    /**\n     * Create the main DOM for the Core: a root panel containing left, right,\n     * top, bottom, content, and background panel.\n     * @param {Element} container  The container element where the Core will\n     *                             be attached.\n     * @protected\n     */\n    function _create(container) {\n      var _this = this,\n        _context,\n        _context2,\n        _context3;\n      this.dom = {};\n      this.dom.container = container;\n      this.dom.container.style.position = 'relative';\n      this.dom.root = document.createElement('div');\n      this.dom.background = document.createElement('div');\n      this.dom.backgroundVertical = document.createElement('div');\n      this.dom.backgroundHorizontal = document.createElement('div');\n      this.dom.centerContainer = document.createElement('div');\n      this.dom.leftContainer = document.createElement('div');\n      this.dom.rightContainer = document.createElement('div');\n      this.dom.center = document.createElement('div');\n      this.dom.left = document.createElement('div');\n      this.dom.right = document.createElement('div');\n      this.dom.top = document.createElement('div');\n      this.dom.bottom = document.createElement('div');\n      this.dom.shadowTop = document.createElement('div');\n      this.dom.shadowBottom = document.createElement('div');\n      this.dom.shadowTopLeft = document.createElement('div');\n      this.dom.shadowBottomLeft = document.createElement('div');\n      this.dom.shadowTopRight = document.createElement('div');\n      this.dom.shadowBottomRight = document.createElement('div');\n      this.dom.rollingModeBtn = document.createElement('div');\n      this.dom.loadingScreen = document.createElement('div');\n      this.dom.root.className = 'vis-timeline';\n      this.dom.background.className = 'vis-panel vis-background';\n      this.dom.backgroundVertical.className = 'vis-panel vis-background vis-vertical';\n      this.dom.backgroundHorizontal.className = 'vis-panel vis-background vis-horizontal';\n      this.dom.centerContainer.className = 'vis-panel vis-center';\n      this.dom.leftContainer.className = 'vis-panel vis-left';\n      this.dom.rightContainer.className = 'vis-panel vis-right';\n      this.dom.top.className = 'vis-panel vis-top';\n      this.dom.bottom.className = 'vis-panel vis-bottom';\n      this.dom.left.className = 'vis-content';\n      this.dom.center.className = 'vis-content';\n      this.dom.right.className = 'vis-content';\n      this.dom.shadowTop.className = 'vis-shadow vis-top';\n      this.dom.shadowBottom.className = 'vis-shadow vis-bottom';\n      this.dom.shadowTopLeft.className = 'vis-shadow vis-top';\n      this.dom.shadowBottomLeft.className = 'vis-shadow vis-bottom';\n      this.dom.shadowTopRight.className = 'vis-shadow vis-top';\n      this.dom.shadowBottomRight.className = 'vis-shadow vis-bottom';\n      this.dom.rollingModeBtn.className = 'vis-rolling-mode-btn';\n      this.dom.loadingScreen.className = 'vis-loading-screen';\n      this.dom.root.appendChild(this.dom.background);\n      this.dom.root.appendChild(this.dom.backgroundVertical);\n      this.dom.root.appendChild(this.dom.backgroundHorizontal);\n      this.dom.root.appendChild(this.dom.centerContainer);\n      this.dom.root.appendChild(this.dom.leftContainer);\n      this.dom.root.appendChild(this.dom.rightContainer);\n      this.dom.root.appendChild(this.dom.top);\n      this.dom.root.appendChild(this.dom.bottom);\n      this.dom.root.appendChild(this.dom.rollingModeBtn);\n      this.dom.centerContainer.appendChild(this.dom.center);\n      this.dom.leftContainer.appendChild(this.dom.left);\n      this.dom.rightContainer.appendChild(this.dom.right);\n      this.dom.centerContainer.appendChild(this.dom.shadowTop);\n      this.dom.centerContainer.appendChild(this.dom.shadowBottom);\n      this.dom.leftContainer.appendChild(this.dom.shadowTopLeft);\n      this.dom.leftContainer.appendChild(this.dom.shadowBottomLeft);\n      this.dom.rightContainer.appendChild(this.dom.shadowTopRight);\n      this.dom.rightContainer.appendChild(this.dom.shadowBottomRight);\n\n      // size properties of each of the panels\n      this.props = {\n        root: {},\n        background: {},\n        centerContainer: {},\n        leftContainer: {},\n        rightContainer: {},\n        center: {},\n        left: {},\n        right: {},\n        top: {},\n        bottom: {},\n        border: {},\n        scrollTop: 0,\n        scrollTopMin: 0\n      };\n      this.on('rangechange', function () {\n        if (_this.initialDrawDone === true) {\n          _this._redraw();\n        }\n      });\n      this.on('rangechanged', function () {\n        if (!_this.initialRangeChangeDone) {\n          _this.initialRangeChangeDone = true;\n        }\n      });\n      this.on('touch', _bindInstanceProperty$1(_context = this._onTouch).call(_context, this));\n      this.on('panmove', _bindInstanceProperty$1(_context2 = this._onDrag).call(_context2, this));\n      var me = this;\n      this._origRedraw = _bindInstanceProperty$1(_context3 = this._redraw).call(_context3, this);\n      this._redraw = availableUtils.throttle(this._origRedraw);\n      this.on('_change', function (properties) {\n        if (me.itemSet && me.itemSet.initialItemSetDrawn && properties && properties.queue == true) {\n          me._redraw();\n        } else {\n          me._origRedraw();\n        }\n      });\n\n      // create event listeners for all interesting events, these events will be\n      // emitted via emitter\n      this.hammer = new Hammer(this.dom.root);\n      var pinchRecognizer = this.hammer.get('pinch').set({\n        enable: true\n      });\n      pinchRecognizer && disablePreventDefaultVertically(pinchRecognizer);\n      this.hammer.get('pan').set({\n        threshold: 5,\n        direction: Hammer.DIRECTION_ALL\n      });\n      this.timelineListeners = {};\n      var events = ['tap', 'doubletap', 'press', 'pinch', 'pan', 'panstart', 'panmove', 'panend'\n      // TODO: cleanup\n      //'touch', 'pinch',\n      //'tap', 'doubletap', 'hold',\n      //'dragstart', 'drag', 'dragend',\n      //'mousewheel', 'DOMMouseScroll' // DOMMouseScroll is needed for Firefox\n      ];\n\n      _forEachInstanceProperty(events).call(events, function (type) {\n        var listener = function listener(event) {\n          if (me.isActive()) {\n            me.emit(type, event);\n          }\n        };\n        me.hammer.on(type, listener);\n        me.timelineListeners[type] = listener;\n      });\n\n      // emulate a touch event (emitted before the start of a pan, pinch, tap, or press)\n      onTouch(this.hammer, function (event) {\n        me.emit('touch', event);\n      });\n\n      // emulate a release event (emitted after a pan, pinch, tap, or press)\n      onRelease(this.hammer, function (event) {\n        me.emit('release', event);\n      });\n\n      /**\n       *\n       * @param {WheelEvent} event\n       */\n      function onMouseWheel(event) {\n        // Reasonable default wheel deltas\n        var LINE_HEIGHT = 40;\n        var PAGE_HEIGHT = 800;\n        if (this.isActive()) {\n          this.emit('mousewheel', event);\n        }\n\n        // deltaX and deltaY normalization from jquery.mousewheel.js\n        var deltaX = 0;\n        var deltaY = 0;\n\n        // Old school scrollwheel delta\n        if ('detail' in event) {\n          deltaY = event.detail * -1;\n        }\n        if ('wheelDelta' in event) {\n          deltaY = event.wheelDelta;\n        }\n        if ('wheelDeltaY' in event) {\n          deltaY = event.wheelDeltaY;\n        }\n        if ('wheelDeltaX' in event) {\n          deltaX = event.wheelDeltaX * -1;\n        }\n\n        // Firefox < 17 horizontal scrolling related to DOMMouseScroll event\n        if ('axis' in event && event.axis === event.HORIZONTAL_AXIS) {\n          deltaX = deltaY * -1;\n          deltaY = 0;\n        }\n\n        // New school wheel delta (wheel event)\n        if ('deltaY' in event) {\n          deltaY = event.deltaY * -1;\n        }\n        if ('deltaX' in event) {\n          deltaX = event.deltaX;\n        }\n\n        // Normalize deltas\n        if (event.deltaMode) {\n          if (event.deltaMode === 1) {\n            // delta in LINE units\n            deltaX *= LINE_HEIGHT;\n            deltaY *= LINE_HEIGHT;\n          } else {\n            // delta in PAGE units\n            deltaX *= LINE_HEIGHT;\n            deltaY *= PAGE_HEIGHT;\n          }\n        }\n        // Prevent scrolling when zooming (no zoom key, or pressing zoom key)\n        if (this.options.preferZoom) {\n          if (!this.options.zoomKey || event[this.options.zoomKey]) return;\n        } else {\n          if (this.options.zoomKey && event[this.options.zoomKey]) return;\n        }\n        // Don't preventDefault if you can't scroll\n        if (!this.options.verticalScroll && !this.options.horizontalScroll) return;\n        if (this.options.verticalScroll && Math.abs(deltaY) >= Math.abs(deltaX)) {\n          var current = this.props.scrollTop;\n          var adjusted = current + deltaY;\n          if (this.isActive()) {\n            var newScrollTop = this._setScrollTop(adjusted);\n            if (newScrollTop !== current) {\n              this._redraw();\n              this.emit('scroll', event);\n\n              // Prevent default actions caused by mouse wheel\n              // (else the page and timeline both scroll)\n              event.preventDefault();\n            }\n          }\n        } else if (this.options.horizontalScroll) {\n          var delta = Math.abs(deltaX) >= Math.abs(deltaY) ? deltaX : deltaY;\n\n          // calculate a single scroll jump relative to the range scale\n          var diff = delta / 120 * (this.range.end - this.range.start) / 20;\n          // calculate new start and end\n          var newStart = this.range.start + diff;\n          var newEnd = this.range.end + diff;\n          var options = {\n            animation: false,\n            byUser: true,\n            event: event\n          };\n          this.range.setRange(newStart, newEnd, options);\n          event.preventDefault();\n        }\n      }\n\n      // Add modern wheel event listener\n      var wheelType = \"onwheel\" in document.createElement(\"div\") ? \"wheel\" :\n      // Modern browsers support \"wheel\"\n      document.onmousewheel !== undefined ? \"mousewheel\" :\n      // Webkit and IE support at least \"mousewheel\"\n\n      // DOMMouseScroll - Older Firefox versions use \"DOMMouseScroll\"\n      // onmousewheel - All the use \"onmousewheel\"\n      this.dom.centerContainer.addEventListener ? \"DOMMouseScroll\" : \"onmousewheel\";\n      this.dom.top.addEventListener ? \"DOMMouseScroll\" : \"onmousewheel\";\n      this.dom.bottom.addEventListener ? \"DOMMouseScroll\" : \"onmousewheel\";\n      this.dom.centerContainer.addEventListener(wheelType, _bindInstanceProperty$1(onMouseWheel).call(onMouseWheel, this), false);\n      this.dom.top.addEventListener(wheelType, _bindInstanceProperty$1(onMouseWheel).call(onMouseWheel, this), false);\n      this.dom.bottom.addEventListener(wheelType, _bindInstanceProperty$1(onMouseWheel).call(onMouseWheel, this), false);\n\n      /**\n       *\n       * @param {scroll} event\n       */\n      function onMouseScrollSide(event) {\n        if (!me.options.verticalScroll) return;\n        event.preventDefault();\n        if (me.isActive()) {\n          var adjusted = -event.target.scrollTop;\n          me._setScrollTop(adjusted);\n          me._redraw();\n          me.emit('scrollSide', event);\n        }\n      }\n      this.dom.left.parentNode.addEventListener('scroll', _bindInstanceProperty$1(onMouseScrollSide).call(onMouseScrollSide, this));\n      this.dom.right.parentNode.addEventListener('scroll', _bindInstanceProperty$1(onMouseScrollSide).call(onMouseScrollSide, this));\n      var itemAddedToTimeline = false;\n\n      /**\n       *\n       * @param {dragover} event\n       * @returns {boolean}\n       */\n      function handleDragOver(event) {\n        var _context4;\n        if (event.preventDefault) {\n          me.emit('dragover', me.getEventProperties(event));\n          event.preventDefault(); // Necessary. Allows us to drop.\n        }\n\n        // make sure your target is a timeline element\n        if (!(_indexOfInstanceProperty(_context4 = event.target.className).call(_context4, \"timeline\") > -1)) return;\n\n        // make sure only one item is added every time you're over the timeline\n        if (itemAddedToTimeline) return;\n        event.dataTransfer.dropEffect = 'move';\n        itemAddedToTimeline = true;\n        return false;\n      }\n\n      /**\n       *\n       * @param {drop} event\n       * @returns {boolean}\n       */\n      function handleDrop(event) {\n        // prevent redirect to blank page - Firefox\n        if (event.preventDefault) {\n          event.preventDefault();\n        }\n        if (event.stopPropagation) {\n          event.stopPropagation();\n        }\n        // return when dropping non-timeline items\n        try {\n          var itemData = JSON.parse(event.dataTransfer.getData(\"text\"));\n          if (!itemData || !itemData.content) return;\n        } catch (err) {\n          return false;\n        }\n        itemAddedToTimeline = false;\n        event.center = {\n          x: event.clientX,\n          y: event.clientY\n        };\n        if (itemData.target !== 'item') {\n          me.itemSet._onAddItem(event);\n        } else {\n          me.itemSet._onDropObjectOnItem(event);\n        }\n        me.emit('drop', me.getEventProperties(event));\n        return false;\n      }\n      this.dom.center.addEventListener('dragover', _bindInstanceProperty$1(handleDragOver).call(handleDragOver, this), false);\n      this.dom.center.addEventListener('drop', _bindInstanceProperty$1(handleDrop).call(handleDrop, this), false);\n      this.customTimes = [];\n\n      // store state information needed for touch events\n      this.touch = {};\n      this.redrawCount = 0;\n      this.initialDrawDone = false;\n      this.initialRangeChangeDone = false;\n\n      // attach the root panel to the provided container\n      if (!container) throw new Error('No container provided');\n      container.appendChild(this.dom.root);\n      container.appendChild(this.dom.loadingScreen);\n    }\n\n    /**\n     * Set options. Options will be passed to all components loaded in the Timeline.\n     * @param {Object} [options]\n     *                           {String} orientation\n     *                              Vertical orientation for the Timeline,\n     *                              can be 'bottom' (default) or 'top'.\n     *                           {string | number} width\n     *                              Width for the timeline, a number in pixels or\n     *                              a css string like '1000px' or '75%'. '100%' by default.\n     *                           {string | number} height\n     *                              Fixed height for the Timeline, a number in pixels or\n     *                              a css string like '400px' or '75%'. If undefined,\n     *                              The Timeline will automatically size such that\n     *                              its contents fit.\n     *                           {string | number} minHeight\n     *                              Minimum height for the Timeline, a number in pixels or\n     *                              a css string like '400px' or '75%'.\n     *                           {string | number} maxHeight\n     *                              Maximum height for the Timeline, a number in pixels or\n     *                              a css string like '400px' or '75%'.\n     *                           {number | Date | string} start\n     *                              Start date for the visible window\n     *                           {number | Date | string} end\n     *                              End date for the visible window\n     */\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      var _context7;\n      if (options) {\n        // copy the known options\n        var fields = ['width', 'height', 'minHeight', 'maxHeight', 'autoResize', 'start', 'end', 'clickToUse', 'dataAttributes', 'hiddenDates', 'locale', 'locales', 'moment', 'preferZoom', 'rtl', 'zoomKey', 'horizontalScroll', 'verticalScroll', 'longSelectPressTime', 'snap'];\n        availableUtils.selectiveExtend(fields, this.options, options);\n        this.dom.rollingModeBtn.style.visibility = 'hidden';\n        if (this.options.rtl) {\n          this.dom.container.style.direction = \"rtl\";\n          this.dom.backgroundVertical.className = 'vis-panel vis-background vis-vertical-rtl';\n        }\n        if (this.options.verticalScroll) {\n          if (this.options.rtl) {\n            this.dom.rightContainer.className = 'vis-panel vis-right vis-vertical-scroll';\n          } else {\n            this.dom.leftContainer.className = 'vis-panel vis-left vis-vertical-scroll';\n          }\n        }\n        if (_typeof$1(this.options.orientation) !== 'object') {\n          this.options.orientation = {\n            item: undefined,\n            axis: undefined\n          };\n        }\n        if ('orientation' in options) {\n          if (typeof options.orientation === 'string') {\n            this.options.orientation = {\n              item: options.orientation,\n              axis: options.orientation\n            };\n          } else if (_typeof$1(options.orientation) === 'object') {\n            if ('item' in options.orientation) {\n              this.options.orientation.item = options.orientation.item;\n            }\n            if ('axis' in options.orientation) {\n              this.options.orientation.axis = options.orientation.axis;\n            }\n          }\n        }\n        if (this.options.orientation.axis === 'both') {\n          if (!this.timeAxis2) {\n            var timeAxis2 = this.timeAxis2 = new TimeAxis(this.body, this.options);\n            timeAxis2.setOptions = function (options) {\n              var _options = options ? availableUtils.extend({}, options) : {};\n              _options.orientation = 'top'; // override the orientation option, always top\n              TimeAxis.prototype.setOptions.call(timeAxis2, _options);\n            };\n            this.components.push(timeAxis2);\n          }\n        } else {\n          if (this.timeAxis2) {\n            var _context5;\n            var index = _indexOfInstanceProperty(_context5 = this.components).call(_context5, this.timeAxis2);\n            if (index !== -1) {\n              var _context6;\n              _spliceInstanceProperty(_context6 = this.components).call(_context6, index, 1);\n            }\n            this.timeAxis2.destroy();\n            this.timeAxis2 = null;\n          }\n        }\n\n        // if the graph2d's drawPoints is a function delegate the callback to the onRender property\n        if (typeof options.drawPoints == 'function') {\n          options.drawPoints = {\n            onRender: options.drawPoints\n          };\n        }\n        if ('hiddenDates' in this.options) {\n          convertHiddenOptions(this.options.moment, this.body, this.options.hiddenDates);\n        }\n        if ('clickToUse' in options) {\n          if (options.clickToUse) {\n            if (!this.activator) {\n              this.activator = new Activator(this.dom.root);\n            }\n          } else {\n            if (this.activator) {\n              this.activator.destroy();\n              delete this.activator;\n            }\n          }\n        }\n\n        // enable/disable autoResize\n        this._initAutoResize();\n      }\n\n      // propagate options to all components\n      _forEachInstanceProperty(_context7 = this.components).call(_context7, function (component) {\n        return component.setOptions(options);\n      });\n\n      // enable/disable configure\n      if ('configure' in options) {\n        var _context8;\n        if (!this.configurator) {\n          this.configurator = this._createConfigurator();\n        }\n        this.configurator.setOptions(options.configure);\n\n        // collect the settings of all components, and pass them to the configuration system\n        var appliedOptions = availableUtils.deepExtend({}, this.options);\n        _forEachInstanceProperty(_context8 = this.components).call(_context8, function (component) {\n          availableUtils.deepExtend(appliedOptions, component.options);\n        });\n        this.configurator.setModuleOptions({\n          global: appliedOptions\n        });\n      }\n      this._redraw();\n    }\n\n    /**\n     * Returns true when the Timeline is active.\n     * @returns {boolean}\n     */\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return !this.activator || this.activator.active;\n    }\n\n    /**\n     * Destroy the Core, clean up all DOM elements and event listeners.\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      var _context9;\n      // unbind datasets\n      this.setItems(null);\n      this.setGroups(null);\n\n      // remove all event listeners\n      this.off();\n\n      // stop checking for changed size\n      this._stopAutoResize();\n\n      // remove from DOM\n      if (this.dom.root.parentNode) {\n        this.dom.root.parentNode.removeChild(this.dom.root);\n      }\n      this.dom = null;\n\n      // remove Activator\n      if (this.activator) {\n        this.activator.destroy();\n        delete this.activator;\n      }\n\n      // cleanup hammer touch events\n      for (var event in this.timelineListeners) {\n        if (this.timelineListeners.hasOwnProperty(event)) {\n          delete this.timelineListeners[event];\n        }\n      }\n      this.timelineListeners = null;\n      this.hammer && this.hammer.destroy();\n      this.hammer = null;\n\n      // give all components the opportunity to cleanup\n      _forEachInstanceProperty(_context9 = this.components).call(_context9, function (component) {\n        return component.destroy();\n      });\n      this.body = null;\n    }\n\n    /**\n     * Set a custom time bar\n     * @param {Date} time\n     * @param {number} [id=undefined] Optional id of the custom time bar to be adjusted.\n     */\n  }, {\n    key: \"setCustomTime\",\n    value: function setCustomTime(time, id) {\n      var _context10;\n      var customTimes = _filterInstanceProperty(_context10 = this.customTimes).call(_context10, function (component) {\n        return id === component.options.id;\n      });\n      if (customTimes.length === 0) {\n        throw new Error(\"No custom time bar found with id \".concat(_JSON$stringify(id)));\n      }\n      if (customTimes.length > 0) {\n        customTimes[0].setCustomTime(time);\n      }\n    }\n\n    /**\n     * Retrieve the current custom time.\n     * @param {number} [id=undefined]    Id of the custom time bar.\n     * @return {Date | undefined} customTime\n     */\n  }, {\n    key: \"getCustomTime\",\n    value: function getCustomTime(id) {\n      var _context11;\n      var customTimes = _filterInstanceProperty(_context11 = this.customTimes).call(_context11, function (component) {\n        return component.options.id === id;\n      });\n      if (customTimes.length === 0) {\n        throw new Error(\"No custom time bar found with id \".concat(_JSON$stringify(id)));\n      }\n      return customTimes[0].getCustomTime();\n    }\n\n    /**\n     * Set a custom marker for the custom time bar.\n     * @param {string} [title] Title of the custom marker.\n     * @param {number} [id=undefined] Id of the custom marker.\n     * @param {boolean} [editable=false] Make the custom marker editable.\n     */\n  }, {\n    key: \"setCustomTimeMarker\",\n    value: function setCustomTimeMarker(title, id, editable) {\n      var _context12;\n      var customTimes = _filterInstanceProperty(_context12 = this.customTimes).call(_context12, function (component) {\n        return component.options.id === id;\n      });\n      if (customTimes.length === 0) {\n        throw new Error(\"No custom time bar found with id \".concat(_JSON$stringify(id)));\n      }\n      if (customTimes.length > 0) {\n        customTimes[0].setCustomMarker(title, editable);\n      }\n    }\n\n    /**\n     * Set a custom title for the custom time bar.\n     * @param {string} [title] Custom title\n     * @param {number} [id=undefined]    Id of the custom time bar.\n     * @returns {*}\n     */\n  }, {\n    key: \"setCustomTimeTitle\",\n    value: function setCustomTimeTitle(title, id) {\n      var _context13;\n      var customTimes = _filterInstanceProperty(_context13 = this.customTimes).call(_context13, function (component) {\n        return component.options.id === id;\n      });\n      if (customTimes.length === 0) {\n        throw new Error(\"No custom time bar found with id \".concat(_JSON$stringify(id)));\n      }\n      if (customTimes.length > 0) {\n        return customTimes[0].setCustomTitle(title);\n      }\n    }\n\n    /**\n     * Retrieve meta information from an event.\n     * Should be overridden by classes extending Core\n     * @param {Event} event\n     * @return {Object} An object with related information.\n     */\n  }, {\n    key: \"getEventProperties\",\n    value: function getEventProperties(event) {\n      return {\n        event: event\n      };\n    }\n\n    /**\n     * Add custom vertical bar\n     * @param {Date | string | number} [time]  A Date, unix timestamp, or\n     *                                         ISO date string. Time point where\n     *                                         the new bar should be placed.\n     *                                         If not provided, `new Date()` will\n     *                                         be used.\n     * @param {number | string} [id=undefined] Id of the new bar. Optional\n     * @return {number | string}               Returns the id of the new bar\n     */\n  }, {\n    key: \"addCustomTime\",\n    value: function addCustomTime(time, id) {\n      var _context14;\n      var timestamp = time !== undefined ? availableUtils.convert(time, 'Date') : new Date();\n      var exists = _someInstanceProperty(_context14 = this.customTimes).call(_context14, function (customTime) {\n        return customTime.options.id === id;\n      });\n      if (exists) {\n        throw new Error(\"A custom time with id \".concat(_JSON$stringify(id), \" already exists\"));\n      }\n      var customTime = new CustomTime(this.body, availableUtils.extend({}, this.options, {\n        time: timestamp,\n        id: id,\n        snap: this.itemSet ? this.itemSet.options.snap : this.options.snap\n      }));\n      this.customTimes.push(customTime);\n      this.components.push(customTime);\n      this._redraw();\n      return id;\n    }\n\n    /**\n     * Remove previously added custom bar\n     * @param {int} id ID of the custom bar to be removed\n     * [at]returns {boolean} True if the bar exists and is removed, false otherwise\n     */\n  }, {\n    key: \"removeCustomTime\",\n    value: function removeCustomTime(id) {\n      var _context15,\n        _this2 = this;\n      var customTimes = _filterInstanceProperty(_context15 = this.customTimes).call(_context15, function (bar) {\n        return bar.options.id === id;\n      });\n      if (customTimes.length === 0) {\n        throw new Error(\"No custom time bar found with id \".concat(_JSON$stringify(id)));\n      }\n      _forEachInstanceProperty(customTimes).call(customTimes, function (customTime) {\n        var _context16, _context17, _context18, _context19;\n        _spliceInstanceProperty(_context16 = _this2.customTimes).call(_context16, _indexOfInstanceProperty(_context17 = _this2.customTimes).call(_context17, customTime), 1);\n        _spliceInstanceProperty(_context18 = _this2.components).call(_context18, _indexOfInstanceProperty(_context19 = _this2.components).call(_context19, customTime), 1);\n        customTime.destroy();\n      });\n    }\n\n    /**\n     * Get the id's of the currently visible items.\n     * @returns {Array} The ids of the visible items\n     */\n  }, {\n    key: \"getVisibleItems\",\n    value: function getVisibleItems() {\n      return this.itemSet && this.itemSet.getVisibleItems() || [];\n    }\n\n    /**\n     * Get the id's of the items at specific time, where a click takes place on the timeline.\n     * @returns {Array} The ids of all items in existence at the time of event.\n     */\n  }, {\n    key: \"getItemsAtCurrentTime\",\n    value: function getItemsAtCurrentTime(timeOfEvent) {\n      this.time = timeOfEvent;\n      return this.itemSet && this.itemSet.getItemsAtCurrentTime(this.time) || [];\n    }\n\n    /**\n     * Get the id's of the currently visible groups.\n     * @returns {Array} The ids of the visible groups\n     */\n  }, {\n    key: \"getVisibleGroups\",\n    value: function getVisibleGroups() {\n      return this.itemSet && this.itemSet.getVisibleGroups() || [];\n    }\n\n    /**\n     * Set Core window such that it fits all items\n     * @param {Object} [options]  Available options:\n     *                                `animation: boolean | {duration: number, easingFunction: string}`\n     *                                    If true (default), the range is animated\n     *                                    smoothly to the new window. An object can be\n     *                                    provided to specify duration and easing function.\n     *                                    Default duration is 500 ms, and default easing\n     *                                    function is 'easeInOutQuad'.\n     * @param {function} [callback] a callback funtion to be executed at the end of this function\n     */\n  }, {\n    key: \"fit\",\n    value: function fit(options, callback) {\n      var range = this.getDataRange();\n\n      // skip range set if there is no min and max date\n      if (range.min === null && range.max === null) {\n        return;\n      }\n\n      // apply a margin of 1% left and right of the data\n      var interval = range.max - range.min;\n      var min = new Date(range.min.valueOf() - interval * 0.01);\n      var max = new Date(range.max.valueOf() + interval * 0.01);\n      var animation = options && options.animation !== undefined ? options.animation : true;\n      this.range.setRange(min, max, {\n        animation: animation\n      }, callback);\n    }\n\n    /**\n     * Calculate the data range of the items start and end dates\n     * [at]returns {{min: [Date], max: [Date]}}\n     * @protected\n     */\n  }, {\n    key: \"getDataRange\",\n    value: function getDataRange() {\n      // must be implemented by Timeline and Graph2d\n      throw new Error('Cannot invoke abstract method getDataRange');\n    }\n\n    /**\n     * Set the visible window. Both parameters are optional, you can change only\n     * start or only end. Syntax:\n     *\n     *     TimeLine.setWindow(start, end)\n     *     TimeLine.setWindow(start, end, options)\n     *     TimeLine.setWindow(range)\n     *\n     * Where start and end can be a Date, number, or string, and range is an\n     * object with properties start and end.\n     *\n     * @param {Date | number | string | Object} [start] Start date of visible window\n     * @param {Date | number | string} [end]            End date of visible window\n     * @param {Object} [options]  Available options:\n     *                                `animation: boolean | {duration: number, easingFunction: string}`\n     *                                    If true (default), the range is animated\n     *                                    smoothly to the new window. An object can be\n     *                                    provided to specify duration and easing function.\n     *                                    Default duration is 500 ms, and default easing\n     *                                    function is 'easeInOutQuad'.\n     * @param {function} [callback] a callback funtion to be executed at the end of this function\n     */\n  }, {\n    key: \"setWindow\",\n    value: function setWindow(start, end, options, callback) {\n      if (typeof arguments[2] == \"function\") {\n        callback = arguments[2];\n        options = {};\n      }\n      var animation;\n      var range;\n      if (arguments.length == 1) {\n        range = arguments[0];\n        animation = range.animation !== undefined ? range.animation : true;\n        this.range.setRange(range.start, range.end, {\n          animation: animation\n        });\n      } else if (arguments.length == 2 && typeof arguments[1] == \"function\") {\n        range = arguments[0];\n        callback = arguments[1];\n        animation = range.animation !== undefined ? range.animation : true;\n        this.range.setRange(range.start, range.end, {\n          animation: animation\n        }, callback);\n      } else {\n        animation = options && options.animation !== undefined ? options.animation : true;\n        this.range.setRange(start, end, {\n          animation: animation\n        }, callback);\n      }\n    }\n\n    /**\n     * Move the window such that given time is centered on screen.\n     * @param {Date | number | string} time\n     * @param {Object} [options]  Available options:\n     *                                `animation: boolean | {duration: number, easingFunction: string}`\n     *                                    If true (default), the range is animated\n     *                                    smoothly to the new window. An object can be\n     *                                    provided to specify duration and easing function.\n     *                                    Default duration is 500 ms, and default easing\n     *                                    function is 'easeInOutQuad'.\n     * @param {function} [callback] a callback funtion to be executed at the end of this function\n     */\n  }, {\n    key: \"moveTo\",\n    value: function moveTo(time, options, callback) {\n      if (typeof arguments[1] == \"function\") {\n        callback = arguments[1];\n        options = {};\n      }\n      var interval = this.range.end - this.range.start;\n      var t = availableUtils.convert(time, 'Date').valueOf();\n      var start = t - interval / 2;\n      var end = t + interval / 2;\n      var animation = options && options.animation !== undefined ? options.animation : true;\n      this.range.setRange(start, end, {\n        animation: animation\n      }, callback);\n    }\n\n    /**\n     * Get the visible window\n     * @return {{start: Date, end: Date}}   Visible range\n     */\n  }, {\n    key: \"getWindow\",\n    value: function getWindow() {\n      var range = this.range.getRange();\n      return {\n        start: new Date(range.start),\n        end: new Date(range.end)\n      };\n    }\n\n    /**\n     * Zoom in the window such that given time is centered on screen.\n     * @param {number} percentage - must be between [0..1]\n     * @param {Object} [options]  Available options:\n     *                                `animation: boolean | {duration: number, easingFunction: string}`\n     *                                    If true (default), the range is animated\n     *                                    smoothly to the new window. An object can be\n     *                                    provided to specify duration and easing function.\n     *                                    Default duration is 500 ms, and default easing\n     *                                    function is 'easeInOutQuad'.\n     * @param {function} [callback] a callback funtion to be executed at the end of this function\n     */\n  }, {\n    key: \"zoomIn\",\n    value: function zoomIn(percentage, options, callback) {\n      if (!percentage || percentage < 0 || percentage > 1) return;\n      if (typeof arguments[1] == \"function\") {\n        callback = arguments[1];\n        options = {};\n      }\n      var range = this.getWindow();\n      var start = range.start.valueOf();\n      var end = range.end.valueOf();\n      var interval = end - start;\n      var newInterval = interval / (1 + percentage);\n      var distance = (interval - newInterval) / 2;\n      var newStart = start + distance;\n      var newEnd = end - distance;\n      this.setWindow(newStart, newEnd, options, callback);\n    }\n\n    /**\n     * Zoom out the window such that given time is centered on screen.\n     * @param {number} percentage - must be between [0..1]\n     * @param {Object} [options]  Available options:\n     *                                `animation: boolean | {duration: number, easingFunction: string}`\n     *                                    If true (default), the range is animated\n     *                                    smoothly to the new window. An object can be\n     *                                    provided to specify duration and easing function.\n     *                                    Default duration is 500 ms, and default easing\n     *                                    function is 'easeInOutQuad'.\n     * @param {function} [callback] a callback funtion to be executed at the end of this function\n     */\n  }, {\n    key: \"zoomOut\",\n    value: function zoomOut(percentage, options, callback) {\n      if (!percentage || percentage < 0 || percentage > 1) return;\n      if (typeof arguments[1] == \"function\") {\n        callback = arguments[1];\n        options = {};\n      }\n      var range = this.getWindow();\n      var start = range.start.valueOf();\n      var end = range.end.valueOf();\n      var interval = end - start;\n      var newStart = start - interval * percentage / 2;\n      var newEnd = end + interval * percentage / 2;\n      this.setWindow(newStart, newEnd, options, callback);\n    }\n\n    /**\n     * Force a redraw. Can be overridden by implementations of Core\n     *\n     * Note: this function will be overridden on construction with a trottled version\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      this._redraw();\n    }\n\n    /**\n     * Redraw for internal use. Redraws all components. See also the public\n     * method redraw.\n     * @protected\n     */\n  }, {\n    key: \"_redraw\",\n    value: function _redraw() {\n      var _context20;\n      this.redrawCount++;\n      var dom = this.dom;\n      if (!dom || !dom.container || dom.root.offsetWidth == 0) return; // when destroyed, or invisible\n\n      var resized = false;\n      var options = this.options;\n      var props = this.props;\n      updateHiddenDates(this.options.moment, this.body, this.options.hiddenDates);\n\n      // update class names\n      if (options.orientation == 'top') {\n        availableUtils.addClassName(dom.root, 'vis-top');\n        availableUtils.removeClassName(dom.root, 'vis-bottom');\n      } else {\n        availableUtils.removeClassName(dom.root, 'vis-top');\n        availableUtils.addClassName(dom.root, 'vis-bottom');\n      }\n      if (options.rtl) {\n        availableUtils.addClassName(dom.root, 'vis-rtl');\n        availableUtils.removeClassName(dom.root, 'vis-ltr');\n      } else {\n        availableUtils.addClassName(dom.root, 'vis-ltr');\n        availableUtils.removeClassName(dom.root, 'vis-rtl');\n      }\n\n      // update root width and height options\n      dom.root.style.maxHeight = availableUtils.option.asSize(options.maxHeight, '');\n      dom.root.style.minHeight = availableUtils.option.asSize(options.minHeight, '');\n      dom.root.style.width = availableUtils.option.asSize(options.width, '');\n      var rootOffsetWidth = dom.root.offsetWidth;\n\n      // calculate border widths\n      props.border.left = 1;\n      props.border.right = 1;\n      props.border.top = 1;\n      props.border.bottom = 1;\n\n      // calculate the heights. If any of the side panels is empty, we set the height to\n      // minus the border width, such that the border will be invisible\n      props.center.height = dom.center.offsetHeight;\n      props.left.height = dom.left.offsetHeight;\n      props.right.height = dom.right.offsetHeight;\n      props.top.height = dom.top.clientHeight || -props.border.top;\n      props.bottom.height = Math.round(dom.bottom.getBoundingClientRect().height) || dom.bottom.clientHeight || -props.border.bottom;\n\n      // TODO: compensate borders when any of the panels is empty.\n\n      // apply auto height\n      // TODO: only calculate autoHeight when needed (else we cause an extra reflow/repaint of the DOM)\n      var contentHeight = Math.max(props.left.height, props.center.height, props.right.height);\n      var autoHeight = props.top.height + contentHeight + props.bottom.height + props.border.top + props.border.bottom;\n      dom.root.style.height = availableUtils.option.asSize(options.height, \"\".concat(autoHeight, \"px\"));\n\n      // calculate heights of the content panels\n      props.root.height = dom.root.offsetHeight;\n      props.background.height = props.root.height;\n      var containerHeight = props.root.height - props.top.height - props.bottom.height;\n      props.centerContainer.height = containerHeight;\n      props.leftContainer.height = containerHeight;\n      props.rightContainer.height = props.leftContainer.height;\n\n      // calculate the widths of the panels\n      props.root.width = rootOffsetWidth;\n      props.background.width = props.root.width;\n      if (!this.initialDrawDone) {\n        props.scrollbarWidth = availableUtils.getScrollBarWidth();\n      }\n      var leftContainerClientWidth = dom.leftContainer.clientWidth;\n      var rightContainerClientWidth = dom.rightContainer.clientWidth;\n      if (options.verticalScroll) {\n        if (options.rtl) {\n          props.left.width = leftContainerClientWidth || -props.border.left;\n          props.right.width = rightContainerClientWidth + props.scrollbarWidth || -props.border.right;\n        } else {\n          props.left.width = leftContainerClientWidth + props.scrollbarWidth || -props.border.left;\n          props.right.width = rightContainerClientWidth || -props.border.right;\n        }\n      } else {\n        props.left.width = leftContainerClientWidth || -props.border.left;\n        props.right.width = rightContainerClientWidth || -props.border.right;\n      }\n      this._setDOM();\n\n      // update the scrollTop, feasible range for the offset can be changed\n      // when the height of the Core or of the contents of the center changed\n      var offset = this._updateScrollTop();\n\n      // reposition the scrollable contents\n      if (options.orientation.item != 'top') {\n        offset += Math.max(props.centerContainer.height - props.center.height - props.border.top - props.border.bottom, 0);\n      }\n      dom.center.style.transform = \"translateY(\".concat(offset, \"px)\");\n\n      // show shadows when vertical scrolling is available\n      var visibilityTop = props.scrollTop == 0 ? 'hidden' : '';\n      var visibilityBottom = props.scrollTop == props.scrollTopMin ? 'hidden' : '';\n      dom.shadowTop.style.visibility = visibilityTop;\n      dom.shadowBottom.style.visibility = visibilityBottom;\n      dom.shadowTopLeft.style.visibility = visibilityTop;\n      dom.shadowBottomLeft.style.visibility = visibilityBottom;\n      dom.shadowTopRight.style.visibility = visibilityTop;\n      dom.shadowBottomRight.style.visibility = visibilityBottom;\n      if (options.verticalScroll) {\n        dom.rightContainer.className = 'vis-panel vis-right vis-vertical-scroll';\n        dom.leftContainer.className = 'vis-panel vis-left vis-vertical-scroll';\n        dom.shadowTopRight.style.visibility = \"hidden\";\n        dom.shadowBottomRight.style.visibility = \"hidden\";\n        dom.shadowTopLeft.style.visibility = \"hidden\";\n        dom.shadowBottomLeft.style.visibility = \"hidden\";\n        dom.left.style.top = '0px';\n        dom.right.style.top = '0px';\n      }\n      if (!options.verticalScroll || props.center.height < props.centerContainer.height) {\n        dom.left.style.top = \"\".concat(offset, \"px\");\n        dom.right.style.top = \"\".concat(offset, \"px\");\n        dom.rightContainer.className = dom.rightContainer.className.replace(new RegExp('(?:^|\\\\s)' + 'vis-vertical-scroll' + '(?:\\\\s|$)'), ' ');\n        dom.leftContainer.className = dom.leftContainer.className.replace(new RegExp('(?:^|\\\\s)' + 'vis-vertical-scroll' + '(?:\\\\s|$)'), ' ');\n        props.left.width = leftContainerClientWidth || -props.border.left;\n        props.right.width = rightContainerClientWidth || -props.border.right;\n        this._setDOM();\n      }\n\n      // enable/disable vertical panning\n      var contentsOverflow = props.center.height > props.centerContainer.height;\n      this.hammer.get('pan').set({\n        direction: contentsOverflow ? Hammer.DIRECTION_ALL : Hammer.DIRECTION_HORIZONTAL\n      });\n\n      // set the long press time\n      this.hammer.get('press').set({\n        time: this.options.longSelectPressTime\n      });\n\n      // redraw all components\n      _forEachInstanceProperty(_context20 = this.components).call(_context20, function (component) {\n        resized = component.redraw() || resized;\n      });\n      var MAX_REDRAW = 5;\n      if (resized) {\n        if (this.redrawCount < MAX_REDRAW) {\n          this.body.emitter.emit('_change');\n          return;\n        } else {\n          console.log('WARNING: infinite loop in redraw?');\n        }\n      } else {\n        this.redrawCount = 0;\n      }\n\n      //Emit public 'changed' event for UI updates, see issue #1592\n      this.body.emitter.emit(\"changed\");\n    }\n\n    /**\n     * sets the basic DOM components needed for the timeline\\graph2d\n     */\n  }, {\n    key: \"_setDOM\",\n    value: function _setDOM() {\n      var props = this.props;\n      var dom = this.dom;\n      props.leftContainer.width = props.left.width;\n      props.rightContainer.width = props.right.width;\n      var centerWidth = props.root.width - props.left.width - props.right.width;\n      props.center.width = centerWidth;\n      props.centerContainer.width = centerWidth;\n      props.top.width = centerWidth;\n      props.bottom.width = centerWidth;\n\n      // resize the panels\n      dom.background.style.height = \"\".concat(props.background.height, \"px\");\n      dom.backgroundVertical.style.height = \"\".concat(props.background.height, \"px\");\n      dom.backgroundHorizontal.style.height = \"\".concat(props.centerContainer.height, \"px\");\n      dom.centerContainer.style.height = \"\".concat(props.centerContainer.height, \"px\");\n      dom.leftContainer.style.height = \"\".concat(props.leftContainer.height, \"px\");\n      dom.rightContainer.style.height = \"\".concat(props.rightContainer.height, \"px\");\n      dom.background.style.width = \"\".concat(props.background.width, \"px\");\n      dom.backgroundVertical.style.width = \"\".concat(props.centerContainer.width, \"px\");\n      dom.backgroundHorizontal.style.width = \"\".concat(props.background.width, \"px\");\n      dom.centerContainer.style.width = \"\".concat(props.center.width, \"px\");\n      dom.top.style.width = \"\".concat(props.top.width, \"px\");\n      dom.bottom.style.width = \"\".concat(props.bottom.width, \"px\");\n\n      // reposition the panels\n      dom.background.style.left = '0';\n      dom.background.style.top = '0';\n      dom.backgroundVertical.style.left = \"\".concat(props.left.width + props.border.left, \"px\");\n      dom.backgroundVertical.style.top = '0';\n      dom.backgroundHorizontal.style.left = '0';\n      dom.backgroundHorizontal.style.top = \"\".concat(props.top.height, \"px\");\n      dom.centerContainer.style.left = \"\".concat(props.left.width, \"px\");\n      dom.centerContainer.style.top = \"\".concat(props.top.height, \"px\");\n      dom.leftContainer.style.left = '0';\n      dom.leftContainer.style.top = \"\".concat(props.top.height, \"px\");\n      dom.rightContainer.style.left = \"\".concat(props.left.width + props.center.width, \"px\");\n      dom.rightContainer.style.top = \"\".concat(props.top.height, \"px\");\n      dom.top.style.left = \"\".concat(props.left.width, \"px\");\n      dom.top.style.top = '0';\n      dom.bottom.style.left = \"\".concat(props.left.width, \"px\");\n      dom.bottom.style.top = \"\".concat(props.top.height + props.centerContainer.height, \"px\");\n      dom.center.style.left = '0';\n      dom.left.style.left = '0';\n      dom.right.style.left = '0';\n    }\n\n    /**\n     * Set a current time. This can be used for example to ensure that a client's\n     * time is synchronized with a shared server time.\n     * Only applicable when option `showCurrentTime` is true.\n     * @param {Date | string | number} time     A Date, unix timestamp, or\n     *                                          ISO date string.\n     */\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(time) {\n      if (!this.currentTime) {\n        throw new Error('Option showCurrentTime must be true');\n      }\n      this.currentTime.setCurrentTime(time);\n    }\n\n    /**\n     * Get the current time.\n     * Only applicable when option `showCurrentTime` is true.\n     * @return {Date} Returns the current time.\n     */\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      if (!this.currentTime) {\n        throw new Error('Option showCurrentTime must be true');\n      }\n      return this.currentTime.getCurrentTime();\n    }\n\n    /**\n     * Convert a position on screen (pixels) to a datetime\n     * @param {int}     x    Position on the screen in pixels\n     * @return {Date}   time The datetime the corresponds with given position x\n     * @protected\n     * TODO: move this function to Range\n     */\n  }, {\n    key: \"_toTime\",\n    value: function _toTime(x) {\n      return toTime(this, x, this.props.center.width);\n    }\n\n    /**\n     * Convert a position on the global screen (pixels) to a datetime\n     * @param {int}     x    Position on the screen in pixels\n     * @return {Date}   time The datetime the corresponds with given position x\n     * @protected\n     * TODO: move this function to Range\n     */\n  }, {\n    key: \"_toGlobalTime\",\n    value: function _toGlobalTime(x) {\n      return toTime(this, x, this.props.root.width);\n      //var conversion = this.range.conversion(this.props.root.width);\n      //return new Date(x / conversion.scale + conversion.offset);\n    }\n\n    /**\n     * Convert a datetime (Date object) into a position on the screen\n     * @param {Date}   time A date\n     * @return {int}   x    The position on the screen in pixels which corresponds\n     *                      with the given date.\n     * @protected\n     * TODO: move this function to Range\n     */\n  }, {\n    key: \"_toScreen\",\n    value: function _toScreen(time) {\n      return toScreen(this, time, this.props.center.width);\n    }\n\n    /**\n     * Convert a datetime (Date object) into a position on the root\n     * This is used to get the pixel density estimate for the screen, not the center panel\n     * @param {Date}   time A date\n     * @return {int}   x    The position on root in pixels which corresponds\n     *                      with the given date.\n     * @protected\n     * TODO: move this function to Range\n     */\n  }, {\n    key: \"_toGlobalScreen\",\n    value: function _toGlobalScreen(time) {\n      return toScreen(this, time, this.props.root.width);\n      //var conversion = this.range.conversion(this.props.root.width);\n      //return (time.valueOf() - conversion.offset) * conversion.scale;\n    }\n\n    /**\n     * Initialize watching when option autoResize is true\n     * @private\n     */\n  }, {\n    key: \"_initAutoResize\",\n    value: function _initAutoResize() {\n      if (this.options.autoResize == true) {\n        this._startAutoResize();\n      } else {\n        this._stopAutoResize();\n      }\n    }\n\n    /**\n     * Watch for changes in the size of the container. On resize, the Panel will\n     * automatically redraw itself.\n     * @private\n     */\n  }, {\n    key: \"_startAutoResize\",\n    value: function _startAutoResize() {\n      var me = this;\n      this._stopAutoResize();\n      this._onResize = function () {\n        if (me.options.autoResize != true) {\n          // stop watching when the option autoResize is changed to false\n          me._stopAutoResize();\n          return;\n        }\n        if (me.dom.root) {\n          var rootOffsetHeight = me.dom.root.offsetHeight;\n          var rootOffsetWidth = me.dom.root.offsetWidth;\n          // check whether the frame is resized\n          // Note: we compare offsetWidth here, not clientWidth. For some reason,\n          // IE does not restore the clientWidth from 0 to the actual width after\n          // changing the timeline's container display style from none to visible\n          if (rootOffsetWidth != me.props.lastWidth || rootOffsetHeight != me.props.lastHeight) {\n            me.props.lastWidth = rootOffsetWidth;\n            me.props.lastHeight = rootOffsetHeight;\n            me.props.scrollbarWidth = availableUtils.getScrollBarWidth();\n            me.body.emitter.emit('_change');\n          }\n        }\n      };\n\n      // add event listener to window resize\n      window.addEventListener('resize', this._onResize);\n\n      //Prevent initial unnecessary redraw\n      if (me.dom.root) {\n        me.props.lastWidth = me.dom.root.offsetWidth;\n        me.props.lastHeight = me.dom.root.offsetHeight;\n      }\n      this.watchTimer = _setInterval(this._onResize, 1000);\n    }\n\n    /**\n     * Stop watching for a resize of the frame.\n     * @private\n     */\n  }, {\n    key: \"_stopAutoResize\",\n    value: function _stopAutoResize() {\n      if (this.watchTimer) {\n        clearInterval(this.watchTimer);\n        this.watchTimer = undefined;\n      }\n\n      // remove event listener on window.resize\n      if (this._onResize) {\n        window.removeEventListener('resize', this._onResize);\n        this._onResize = null;\n      }\n    }\n\n    /**\n     * Start moving the timeline vertically\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onTouch\",\n    value: function _onTouch(event) {\n      // eslint-disable-line no-unused-vars\n      this.touch.allowDragging = true;\n      this.touch.initialScrollTop = this.props.scrollTop;\n    }\n\n    /**\n     * Start moving the timeline vertically\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onPinch\",\n    value: function _onPinch(event) {\n      // eslint-disable-line no-unused-vars\n      this.touch.allowDragging = false;\n    }\n\n    /**\n     * Move the timeline vertically\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onDrag\",\n    value: function _onDrag(event) {\n      if (!event) return;\n      // refuse to drag when we where pinching to prevent the timeline make a jump\n      // when releasing the fingers in opposite order from the touch screen\n      if (!this.touch.allowDragging) return;\n      var delta = event.deltaY;\n      var oldScrollTop = this._getScrollTop();\n      var newScrollTop = this._setScrollTop(this.touch.initialScrollTop + delta);\n      if (this.options.verticalScroll) {\n        this.dom.left.parentNode.scrollTop = -this.props.scrollTop;\n        this.dom.right.parentNode.scrollTop = -this.props.scrollTop;\n      }\n      if (newScrollTop != oldScrollTop) {\n        this.emit(\"verticalDrag\");\n      }\n    }\n\n    /**\n     * Apply a scrollTop\n     * @param {number} scrollTop\n     * @returns {number} scrollTop  Returns the applied scrollTop\n     * @private\n     */\n  }, {\n    key: \"_setScrollTop\",\n    value: function _setScrollTop(scrollTop) {\n      this.props.scrollTop = scrollTop;\n      this._updateScrollTop();\n      return this.props.scrollTop;\n    }\n\n    /**\n     * Update the current scrollTop when the height of  the containers has been changed\n     * @returns {number} scrollTop  Returns the applied scrollTop\n     * @private\n     */\n  }, {\n    key: \"_updateScrollTop\",\n    value: function _updateScrollTop() {\n      // recalculate the scrollTopMin\n      var scrollTopMin = Math.min(this.props.centerContainer.height - this.props.border.top - this.props.border.bottom - this.props.center.height, 0); // is negative or zero\n      if (scrollTopMin != this.props.scrollTopMin) {\n        // in case of bottom orientation, change the scrollTop such that the contents\n        // do not move relative to the time axis at the bottom\n        if (this.options.orientation.item != 'top') {\n          this.props.scrollTop += scrollTopMin - this.props.scrollTopMin;\n        }\n        this.props.scrollTopMin = scrollTopMin;\n      }\n\n      // limit the scrollTop to the feasible scroll range\n      if (this.props.scrollTop > 0) this.props.scrollTop = 0;\n      if (this.props.scrollTop < scrollTopMin) this.props.scrollTop = scrollTopMin;\n      if (this.options.verticalScroll) {\n        this.dom.left.parentNode.scrollTop = -this.props.scrollTop;\n        this.dom.right.parentNode.scrollTop = -this.props.scrollTop;\n      }\n      return this.props.scrollTop;\n    }\n\n    /**\n     * Get the current scrollTop\n     * @returns {number} scrollTop\n     * @private\n     */\n  }, {\n    key: \"_getScrollTop\",\n    value: function _getScrollTop() {\n      return this.props.scrollTop;\n    }\n\n    /**\n     * Load a configurator\n     * [at]returns {Object}\n     * @private\n     */\n  }, {\n    key: \"_createConfigurator\",\n    value: function _createConfigurator() {\n      throw new Error('Cannot invoke abstract method _createConfigurator');\n    }\n  }]);\n  return Core;\n}(); // turn Core into an event emitter\nEmitter(Core.prototype);\n\nfunction _createSuper$9(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$9(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$9() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * A current time bar\n */\nvar CurrentTime = /*#__PURE__*/function (_Component) {\n  _inherits(CurrentTime, _Component);\n  var _super = _createSuper$9(CurrentTime);\n  /**\n   * @param {{range: Range, dom: Object, domProps: Object}} body\n   * @param {Object} [options]        Available parameters:\n   *                                  {Boolean} [showCurrentTime]\n   *                                  {String}  [alignCurrentTime]\n   * @constructor CurrentTime\n   * @extends Component\n   */\n  function CurrentTime(body, options) {\n    var _context;\n    var _this;\n    _classCallCheck(this, CurrentTime);\n    _this = _super.call(this);\n    _this.body = body;\n\n    // default options\n    _this.defaultOptions = {\n      rtl: false,\n      showCurrentTime: true,\n      alignCurrentTime: undefined,\n      moment: moment$4,\n      locales: locales,\n      locale: 'en'\n    };\n    _this.options = availableUtils.extend({}, _this.defaultOptions);\n    _this.setOptions(options);\n    _this.options.locales = availableUtils.extend({}, locales, _this.options.locales);\n    var defaultLocales = _this.defaultOptions.locales[_this.defaultOptions.locale];\n    _forEachInstanceProperty(_context = _Object$keys(_this.options.locales)).call(_context, function (locale) {\n      _this.options.locales[locale] = availableUtils.extend({}, defaultLocales, _this.options.locales[locale]);\n    });\n    _this.offset = 0;\n    _this._create();\n    return _this;\n  }\n\n  /**\n   * Create the HTML DOM for the current time bar\n   * @private\n   */\n  _createClass(CurrentTime, [{\n    key: \"_create\",\n    value: function _create() {\n      var bar = document.createElement('div');\n      bar.className = 'vis-current-time';\n      bar.style.position = 'absolute';\n      bar.style.top = '0px';\n      bar.style.height = '100%';\n      this.bar = bar;\n    }\n\n    /**\n     * Destroy the CurrentTime bar\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.options.showCurrentTime = false;\n      this.redraw(); // will remove the bar from the DOM and stop refreshing\n\n      this.body = null;\n    }\n\n    /**\n     * Set options for the component. Options will be merged in current options.\n     * @param {Object} options  Available parameters:\n     *                          {boolean} [showCurrentTime]\n     *                          {String}  [alignCurrentTime]\n     */\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options) {\n        // copy all options that we know\n        availableUtils.selectiveExtend(['rtl', 'showCurrentTime', 'alignCurrentTime', 'moment', 'locale', 'locales'], this.options, options);\n      }\n    }\n\n    /**\n     * Repaint the component\n     * @return {boolean} Returns true if the component is resized\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      if (this.options.showCurrentTime) {\n        var _context2, _context3;\n        var parent = this.body.dom.backgroundVertical;\n        if (this.bar.parentNode != parent) {\n          // attach to the dom\n          if (this.bar.parentNode) {\n            this.bar.parentNode.removeChild(this.bar);\n          }\n          parent.appendChild(this.bar);\n          this.start();\n        }\n        var now = this.options.moment(_Date$now() + this.offset);\n        if (this.options.alignCurrentTime) {\n          now = now.startOf(this.options.alignCurrentTime);\n        }\n        var x = this.body.util.toScreen(now);\n        var locale = this.options.locales[this.options.locale];\n        if (!locale) {\n          if (!this.warned) {\n            console.warn(\"WARNING: options.locales['\".concat(this.options.locale, \"'] not found. See https://visjs.github.io/vis-timeline/docs/timeline/#Localization\"));\n            this.warned = true;\n          }\n          locale = this.options.locales['en']; // fall back on english when not available\n        }\n\n        var title = _concatInstanceProperty(_context2 = _concatInstanceProperty(_context3 = \"\".concat(locale.current, \" \")).call(_context3, locale.time, \": \")).call(_context2, now.format('dddd, MMMM Do YYYY, H:mm:ss'));\n        title = title.charAt(0).toUpperCase() + title.substring(1);\n        if (this.options.rtl) {\n          this.bar.style.transform = \"translateX(\".concat(x * -1, \"px)\");\n        } else {\n          this.bar.style.transform = \"translateX(\".concat(x, \"px)\");\n        }\n        this.bar.title = title;\n      } else {\n        // remove the line from the DOM\n        if (this.bar.parentNode) {\n          this.bar.parentNode.removeChild(this.bar);\n        }\n        this.stop();\n      }\n      return false;\n    }\n\n    /**\n     * Start auto refreshing the current time bar\n     */\n  }, {\n    key: \"start\",\n    value: function start() {\n      var me = this;\n\n      /**\n       *  Updates the current time.\n       */\n      function update() {\n        me.stop();\n\n        // determine interval to refresh\n        var scale = me.body.range.conversion(me.body.domProps.center.width).scale;\n        var interval = 1 / scale / 10;\n        if (interval < 30) interval = 30;\n        if (interval > 1000) interval = 1000;\n        me.redraw();\n        me.body.emitter.emit('currentTimeTick');\n\n        // start a renderTimer to adjust for the new time\n        me.currentTimeTimer = _setTimeout(update, interval);\n      }\n      update();\n    }\n\n    /**\n     * Stop auto refreshing the current time bar\n     */\n  }, {\n    key: \"stop\",\n    value: function stop() {\n      if (this.currentTimeTimer !== undefined) {\n        clearTimeout(this.currentTimeTimer);\n        delete this.currentTimeTimer;\n      }\n    }\n\n    /**\n     * Set a current time. This can be used for example to ensure that a client's\n     * time is synchronized with a shared server time.\n     * @param {Date | string | number} time     A Date, unix timestamp, or\n     *                                          ISO date string.\n     */\n  }, {\n    key: \"setCurrentTime\",\n    value: function setCurrentTime(time) {\n      var t = availableUtils.convert(time, 'Date').valueOf();\n      var now = _Date$now();\n      this.offset = t - now;\n      this.redraw();\n    }\n\n    /**\n     * Get the current time.\n     * @return {Date} Returns the current time.\n     */\n  }, {\n    key: \"getCurrentTime\",\n    value: function getCurrentTime() {\n      return new Date(_Date$now() + this.offset);\n    }\n  }]);\n  return CurrentTime;\n}(Component);\n\nvar $$2 = _export;\nvar $find = arrayIteration.find;\n\nvar FIND = 'find';\nvar SKIPS_HOLES$1 = true;\n\n// Shouldn't skip holes\n// eslint-disable-next-line es/no-array-prototype-find -- testing\nif (FIND in []) Array(1)[FIND](function () { SKIPS_HOLES$1 = false; });\n\n// `Array.prototype.find` method\n// https://tc39.es/ecma262/#sec-array.prototype.find\n$$2({ target: 'Array', proto: true, forced: SKIPS_HOLES$1 }, {\n  find: function find(callbackfn /* , that = undefined */) {\n    return $find(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nvar entryVirtual$2 = entryVirtual$o;\n\nvar find$3 = entryVirtual$2('Array').find;\n\nvar isPrototypeOf$2 = objectIsPrototypeOf;\nvar method$2 = find$3;\n\nvar ArrayPrototype$2 = Array.prototype;\n\nvar find$2 = function (it) {\n  var own = it.find;\n  return it === ArrayPrototype$2 || (isPrototypeOf$2(ArrayPrototype$2, it) && own === ArrayPrototype$2.find) ? method$2 : own;\n};\n\nvar parent$2 = find$2;\n\nvar find$1 = parent$2;\n\nvar find = find$1;\n\nvar _findInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(find);\n\nvar $$1 = _export;\nvar $findIndex = arrayIteration.findIndex;\n\nvar FIND_INDEX = 'findIndex';\nvar SKIPS_HOLES = true;\n\n// Shouldn't skip holes\n// eslint-disable-next-line es/no-array-prototype-findindex -- testing\nif (FIND_INDEX in []) Array(1)[FIND_INDEX](function () { SKIPS_HOLES = false; });\n\n// `Array.prototype.findIndex` method\n// https://tc39.es/ecma262/#sec-array.prototype.findindex\n$$1({ target: 'Array', proto: true, forced: SKIPS_HOLES }, {\n  findIndex: function findIndex(callbackfn /* , that = undefined */) {\n    return $findIndex(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nvar entryVirtual$1 = entryVirtual$o;\n\nvar findIndex$3 = entryVirtual$1('Array').findIndex;\n\nvar isPrototypeOf$1 = objectIsPrototypeOf;\nvar method$1 = findIndex$3;\n\nvar ArrayPrototype$1 = Array.prototype;\n\nvar findIndex$2 = function (it) {\n  var own = it.findIndex;\n  return it === ArrayPrototype$1 || (isPrototypeOf$1(ArrayPrototype$1, it) && own === ArrayPrototype$1.findIndex) ? method$1 : own;\n};\n\nvar parent$1 = findIndex$2;\n\nvar findIndex$1 = parent$1;\n\nvar findIndex = findIndex$1;\n\nvar _findIndexInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(findIndex);\n\nfunction _createForOfIteratorHelper$5(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray$5(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray$5(o, minLen) { var _context5; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$5(o, minLen); var n = _sliceInstanceProperty(_context5 = Object.prototype.toString.call(o)).call(_context5, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from$1(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$5(o, minLen); }\nfunction _arrayLikeToArray$5(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n// Utility functions for ordering and stacking of items\nvar EPSILON = 0.001; // used when checking collisions, to prevent round-off errors\n\n/**\n * Order items by their start data\n * @param {Item[]} items\n */\nfunction orderByStart(items) {\n  _sortInstanceProperty(items).call(items, function (a, b) {\n    return a.data.start - b.data.start;\n  });\n}\n\n/**\n * Order items by their end date. If they have no end date, their start date\n * is used.\n * @param {Item[]} items\n */\nfunction orderByEnd(items) {\n  _sortInstanceProperty(items).call(items, function (a, b) {\n    var aTime = 'end' in a.data ? a.data.end : a.data.start;\n    var bTime = 'end' in b.data ? b.data.end : b.data.start;\n    return aTime - bTime;\n  });\n}\n\n/**\n * Adjust vertical positions of the items such that they don't overlap each\n * other.\n * @param {Item[]} items\n *            All visible items\n * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n *            Margins between items and between items and the axis.\n * @param {boolean} [force=false]\n *            If true, all items will be repositioned. If false (default), only\n *            items having a top===null will be re-stacked\n * @param {function} shouldBailItemsRedrawFunction\n *            bailing function\n * @return {boolean} shouldBail\n */\nfunction stack(items, margin, force, shouldBailItemsRedrawFunction) {\n  var stackingResult = performStacking(items, margin.item, false, function (item) {\n    return item.stack && (force || item.top === null);\n  }, function (item) {\n    return item.stack;\n  }, function (item) {\n    return margin.axis;\n  }, shouldBailItemsRedrawFunction);\n\n  // If shouldBail function returned true during stacking calculation\n  return stackingResult === null;\n}\n\n/**\n * Adjust vertical positions of the items within a single subgroup such that they\n * don't overlap each other.\n * @param {Item[]} items\n *            All items withina subgroup\n * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n *            Margins between items and between items and the axis.\n * @param {subgroup} subgroup\n *            The subgroup that is being stacked\n */\nfunction substack(items, margin, subgroup) {\n  var subgroupHeight = performStacking(items, margin.item, false, function (item) {\n    return item.stack;\n  }, function (item) {\n    return true;\n  }, function (item) {\n    return item.baseTop;\n  });\n  subgroup.height = subgroupHeight - subgroup.top + 0.5 * margin.item.vertical;\n}\n\n/**\n * Adjust vertical positions of the items without stacking them\n * @param {Item[]} items\n *            All visible items\n * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n *            Margins between items and between items and the axis.\n * @param {subgroups[]} subgroups\n *            All subgroups\n * @param {boolean} isStackSubgroups\n */\nfunction nostack(items, margin, subgroups, isStackSubgroups) {\n  for (var _i = 0; _i < items.length; _i++) {\n    if (items[_i].data.subgroup == undefined) {\n      items[_i].top = margin.item.vertical;\n    } else if (items[_i].data.subgroup !== undefined && isStackSubgroups) {\n      var newTop = 0;\n      for (var subgroup in subgroups) {\n        if (subgroups.hasOwnProperty(subgroup)) {\n          if (subgroups[subgroup].visible == true && subgroups[subgroup].index < subgroups[items[_i].data.subgroup].index) {\n            newTop += subgroups[subgroup].height;\n            subgroups[items[_i].data.subgroup].top = newTop;\n          }\n        }\n      }\n      items[_i].top = newTop + 0.5 * margin.item.vertical;\n    }\n  }\n  if (!isStackSubgroups) {\n    stackSubgroups(items, margin, subgroups);\n  }\n}\n\n/**\n * Adjust vertical positions of the subgroups such that they don't overlap each\n * other.\n * @param {Array.<timeline.Item>} items\n * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin Margins between items and between items and the axis.\n * @param {subgroups[]} subgroups\n *            All subgroups\n */\nfunction stackSubgroups(items, margin, subgroups) {\n  var _context;\n  performStacking(_sortInstanceProperty(_context = _Object$values2(subgroups)).call(_context, function (a, b) {\n    if (a.index > b.index) return 1;\n    if (a.index < b.index) return -1;\n    return 0;\n  }), {\n    vertical: 0\n  }, true, function (item) {\n    return true;\n  }, function (item) {\n    return true;\n  }, function (item) {\n    return 0;\n  });\n  for (var _i2 = 0; _i2 < items.length; _i2++) {\n    if (items[_i2].data.subgroup !== undefined) {\n      items[_i2].top = subgroups[items[_i2].data.subgroup].top + 0.5 * margin.item.vertical;\n    }\n  }\n}\n\n/**\n * Adjust vertical positions of the subgroups such that they don't overlap each\n * other, then stacks the contents of each subgroup individually.\n * @param {Item[]} subgroupItems\n *            All the items in a subgroup\n * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n *            Margins between items and between items and the axis.\n * @param {subgroups[]} subgroups\n *            All subgroups\n */\nfunction stackSubgroupsWithInnerStack(subgroupItems, margin, subgroups) {\n  var doSubStack = false;\n\n  // Run subgroups in their order (if any)\n  var subgroupOrder = [];\n  for (var subgroup in subgroups) {\n    if (subgroups[subgroup].hasOwnProperty(\"index\")) {\n      subgroupOrder[subgroups[subgroup].index] = subgroup;\n    } else {\n      subgroupOrder.push(subgroup);\n    }\n  }\n  for (var j = 0; j < subgroupOrder.length; j++) {\n    subgroup = subgroupOrder[j];\n    if (subgroups.hasOwnProperty(subgroup)) {\n      doSubStack = doSubStack || subgroups[subgroup].stack;\n      subgroups[subgroup].top = 0;\n      for (var otherSubgroup in subgroups) {\n        if (subgroups[otherSubgroup].visible && subgroups[subgroup].index > subgroups[otherSubgroup].index) {\n          subgroups[subgroup].top += subgroups[otherSubgroup].height;\n        }\n      }\n      var items = subgroupItems[subgroup];\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        if (items[_i3].data.subgroup !== undefined) {\n          items[_i3].top = subgroups[items[_i3].data.subgroup].top + 0.5 * margin.item.vertical;\n          if (subgroups[subgroup].stack) {\n            items[_i3].baseTop = items[_i3].top;\n          }\n        }\n      }\n      if (doSubStack && subgroups[subgroup].stack) {\n        substack(subgroupItems[subgroup], margin, subgroups[subgroup]);\n      }\n    }\n  }\n}\n\n/**\n * Reusable stacking function\n * \n * @param {Item[]} items \n * An array of items to consider during stacking.\n * @param {{horizontal: number, vertical: number}} margins\n * Margins to be used for collision checking and placement of items.\n * @param {boolean} compareTimes\n * By default, horizontal collision is checked based on the spatial position of the items (left/right and width).\n * If this argument is true, horizontal collision will instead be checked based on the start/end times of each item.\n * Vertical collision is always checked spatially.\n * @param {(Item) => number | null} shouldStack\n * A callback function which is called before we start to process an item. The return value indicates whether the item will be processed.\n * @param {(Item) => boolean} shouldOthersStack\n * A callback function which indicates whether other items should consider this item when being stacked.\n * @param {(Item) => number} getInitialHeight\n * A callback function which determines the height items are initially placed at\n * @param {() => boolean} shouldBail \n * A callback function which should indicate if the stacking process should be aborted.\n * \n * @returns {null|number}\n * if shouldBail was triggered, returns null\n * otherwise, returns the maximum height\n */\nfunction performStacking(items, margins, compareTimes, shouldStack, shouldOthersStack, getInitialHeight, shouldBail) {\n  // Time-based horizontal comparison\n  var getItemStart = function getItemStart(item) {\n    return item.start;\n  };\n  var getItemEnd = function getItemEnd(item) {\n    return item.end;\n  };\n  if (!compareTimes) {\n    // Spatial horizontal comparisons\n    var rtl = !!(items[0] && items[0].options.rtl);\n    if (rtl) {\n      getItemStart = function getItemStart(item) {\n        return item.right;\n      };\n    } else {\n      getItemStart = function getItemStart(item) {\n        return item.left;\n      };\n    }\n    getItemEnd = function getItemEnd(item) {\n      return getItemStart(item) + item.width + margins.horizontal;\n    };\n  }\n  var itemsToPosition = [];\n  var itemsAlreadyPositioned = []; // It's vital that this array is kept sorted based on the start of each item\n\n  // If the order we needed to place items was based purely on the start of each item, we could calculate stacking very efficiently.\n  // Unfortunately for us, this is not guaranteed. But the order is often based on the start of items at least to some degree, and\n  // we can use this to make some optimisations. While items are proceeding in order of start, we can keep moving our search indexes\n  // forwards. Then if we encounter an item that's out of order, we reset our indexes and search from the beginning of the array again.\n  var previousStart = null;\n  var insertionIndex = 0;\n\n  // First let's handle any immoveable items\n  var _iterator = _createForOfIteratorHelper$5(items),\n    _step;\n  try {\n    var _loop2 = function _loop2() {\n      var item = _step.value;\n      if (shouldStack(item)) {\n        itemsToPosition.push(item);\n      } else {\n        if (shouldOthersStack(item)) {\n          var itemStart = getItemStart(item);\n\n          // We need to put immoveable items into itemsAlreadyPositioned and ensure that this array is sorted.\n          // We could simply insert them, and then use JavaScript's sort function to sort them afterwards.\n          // This would achieve an average complexity of O(n log n).\n          // \n          // Instead, I'm gambling that the start of each item will usually be the same or later than the\n          // start of the previous item. While this holds (best case), we can insert items in O(n).\n          // In the worst case (where each item starts before the previous item) this grows to O(n^2).\n          // \n          // I am making the assumption that for most datasets, the \"order\" function will have relatively low cardinality,\n          // and therefore this tradeoff should be easily worth it.\n          if (previousStart !== null && itemStart < previousStart - EPSILON) {\n            insertionIndex = 0;\n          }\n          previousStart = itemStart;\n          insertionIndex = findIndexFrom(itemsAlreadyPositioned, function (i) {\n            return getItemStart(i) - EPSILON > itemStart;\n          }, insertionIndex);\n          _spliceInstanceProperty(itemsAlreadyPositioned).call(itemsAlreadyPositioned, insertionIndex, 0, item);\n          insertionIndex++;\n        }\n      }\n    };\n    for (_iterator.s(); !(_step = _iterator.n()).done;) {\n      _loop2();\n    }\n\n    // Now we can loop through each item (in order) and find a position for them\n  } catch (err) {\n    _iterator.e(err);\n  } finally {\n    _iterator.f();\n  }\n  previousStart = null;\n  var previousEnd = null;\n  insertionIndex = 0;\n  var horizontalOverlapStartIndex = 0;\n  var horizontalOverlapEndIndex = 0;\n  var maxHeight = 0;\n  var _loop = function _loop() {\n      var _context2, _context3;\n      var item = itemsToPosition.shift();\n      item.top = getInitialHeight(item);\n      var itemStart = getItemStart(item);\n      var itemEnd = getItemEnd(item);\n      if (previousStart !== null && itemStart < previousStart - EPSILON) {\n        horizontalOverlapStartIndex = 0;\n        horizontalOverlapEndIndex = 0;\n        insertionIndex = 0;\n        previousEnd = null;\n      }\n      previousStart = itemStart;\n\n      // Take advantage of the sorted itemsAlreadyPositioned array to narrow down the search\n      horizontalOverlapStartIndex = findIndexFrom(itemsAlreadyPositioned, function (i) {\n        return itemStart < getItemEnd(i) - EPSILON;\n      }, horizontalOverlapStartIndex);\n      // Since items aren't sorted by end time, it might increase or decrease from one item to the next. In order to keep an efficient search area, we will seek forwards/backwards accordingly.\n      if (previousEnd === null || previousEnd < itemEnd - EPSILON) {\n        horizontalOverlapEndIndex = findIndexFrom(itemsAlreadyPositioned, function (i) {\n          return itemEnd < getItemStart(i) - EPSILON;\n        }, Math.max(horizontalOverlapStartIndex, horizontalOverlapEndIndex));\n      }\n      if (previousEnd !== null && previousEnd - EPSILON > itemEnd) {\n        horizontalOverlapEndIndex = findLastIndexBetween(itemsAlreadyPositioned, function (i) {\n          return itemEnd + EPSILON >= getItemStart(i);\n        }, horizontalOverlapStartIndex, horizontalOverlapEndIndex) + 1;\n      }\n\n      // Sort by vertical position so we don't have to reconsider past items if we move an item\n      var horizontallyCollidingItems = _sortInstanceProperty(_context2 = _filterInstanceProperty(_context3 = _sliceInstanceProperty(itemsAlreadyPositioned).call(itemsAlreadyPositioned, horizontalOverlapStartIndex, horizontalOverlapEndIndex)).call(_context3, function (i) {\n        return itemStart < getItemEnd(i) - EPSILON && itemEnd - EPSILON > getItemStart(i);\n      })).call(_context2, function (a, b) {\n        return a.top - b.top;\n      });\n\n      // Keep moving the item down until it stops colliding with any other items\n      for (var i2 = 0; i2 < horizontallyCollidingItems.length; i2++) {\n        var otherItem = horizontallyCollidingItems[i2];\n        if (checkVerticalSpatialCollision(item, otherItem, margins)) {\n          item.top = otherItem.top + otherItem.height + margins.vertical;\n        }\n      }\n      if (shouldOthersStack(item)) {\n        // Insert the item into itemsAlreadyPositioned, ensuring itemsAlreadyPositioned remains sorted.\n        // In the best case, we can insert an item in constant time O(1). In the worst case, we insert an item in linear time O(n).\n        // In both cases, this is better than doing a naive insert and then sort, which would cost on average O(n log n).\n        insertionIndex = findIndexFrom(itemsAlreadyPositioned, function (i) {\n          return getItemStart(i) - EPSILON > itemStart;\n        }, insertionIndex);\n        _spliceInstanceProperty(itemsAlreadyPositioned).call(itemsAlreadyPositioned, insertionIndex, 0, item);\n        insertionIndex++;\n      }\n\n      // Keep track of the tallest item we've seen before\n      var currentHeight = item.top + item.height;\n      if (currentHeight > maxHeight) {\n        maxHeight = currentHeight;\n      }\n      if (shouldBail && shouldBail()) {\n        return {\n          v: null\n        };\n      }\n    },\n    _ret;\n  while (itemsToPosition.length > 0) {\n    _ret = _loop();\n    if (_ret) return _ret.v;\n  }\n  return maxHeight;\n}\n\n/**\n * Test if the two provided items collide\n * The items must have parameters left, width, top, and height.\n * @param {Item} a          The first item\n * @param {Item} b          The second item\n * @param {{vertical: number}} margin\n *                          An object containing a horizontal and vertical\n *                          minimum required margin.\n * @return {boolean}        true if a and b collide, else false\n */\nfunction checkVerticalSpatialCollision(a, b, margin) {\n  return a.top - margin.vertical + EPSILON < b.top + b.height && a.top + a.height + margin.vertical - EPSILON > b.top;\n}\n\n/**\n * Find index of first item to meet predicate after a certain index.\n * If no such item is found, returns the length of the array.\n * \n * @param {any[]} arr The array\n * @param {(item) => boolean} predicate A function that should return true when a suitable item is found\n * @param {number|undefined} startIndex The index to start search from (inclusive). Optional, if not provided will search from the beginning of the array.\n * \n * @return {number}\n */\nfunction findIndexFrom(arr, predicate, startIndex) {\n  var _context4;\n  if (!startIndex) {\n    startIndex = 0;\n  }\n  var matchIndex = _findIndexInstanceProperty(_context4 = _sliceInstanceProperty(arr).call(arr, startIndex)).call(_context4, predicate);\n  if (matchIndex === -1) {\n    return arr.length;\n  }\n  return matchIndex + startIndex;\n}\n\n/**\n * Find index of last item to meet predicate within a given range.\n * If no such item is found, returns the index prior to the start of the range.\n * \n * @param {any[]} arr The array\n * @param {(item) => boolean} predicate A function that should return true when a suitable item is found\n * @param {number|undefined} startIndex The earliest index to search to (inclusive). Optional, if not provided will continue until the start of the array.\n * @param {number|undefined} endIndex The end of the search range (exclusive). The search will begin on the index prior to this value. Optional, defaults to the end of array.\n * \n * @return {number}\n */\nfunction findLastIndexBetween(arr, predicate, startIndex, endIndex) {\n  if (!startIndex) {\n    startIndex = 0;\n  }\n  if (!endIndex) {\n    endIndex = arr.length;\n  }\n  for (i = endIndex - 1; i >= startIndex; i--) {\n    if (predicate(arr[i])) {\n      return i;\n    }\n  }\n  return startIndex - 1;\n}\n\nvar stack$1 = /*#__PURE__*/Object.freeze({\n\t__proto__: null,\n\tnostack: nostack,\n\torderByEnd: orderByEnd,\n\torderByStart: orderByStart,\n\tstack: stack,\n\tstackSubgroups: stackSubgroups,\n\tstackSubgroupsWithInnerStack: stackSubgroupsWithInnerStack,\n\tsubstack: substack\n});\n\nvar UNGROUPED$3 = '__ungrouped__'; // reserved group id for ungrouped items\nvar BACKGROUND$2 = '__background__'; // reserved group id for background items without group\n\nvar ReservedGroupIds$1 = {\n  UNGROUPED: UNGROUPED$3,\n  BACKGROUND: BACKGROUND$2\n};\n\n/**\n * @constructor Group\n */\nvar Group = /*#__PURE__*/function () {\n  /**\n  * @param {number | string} groupId\n  * @param {Object} data\n  * @param {ItemSet} itemSet\n  * @constructor Group\n  */\n  function Group(groupId, data, itemSet) {\n    var _this = this;\n    _classCallCheck(this, Group);\n    this.groupId = groupId;\n    this.subgroups = {};\n    this.subgroupStack = {};\n    this.subgroupStackAll = false;\n    this.subgroupVisibility = {};\n    this.doInnerStack = false;\n    this.shouldBailStackItems = false;\n    this.subgroupIndex = 0;\n    this.subgroupOrderer = data && data.subgroupOrder;\n    this.itemSet = itemSet;\n    this.isVisible = null;\n    this.stackDirty = true; // if true, items will be restacked on next redraw\n\n    // This is a stack of functions (`() => void`) that will be executed before\n    // the instance is disposed off (method `dispose`). Anything that needs to\n    // be manually disposed off before garbage collection happens (or so that\n    // garbage collection can happen) should be added to this stack.\n    this._disposeCallbacks = [];\n    if (data && data.nestedGroups) {\n      this.nestedGroups = data.nestedGroups;\n      if (data.showNested == false) {\n        this.showNested = false;\n      } else {\n        this.showNested = true;\n      }\n    }\n    if (data && data.subgroupStack) {\n      if (typeof data.subgroupStack === \"boolean\") {\n        this.doInnerStack = data.subgroupStack;\n        this.subgroupStackAll = data.subgroupStack;\n      } else {\n        // We might be doing stacking on specific sub groups, but only\n        // if at least one is set to do stacking\n        for (var key in data.subgroupStack) {\n          this.subgroupStack[key] = data.subgroupStack[key];\n          this.doInnerStack = this.doInnerStack || data.subgroupStack[key];\n        }\n      }\n    }\n    if (data && data.heightMode) {\n      this.heightMode = data.heightMode;\n    } else {\n      this.heightMode = itemSet.options.groupHeightMode;\n    }\n    this.nestedInGroup = null;\n    this.dom = {};\n    this.props = {\n      label: {\n        width: 0,\n        height: 0\n      }\n    };\n    this.className = null;\n    this.items = {}; // items filtered by groupId of this group\n    this.visibleItems = []; // items currently visible in window\n    this.itemsInRange = []; // items currently in range\n    this.orderedItems = {\n      byStart: [],\n      byEnd: []\n    };\n    this.checkRangedItems = false; // needed to refresh the ranged items if the window is programatically changed with NO overlap.\n\n    var handleCheckRangedItems = function handleCheckRangedItems() {\n      _this.checkRangedItems = true;\n    };\n    this.itemSet.body.emitter.on(\"checkRangedItems\", handleCheckRangedItems);\n    this._disposeCallbacks.push(function () {\n      _this.itemSet.body.emitter.off(\"checkRangedItems\", handleCheckRangedItems);\n    });\n    this._create();\n    this.setData(data);\n  }\n\n  /**\n   * Create DOM elements for the group\n   * @private\n   */\n  _createClass(Group, [{\n    key: \"_create\",\n    value: function _create() {\n      var label = document.createElement('div');\n      if (this.itemSet.options.groupEditable.order) {\n        label.className = 'vis-label draggable';\n      } else {\n        label.className = 'vis-label';\n      }\n      this.dom.label = label;\n      var inner = document.createElement('div');\n      inner.className = 'vis-inner';\n      label.appendChild(inner);\n      this.dom.inner = inner;\n      var foreground = document.createElement('div');\n      foreground.className = 'vis-group';\n      foreground['vis-group'] = this;\n      this.dom.foreground = foreground;\n      this.dom.background = document.createElement('div');\n      this.dom.background.className = 'vis-group';\n      this.dom.axis = document.createElement('div');\n      this.dom.axis.className = 'vis-group';\n\n      // create a hidden marker to detect when the Timelines container is attached\n      // to the DOM, or the style of a parent of the Timeline is changed from\n      // display:none is changed to visible.\n      this.dom.marker = document.createElement('div');\n      this.dom.marker.style.visibility = 'hidden';\n      this.dom.marker.style.position = 'absolute';\n      this.dom.marker.innerHTML = '';\n      this.dom.background.appendChild(this.dom.marker);\n    }\n\n    /**\n     * Set the group data for this group\n     * @param {Object} data   Group data, can contain properties content and className\n     */\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      if (this.itemSet.groupTouchParams.isDragging) return;\n\n      // update contents\n      var content;\n      var templateFunction;\n      if (data && data.subgroupVisibility) {\n        for (var key in data.subgroupVisibility) {\n          this.subgroupVisibility[key] = data.subgroupVisibility[key];\n        }\n      }\n      if (this.itemSet.options && this.itemSet.options.groupTemplate) {\n        var _context;\n        templateFunction = _bindInstanceProperty$1(_context = this.itemSet.options.groupTemplate).call(_context, this);\n        content = templateFunction(data, this.dom.inner);\n      } else {\n        content = data && data.content;\n      }\n      if (content instanceof Element) {\n        while (this.dom.inner.firstChild) {\n          this.dom.inner.removeChild(this.dom.inner.firstChild);\n        }\n        this.dom.inner.appendChild(content);\n      } else if (content instanceof Object && content.isReactComponent) ; else if (content instanceof Object) {\n        templateFunction(data, this.dom.inner);\n      } else if (content !== undefined && content !== null) {\n        this.dom.inner.innerHTML = availableUtils.xss(content);\n      } else {\n        this.dom.inner.innerHTML = availableUtils.xss(this.groupId || ''); // groupId can be null\n      }\n\n      // update title\n      this.dom.label.title = data && data.title || '';\n      if (!this.dom.inner.firstChild) {\n        availableUtils.addClassName(this.dom.inner, 'vis-hidden');\n      } else {\n        availableUtils.removeClassName(this.dom.inner, 'vis-hidden');\n      }\n      if (data && data.nestedGroups) {\n        if (!this.nestedGroups || this.nestedGroups != data.nestedGroups) {\n          this.nestedGroups = data.nestedGroups;\n        }\n        if (data.showNested !== undefined || this.showNested === undefined) {\n          if (data.showNested == false) {\n            this.showNested = false;\n          } else {\n            this.showNested = true;\n          }\n        }\n        availableUtils.addClassName(this.dom.label, 'vis-nesting-group');\n        if (this.showNested) {\n          availableUtils.removeClassName(this.dom.label, 'collapsed');\n          availableUtils.addClassName(this.dom.label, 'expanded');\n        } else {\n          availableUtils.removeClassName(this.dom.label, 'expanded');\n          availableUtils.addClassName(this.dom.label, 'collapsed');\n        }\n      } else if (this.nestedGroups) {\n        this.nestedGroups = null;\n        availableUtils.removeClassName(this.dom.label, 'collapsed');\n        availableUtils.removeClassName(this.dom.label, 'expanded');\n        availableUtils.removeClassName(this.dom.label, 'vis-nesting-group');\n      }\n      if (data && (data.treeLevel || data.nestedInGroup)) {\n        availableUtils.addClassName(this.dom.label, 'vis-nested-group');\n        if (data.treeLevel) {\n          availableUtils.addClassName(this.dom.label, 'vis-group-level-' + data.treeLevel);\n        } else {\n          // Nesting level is unknown, but we're sure it's at least 1\n          availableUtils.addClassName(this.dom.label, 'vis-group-level-unknown-but-gte1');\n        }\n      } else {\n        availableUtils.addClassName(this.dom.label, 'vis-group-level-0');\n      }\n\n      // update className\n      var className = data && data.className || null;\n      if (className != this.className) {\n        if (this.className) {\n          availableUtils.removeClassName(this.dom.label, this.className);\n          availableUtils.removeClassName(this.dom.foreground, this.className);\n          availableUtils.removeClassName(this.dom.background, this.className);\n          availableUtils.removeClassName(this.dom.axis, this.className);\n        }\n        availableUtils.addClassName(this.dom.label, className);\n        availableUtils.addClassName(this.dom.foreground, className);\n        availableUtils.addClassName(this.dom.background, className);\n        availableUtils.addClassName(this.dom.axis, className);\n        this.className = className;\n      }\n\n      // update style\n      if (this.style) {\n        availableUtils.removeCssText(this.dom.label, this.style);\n        this.style = null;\n      }\n      if (data && data.style) {\n        availableUtils.addCssText(this.dom.label, data.style);\n        this.style = data.style;\n      }\n    }\n\n    /**\n     * Get the width of the group label\n     * @return {number} width\n     */\n  }, {\n    key: \"getLabelWidth\",\n    value: function getLabelWidth() {\n      return this.props.label.width;\n    }\n\n    /**\n     * check if group has had an initial height hange\n     * @returns {boolean} \n     */\n  }, {\n    key: \"_didMarkerHeightChange\",\n    value: function _didMarkerHeightChange() {\n      var markerHeight = this.dom.marker.clientHeight;\n      if (markerHeight != this.lastMarkerHeight) {\n        this.lastMarkerHeight = markerHeight;\n        var redrawQueue = {};\n        var redrawQueueLength = 0;\n        _forEachInstanceProperty(availableUtils).call(availableUtils, this.items, function (item, key) {\n          item.dirty = true;\n          if (item.displayed) {\n            var returnQueue = true;\n            redrawQueue[key] = item.redraw(returnQueue);\n            redrawQueueLength = redrawQueue[key].length;\n          }\n        });\n        var needRedraw = redrawQueueLength > 0;\n        if (needRedraw) {\n          var _loop = function _loop(i) {\n            _forEachInstanceProperty(availableUtils).call(availableUtils, redrawQueue, function (fns) {\n              fns[i]();\n            });\n          };\n          // redraw all regular items\n          for (var i = 0; i < redrawQueueLength; i++) {\n            _loop(i);\n          }\n        }\n        return true;\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * calculate group dimentions and position\n     * @param {number} pixels\n     */\n  }, {\n    key: \"_calculateGroupSizeAndPosition\",\n    value: function _calculateGroupSizeAndPosition() {\n      var _this$dom$foreground = this.dom.foreground,\n        offsetTop = _this$dom$foreground.offsetTop,\n        offsetLeft = _this$dom$foreground.offsetLeft,\n        offsetWidth = _this$dom$foreground.offsetWidth;\n      this.top = offsetTop;\n      this.right = offsetLeft;\n      this.width = offsetWidth;\n    }\n\n    /**\n     * checks if should bail redraw of items\n     * @returns {boolean} should bail \n     */\n  }, {\n    key: \"_shouldBailItemsRedraw\",\n    value: function _shouldBailItemsRedraw() {\n      var me = this;\n      var timeoutOptions = this.itemSet.options.onTimeout;\n      var bailOptions = {\n        relativeBailingTime: this.itemSet.itemsSettingTime,\n        bailTimeMs: timeoutOptions && timeoutOptions.timeoutMs,\n        userBailFunction: timeoutOptions && timeoutOptions.callback,\n        shouldBailStackItems: this.shouldBailStackItems\n      };\n      var bail = null;\n      if (!this.itemSet.initialDrawDone) {\n        if (bailOptions.shouldBailStackItems) {\n          return true;\n        }\n        if (Math.abs(_Date$now() - new Date(bailOptions.relativeBailingTime)) > bailOptions.bailTimeMs) {\n          if (bailOptions.userBailFunction && this.itemSet.userContinueNotBail == null) {\n            bailOptions.userBailFunction(function (didUserContinue) {\n              me.itemSet.userContinueNotBail = didUserContinue;\n              bail = !didUserContinue;\n            });\n          } else if (me.itemSet.userContinueNotBail == false) {\n            bail = true;\n          } else {\n            bail = false;\n          }\n        }\n      }\n      return bail;\n    }\n\n    /**\n     * redraws items\n     * @param {boolean} forceRestack\n     * @param {boolean} lastIsVisible\n     * @param {number} margin\n     * @param {object} range\n     * @private\n     */\n  }, {\n    key: \"_redrawItems\",\n    value: function _redrawItems(forceRestack, lastIsVisible, margin, range) {\n      var _this2 = this;\n      var restack = forceRestack || this.stackDirty || this.isVisible && !lastIsVisible;\n\n      // if restacking, reposition visible items vertically\n      if (restack) {\n        var _context2, _context3, _context4, _context5, _context6, _context7;\n        var orderedItems = {\n          byEnd: _filterInstanceProperty(_context2 = this.orderedItems.byEnd).call(_context2, function (item) {\n            return !item.isCluster;\n          }),\n          byStart: _filterInstanceProperty(_context3 = this.orderedItems.byStart).call(_context3, function (item) {\n            return !item.isCluster;\n          })\n        };\n        var orderedClusters = {\n          byEnd: _toConsumableArray(new _Set(_filterInstanceProperty(_context4 = _mapInstanceProperty(_context5 = this.orderedItems.byEnd).call(_context5, function (item) {\n            return item.cluster;\n          })).call(_context4, function (item) {\n            return !!item;\n          }))),\n          byStart: _toConsumableArray(new _Set(_filterInstanceProperty(_context6 = _mapInstanceProperty(_context7 = this.orderedItems.byStart).call(_context7, function (item) {\n            return item.cluster;\n          })).call(_context6, function (item) {\n            return !!item;\n          })))\n        };\n\n        /**\n        * Get all visible items in range\n        * @return {array} items\n        */\n        var getVisibleItems = function getVisibleItems() {\n          var _context8, _context9, _context10;\n          var visibleItems = _this2._updateItemsInRange(orderedItems, _filterInstanceProperty(_context8 = _this2.visibleItems).call(_context8, function (item) {\n            return !item.isCluster;\n          }), range);\n          var visibleClusters = _this2._updateClustersInRange(orderedClusters, _filterInstanceProperty(_context9 = _this2.visibleItems).call(_context9, function (item) {\n            return item.isCluster;\n          }), range);\n          return _concatInstanceProperty(_context10 = []).call(_context10, _toConsumableArray(visibleItems), _toConsumableArray(visibleClusters));\n        };\n\n        /**\n         * Get visible items grouped by subgroup\n         * @param {function} orderFn An optional function to order items inside the subgroups\n         * @return {Object}\n         */\n        var getVisibleItemsGroupedBySubgroup = function getVisibleItemsGroupedBySubgroup(orderFn) {\n          var visibleSubgroupsItems = {};\n          var _loop2 = function _loop2(subgroup) {\n            var _context11;\n            var items = _filterInstanceProperty(_context11 = _this2.visibleItems).call(_context11, function (item) {\n              return item.data.subgroup === subgroup;\n            });\n            visibleSubgroupsItems[subgroup] = orderFn ? _sortInstanceProperty(items).call(items, function (a, b) {\n              return orderFn(a.data, b.data);\n            }) : items;\n          };\n          for (var subgroup in _this2.subgroups) {\n            _loop2(subgroup);\n          }\n          return visibleSubgroupsItems;\n        };\n        if (typeof this.itemSet.options.order === 'function') {\n          // a custom order function\n          //show all items\n          var me = this;\n          if (this.doInnerStack && this.itemSet.options.stackSubgroups) {\n            // Order the items within each subgroup\n            var visibleSubgroupsItems = getVisibleItemsGroupedBySubgroup(this.itemSet.options.order);\n            stackSubgroupsWithInnerStack(visibleSubgroupsItems, margin, this.subgroups);\n            this.visibleItems = getVisibleItems();\n            this._updateSubGroupHeights(margin);\n          } else {\n            var _context12, _context13, _context14, _context15;\n            this.visibleItems = getVisibleItems();\n            this._updateSubGroupHeights(margin);\n            // order all items and force a restacking\n            // order all items outside clusters and force a restacking\n            var customOrderedItems = _sortInstanceProperty(_context12 = _filterInstanceProperty(_context13 = _sliceInstanceProperty(_context14 = this.visibleItems).call(_context14)).call(_context13, function (item) {\n              return item.isCluster || !item.isCluster && !item.cluster;\n            })).call(_context12, function (a, b) {\n              return me.itemSet.options.order(a.data, b.data);\n            });\n            this.shouldBailStackItems = stack(customOrderedItems, margin, true, _bindInstanceProperty$1(_context15 = this._shouldBailItemsRedraw).call(_context15, this));\n          }\n        } else {\n          // no custom order function, lazy stacking\n          this.visibleItems = getVisibleItems();\n          this._updateSubGroupHeights(margin);\n          if (this.itemSet.options.stack) {\n            if (this.doInnerStack && this.itemSet.options.stackSubgroups) {\n              var _visibleSubgroupsItems = getVisibleItemsGroupedBySubgroup();\n              stackSubgroupsWithInnerStack(_visibleSubgroupsItems, margin, this.subgroups);\n            } else {\n              var _context16;\n              // TODO: ugly way to access options...\n              this.shouldBailStackItems = stack(this.visibleItems, margin, true, _bindInstanceProperty$1(_context16 = this._shouldBailItemsRedraw).call(_context16, this));\n            }\n          } else {\n            // no stacking\n            nostack(this.visibleItems, margin, this.subgroups, this.itemSet.options.stackSubgroups);\n          }\n        }\n        for (var i = 0; i < this.visibleItems.length; i++) {\n          this.visibleItems[i].repositionX();\n          if (this.subgroupVisibility[this.visibleItems[i].data.subgroup] !== undefined) {\n            if (!this.subgroupVisibility[this.visibleItems[i].data.subgroup]) {\n              this.visibleItems[i].hide();\n            }\n          }\n        }\n        if (this.itemSet.options.cluster) {\n          _forEachInstanceProperty(availableUtils).call(availableUtils, this.items, function (item) {\n            if (item.cluster && item.displayed) {\n              item.hide();\n            }\n          });\n        }\n        if (this.shouldBailStackItems) {\n          this.itemSet.body.emitter.emit('destroyTimeline');\n        }\n        this.stackDirty = false;\n      }\n    }\n\n    /**\n     * check if group resized\n     * @param {boolean} resized\n     * @param {number} height\n     * @return {boolean} did resize\n     */\n  }, {\n    key: \"_didResize\",\n    value: function _didResize(resized, height) {\n      resized = availableUtils.updateProperty(this, 'height', height) || resized;\n      // recalculate size of label\n      var labelWidth = this.dom.inner.clientWidth;\n      var labelHeight = this.dom.inner.clientHeight;\n      resized = availableUtils.updateProperty(this.props.label, 'width', labelWidth) || resized;\n      resized = availableUtils.updateProperty(this.props.label, 'height', labelHeight) || resized;\n      return resized;\n    }\n\n    /**\n     * apply group height\n     * @param {number} height\n     */\n  }, {\n    key: \"_applyGroupHeight\",\n    value: function _applyGroupHeight(height) {\n      this.dom.background.style.height = \"\".concat(height, \"px\");\n      this.dom.foreground.style.height = \"\".concat(height, \"px\");\n      this.dom.label.style.height = \"\".concat(height, \"px\");\n    }\n\n    /**\n     * update vertical position of items after they are re-stacked and the height of the group is calculated\n     * @param {number} margin\n     */\n  }, {\n    key: \"_updateItemsVerticalPosition\",\n    value: function _updateItemsVerticalPosition(margin) {\n      for (var i = 0, ii = this.visibleItems.length; i < ii; i++) {\n        var item = this.visibleItems[i];\n        item.repositionY(margin);\n        if (!this.isVisible && this.groupId != ReservedGroupIds$1.BACKGROUND) {\n          if (item.displayed) item.hide();\n        }\n      }\n    }\n\n    /**\n     * Repaint this group\n     * @param {{start: number, end: number}} range\n     * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n     * @param {boolean} [forceRestack=false]  Force restacking of all items\n     * @param {boolean} [returnQueue=false]  return the queue or if the group resized\n     * @return {boolean} Returns true if the group is resized or the redraw queue if returnQueue=true\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw(range, margin, forceRestack, returnQueue) {\n      var _this3 = this,\n        _context17,\n        _context18,\n        _context21,\n        _context23,\n        _context27;\n      var resized = false;\n      var lastIsVisible = this.isVisible;\n      var height;\n      var queue = [function () {\n        forceRestack = _this3._didMarkerHeightChange.call(_this3) || forceRestack;\n      },\n      // recalculate the height of the subgroups\n      _bindInstanceProperty$1(_context17 = this._updateSubGroupHeights).call(_context17, this, margin),\n      // calculate actual size and position\n      _bindInstanceProperty$1(_context18 = this._calculateGroupSizeAndPosition).call(_context18, this), function () {\n        var _context19;\n        _this3.isVisible = _bindInstanceProperty$1(_context19 = _this3._isGroupVisible).call(_context19, _this3)(range, margin);\n      }, function () {\n        var _context20;\n        _bindInstanceProperty$1(_context20 = _this3._redrawItems).call(_context20, _this3)(forceRestack, lastIsVisible, margin, range);\n      },\n      // update subgroups\n      _bindInstanceProperty$1(_context21 = this._updateSubgroupsSizes).call(_context21, this), function () {\n        var _context22;\n        height = _bindInstanceProperty$1(_context22 = _this3._calculateHeight).call(_context22, _this3)(margin);\n      },\n      // calculate actual size and position again\n      _bindInstanceProperty$1(_context23 = this._calculateGroupSizeAndPosition).call(_context23, this), function () {\n        var _context24;\n        resized = _bindInstanceProperty$1(_context24 = _this3._didResize).call(_context24, _this3)(resized, height);\n      }, function () {\n        var _context25;\n        _bindInstanceProperty$1(_context25 = _this3._applyGroupHeight).call(_context25, _this3)(height);\n      }, function () {\n        var _context26;\n        _bindInstanceProperty$1(_context26 = _this3._updateItemsVerticalPosition).call(_context26, _this3)(margin);\n      }, _bindInstanceProperty$1(_context27 = function _context27() {\n        if (!_this3.isVisible && _this3.height) {\n          resized = false;\n        }\n        return resized;\n      }).call(_context27, this)];\n      if (returnQueue) {\n        return queue;\n      } else {\n        var result;\n        _forEachInstanceProperty(queue).call(queue, function (fn) {\n          result = fn();\n        });\n        return result;\n      }\n    }\n\n    /**\n     * recalculate the height of the subgroups\n     *\n     * @param {{item: timeline.Item}} margin\n     * @private\n     */\n  }, {\n    key: \"_updateSubGroupHeights\",\n    value: function _updateSubGroupHeights(margin) {\n      var _this4 = this;\n      if (_Object$keys(this.subgroups).length > 0) {\n        var me = this;\n        this._resetSubgroups();\n        _forEachInstanceProperty(availableUtils).call(availableUtils, this.visibleItems, function (item) {\n          if (item.data.subgroup !== undefined) {\n            me.subgroups[item.data.subgroup].height = Math.max(me.subgroups[item.data.subgroup].height, item.height + margin.item.vertical);\n            me.subgroups[item.data.subgroup].visible = typeof _this4.subgroupVisibility[item.data.subgroup] === 'undefined' ? true : Boolean(_this4.subgroupVisibility[item.data.subgroup]);\n          }\n        });\n      }\n    }\n\n    /**\n     * check if group is visible\n     *\n     * @param {timeline.Range} range\n     * @param {{axis: timeline.DataAxis}} margin\n     * @returns {boolean} is visible\n     * @private\n     */\n  }, {\n    key: \"_isGroupVisible\",\n    value: function _isGroupVisible(range, margin) {\n      return this.top <= range.body.domProps.centerContainer.height - range.body.domProps.scrollTop + margin.axis && this.top + this.height + margin.axis >= -range.body.domProps.scrollTop;\n    }\n\n    /**\n     * recalculate the height of the group\n     * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n     * @returns {number} Returns the height\n     * @private\n     */\n  }, {\n    key: \"_calculateHeight\",\n    value: function _calculateHeight(margin) {\n      // recalculate the height of the group\n      var height;\n      var items;\n      if (this.heightMode === 'fixed') {\n        items = availableUtils.toArray(this.items);\n      } else {\n        // default or 'auto'\n        items = this.visibleItems;\n      }\n      if (items.length > 0) {\n        var min = items[0].top;\n        var max = items[0].top + items[0].height;\n        _forEachInstanceProperty(availableUtils).call(availableUtils, items, function (item) {\n          min = Math.min(min, item.top);\n          max = Math.max(max, item.top + item.height);\n        });\n        if (min > margin.axis) {\n          // there is an empty gap between the lowest item and the axis\n          var offset = min - margin.axis;\n          max -= offset;\n          _forEachInstanceProperty(availableUtils).call(availableUtils, items, function (item) {\n            item.top -= offset;\n          });\n        }\n        height = Math.ceil(max + margin.item.vertical / 2);\n        if (this.heightMode !== \"fitItems\") {\n          height = Math.max(height, this.props.label.height);\n        }\n      } else {\n        height = this.props.label.height;\n      }\n      return height;\n    }\n\n    /**\n     * Show this group: attach to the DOM\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.dom.label.parentNode) {\n        this.itemSet.dom.labelSet.appendChild(this.dom.label);\n      }\n      if (!this.dom.foreground.parentNode) {\n        this.itemSet.dom.foreground.appendChild(this.dom.foreground);\n      }\n      if (!this.dom.background.parentNode) {\n        this.itemSet.dom.background.appendChild(this.dom.background);\n      }\n      if (!this.dom.axis.parentNode) {\n        this.itemSet.dom.axis.appendChild(this.dom.axis);\n      }\n    }\n\n    /**\n     * Hide this group: remove from the DOM\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      var label = this.dom.label;\n      if (label.parentNode) {\n        label.parentNode.removeChild(label);\n      }\n      var foreground = this.dom.foreground;\n      if (foreground.parentNode) {\n        foreground.parentNode.removeChild(foreground);\n      }\n      var background = this.dom.background;\n      if (background.parentNode) {\n        background.parentNode.removeChild(background);\n      }\n      var axis = this.dom.axis;\n      if (axis.parentNode) {\n        axis.parentNode.removeChild(axis);\n      }\n    }\n\n    /**\n     * Add an item to the group\n     * @param {Item} item\n     */\n  }, {\n    key: \"add\",\n    value: function add(item) {\n      var _context28;\n      this.items[item.id] = item;\n      item.setParent(this);\n      this.stackDirty = true;\n      // add to\n      if (item.data.subgroup !== undefined) {\n        this._addToSubgroup(item);\n        this.orderSubgroups();\n      }\n      if (!_includesInstanceProperty(_context28 = this.visibleItems).call(_context28, item)) {\n        var range = this.itemSet.body.range; // TODO: not nice accessing the range like this\n        this._checkIfVisible(item, this.visibleItems, range);\n      }\n    }\n\n    /**\n     * add item to subgroup\n     * @param {object} item\n     * @param {string} subgroupId\n     */\n  }, {\n    key: \"_addToSubgroup\",\n    value: function _addToSubgroup(item) {\n      var subgroupId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : item.data.subgroup;\n      if (subgroupId != undefined && this.subgroups[subgroupId] === undefined) {\n        this.subgroups[subgroupId] = {\n          height: 0,\n          top: 0,\n          start: item.data.start,\n          end: item.data.end || item.data.start,\n          visible: false,\n          index: this.subgroupIndex,\n          items: [],\n          stack: this.subgroupStackAll || this.subgroupStack[subgroupId] || false\n        };\n        this.subgroupIndex++;\n      }\n      if (new Date(item.data.start) < new Date(this.subgroups[subgroupId].start)) {\n        this.subgroups[subgroupId].start = item.data.start;\n      }\n      var itemEnd = item.data.end || item.data.start;\n      if (new Date(itemEnd) > new Date(this.subgroups[subgroupId].end)) {\n        this.subgroups[subgroupId].end = itemEnd;\n      }\n      this.subgroups[subgroupId].items.push(item);\n    }\n\n    /**\n     * update subgroup sizes\n     */\n  }, {\n    key: \"_updateSubgroupsSizes\",\n    value: function _updateSubgroupsSizes() {\n      var me = this;\n      if (me.subgroups) {\n        var _loop3 = function _loop3() {\n          var _context29;\n          var initialEnd = me.subgroups[subgroup].items[0].data.end || me.subgroups[subgroup].items[0].data.start;\n          var newStart = me.subgroups[subgroup].items[0].data.start;\n          var newEnd = initialEnd - 1;\n          _forEachInstanceProperty(_context29 = me.subgroups[subgroup].items).call(_context29, function (item) {\n            if (new Date(item.data.start) < new Date(newStart)) {\n              newStart = item.data.start;\n            }\n            var itemEnd = item.data.end || item.data.start;\n            if (new Date(itemEnd) > new Date(newEnd)) {\n              newEnd = itemEnd;\n            }\n          });\n          me.subgroups[subgroup].start = newStart;\n          me.subgroups[subgroup].end = new Date(newEnd - 1); // -1 to compensate for colliding end to start subgroups;\n        };\n        for (var subgroup in me.subgroups) {\n          _loop3();\n        }\n      }\n    }\n\n    /**\n     * order subgroups\n     */\n  }, {\n    key: \"orderSubgroups\",\n    value: function orderSubgroups() {\n      if (this.subgroupOrderer !== undefined) {\n        var sortArray = [];\n        if (typeof this.subgroupOrderer == 'string') {\n          for (var subgroup in this.subgroups) {\n            sortArray.push({\n              subgroup: subgroup,\n              sortField: this.subgroups[subgroup].items[0].data[this.subgroupOrderer]\n            });\n          }\n          _sortInstanceProperty(sortArray).call(sortArray, function (a, b) {\n            return a.sortField - b.sortField;\n          });\n        } else if (typeof this.subgroupOrderer == 'function') {\n          for (var _subgroup in this.subgroups) {\n            sortArray.push(this.subgroups[_subgroup].items[0].data);\n          }\n          _sortInstanceProperty(sortArray).call(sortArray, this.subgroupOrderer);\n        }\n        if (sortArray.length > 0) {\n          for (var i = 0; i < sortArray.length; i++) {\n            this.subgroups[sortArray[i].subgroup].index = i;\n          }\n        }\n      }\n    }\n\n    /**\n     * add item to subgroup\n     */\n  }, {\n    key: \"_resetSubgroups\",\n    value: function _resetSubgroups() {\n      for (var subgroup in this.subgroups) {\n        if (this.subgroups.hasOwnProperty(subgroup)) {\n          this.subgroups[subgroup].visible = false;\n          this.subgroups[subgroup].height = 0;\n        }\n      }\n    }\n\n    /**\n     * Remove an item from the group\n     * @param {Item} item\n     */\n  }, {\n    key: \"remove\",\n    value: function remove(item) {\n      var _context30, _context31;\n      delete this.items[item.id];\n      item.setParent(null);\n      this.stackDirty = true;\n\n      // remove from visible items\n      var index = _indexOfInstanceProperty(_context30 = this.visibleItems).call(_context30, item);\n      if (index != -1) _spliceInstanceProperty(_context31 = this.visibleItems).call(_context31, index, 1);\n      if (item.data.subgroup !== undefined) {\n        this._removeFromSubgroup(item);\n        this.orderSubgroups();\n      }\n    }\n\n    /**\n     * remove item from subgroup\n     * @param {object} item\n     * @param {string} subgroupId\n     */\n  }, {\n    key: \"_removeFromSubgroup\",\n    value: function _removeFromSubgroup(item) {\n      var subgroupId = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : item.data.subgroup;\n      if (subgroupId != undefined) {\n        var subgroup = this.subgroups[subgroupId];\n        if (subgroup) {\n          var _context32;\n          var itemIndex = _indexOfInstanceProperty(_context32 = subgroup.items).call(_context32, item);\n          //  Check the item is actually in this subgroup. How should items not in the group be handled?\n          if (itemIndex >= 0) {\n            var _context33;\n            _spliceInstanceProperty(_context33 = subgroup.items).call(_context33, itemIndex, 1);\n            if (!subgroup.items.length) {\n              delete this.subgroups[subgroupId];\n            } else {\n              this._updateSubgroupsSizes();\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * Remove an item from the corresponding DataSet\n     * @param {Item} item\n     */\n  }, {\n    key: \"removeFromDataSet\",\n    value: function removeFromDataSet(item) {\n      this.itemSet.removeItem(item.id);\n    }\n\n    /**\n     * Reorder the items\n     */\n  }, {\n    key: \"order\",\n    value: function order() {\n      var array = availableUtils.toArray(this.items);\n      var startArray = [];\n      var endArray = [];\n      for (var i = 0; i < array.length; i++) {\n        if (array[i].data.end !== undefined) {\n          endArray.push(array[i]);\n        }\n        startArray.push(array[i]);\n      }\n      this.orderedItems = {\n        byStart: startArray,\n        byEnd: endArray\n      };\n      orderByStart(this.orderedItems.byStart);\n      orderByEnd(this.orderedItems.byEnd);\n    }\n\n    /**\n     * Update the visible items\n     * @param {{byStart: Item[], byEnd: Item[]}} orderedItems   All items ordered by start date and by end date\n     * @param {Item[]} oldVisibleItems                          The previously visible items.\n     * @param {{start: number, end: number}} range              Visible range\n     * @return {Item[]} visibleItems                            The new visible items.\n     * @private\n     */\n  }, {\n    key: \"_updateItemsInRange\",\n    value: function _updateItemsInRange(orderedItems, oldVisibleItems, range) {\n      var visibleItems = [];\n      var visibleItemsLookup = {}; // we keep this to quickly look up if an item already exists in the list without using indexOf on visibleItems\n\n      if (!this.isVisible && this.height !== undefined && this.groupId != ReservedGroupIds$1.BACKGROUND) {\n        for (var i = 0; i < oldVisibleItems.length; i++) {\n          var item = oldVisibleItems[i];\n          if (item.displayed) item.hide();\n        }\n        return visibleItems;\n      }\n      var interval = (range.end - range.start) / 4;\n      var lowerBound = range.start - interval;\n      var upperBound = range.end + interval;\n\n      // this function is used to do the binary search for items having start date only.\n      var startSearchFunction = function startSearchFunction(value) {\n        if (value < lowerBound) {\n          return -1;\n        } else if (value <= upperBound) {\n          return 0;\n        } else {\n          return 1;\n        }\n      };\n\n      // this function is used to do the binary search for items having start and end dates (range).\n      var endSearchFunction = function endSearchFunction(data) {\n        var start = data.start,\n          end = data.end;\n        if (end < lowerBound) {\n          return -1;\n        } else if (start <= upperBound) {\n          return 0;\n        } else {\n          return 1;\n        }\n      };\n\n      // first check if the items that were in view previously are still in view.\n      // IMPORTANT: this handles the case for the items with startdate before the window and enddate after the window!\n      // also cleans up invisible items.\n      if (oldVisibleItems.length > 0) {\n        for (var _i = 0; _i < oldVisibleItems.length; _i++) {\n          this._checkIfVisibleWithReference(oldVisibleItems[_i], visibleItems, visibleItemsLookup, range);\n        }\n      }\n\n      // we do a binary search for the items that have only start values.\n      var initialPosByStart = availableUtils.binarySearchCustom(orderedItems.byStart, startSearchFunction, 'data', 'start');\n\n      // trace the visible items from the inital start pos both ways until an invisible item is found, we only look at the start values.\n      this._traceVisible(initialPosByStart, orderedItems.byStart, visibleItems, visibleItemsLookup, function (item) {\n        return item.data.start < lowerBound || item.data.start > upperBound;\n      });\n\n      // if the window has changed programmatically without overlapping the old window, the ranged items with start < lowerBound and end > upperbound are not shown.\n      // We therefore have to brute force check all items in the byEnd list\n      if (this.checkRangedItems == true) {\n        this.checkRangedItems = false;\n        for (var _i2 = 0; _i2 < orderedItems.byEnd.length; _i2++) {\n          this._checkIfVisibleWithReference(orderedItems.byEnd[_i2], visibleItems, visibleItemsLookup, range);\n        }\n      } else {\n        // we do a binary search for the items that have defined end times.\n        var initialPosByEnd = availableUtils.binarySearchCustom(orderedItems.byEnd, endSearchFunction, 'data');\n\n        // trace the visible items from the inital start pos both ways until an invisible item is found, we only look at the end values.\n        this._traceVisible(initialPosByEnd, orderedItems.byEnd, visibleItems, visibleItemsLookup, function (item) {\n          return item.data.end < lowerBound || item.data.start > upperBound;\n        });\n      }\n      var redrawQueue = {};\n      var redrawQueueLength = 0;\n      for (var _i3 = 0; _i3 < visibleItems.length; _i3++) {\n        var _item = visibleItems[_i3];\n        if (!_item.displayed) {\n          var returnQueue = true;\n          redrawQueue[_i3] = _item.redraw(returnQueue);\n          redrawQueueLength = redrawQueue[_i3].length;\n        }\n      }\n      var needRedraw = redrawQueueLength > 0;\n      if (needRedraw) {\n        var _loop4 = function _loop4(j) {\n          _forEachInstanceProperty(availableUtils).call(availableUtils, redrawQueue, function (fns) {\n            fns[j]();\n          });\n        };\n        // redraw all regular items\n        for (var j = 0; j < redrawQueueLength; j++) {\n          _loop4(j);\n        }\n      }\n      for (var _i4 = 0; _i4 < visibleItems.length; _i4++) {\n        visibleItems[_i4].repositionX();\n      }\n      return visibleItems;\n    }\n\n    /**\n     * trace visible items in group\n     * @param {number} initialPos\n     * @param {array} items\n     * @param {aray} visibleItems\n     * @param {object} visibleItemsLookup\n     * @param {function} breakCondition\n     */\n  }, {\n    key: \"_traceVisible\",\n    value: function _traceVisible(initialPos, items, visibleItems, visibleItemsLookup, breakCondition) {\n      if (initialPos != -1) {\n        for (var i = initialPos; i >= 0; i--) {\n          var item = items[i];\n          if (breakCondition(item)) {\n            break;\n          } else {\n            if (!(item.isCluster && !item.hasItems()) && !item.cluster) {\n              if (visibleItemsLookup[item.id] === undefined) {\n                visibleItemsLookup[item.id] = true;\n                visibleItems.push(item);\n              }\n            }\n          }\n        }\n        for (var _i5 = initialPos + 1; _i5 < items.length; _i5++) {\n          var _item2 = items[_i5];\n          if (breakCondition(_item2)) {\n            break;\n          } else {\n            if (!(_item2.isCluster && !_item2.hasItems()) && !_item2.cluster) {\n              if (visibleItemsLookup[_item2.id] === undefined) {\n                visibleItemsLookup[_item2.id] = true;\n                visibleItems.push(_item2);\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * this function is very similar to the _checkIfInvisible() but it does not\n     * return booleans, hides the item if it should not be seen and always adds to\n     * the visibleItems.\n     * this one is for brute forcing and hiding.\n     *\n     * @param {Item} item\n     * @param {Array} visibleItems\n     * @param {{start:number, end:number}} range\n     * @private\n     */\n  }, {\n    key: \"_checkIfVisible\",\n    value: function _checkIfVisible(item, visibleItems, range) {\n      if (item.isVisible(range)) {\n        if (!item.displayed) item.show();\n        // reposition item horizontally\n        item.repositionX();\n        visibleItems.push(item);\n      } else {\n        if (item.displayed) item.hide();\n      }\n    }\n\n    /**\n     * this function is very similar to the _checkIfInvisible() but it does not\n     * return booleans, hides the item if it should not be seen and always adds to\n     * the visibleItems.\n     * this one is for brute forcing and hiding.\n     *\n     * @param {Item} item\n     * @param {Array.<timeline.Item>} visibleItems\n     * @param {Object<number, boolean>} visibleItemsLookup\n     * @param {{start:number, end:number}} range\n     * @private\n     */\n  }, {\n    key: \"_checkIfVisibleWithReference\",\n    value: function _checkIfVisibleWithReference(item, visibleItems, visibleItemsLookup, range) {\n      if (item.isVisible(range)) {\n        if (visibleItemsLookup[item.id] === undefined) {\n          visibleItemsLookup[item.id] = true;\n          visibleItems.push(item);\n        }\n      } else {\n        if (item.displayed) item.hide();\n      }\n    }\n\n    /**\n     * Update the visible items\n     * @param {array} orderedClusters \n     * @param {array} oldVisibleClusters                         \n     * @param {{start: number, end: number}} range             \n     * @return {Item[]} visibleItems                            \n     * @private\n     */\n  }, {\n    key: \"_updateClustersInRange\",\n    value: function _updateClustersInRange(orderedClusters, oldVisibleClusters, range) {\n      // Clusters can overlap each other so we cannot use binary search here\n      var visibleClusters = [];\n      var visibleClustersLookup = {}; // we keep this to quickly look up if an item already exists in the list without using indexOf on visibleItems\n\n      if (oldVisibleClusters.length > 0) {\n        for (var i = 0; i < oldVisibleClusters.length; i++) {\n          this._checkIfVisibleWithReference(oldVisibleClusters[i], visibleClusters, visibleClustersLookup, range);\n        }\n      }\n      for (var _i6 = 0; _i6 < orderedClusters.byStart.length; _i6++) {\n        this._checkIfVisibleWithReference(orderedClusters.byStart[_i6], visibleClusters, visibleClustersLookup, range);\n      }\n      for (var _i7 = 0; _i7 < orderedClusters.byEnd.length; _i7++) {\n        this._checkIfVisibleWithReference(orderedClusters.byEnd[_i7], visibleClusters, visibleClustersLookup, range);\n      }\n      var redrawQueue = {};\n      var redrawQueueLength = 0;\n      for (var _i8 = 0; _i8 < visibleClusters.length; _i8++) {\n        var item = visibleClusters[_i8];\n        if (!item.displayed) {\n          var returnQueue = true;\n          redrawQueue[_i8] = item.redraw(returnQueue);\n          redrawQueueLength = redrawQueue[_i8].length;\n        }\n      }\n      var needRedraw = redrawQueueLength > 0;\n      if (needRedraw) {\n        // redraw all regular items\n        for (var j = 0; j < redrawQueueLength; j++) {\n          _forEachInstanceProperty(availableUtils).call(availableUtils, redrawQueue, function (fns) {\n            fns[j]();\n          });\n        }\n      }\n      for (var _i9 = 0; _i9 < visibleClusters.length; _i9++) {\n        visibleClusters[_i9].repositionX();\n      }\n      return visibleClusters;\n    }\n\n    /**\n     * change item subgroup\n     * @param {object} item\n     * @param {string} oldSubgroup\n     * @param {string} newSubgroup\n     */\n  }, {\n    key: \"changeSubgroup\",\n    value: function changeSubgroup(item, oldSubgroup, newSubgroup) {\n      this._removeFromSubgroup(item, oldSubgroup);\n      this._addToSubgroup(item, newSubgroup);\n      this.orderSubgroups();\n    }\n\n    /**\n     * Call this method before you lose the last reference to an instance of this.\n     * It will remove listeners etc.\n     */\n  }, {\n    key: \"dispose\",\n    value: function dispose() {\n      this.hide();\n      var disposeCallback;\n      while (disposeCallback = this._disposeCallbacks.pop()) {\n        disposeCallback();\n      }\n    }\n  }]);\n  return Group;\n}();\n\nfunction _createSuper$8(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$8(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$8() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @constructor BackgroundGroup\n * @extends Group\n */\nvar BackgroundGroup = /*#__PURE__*/function (_Group) {\n  _inherits(BackgroundGroup, _Group);\n  var _super = _createSuper$8(BackgroundGroup);\n  /**\n  * @param {number | string} groupId\n  * @param {Object} data\n  * @param {ItemSet} itemSet\n  */\n  function BackgroundGroup(groupId, data, itemSet) {\n    var _this;\n    _classCallCheck(this, BackgroundGroup);\n    _this = _super.call(this, groupId, data, itemSet);\n    // Group.call(this, groupId, data, itemSet);\n\n    _this.width = 0;\n    _this.height = 0;\n    _this.top = 0;\n    _this.left = 0;\n    return _this;\n  }\n\n  /**\n   * Repaint this group\n   * @param {{start: number, end: number}} range\n   * @param {{item: {horizontal: number, vertical: number}, axis: number}} margin\n   * @param {boolean} [forceRestack=false]  Force restacking of all items\n   * @return {boolean} Returns true if the group is resized\n   */\n  _createClass(BackgroundGroup, [{\n    key: \"redraw\",\n    value: function redraw(range, margin, forceRestack) {\n      // eslint-disable-line no-unused-vars\n      var resized = false;\n      this.visibleItems = this._updateItemsInRange(this.orderedItems, this.visibleItems, range);\n\n      // calculate actual size\n      this.width = this.dom.background.offsetWidth;\n\n      // apply new height (just always zero for BackgroundGroup\n      this.dom.background.style.height = '0';\n\n      // update vertical position of items after they are re-stacked and the height of the group is calculated\n      for (var i = 0, ii = this.visibleItems.length; i < ii; i++) {\n        var item = this.visibleItems[i];\n        item.repositionY(margin);\n      }\n      return resized;\n    }\n\n    /**\n     * Show this group: attach to the DOM\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.dom.background.parentNode) {\n        this.itemSet.dom.background.appendChild(this.dom.background);\n      }\n    }\n  }]);\n  return BackgroundGroup;\n}(Group);\n\nvar css_248z$5 = \"\\n.vis-item {\\n  position: absolute;\\n  color: #1A1A1A;\\n  border-color: #97B0F8;\\n  border-width: 1px;\\n  background-color: #D5DDF6;\\n  display: inline-block;\\n  z-index: 1;\\n  /*overflow: hidden;*/\\n}\\n\\n.vis-item.vis-selected {\\n  border-color: #FFC200;\\n  background-color: #FFF785;\\n\\n  /* z-index must be higher than the z-index of custom time bar and current time bar */\\n  z-index: 2;\\n}\\n\\n.vis-editable.vis-selected {\\n  cursor: move;\\n}\\n\\n.vis-item.vis-point.vis-selected {\\n  background-color: #FFF785;\\n}\\n\\n.vis-item.vis-box {\\n  text-align: center;\\n  border-style: solid;\\n  border-radius: 2px;\\n}\\n\\n.vis-item.vis-point {\\n  background: none;\\n}\\n\\n.vis-item.vis-dot {\\n  position: absolute;\\n  padding: 0;\\n  border-width: 4px;\\n  border-style: solid;\\n  border-radius: 4px;\\n}\\n\\n.vis-item.vis-range {\\n  border-style: solid;\\n  border-radius: 2px;\\n  box-sizing: border-box;\\n}\\n\\n.vis-item.vis-background {\\n  border: none;\\n  background-color: rgba(213, 221, 246, 0.4);\\n  box-sizing: border-box;\\n  padding: 0;\\n  margin: 0;\\n}\\n\\n.vis-item .vis-item-overflow {\\n  position: relative;\\n  width: 100%;\\n  height: 100%;\\n  padding: 0;\\n  margin: 0;\\n  overflow: hidden;\\n}\\n\\n.vis-item-visible-frame {\\n  white-space: nowrap;\\n}\\n\\n.vis-item.vis-range .vis-item-content {\\n  position: relative;\\n  display: inline-block;\\n}\\n\\n.vis-item.vis-background .vis-item-content {\\n  position: absolute;\\n  display: inline-block;\\n}\\n\\n.vis-item.vis-line {\\n  padding: 0;\\n  position: absolute;\\n  width: 0;\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n}\\n\\n.vis-item .vis-item-content {\\n  white-space: nowrap;\\n  box-sizing: border-box;\\n  padding: 5px;\\n}\\n\\n.vis-item .vis-onUpdateTime-tooltip {\\n  position: absolute;\\n  background: #4f81bd;\\n  color: white;\\n  width: 200px;\\n  text-align: center;\\n  white-space: nowrap;\\n  padding: 5px;\\n  border-radius: 1px;\\n  transition: 0.4s;\\n  -o-transition: 0.4s;\\n  -moz-transition: 0.4s;\\n  -webkit-transition: 0.4s;\\n}\\n\\n.vis-item .vis-delete, .vis-item .vis-delete-rtl {\\n  position: absolute;\\n  top: 0px;\\n  width: 24px;\\n  height: 24px;\\n  box-sizing: border-box;\\n  padding: 0px 5px;\\n  cursor: pointer;\\n\\n  -webkit-transition: background 0.2s linear;\\n  -moz-transition: background 0.2s linear;\\n  -ms-transition: background 0.2s linear;\\n  -o-transition: background 0.2s linear;\\n  transition: background 0.2s linear;\\n}\\n\\n.vis-item .vis-delete {\\n  right: -24px;\\n}\\n\\n.vis-item .vis-delete-rtl {\\n  left: -24px;\\n}\\n\\n.vis-item .vis-delete:after, .vis-item .vis-delete-rtl:after {\\n  content: \\\"\\\\00D7\\\"; /* MULTIPLICATION SIGN */\\n  color: red;\\n  font-family: arial, sans-serif;\\n  font-size: 22px;\\n  font-weight: bold;\\n\\n  -webkit-transition: color 0.2s linear;\\n  -moz-transition: color 0.2s linear;\\n  -ms-transition: color 0.2s linear;\\n  -o-transition: color 0.2s linear;\\n  transition: color 0.2s linear;\\n}\\n\\n.vis-item .vis-delete:hover, .vis-item .vis-delete-rtl:hover {\\n  background: red;\\n}\\n\\n.vis-item .vis-delete:hover:after, .vis-item .vis-delete-rtl:hover:after {\\n  color: white;\\n}\\n\\n.vis-item .vis-drag-center {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0px;\\n  cursor: move;\\n}\\n\\n.vis-item.vis-range .vis-drag-left {\\n  position: absolute;\\n  width: 24px;\\n  max-width: 20%;\\n  min-width: 2px;\\n  height: 100%;\\n  top: 0;\\n  left: -4px;\\n\\n  cursor: w-resize;\\n}\\n\\n.vis-item.vis-range .vis-drag-right {\\n  position: absolute;\\n  width: 24px;\\n  max-width: 20%;\\n  min-width: 2px;\\n  height: 100%;\\n  top: 0;\\n  right: -4px;\\n\\n  cursor: e-resize;\\n}\\n\\n.vis-range.vis-item.vis-readonly .vis-drag-left,\\n.vis-range.vis-item.vis-readonly .vis-drag-right {\\n  cursor: auto;\\n}\\n\\n.vis-item.vis-cluster {\\n  vertical-align: center;\\n  text-align: center;\\n  border-style: solid;\\n  border-radius: 2px;\\n}\\n\\n.vis-item.vis-cluster-line {\\n  padding: 0;\\n  position: absolute;\\n  width: 0;\\n  border-left-width: 1px;\\n  border-left-style: solid;\\n}\\n\\n.vis-item.vis-cluster-dot {\\n  position: absolute;\\n  padding: 0;\\n  border-width: 4px;\\n  border-style: solid;\\n  border-radius: 4px;\\n}\";\nstyleInject(css_248z$5);\n\nfunction _createForOfIteratorHelper$4(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray$4(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray$4(o, minLen) { var _context8; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$4(o, minLen); var n = _sliceInstanceProperty(_context8 = Object.prototype.toString.call(o)).call(_context8, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from$1(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$4(o, minLen); }\nfunction _arrayLikeToArray$4(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\n\n/**\n * Item\n */\nvar Item = /*#__PURE__*/function () {\n  /**\n  * @constructor Item\n  * @param {Object} data             Object containing (optional) parameters type,\n  *                                  start, end, content, group, className.\n  * @param {{toScreen: function, toTime: function}} conversion\n  *                                  Conversion functions from time to screen and vice versa\n  * @param {Object} options          Configuration options\n  *                                  // TODO: describe available options\n  */\n  function Item(data, conversion, options) {\n    var _context,\n      _this = this;\n    _classCallCheck(this, Item);\n    this.id = null;\n    this.parent = null;\n    this.data = data;\n    this.dom = null;\n    this.conversion = conversion || {};\n    this.defaultOptions = {\n      locales: locales,\n      locale: 'en'\n    };\n    this.options = availableUtils.extend({}, this.defaultOptions, options);\n    this.options.locales = availableUtils.extend({}, locales, this.options.locales);\n    var defaultLocales = this.defaultOptions.locales[this.defaultOptions.locale];\n    _forEachInstanceProperty(_context = _Object$keys(this.options.locales)).call(_context, function (locale) {\n      _this.options.locales[locale] = availableUtils.extend({}, defaultLocales, _this.options.locales[locale]);\n    });\n    this.selected = false;\n    this.displayed = false;\n    this.groupShowing = true;\n    this.selectable = options && options.selectable || false;\n    this.dirty = true;\n    this.top = null;\n    this.right = null;\n    this.left = null;\n    this.width = null;\n    this.height = null;\n    this.setSelectability(data);\n    this.editable = null;\n    this._updateEditStatus();\n  }\n\n  /**\n   * Select current item\n   */\n  _createClass(Item, [{\n    key: \"select\",\n    value: function select() {\n      if (this.selectable) {\n        this.selected = true;\n        this.dirty = true;\n        if (this.displayed) this.redraw();\n      }\n    }\n\n    /**\n     * Unselect current item\n     */\n  }, {\n    key: \"unselect\",\n    value: function unselect() {\n      this.selected = false;\n      this.dirty = true;\n      if (this.displayed) this.redraw();\n    }\n\n    /**\n     * Set data for the item. Existing data will be updated. The id should not\n     * be changed. When the item is displayed, it will be redrawn immediately.\n     * @param {Object} data\n     */\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      var groupChanged = data.group != undefined && this.data.group != data.group;\n      if (groupChanged && this.parent != null) {\n        this.parent.itemSet._moveToGroup(this, data.group);\n      }\n      this.setSelectability(data);\n      if (this.parent) {\n        this.parent.stackDirty = true;\n      }\n      var subGroupChanged = data.subgroup != undefined && this.data.subgroup != data.subgroup;\n      if (subGroupChanged && this.parent != null) {\n        this.parent.changeSubgroup(this, this.data.subgroup, data.subgroup);\n      }\n      this.data = data;\n      this._updateEditStatus();\n      this.dirty = true;\n      if (this.displayed) this.redraw();\n    }\n\n    /**\n     * Set whether the item can be selected.\n     * Can only be set/unset if the timeline's `selectable` configuration option is `true`.\n     * @param {Object} data `data` from `constructor` and `setData`\n     */\n  }, {\n    key: \"setSelectability\",\n    value: function setSelectability(data) {\n      if (data) {\n        this.selectable = typeof data.selectable === 'undefined' ? true : Boolean(data.selectable);\n      }\n    }\n\n    /**\n     * Set a parent for the item\n     * @param {Group} parent\n     */\n  }, {\n    key: \"setParent\",\n    value: function setParent(parent) {\n      if (this.displayed) {\n        this.hide();\n        this.parent = parent;\n        if (this.parent) {\n          this.show();\n        }\n      } else {\n        this.parent = parent;\n      }\n    }\n\n    /**\n     * Check whether this item is visible inside given range\n     * @param {timeline.Range} range with a timestamp for start and end\n     * @returns {boolean} True if visible\n     */\n  }, {\n    key: \"isVisible\",\n    value: function isVisible(range) {\n      // eslint-disable-line no-unused-vars\n      return false;\n    }\n\n    /**\n     * Show the Item in the DOM (when not already visible)\n     * @return {Boolean} changed\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      return false;\n    }\n\n    /**\n     * Hide the Item from the DOM (when visible)\n     * @return {Boolean} changed\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      return false;\n    }\n\n    /**\n     * Repaint the item\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      // should be implemented by the item\n    }\n\n    /**\n     * Reposition the Item horizontally\n     */\n  }, {\n    key: \"repositionX\",\n    value: function repositionX() {\n      // should be implemented by the item\n    }\n\n    /**\n     * Reposition the Item vertically\n     */\n  }, {\n    key: \"repositionY\",\n    value: function repositionY() {\n      // should be implemented by the item\n    }\n\n    /**\n     * Repaint a drag area on the center of the item when the item is selected\n     * @protected\n     */\n  }, {\n    key: \"_repaintDragCenter\",\n    value: function _repaintDragCenter() {\n      if (this.selected && this.editable.updateTime && !this.dom.dragCenter) {\n        var _context2, _context3;\n        var me = this;\n        // create and show drag area\n        var dragCenter = document.createElement('div');\n        dragCenter.className = 'vis-drag-center';\n        dragCenter.dragCenterItem = this;\n        this.hammerDragCenter = new Hammer(dragCenter);\n        this.hammerDragCenter.on('tap', function (event) {\n          me.parent.itemSet.body.emitter.emit('click', {\n            event: event,\n            item: me.id\n          });\n        });\n        this.hammerDragCenter.on('doubletap', function (event) {\n          event.stopPropagation();\n          me.parent.itemSet._onUpdateItem(me);\n          me.parent.itemSet.body.emitter.emit('doubleClick', {\n            event: event,\n            item: me.id\n          });\n        });\n        this.hammerDragCenter.on('panstart', function (event) {\n          // do not allow this event to propagate to the Range\n          event.stopPropagation();\n          me.parent.itemSet._onDragStart(event);\n        });\n        this.hammerDragCenter.on('panmove', _bindInstanceProperty$1(_context2 = me.parent.itemSet._onDrag).call(_context2, me.parent.itemSet));\n        this.hammerDragCenter.on('panend', _bindInstanceProperty$1(_context3 = me.parent.itemSet._onDragEnd).call(_context3, me.parent.itemSet));\n        // delay addition on item click for trackpads...\n        this.hammerDragCenter.get('press').set({\n          time: 10000\n        });\n        if (this.dom.box) {\n          if (this.dom.dragLeft) {\n            this.dom.box.insertBefore(dragCenter, this.dom.dragLeft);\n          } else {\n            this.dom.box.appendChild(dragCenter);\n          }\n        } else if (this.dom.point) {\n          this.dom.point.appendChild(dragCenter);\n        }\n        this.dom.dragCenter = dragCenter;\n      } else if (!this.selected && this.dom.dragCenter) {\n        // delete drag area\n        if (this.dom.dragCenter.parentNode) {\n          this.dom.dragCenter.parentNode.removeChild(this.dom.dragCenter);\n        }\n        this.dom.dragCenter = null;\n        if (this.hammerDragCenter) {\n          this.hammerDragCenter.destroy();\n          this.hammerDragCenter = null;\n        }\n      }\n    }\n\n    /**\n     * Repaint a delete button on the top right of the item when the item is selected\n     * @param {HTMLElement} anchor\n     * @protected\n     */\n  }, {\n    key: \"_repaintDeleteButton\",\n    value: function _repaintDeleteButton(anchor) {\n      var editable = (this.options.editable.overrideItems || this.editable == null) && this.options.editable.remove || !this.options.editable.overrideItems && this.editable != null && this.editable.remove;\n      if (this.selected && editable && !this.dom.deleteButton) {\n        // create and show button\n        var me = this;\n        var deleteButton = document.createElement('div');\n        if (this.options.rtl) {\n          deleteButton.className = 'vis-delete-rtl';\n        } else {\n          deleteButton.className = 'vis-delete';\n        }\n        var optionsLocale = this.options.locales[this.options.locale];\n        if (!optionsLocale) {\n          if (!this.warned) {\n            console.warn(\"WARNING: options.locales['\".concat(this.options.locale, \"'] not found. See https://visjs.github.io/vis-timeline/docs/timeline/#Localization\"));\n            this.warned = true;\n          }\n          optionsLocale = this.options.locales['en']; // fall back on english when not available\n        }\n\n        deleteButton.title = optionsLocale.deleteSelected;\n\n        // TODO: be able to destroy the delete button\n        this.hammerDeleteButton = new Hammer(deleteButton).on('tap', function (event) {\n          event.stopPropagation();\n          me.parent.removeFromDataSet(me);\n        });\n        anchor.appendChild(deleteButton);\n        this.dom.deleteButton = deleteButton;\n      } else if ((!this.selected || !editable) && this.dom.deleteButton) {\n        // remove button\n        if (this.dom.deleteButton.parentNode) {\n          this.dom.deleteButton.parentNode.removeChild(this.dom.deleteButton);\n        }\n        this.dom.deleteButton = null;\n        if (this.hammerDeleteButton) {\n          this.hammerDeleteButton.destroy();\n          this.hammerDeleteButton = null;\n        }\n      }\n    }\n\n    /**\n     * Repaint a onChange tooltip on the top right of the item when the item is selected\n     * @param {HTMLElement} anchor\n     * @protected\n     */\n  }, {\n    key: \"_repaintOnItemUpdateTimeTooltip\",\n    value: function _repaintOnItemUpdateTimeTooltip(anchor) {\n      if (!this.options.tooltipOnItemUpdateTime) return;\n      var editable = (this.options.editable.updateTime || this.data.editable === true) && this.data.editable !== false;\n      if (this.selected && editable && !this.dom.onItemUpdateTimeTooltip) {\n        var onItemUpdateTimeTooltip = document.createElement('div');\n        onItemUpdateTimeTooltip.className = 'vis-onUpdateTime-tooltip';\n        anchor.appendChild(onItemUpdateTimeTooltip);\n        this.dom.onItemUpdateTimeTooltip = onItemUpdateTimeTooltip;\n      } else if (!this.selected && this.dom.onItemUpdateTimeTooltip) {\n        // remove button\n        if (this.dom.onItemUpdateTimeTooltip.parentNode) {\n          this.dom.onItemUpdateTimeTooltip.parentNode.removeChild(this.dom.onItemUpdateTimeTooltip);\n        }\n        this.dom.onItemUpdateTimeTooltip = null;\n      }\n\n      // position onChange tooltip\n      if (this.dom.onItemUpdateTimeTooltip) {\n        // only show when editing\n        this.dom.onItemUpdateTimeTooltip.style.visibility = this.parent.itemSet.touchParams.itemIsDragging ? 'visible' : 'hidden';\n\n        // position relative to item's content\n        this.dom.onItemUpdateTimeTooltip.style.transform = 'translateX(-50%)';\n        this.dom.onItemUpdateTimeTooltip.style.left = '50%';\n\n        // position above or below the item depending on the item's position in the window\n        var tooltipOffset = 50; // TODO: should be tooltip height (depends on template)\n        var scrollTop = this.parent.itemSet.body.domProps.scrollTop;\n\n        // TODO: this.top for orientation:true is actually the items distance from the bottom... \n        // (should be this.bottom)\n        var itemDistanceFromTop;\n        if (this.options.orientation.item == 'top') {\n          itemDistanceFromTop = this.top;\n        } else {\n          itemDistanceFromTop = this.parent.height - this.top - this.height;\n        }\n        var isCloseToTop = itemDistanceFromTop + this.parent.top - tooltipOffset < -scrollTop;\n        if (isCloseToTop) {\n          this.dom.onItemUpdateTimeTooltip.style.bottom = \"\";\n          this.dom.onItemUpdateTimeTooltip.style.top = \"\".concat(this.height + 2, \"px\");\n        } else {\n          this.dom.onItemUpdateTimeTooltip.style.top = \"\";\n          this.dom.onItemUpdateTimeTooltip.style.bottom = \"\".concat(this.height + 2, \"px\");\n        }\n\n        // handle tooltip content\n        var content;\n        var templateFunction;\n        if (this.options.tooltipOnItemUpdateTime && this.options.tooltipOnItemUpdateTime.template) {\n          var _context4;\n          templateFunction = _bindInstanceProperty$1(_context4 = this.options.tooltipOnItemUpdateTime.template).call(_context4, this);\n          content = templateFunction(this.data);\n        } else {\n          content = \"start: \".concat(moment$4(this.data.start).format('MM/DD/YYYY hh:mm'));\n          if (this.data.end) {\n            content += \"<br> end: \".concat(moment$4(this.data.end).format('MM/DD/YYYY hh:mm'));\n          }\n        }\n        this.dom.onItemUpdateTimeTooltip.innerHTML = availableUtils.xss(content);\n      }\n    }\n\n    /**\n    * get item data\n    * @return {object}\n    * @private\n    */\n  }, {\n    key: \"_getItemData\",\n    value: function _getItemData() {\n      return this.parent.itemSet.itemsData.get(this.id);\n    }\n\n    /**\n     * Set HTML contents for the item\n     * @param {Element} element   HTML element to fill with the contents\n     * @private\n     */\n  }, {\n    key: \"_updateContents\",\n    value: function _updateContents(element) {\n      var content;\n      var changed;\n      var templateFunction;\n      var itemVisibleFrameContent;\n      var visibleFrameTemplateFunction;\n      var itemData = this._getItemData(); // get a clone of the data from the dataset\n\n      var frameElement = this.dom.box || this.dom.point;\n      var itemVisibleFrameContentElement = frameElement.getElementsByClassName('vis-item-visible-frame')[0];\n      if (this.options.visibleFrameTemplate) {\n        var _context5;\n        visibleFrameTemplateFunction = _bindInstanceProperty$1(_context5 = this.options.visibleFrameTemplate).call(_context5, this);\n        itemVisibleFrameContent = availableUtils.xss(visibleFrameTemplateFunction(itemData, itemVisibleFrameContentElement));\n      } else {\n        itemVisibleFrameContent = '';\n      }\n      if (itemVisibleFrameContentElement) {\n        if (itemVisibleFrameContent instanceof Object && !(itemVisibleFrameContent instanceof Element)) {\n          visibleFrameTemplateFunction(itemData, itemVisibleFrameContentElement);\n        } else {\n          changed = this._contentToString(this.itemVisibleFrameContent) !== this._contentToString(itemVisibleFrameContent);\n          if (changed) {\n            // only replace the content when changed\n            if (itemVisibleFrameContent instanceof Element) {\n              itemVisibleFrameContentElement.innerHTML = '';\n              itemVisibleFrameContentElement.appendChild(itemVisibleFrameContent);\n            } else if (itemVisibleFrameContent != undefined) {\n              itemVisibleFrameContentElement.innerHTML = availableUtils.xss(itemVisibleFrameContent);\n            } else {\n              if (!(this.data.type == 'background' && this.data.content === undefined)) {\n                throw new Error(\"Property \\\"content\\\" missing in item \".concat(this.id));\n              }\n            }\n            this.itemVisibleFrameContent = itemVisibleFrameContent;\n          }\n        }\n      }\n      if (this.options.template) {\n        var _context6;\n        templateFunction = _bindInstanceProperty$1(_context6 = this.options.template).call(_context6, this);\n        content = templateFunction(itemData, element, this.data);\n      } else {\n        content = this.data.content;\n      }\n      if (content instanceof Object && !(content instanceof Element)) {\n        templateFunction(itemData, element);\n      } else {\n        changed = this._contentToString(this.content) !== this._contentToString(content);\n        if (changed) {\n          // only replace the content when changed\n          if (content instanceof Element) {\n            element.innerHTML = '';\n            element.appendChild(content);\n          } else if (content != undefined) {\n            element.innerHTML = availableUtils.xss(content);\n          } else {\n            if (!(this.data.type == 'background' && this.data.content === undefined)) {\n              throw new Error(\"Property \\\"content\\\" missing in item \".concat(this.id));\n            }\n          }\n          this.content = content;\n        }\n      }\n    }\n\n    /**\n     * Process dataAttributes timeline option and set as data- attributes on dom.content\n     * @param {Element} element   HTML element to which the attributes will be attached\n     * @private\n     */\n  }, {\n    key: \"_updateDataAttributes\",\n    value: function _updateDataAttributes(element) {\n      if (this.options.dataAttributes && this.options.dataAttributes.length > 0) {\n        var attributes = [];\n        if (_Array$isArray(this.options.dataAttributes)) {\n          attributes = this.options.dataAttributes;\n        } else if (this.options.dataAttributes == 'all') {\n          attributes = _Object$keys(this.data);\n        } else {\n          return;\n        }\n        var _iterator = _createForOfIteratorHelper$4(attributes),\n          _step;\n        try {\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            var name = _step.value;\n            var value = this.data[name];\n            if (value != null) {\n              element.setAttribute(\"data-\".concat(name), value);\n            } else {\n              element.removeAttribute(\"data-\".concat(name));\n            }\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n    }\n\n    /**\n     * Update custom styles of the element\n     * @param {Element} element\n     * @private\n     */\n  }, {\n    key: \"_updateStyle\",\n    value: function _updateStyle(element) {\n      // remove old styles\n      if (this.style) {\n        availableUtils.removeCssText(element, this.style);\n        this.style = null;\n      }\n\n      // append new styles\n      if (this.data.style) {\n        availableUtils.addCssText(element, this.data.style);\n        this.style = this.data.style;\n      }\n    }\n\n    /**\n     * Stringify the items contents\n     * @param {string | Element | undefined} content\n     * @returns {string | undefined}\n     * @private\n     */\n  }, {\n    key: \"_contentToString\",\n    value: function _contentToString(content) {\n      if (typeof content === 'string') return content;\n      if (content && 'outerHTML' in content) return content.outerHTML;\n      return content;\n    }\n\n    /**\n     * Update the editability of this item.\n     */\n  }, {\n    key: \"_updateEditStatus\",\n    value: function _updateEditStatus() {\n      if (this.options) {\n        if (typeof this.options.editable === 'boolean') {\n          this.editable = {\n            updateTime: this.options.editable,\n            updateGroup: this.options.editable,\n            remove: this.options.editable\n          };\n        } else if (_typeof$1(this.options.editable) === 'object') {\n          this.editable = {};\n          availableUtils.selectiveExtend(['updateTime', 'updateGroup', 'remove'], this.editable, this.options.editable);\n        }\n      }\n      // Item data overrides, except if options.editable.overrideItems is set.\n      if (!this.options || !this.options.editable || this.options.editable.overrideItems !== true) {\n        if (this.data) {\n          if (typeof this.data.editable === 'boolean') {\n            this.editable = {\n              updateTime: this.data.editable,\n              updateGroup: this.data.editable,\n              remove: this.data.editable\n            };\n          } else if (_typeof$1(this.data.editable) === 'object') {\n            // TODO: in timeline.js 5.0, we should change this to not reset options from the timeline configuration.\n            // Basically just remove the next line...\n            this.editable = {};\n            availableUtils.selectiveExtend(['updateTime', 'updateGroup', 'remove'], this.editable, this.data.editable);\n          }\n        }\n      }\n    }\n\n    /**\n     * Return the width of the item left from its start date\n     * @return {number}\n     */\n  }, {\n    key: \"getWidthLeft\",\n    value: function getWidthLeft() {\n      return 0;\n    }\n\n    /**\n     * Return the width of the item right from the max of its start and end date\n     * @return {number}\n     */\n  }, {\n    key: \"getWidthRight\",\n    value: function getWidthRight() {\n      return 0;\n    }\n\n    /**\n     * Return the title of the item\n     * @return {string | undefined}\n     */\n  }, {\n    key: \"getTitle\",\n    value: function getTitle() {\n      if (this.options.tooltip && this.options.tooltip.template) {\n        var _context7;\n        var templateFunction = _bindInstanceProperty$1(_context7 = this.options.tooltip.template).call(_context7, this);\n        return templateFunction(this._getItemData(), this.data);\n      }\n      return this.data.title;\n    }\n  }]);\n  return Item;\n}();\nItem.prototype.stack = true;\n\nfunction _createSuper$7(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$7(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$7() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @constructor BoxItem\n * @extends Item\n */\nvar BoxItem = /*#__PURE__*/function (_Item) {\n  _inherits(BoxItem, _Item);\n  var _super = _createSuper$7(BoxItem);\n  /**\n  * @param {Object} data             Object containing parameters start\n  *                                  content, className.\n  * @param {{toScreen: function, toTime: function}} conversion\n  *                                  Conversion functions from time to screen and vice versa\n  * @param {Object} [options]        Configuration options\n  *                                  // TODO: describe available options\n  */\n  function BoxItem(data, conversion, options) {\n    var _this;\n    _classCallCheck(this, BoxItem);\n    _this = _super.call(this, data, conversion, options);\n    _this.props = {\n      dot: {\n        width: 0,\n        height: 0\n      },\n      line: {\n        width: 0,\n        height: 0\n      }\n    };\n    // validate data\n    if (data) {\n      if (data.start == undefined) {\n        throw new Error(\"Property \\\"start\\\" missing in item \".concat(data));\n      }\n    }\n    return _this;\n  }\n\n  /**\n   * Check whether this item is visible inside given range\n   * @param {{start: number, end: number}} range with a timestamp for start and end\n   * @returns {boolean} True if visible\n   */\n  _createClass(BoxItem, [{\n    key: \"isVisible\",\n    value: function isVisible(range) {\n      if (this.cluster) {\n        return false;\n      }\n      // determine visibility\n      var isVisible;\n      var align = this.data.align || this.options.align;\n      var widthInMs = this.width * range.getMillisecondsPerPixel();\n      if (align == 'right') {\n        isVisible = this.data.start.getTime() > range.start && this.data.start.getTime() - widthInMs < range.end;\n      } else if (align == 'left') {\n        isVisible = this.data.start.getTime() + widthInMs > range.start && this.data.start.getTime() < range.end;\n      } else {\n        // default or 'center'\n        isVisible = this.data.start.getTime() + widthInMs / 2 > range.start && this.data.start.getTime() - widthInMs / 2 < range.end;\n      }\n      return isVisible;\n    }\n\n    /**\n    * create DOM element\n    * @private\n    */\n  }, {\n    key: \"_createDomElement\",\n    value: function _createDomElement() {\n      if (!this.dom) {\n        // create DOM\n        this.dom = {};\n\n        // create main box\n        this.dom.box = document.createElement('DIV');\n\n        // contents box (inside the background box). used for making margins\n        this.dom.content = document.createElement('DIV');\n        this.dom.content.className = 'vis-item-content';\n        this.dom.box.appendChild(this.dom.content);\n\n        // line to axis\n        this.dom.line = document.createElement('DIV');\n        this.dom.line.className = 'vis-line';\n\n        // dot on axis\n        this.dom.dot = document.createElement('DIV');\n        this.dom.dot.className = 'vis-dot';\n\n        // attach this item as attribute\n        this.dom.box['vis-item'] = this;\n        this.dirty = true;\n      }\n    }\n\n    /**\n     * append DOM element\n     * @private\n     */\n  }, {\n    key: \"_appendDomElement\",\n    value: function _appendDomElement() {\n      if (!this.parent) {\n        throw new Error('Cannot redraw item: no parent attached');\n      }\n      if (!this.dom.box.parentNode) {\n        var foreground = this.parent.dom.foreground;\n        if (!foreground) throw new Error('Cannot redraw item: parent has no foreground container element');\n        foreground.appendChild(this.dom.box);\n      }\n      if (!this.dom.line.parentNode) {\n        var background = this.parent.dom.background;\n        if (!background) throw new Error('Cannot redraw item: parent has no background container element');\n        background.appendChild(this.dom.line);\n      }\n      if (!this.dom.dot.parentNode) {\n        var axis = this.parent.dom.axis;\n        if (!background) throw new Error('Cannot redraw item: parent has no axis container element');\n        axis.appendChild(this.dom.dot);\n      }\n      this.displayed = true;\n    }\n\n    /**\n     * update dirty DOM element\n     * @private\n     */\n  }, {\n    key: \"_updateDirtyDomComponents\",\n    value: function _updateDirtyDomComponents() {\n      // An item is marked dirty when:\n      // - the item is not yet rendered\n      // - the item's data is changed\n      // - the item is selected/deselected\n      if (this.dirty) {\n        this._updateContents(this.dom.content);\n        this._updateDataAttributes(this.dom.box);\n        this._updateStyle(this.dom.box);\n        var editable = this.editable.updateTime || this.editable.updateGroup;\n\n        // update class\n        var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' vis-selected' : '') + (editable ? ' vis-editable' : ' vis-readonly');\n        this.dom.box.className = \"vis-item vis-box\".concat(className);\n        this.dom.line.className = \"vis-item vis-line\".concat(className);\n        this.dom.dot.className = \"vis-item vis-dot\".concat(className);\n      }\n    }\n\n    /**\n     * get DOM components sizes\n     * @return {object}\n     * @private\n     */\n  }, {\n    key: \"_getDomComponentsSizes\",\n    value: function _getDomComponentsSizes() {\n      return {\n        previous: {\n          right: this.dom.box.style.right,\n          left: this.dom.box.style.left\n        },\n        dot: {\n          height: this.dom.dot.offsetHeight,\n          width: this.dom.dot.offsetWidth\n        },\n        line: {\n          width: this.dom.line.offsetWidth\n        },\n        box: {\n          width: this.dom.box.offsetWidth,\n          height: this.dom.box.offsetHeight\n        }\n      };\n    }\n\n    /**\n     * update DOM components sizes\n     * @param {object} sizes\n     * @private\n     */\n  }, {\n    key: \"_updateDomComponentsSizes\",\n    value: function _updateDomComponentsSizes(sizes) {\n      if (this.options.rtl) {\n        this.dom.box.style.right = \"0px\";\n      } else {\n        this.dom.box.style.left = \"0px\";\n      }\n\n      // recalculate size\n      this.props.dot.height = sizes.dot.height;\n      this.props.dot.width = sizes.dot.width;\n      this.props.line.width = sizes.line.width;\n      this.width = sizes.box.width;\n      this.height = sizes.box.height;\n\n      // restore previous position\n      if (this.options.rtl) {\n        this.dom.box.style.right = sizes.previous.right;\n      } else {\n        this.dom.box.style.left = sizes.previous.left;\n      }\n      this.dirty = false;\n    }\n\n    /**\n     * repaint DOM additionals\n     * @private\n     */\n  }, {\n    key: \"_repaintDomAdditionals\",\n    value: function _repaintDomAdditionals() {\n      this._repaintOnItemUpdateTimeTooltip(this.dom.box);\n      this._repaintDragCenter();\n      this._repaintDeleteButton(this.dom.box);\n    }\n\n    /**\n     * Repaint the item\n     * @param {boolean} [returnQueue=false]  return the queue\n     * @return {boolean} the redraw queue if returnQueue=true\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw(returnQueue) {\n      var _context,\n        _context2,\n        _context3,\n        _this2 = this,\n        _context5;\n      var sizes;\n      var queue = [\n      // create item DOM\n      _bindInstanceProperty$1(_context = this._createDomElement).call(_context, this),\n      // append DOM to parent DOM\n      _bindInstanceProperty$1(_context2 = this._appendDomElement).call(_context2, this),\n      // update dirty DOM\n      _bindInstanceProperty$1(_context3 = this._updateDirtyDomComponents).call(_context3, this), function () {\n        if (_this2.dirty) {\n          sizes = _this2._getDomComponentsSizes();\n        }\n      }, function () {\n        if (_this2.dirty) {\n          var _context4;\n          _bindInstanceProperty$1(_context4 = _this2._updateDomComponentsSizes).call(_context4, _this2)(sizes);\n        }\n      },\n      // repaint DOM additionals\n      _bindInstanceProperty$1(_context5 = this._repaintDomAdditionals).call(_context5, this)];\n      if (returnQueue) {\n        return queue;\n      } else {\n        var result;\n        _forEachInstanceProperty(queue).call(queue, function (fn) {\n          result = fn();\n        });\n        return result;\n      }\n    }\n\n    /**\n     * Show the item in the DOM (when not already visible). The items DOM will\n     * be created when needed.\n     * @param {boolean} [returnQueue=false]  whether to return a queue of functions to execute instead of just executing them\n     * @return {boolean} the redraw queue if returnQueue=true\n     */\n  }, {\n    key: \"show\",\n    value: function show(returnQueue) {\n      if (!this.displayed) {\n        return this.redraw(returnQueue);\n      }\n    }\n\n    /**\n     * Hide the item from the DOM (when visible)\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this.displayed) {\n        var dom = this.dom;\n        if (dom.box.remove) dom.box.remove();else if (dom.box.parentNode) dom.box.parentNode.removeChild(dom.box); // IE11\n\n        if (dom.line.remove) dom.line.remove();else if (dom.line.parentNode) dom.line.parentNode.removeChild(dom.line); // IE11\n\n        if (dom.dot.remove) dom.dot.remove();else if (dom.dot.parentNode) dom.dot.parentNode.removeChild(dom.dot); // IE11\n\n        this.displayed = false;\n      }\n    }\n\n    /**\n     * Reposition the item XY\n     */\n  }, {\n    key: \"repositionXY\",\n    value: function repositionXY() {\n      var rtl = this.options.rtl;\n      var repositionXY = function repositionXY(element, x, y) {\n        var _context6;\n        var rtl = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        if (x === undefined && y === undefined) return;\n        // If rtl invert the number.\n        var directionX = rtl ? x * -1 : x;\n\n        //no y. translate x\n        if (y === undefined) {\n          element.style.transform = \"translateX(\".concat(directionX, \"px)\");\n          return;\n        }\n\n        //no x. translate y\n        if (x === undefined) {\n          element.style.transform = \"translateY(\".concat(y, \"px)\");\n          return;\n        }\n        element.style.transform = _concatInstanceProperty(_context6 = \"translate(\".concat(directionX, \"px, \")).call(_context6, y, \"px)\");\n      };\n      repositionXY(this.dom.box, this.boxX, this.boxY, rtl);\n      repositionXY(this.dom.dot, this.dotX, this.dotY, rtl);\n      repositionXY(this.dom.line, this.lineX, this.lineY, rtl);\n    }\n\n    /**\n     * Reposition the item horizontally\n     * @Override\n     */\n  }, {\n    key: \"repositionX\",\n    value: function repositionX() {\n      var start = this.conversion.toScreen(this.data.start);\n      var align = this.data.align === undefined ? this.options.align : this.data.align;\n      var lineWidth = this.props.line.width;\n      var dotWidth = this.props.dot.width;\n      if (align == 'right') {\n        // calculate right position of the box\n        this.boxX = start - this.width;\n        this.lineX = start - lineWidth;\n        this.dotX = start - lineWidth / 2 - dotWidth / 2;\n      } else if (align == 'left') {\n        // calculate left position of the box\n        this.boxX = start;\n        this.lineX = start;\n        this.dotX = start + lineWidth / 2 - dotWidth / 2;\n      } else {\n        // default or 'center'\n        this.boxX = start - this.width / 2;\n        this.lineX = this.options.rtl ? start - lineWidth : start - lineWidth / 2;\n        this.dotX = start - dotWidth / 2;\n      }\n      if (this.options.rtl) this.right = this.boxX;else this.left = this.boxX;\n      this.repositionXY();\n    }\n\n    /**\n     * Reposition the item vertically\n     * @Override\n     */\n  }, {\n    key: \"repositionY\",\n    value: function repositionY() {\n      var orientation = this.options.orientation.item;\n      var lineStyle = this.dom.line.style;\n      if (orientation == 'top') {\n        var lineHeight = this.parent.top + this.top + 1;\n        this.boxY = this.top || 0;\n        lineStyle.height = \"\".concat(lineHeight, \"px\");\n        lineStyle.bottom = '';\n        lineStyle.top = '0';\n      } else {\n        // orientation 'bottom'\n        var itemSetHeight = this.parent.itemSet.props.height; // TODO: this is nasty\n        var _lineHeight = itemSetHeight - this.parent.top - this.parent.height + this.top;\n        this.boxY = this.parent.height - this.top - (this.height || 0);\n        lineStyle.height = \"\".concat(_lineHeight, \"px\");\n        lineStyle.top = '';\n        lineStyle.bottom = '0';\n      }\n      this.dotY = -this.props.dot.height / 2;\n      this.repositionXY();\n    }\n\n    /**\n     * Return the width of the item left from its start date\n     * @return {number}\n     */\n  }, {\n    key: \"getWidthLeft\",\n    value: function getWidthLeft() {\n      return this.width / 2;\n    }\n\n    /**\n     * Return the width of the item right from its start date\n     * @return {number}\n     */\n  }, {\n    key: \"getWidthRight\",\n    value: function getWidthRight() {\n      return this.width / 2;\n    }\n  }]);\n  return BoxItem;\n}(Item);\n\nfunction _createSuper$6(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$6(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$6() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @constructor PointItem\n * @extends Item\n */\nvar PointItem = /*#__PURE__*/function (_Item) {\n  _inherits(PointItem, _Item);\n  var _super = _createSuper$6(PointItem);\n  /**\n  * @param {Object} data             Object containing parameters start\n  *                                  content, className.\n  * @param {{toScreen: function, toTime: function}} conversion\n  *                                  Conversion functions from time to screen and vice versa\n  * @param {Object} [options]        Configuration options\n  *                                  // TODO: describe available options\n  */\n  function PointItem(data, conversion, options) {\n    var _this;\n    _classCallCheck(this, PointItem);\n    _this = _super.call(this, data, conversion, options);\n    _this.props = {\n      dot: {\n        top: 0,\n        width: 0,\n        height: 0\n      },\n      content: {\n        height: 0,\n        marginLeft: 0,\n        marginRight: 0\n      }\n    };\n    // validate data\n    if (data) {\n      if (data.start == undefined) {\n        throw new Error(\"Property \\\"start\\\" missing in item \".concat(data));\n      }\n    }\n    return _this;\n  }\n\n  /**\n   * Check whether this item is visible inside given range\n   * @param {{start: number, end: number}} range with a timestamp for start and end\n   * @returns {boolean} True if visible\n   */\n  _createClass(PointItem, [{\n    key: \"isVisible\",\n    value: function isVisible(range) {\n      if (this.cluster) {\n        return false;\n      }\n      // determine visibility\n      var widthInMs = this.width * range.getMillisecondsPerPixel();\n      return this.data.start.getTime() + widthInMs > range.start && this.data.start < range.end;\n    }\n\n    /**\n     * create DOM element\n     * @private\n     */\n  }, {\n    key: \"_createDomElement\",\n    value: function _createDomElement() {\n      if (!this.dom) {\n        // create DOM\n        this.dom = {};\n\n        // background box\n        this.dom.point = document.createElement('div');\n        // className is updated in redraw()\n\n        // contents box, right from the dot\n        this.dom.content = document.createElement('div');\n        this.dom.content.className = 'vis-item-content';\n        this.dom.point.appendChild(this.dom.content);\n\n        // dot at start\n        this.dom.dot = document.createElement('div');\n        this.dom.point.appendChild(this.dom.dot);\n\n        // attach this item as attribute\n        this.dom.point['vis-item'] = this;\n        this.dirty = true;\n      }\n    }\n\n    /**\n     * append DOM element\n     * @private\n     */\n  }, {\n    key: \"_appendDomElement\",\n    value: function _appendDomElement() {\n      if (!this.parent) {\n        throw new Error('Cannot redraw item: no parent attached');\n      }\n      if (!this.dom.point.parentNode) {\n        var foreground = this.parent.dom.foreground;\n        if (!foreground) {\n          throw new Error('Cannot redraw item: parent has no foreground container element');\n        }\n        foreground.appendChild(this.dom.point);\n      }\n      this.displayed = true;\n    }\n\n    /**\n     * update dirty DOM components\n     * @private\n     */\n  }, {\n    key: \"_updateDirtyDomComponents\",\n    value: function _updateDirtyDomComponents() {\n      // An item is marked dirty when:\n      // - the item is not yet rendered\n      // - the item's data is changed\n      // - the item is selected/deselected\n      if (this.dirty) {\n        this._updateContents(this.dom.content);\n        this._updateDataAttributes(this.dom.point);\n        this._updateStyle(this.dom.point);\n        var editable = this.editable.updateTime || this.editable.updateGroup;\n        // update class\n        var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' vis-selected' : '') + (editable ? ' vis-editable' : ' vis-readonly');\n        this.dom.point.className = \"vis-item vis-point\".concat(className);\n        this.dom.dot.className = \"vis-item vis-dot\".concat(className);\n      }\n    }\n\n    /**\n     * get DOM component sizes\n     * @return {object}\n     * @private\n     */\n  }, {\n    key: \"_getDomComponentsSizes\",\n    value: function _getDomComponentsSizes() {\n      return {\n        dot: {\n          width: this.dom.dot.offsetWidth,\n          height: this.dom.dot.offsetHeight\n        },\n        content: {\n          width: this.dom.content.offsetWidth,\n          height: this.dom.content.offsetHeight\n        },\n        point: {\n          width: this.dom.point.offsetWidth,\n          height: this.dom.point.offsetHeight\n        }\n      };\n    }\n\n    /**\n     * update DOM components sizes\n     * @param {array} sizes\n     * @private\n     */\n  }, {\n    key: \"_updateDomComponentsSizes\",\n    value: function _updateDomComponentsSizes(sizes) {\n      // recalculate size of dot and contents\n      this.props.dot.width = sizes.dot.width;\n      this.props.dot.height = sizes.dot.height;\n      this.props.content.height = sizes.content.height;\n\n      // resize contents\n      if (this.options.rtl) {\n        this.dom.content.style.marginRight = \"\".concat(this.props.dot.width / 2, \"px\");\n      } else {\n        this.dom.content.style.marginLeft = \"\".concat(this.props.dot.width / 2, \"px\");\n      }\n      //this.dom.content.style.marginRight = ... + 'px'; // TODO: margin right\n\n      // recalculate size\n      this.width = sizes.point.width;\n      this.height = sizes.point.height;\n\n      // reposition the dot\n      this.dom.dot.style.top = \"\".concat((this.height - this.props.dot.height) / 2, \"px\");\n      var dotWidth = this.props.dot.width;\n      var translateX = this.options.rtl ? dotWidth / 2 : dotWidth / 2 * -1;\n      this.dom.dot.style.transform = \"translateX(\".concat(translateX, \"px\");\n      this.dirty = false;\n    }\n\n    /**\n     * Repain DOM additionals\n     * @private\n     */\n  }, {\n    key: \"_repaintDomAdditionals\",\n    value: function _repaintDomAdditionals() {\n      this._repaintOnItemUpdateTimeTooltip(this.dom.point);\n      this._repaintDragCenter();\n      this._repaintDeleteButton(this.dom.point);\n    }\n\n    /**\n     * Repaint the item\n     * @param {boolean} [returnQueue=false]  return the queue\n     * @return {boolean} the redraw queue if returnQueue=true\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw(returnQueue) {\n      var _context,\n        _context2,\n        _context3,\n        _this2 = this,\n        _context5;\n      var sizes;\n      var queue = [\n      // create item DOM\n      _bindInstanceProperty$1(_context = this._createDomElement).call(_context, this),\n      // append DOM to parent DOM\n      _bindInstanceProperty$1(_context2 = this._appendDomElement).call(_context2, this),\n      // update dirty DOM\n      _bindInstanceProperty$1(_context3 = this._updateDirtyDomComponents).call(_context3, this), function () {\n        if (_this2.dirty) {\n          sizes = _this2._getDomComponentsSizes();\n        }\n      }, function () {\n        if (_this2.dirty) {\n          var _context4;\n          _bindInstanceProperty$1(_context4 = _this2._updateDomComponentsSizes).call(_context4, _this2)(sizes);\n        }\n      },\n      // repaint DOM additionals\n      _bindInstanceProperty$1(_context5 = this._repaintDomAdditionals).call(_context5, this)];\n      if (returnQueue) {\n        return queue;\n      } else {\n        var result;\n        _forEachInstanceProperty(queue).call(queue, function (fn) {\n          result = fn();\n        });\n        return result;\n      }\n    }\n\n    /**\n     * Reposition XY\n     */\n  }, {\n    key: \"repositionXY\",\n    value: function repositionXY() {\n      var rtl = this.options.rtl;\n      var repositionXY = function repositionXY(element, x, y) {\n        var _context6;\n        var rtl = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n        if (x === undefined && y === undefined) return;\n        // If rtl invert the number.\n        var directionX = rtl ? x * -1 : x;\n\n        //no y. translate x\n        if (y === undefined) {\n          element.style.transform = \"translateX(\".concat(directionX, \"px)\");\n          return;\n        }\n\n        //no x. translate y\n        if (x === undefined) {\n          element.style.transform = \"translateY(\".concat(y, \"px)\");\n          return;\n        }\n        element.style.transform = _concatInstanceProperty(_context6 = \"translate(\".concat(directionX, \"px, \")).call(_context6, y, \"px)\");\n      };\n      repositionXY(this.dom.point, this.pointX, this.pointY, rtl);\n    }\n\n    /**\n     * Show the item in the DOM (when not already visible). The items DOM will\n     * be created when needed.\n     * @param {boolean} [returnQueue=false]  whether to return a queue of functions to execute instead of just executing them\n     * @return {boolean} the redraw queue if returnQueue=true\n     */\n  }, {\n    key: \"show\",\n    value: function show(returnQueue) {\n      if (!this.displayed) {\n        return this.redraw(returnQueue);\n      }\n    }\n\n    /**\n     * Hide the item from the DOM (when visible)\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this.displayed) {\n        if (this.dom.point.parentNode) {\n          this.dom.point.parentNode.removeChild(this.dom.point);\n        }\n        this.displayed = false;\n      }\n    }\n\n    /**\n     * Reposition the item horizontally\n     * @Override\n     */\n  }, {\n    key: \"repositionX\",\n    value: function repositionX() {\n      var start = this.conversion.toScreen(this.data.start);\n      this.pointX = start;\n      if (this.options.rtl) {\n        this.right = start - this.props.dot.width;\n      } else {\n        this.left = start - this.props.dot.width;\n      }\n      this.repositionXY();\n    }\n\n    /**\n     * Reposition the item vertically\n     * @Override\n     */\n  }, {\n    key: \"repositionY\",\n    value: function repositionY() {\n      var orientation = this.options.orientation.item;\n      if (orientation == 'top') {\n        this.pointY = this.top;\n      } else {\n        this.pointY = this.parent.height - this.top - this.height;\n      }\n      this.repositionXY();\n    }\n\n    /**\n     * Return the width of the item left from its start date\n     * @return {number}\n     */\n  }, {\n    key: \"getWidthLeft\",\n    value: function getWidthLeft() {\n      return this.props.dot.width;\n    }\n\n    /**\n     * Return the width of the item right from  its start date\n     * @return {number}\n     */\n  }, {\n    key: \"getWidthRight\",\n    value: function getWidthRight() {\n      return this.props.dot.width;\n    }\n  }]);\n  return PointItem;\n}(Item);\n\nfunction _createSuper$5(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$5(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$5() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @constructor RangeItem\n * @extends Item\n */\nvar RangeItem = /*#__PURE__*/function (_Item) {\n  _inherits(RangeItem, _Item);\n  var _super = _createSuper$5(RangeItem);\n  /**\n  * @param {Object} data             Object containing parameters start, end\n  *                                  content, className.\n  * @param {{toScreen: function, toTime: function}} conversion\n  *                                  Conversion functions from time to screen and vice versa\n  * @param {Object} [options]        Configuration options\n  *                                  // TODO: describe options\n  */\n  function RangeItem(data, conversion, options) {\n    var _this;\n    _classCallCheck(this, RangeItem);\n    _this = _super.call(this, data, conversion, options);\n    _this.props = {\n      content: {\n        width: 0\n      }\n    };\n    _this.overflow = false; // if contents can overflow (css styling), this flag is set to true\n    // validate data\n    if (data) {\n      if (data.start == undefined) {\n        throw new Error(\"Property \\\"start\\\" missing in item \".concat(data.id));\n      }\n      if (data.end == undefined) {\n        throw new Error(\"Property \\\"end\\\" missing in item \".concat(data.id));\n      }\n    }\n    return _this;\n  }\n\n  /**\n   * Check whether this item is visible inside given range\n   *\n   * @param {timeline.Range} range with a timestamp for start and end\n   * @returns {boolean} True if visible\n   */\n  _createClass(RangeItem, [{\n    key: \"isVisible\",\n    value: function isVisible(range) {\n      if (this.cluster) {\n        return false;\n      }\n      // determine visibility\n      return this.data.start < range.end && this.data.end > range.start;\n    }\n\n    /**\n     * create DOM elements\n     * @private\n     */\n  }, {\n    key: \"_createDomElement\",\n    value: function _createDomElement() {\n      if (!this.dom) {\n        // create DOM\n        this.dom = {};\n\n        // background box\n        this.dom.box = document.createElement('div');\n        // className is updated in redraw()\n\n        // frame box (to prevent the item contents from overflowing)\n        this.dom.frame = document.createElement('div');\n        this.dom.frame.className = 'vis-item-overflow';\n        this.dom.box.appendChild(this.dom.frame);\n\n        // visible frame box (showing the frame that is always visible)\n        this.dom.visibleFrame = document.createElement('div');\n        this.dom.visibleFrame.className = 'vis-item-visible-frame';\n        this.dom.box.appendChild(this.dom.visibleFrame);\n\n        // contents box\n        this.dom.content = document.createElement('div');\n        this.dom.content.className = 'vis-item-content';\n        this.dom.frame.appendChild(this.dom.content);\n\n        // attach this item as attribute\n        this.dom.box['vis-item'] = this;\n        this.dirty = true;\n      }\n    }\n\n    /**\n     * append element to DOM\n     * @private\n     */\n  }, {\n    key: \"_appendDomElement\",\n    value: function _appendDomElement() {\n      if (!this.parent) {\n        throw new Error('Cannot redraw item: no parent attached');\n      }\n      if (!this.dom.box.parentNode) {\n        var foreground = this.parent.dom.foreground;\n        if (!foreground) {\n          throw new Error('Cannot redraw item: parent has no foreground container element');\n        }\n        foreground.appendChild(this.dom.box);\n      }\n      this.displayed = true;\n    }\n\n    /**\n     * update dirty DOM components\n     * @private\n     */\n  }, {\n    key: \"_updateDirtyDomComponents\",\n    value: function _updateDirtyDomComponents() {\n      // update dirty DOM. An item is marked dirty when:\n      // - the item is not yet rendered\n      // - the item's data is changed\n      // - the item is selected/deselected\n      if (this.dirty) {\n        this._updateContents(this.dom.content);\n        this._updateDataAttributes(this.dom.box);\n        this._updateStyle(this.dom.box);\n        var editable = this.editable.updateTime || this.editable.updateGroup;\n\n        // update class\n        var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' vis-selected' : '') + (editable ? ' vis-editable' : ' vis-readonly');\n        this.dom.box.className = this.baseClassName + className;\n\n        // turn off max-width to be able to calculate the real width\n        // this causes an extra browser repaint/reflow, but so be it\n        this.dom.content.style.maxWidth = 'none';\n      }\n    }\n\n    /**\n     * get DOM component sizes\n     * @return {object}\n     * @private\n     */\n  }, {\n    key: \"_getDomComponentsSizes\",\n    value: function _getDomComponentsSizes() {\n      // determine from css whether this box has overflow\n      this.overflow = window.getComputedStyle(this.dom.frame).overflow !== 'hidden';\n      this.whiteSpace = window.getComputedStyle(this.dom.content).whiteSpace !== 'nowrap';\n      return {\n        content: {\n          width: this.dom.content.offsetWidth\n        },\n        box: {\n          height: this.dom.box.offsetHeight\n        }\n      };\n    }\n\n    /**\n     * update DOM component sizes\n     * @param {array} sizes\n     * @private\n     */\n  }, {\n    key: \"_updateDomComponentsSizes\",\n    value: function _updateDomComponentsSizes(sizes) {\n      this.props.content.width = sizes.content.width;\n      this.height = sizes.box.height;\n      this.dom.content.style.maxWidth = '';\n      this.dirty = false;\n    }\n\n    /**\n     * repaint DOM additional components\n     * @private\n     */\n  }, {\n    key: \"_repaintDomAdditionals\",\n    value: function _repaintDomAdditionals() {\n      this._repaintOnItemUpdateTimeTooltip(this.dom.box);\n      this._repaintDeleteButton(this.dom.box);\n      this._repaintDragCenter();\n      this._repaintDragLeft();\n      this._repaintDragRight();\n    }\n\n    /**\n     * Repaint the item\n     * @param {boolean} [returnQueue=false]  return the queue\n     * @return {boolean} the redraw queue if returnQueue=true\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw(returnQueue) {\n      var _context,\n        _context2,\n        _context3,\n        _this2 = this,\n        _context6;\n      var sizes;\n      var queue = [\n      // create item DOM\n      _bindInstanceProperty$1(_context = this._createDomElement).call(_context, this),\n      // append DOM to parent DOM\n      _bindInstanceProperty$1(_context2 = this._appendDomElement).call(_context2, this),\n      // update dirty DOM \n      _bindInstanceProperty$1(_context3 = this._updateDirtyDomComponents).call(_context3, this), function () {\n        if (_this2.dirty) {\n          var _context4;\n          sizes = _bindInstanceProperty$1(_context4 = _this2._getDomComponentsSizes).call(_context4, _this2)();\n        }\n      }, function () {\n        if (_this2.dirty) {\n          var _context5;\n          _bindInstanceProperty$1(_context5 = _this2._updateDomComponentsSizes).call(_context5, _this2)(sizes);\n        }\n      },\n      // repaint DOM additionals\n      _bindInstanceProperty$1(_context6 = this._repaintDomAdditionals).call(_context6, this)];\n      if (returnQueue) {\n        return queue;\n      } else {\n        var result;\n        _forEachInstanceProperty(queue).call(queue, function (fn) {\n          result = fn();\n        });\n        return result;\n      }\n    }\n\n    /**\n     * Show the item in the DOM (when not already visible). The items DOM will\n     * be created when needed.\n     * @param {boolean} [returnQueue=false]  whether to return a queue of functions to execute instead of just executing them\n     * @return {boolean} the redraw queue if returnQueue=true\n     */\n  }, {\n    key: \"show\",\n    value: function show(returnQueue) {\n      if (!this.displayed) {\n        return this.redraw(returnQueue);\n      }\n    }\n\n    /**\n     * Hide the item from the DOM (when visible)\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this.displayed) {\n        var box = this.dom.box;\n        if (box.parentNode) {\n          box.parentNode.removeChild(box);\n        }\n        this.displayed = false;\n      }\n    }\n\n    /**\n     * Reposition the item horizontally\n     * @param {boolean} [limitSize=true] If true (default), the width of the range\n     *                                   item will be limited, as the browser cannot\n     *                                   display very wide divs. This means though\n     *                                   that the applied left and width may\n     *                                   not correspond to the ranges start and end\n     * @Override\n     */\n  }, {\n    key: \"repositionX\",\n    value: function repositionX(limitSize) {\n      var parentWidth = this.parent.width;\n      var start = this.conversion.toScreen(this.data.start);\n      var end = this.conversion.toScreen(this.data.end);\n      var align = this.data.align === undefined ? this.options.align : this.data.align;\n      var contentStartPosition;\n      var contentWidth;\n\n      // limit the width of the range, as browsers cannot draw very wide divs\n      // unless limitSize: false is explicitly set in item data\n      if (this.data.limitSize !== false && (limitSize === undefined || limitSize === true)) {\n        if (start < -parentWidth) {\n          start = -parentWidth;\n        }\n        if (end > 2 * parentWidth) {\n          end = 2 * parentWidth;\n        }\n      }\n\n      //round to 3 decimals to compensate floating-point values rounding\n      var boxWidth = Math.max(Math.round((end - start) * 1000) / 1000, 1);\n      if (this.overflow) {\n        if (this.options.rtl) {\n          this.right = start;\n        } else {\n          this.left = start;\n        }\n        this.width = boxWidth + this.props.content.width;\n        contentWidth = this.props.content.width;\n\n        // Note: The calculation of width is an optimistic calculation, giving\n        //       a width which will not change when moving the Timeline\n        //       So no re-stacking needed, which is nicer for the eye;\n      } else {\n        if (this.options.rtl) {\n          this.right = start;\n        } else {\n          this.left = start;\n        }\n        this.width = boxWidth;\n        contentWidth = Math.min(end - start, this.props.content.width);\n      }\n      if (this.options.rtl) {\n        this.dom.box.style.transform = \"translateX(\".concat(this.right * -1, \"px)\");\n      } else {\n        this.dom.box.style.transform = \"translateX(\".concat(this.left, \"px)\");\n      }\n      this.dom.box.style.width = \"\".concat(boxWidth, \"px\");\n      if (this.whiteSpace) {\n        this.height = this.dom.box.offsetHeight;\n      }\n      switch (align) {\n        case 'left':\n          this.dom.content.style.transform = 'translateX(0)';\n          break;\n        case 'right':\n          if (this.options.rtl) {\n            var translateX = Math.max(boxWidth - contentWidth, 0) * -1;\n            this.dom.content.style.transform = \"translateX(\".concat(translateX, \"px)\");\n          } else {\n            this.dom.content.style.transform = \"translateX(\".concat(Math.max(boxWidth - contentWidth, 0), \"px)\");\n          }\n          break;\n        case 'center':\n          if (this.options.rtl) {\n            var _translateX = Math.max((boxWidth - contentWidth) / 2, 0) * -1;\n            this.dom.content.style.transform = \"translateX(\".concat(_translateX, \"px)\");\n          } else {\n            this.dom.content.style.transform = \"translateX(\".concat(Math.max((boxWidth - contentWidth) / 2, 0), \"px)\");\n          }\n          break;\n        default:\n          // 'auto'\n          // when range exceeds left of the window, position the contents at the left of the visible area\n          if (this.overflow) {\n            if (end > 0) {\n              contentStartPosition = Math.max(-start, 0);\n            } else {\n              contentStartPosition = -contentWidth; // ensure it's not visible anymore\n            }\n          } else {\n            if (start < 0) {\n              contentStartPosition = -start;\n            } else {\n              contentStartPosition = 0;\n            }\n          }\n          if (this.options.rtl) {\n            var _translateX2 = contentStartPosition * -1;\n            this.dom.content.style.transform = \"translateX(\".concat(_translateX2, \"px)\");\n          } else {\n            this.dom.content.style.transform = \"translateX(\".concat(contentStartPosition, \"px)\");\n            // this.dom.content.style.width = `calc(100% - ${contentStartPosition}px)`;\n          }\n      }\n    }\n\n    /**\n     * Reposition the item vertically\n     * @Override\n     */\n  }, {\n    key: \"repositionY\",\n    value: function repositionY() {\n      var orientation = this.options.orientation.item;\n      var box = this.dom.box;\n      if (orientation == 'top') {\n        box.style.top = \"\".concat(this.top, \"px\");\n      } else {\n        box.style.top = \"\".concat(this.parent.height - this.top - this.height, \"px\");\n      }\n    }\n\n    /**\n     * Repaint a drag area on the left side of the range when the range is selected\n     * @protected\n     */\n  }, {\n    key: \"_repaintDragLeft\",\n    value: function _repaintDragLeft() {\n      if ((this.selected || this.options.itemsAlwaysDraggable.range) && this.editable.updateTime && !this.dom.dragLeft) {\n        // create and show drag area\n        var dragLeft = document.createElement('div');\n        dragLeft.className = 'vis-drag-left';\n        dragLeft.dragLeftItem = this;\n        this.dom.box.appendChild(dragLeft);\n        this.dom.dragLeft = dragLeft;\n      } else if (!this.selected && !this.options.itemsAlwaysDraggable.range && this.dom.dragLeft) {\n        // delete drag area\n        if (this.dom.dragLeft.parentNode) {\n          this.dom.dragLeft.parentNode.removeChild(this.dom.dragLeft);\n        }\n        this.dom.dragLeft = null;\n      }\n    }\n\n    /**\n     * Repaint a drag area on the right side of the range when the range is selected\n     * @protected\n     */\n  }, {\n    key: \"_repaintDragRight\",\n    value: function _repaintDragRight() {\n      if ((this.selected || this.options.itemsAlwaysDraggable.range) && this.editable.updateTime && !this.dom.dragRight) {\n        // create and show drag area\n        var dragRight = document.createElement('div');\n        dragRight.className = 'vis-drag-right';\n        dragRight.dragRightItem = this;\n        this.dom.box.appendChild(dragRight);\n        this.dom.dragRight = dragRight;\n      } else if (!this.selected && !this.options.itemsAlwaysDraggable.range && this.dom.dragRight) {\n        // delete drag area\n        if (this.dom.dragRight.parentNode) {\n          this.dom.dragRight.parentNode.removeChild(this.dom.dragRight);\n        }\n        this.dom.dragRight = null;\n      }\n    }\n  }]);\n  return RangeItem;\n}(Item);\nRangeItem.prototype.baseClassName = 'vis-item vis-range';\n\nfunction _createSuper$4(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$4(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$4() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * @constructor BackgroundItem\n * @extends Item\n */\nvar BackgroundItem = /*#__PURE__*/function (_Item) {\n  _inherits(BackgroundItem, _Item);\n  var _super = _createSuper$4(BackgroundItem);\n  /**\n  * @constructor BackgroundItem\n  * @param {Object} data             Object containing parameters start, end\n  *                                  content, className.\n  * @param {{toScreen: function, toTime: function}} conversion\n  *                                  Conversion functions from time to screen and vice versa\n  * @param {Object} [options]        Configuration options\n  *                                  // TODO: describe options\n  * // TODO: implement support for the BackgroundItem just having a start, then being displayed as a sort of an annotation\n  */\n  function BackgroundItem(data, conversion, options) {\n    var _this;\n    _classCallCheck(this, BackgroundItem);\n    _this = _super.call(this, data, conversion, options);\n    _this.props = {\n      content: {\n        width: 0\n      }\n    };\n    _this.overflow = false; // if contents can overflow (css styling), this flag is set to true\n\n    // validate data\n    if (data) {\n      if (data.start == undefined) {\n        throw new Error(\"Property \\\"start\\\" missing in item \".concat(data.id));\n      }\n      if (data.end == undefined) {\n        throw new Error(\"Property \\\"end\\\" missing in item \".concat(data.id));\n      }\n    }\n    return _this;\n  }\n\n  /**\n   * Check whether this item is visible inside given range\n   * @param {timeline.Range} range with a timestamp for start and end\n   * @returns {boolean} True if visible\n   */\n  _createClass(BackgroundItem, [{\n    key: \"isVisible\",\n    value: function isVisible(range) {\n      // determine visibility\n      return this.data.start < range.end && this.data.end > range.start;\n    }\n\n    /**\n     * create DOM element\n     * @private\n     */\n  }, {\n    key: \"_createDomElement\",\n    value: function _createDomElement() {\n      if (!this.dom) {\n        // create DOM\n        this.dom = {};\n\n        // background box\n        this.dom.box = document.createElement('div');\n        // className is updated in redraw()\n\n        // frame box (to prevent the item contents from overflowing\n        this.dom.frame = document.createElement('div');\n        this.dom.frame.className = 'vis-item-overflow';\n        this.dom.box.appendChild(this.dom.frame);\n\n        // contents box\n        this.dom.content = document.createElement('div');\n        this.dom.content.className = 'vis-item-content';\n        this.dom.frame.appendChild(this.dom.content);\n\n        // Note: we do NOT attach this item as attribute to the DOM,\n        //       such that background items cannot be selected\n        //this.dom.box['vis-item'] = this;\n\n        this.dirty = true;\n      }\n    }\n\n    /**\n     * append DOM element\n     * @private\n     */\n  }, {\n    key: \"_appendDomElement\",\n    value: function _appendDomElement() {\n      if (!this.parent) {\n        throw new Error('Cannot redraw item: no parent attached');\n      }\n      if (!this.dom.box.parentNode) {\n        var background = this.parent.dom.background;\n        if (!background) {\n          throw new Error('Cannot redraw item: parent has no background container element');\n        }\n        background.appendChild(this.dom.box);\n      }\n      this.displayed = true;\n    }\n\n    /**\n     * update DOM Dirty components\n     * @private\n     */\n  }, {\n    key: \"_updateDirtyDomComponents\",\n    value: function _updateDirtyDomComponents() {\n      // update dirty DOM. An item is marked dirty when:\n      // - the item is not yet rendered\n      // - the item's data is changed\n      // - the item is selected/deselected\n      if (this.dirty) {\n        this._updateContents(this.dom.content);\n        this._updateDataAttributes(this.dom.content);\n        this._updateStyle(this.dom.box);\n\n        // update class\n        var className = (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' vis-selected' : '');\n        this.dom.box.className = this.baseClassName + className;\n      }\n    }\n\n    /**\n     * get DOM components sizes\n     * @return {object}\n     * @private\n     */\n  }, {\n    key: \"_getDomComponentsSizes\",\n    value: function _getDomComponentsSizes() {\n      // determine from css whether this box has overflow\n      this.overflow = window.getComputedStyle(this.dom.content).overflow !== 'hidden';\n      return {\n        content: {\n          width: this.dom.content.offsetWidth\n        }\n      };\n    }\n\n    /**\n     * update DOM components sizes\n     * @param {object} sizes\n     * @private\n     */\n  }, {\n    key: \"_updateDomComponentsSizes\",\n    value: function _updateDomComponentsSizes(sizes) {\n      // recalculate size\n      this.props.content.width = sizes.content.width;\n      this.height = 0; // set height zero, so this item will be ignored when stacking items\n\n      this.dirty = false;\n    }\n\n    /**\n     * repaint DOM additionals\n     * @private\n     */\n  }, {\n    key: \"_repaintDomAdditionals\",\n    value: function _repaintDomAdditionals() {}\n\n    /**\n     * Repaint the item\n     * @param {boolean} [returnQueue=false]  return the queue\n     * @return {boolean} the redraw result or the redraw queue if returnQueue=true\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw(returnQueue) {\n      var _context,\n        _context2,\n        _context3,\n        _this2 = this,\n        _context6;\n      var sizes;\n      var queue = [\n      // create item DOM\n      _bindInstanceProperty$1(_context = this._createDomElement).call(_context, this),\n      // append DOM to parent DOM\n      _bindInstanceProperty$1(_context2 = this._appendDomElement).call(_context2, this), _bindInstanceProperty$1(_context3 = this._updateDirtyDomComponents).call(_context3, this), function () {\n        if (_this2.dirty) {\n          var _context4;\n          sizes = _bindInstanceProperty$1(_context4 = _this2._getDomComponentsSizes).call(_context4, _this2)();\n        }\n      }, function () {\n        if (_this2.dirty) {\n          var _context5;\n          _bindInstanceProperty$1(_context5 = _this2._updateDomComponentsSizes).call(_context5, _this2)(sizes);\n        }\n      },\n      // repaint DOM additionals\n      _bindInstanceProperty$1(_context6 = this._repaintDomAdditionals).call(_context6, this)];\n      if (returnQueue) {\n        return queue;\n      } else {\n        var result;\n        _forEachInstanceProperty(queue).call(queue, function (fn) {\n          result = fn();\n        });\n        return result;\n      }\n    }\n\n    /**\n     * Reposition the item vertically\n     * @Override\n     */\n  }, {\n    key: \"repositionY\",\n    value: function repositionY(margin) {\n      // eslint-disable-line no-unused-vars\n      var height;\n      var orientation = this.options.orientation.item;\n\n      // special positioning for subgroups\n      if (this.data.subgroup !== undefined) {\n        // TODO: instead of calculating the top position of the subgroups here for every BackgroundItem, calculate the top of the subgroup once in Itemset\n        var itemSubgroup = this.data.subgroup;\n        this.dom.box.style.height = \"\".concat(this.parent.subgroups[itemSubgroup].height, \"px\");\n        if (orientation == 'top') {\n          this.dom.box.style.top = \"\".concat(this.parent.top + this.parent.subgroups[itemSubgroup].top, \"px\");\n        } else {\n          this.dom.box.style.top = \"\".concat(this.parent.top + this.parent.height - this.parent.subgroups[itemSubgroup].top - this.parent.subgroups[itemSubgroup].height, \"px\");\n        }\n        this.dom.box.style.bottom = '';\n      }\n      // and in the case of no subgroups:\n      else {\n        // we want backgrounds with groups to only show in groups.\n        if (this.parent instanceof BackgroundGroup) {\n          // if the item is not in a group:\n          height = Math.max(this.parent.height, this.parent.itemSet.body.domProps.center.height, this.parent.itemSet.body.domProps.centerContainer.height);\n          this.dom.box.style.bottom = orientation == 'bottom' ? '0' : '';\n          this.dom.box.style.top = orientation == 'top' ? '0' : '';\n        } else {\n          height = this.parent.height;\n          // same alignment for items when orientation is top or bottom\n          this.dom.box.style.top = \"\".concat(this.parent.top, \"px\");\n          this.dom.box.style.bottom = '';\n        }\n      }\n      this.dom.box.style.height = \"\".concat(height, \"px\");\n    }\n  }]);\n  return BackgroundItem;\n}(Item);\nBackgroundItem.prototype.baseClassName = 'vis-item vis-background';\nBackgroundItem.prototype.stack = false;\n\n/**\n * Show the item in the DOM (when not already visible). The items DOM will\n * be created when needed.\n */\nBackgroundItem.prototype.show = RangeItem.prototype.show;\n\n/**\n * Hide the item from the DOM (when visible)\n * @return {Boolean} changed\n */\nBackgroundItem.prototype.hide = RangeItem.prototype.hide;\n\n/**\n * Reposition the item horizontally\n * @Override\n */\nBackgroundItem.prototype.repositionX = RangeItem.prototype.repositionX;\n\nvar css_248z$4 = \"div.vis-tooltip {\\n  position: absolute;\\n  visibility: hidden;\\n  padding: 5px;\\n  white-space: nowrap;\\n\\n  font-family: verdana;\\n  font-size:14px;\\n  color:#000000;\\n  background-color: #f5f4ed;\\n\\n  -moz-border-radius: 3px;\\n  -webkit-border-radius: 3px;\\n  border-radius: 3px;\\n  border: 1px solid #808074;\\n\\n  box-shadow: 3px 3px 10px rgba(0, 0, 0, 0.2);\\n  pointer-events: none;\\n\\n  z-index: 5;\\n}\\n\";\nstyleInject(css_248z$4);\n\n/**\n * Popup is a class to create a popup window with some text\n */\nvar Popup = /*#__PURE__*/function () {\n  /**\n   * @param {Element} container       The container object.\n   * @param {string}  overflowMethod  How the popup should act to overflowing ('flip', 'cap' or 'none')\n   */\n  function Popup(container, overflowMethod) {\n    _classCallCheck(this, Popup);\n    this.container = container;\n    this.overflowMethod = overflowMethod || 'cap';\n    this.x = 0;\n    this.y = 0;\n    this.padding = 5;\n    this.hidden = false;\n\n    // create the frame\n    this.frame = document.createElement('div');\n    this.frame.className = 'vis-tooltip';\n    this.container.appendChild(this.frame);\n  }\n\n  /**\n   * @param {number} x   Horizontal position of the popup window\n   * @param {number} y   Vertical position of the popup window\n   */\n  _createClass(Popup, [{\n    key: \"setPosition\",\n    value: function setPosition(x, y) {\n      this.x = _parseInt$1(x);\n      this.y = _parseInt$1(y);\n    }\n\n    /**\n     * Set the content for the popup window. This can be HTML code or text.\n     * @param {string | Element} content\n     */\n  }, {\n    key: \"setText\",\n    value: function setText(content) {\n      if (content instanceof Element) {\n        this.frame.innerHTML = '';\n        this.frame.appendChild(content);\n      } else {\n        this.frame.innerHTML = availableUtils.xss(content); // string containing text or HTML\n      }\n    }\n\n    /**\n     * Show the popup window\n     * @param {boolean} [doShow]    Show or hide the window\n     */\n  }, {\n    key: \"show\",\n    value: function show(doShow) {\n      if (doShow === undefined) {\n        doShow = true;\n      }\n      if (doShow === true) {\n        var height = this.frame.clientHeight;\n        var width = this.frame.clientWidth;\n        var maxHeight = this.frame.parentNode.clientHeight;\n        var maxWidth = this.frame.parentNode.clientWidth;\n        var left = 0,\n          top = 0;\n        if (this.overflowMethod == 'flip' || this.overflowMethod == 'none') {\n          var isLeft = false,\n            isTop = true; // Where around the position it's located\n\n          if (this.overflowMethod == 'flip') {\n            if (this.y - height < this.padding) {\n              isTop = false;\n            }\n            if (this.x + width > maxWidth - this.padding) {\n              isLeft = true;\n            }\n          }\n          if (isLeft) {\n            left = this.x - width;\n          } else {\n            left = this.x;\n          }\n          if (isTop) {\n            top = this.y - height;\n          } else {\n            top = this.y;\n          }\n        } else {\n          // this.overflowMethod == 'cap'\n          top = this.y - height;\n          if (top + height + this.padding > maxHeight) {\n            top = maxHeight - height - this.padding;\n          }\n          if (top < this.padding) {\n            top = this.padding;\n          }\n          left = this.x;\n          if (left + width + this.padding > maxWidth) {\n            left = maxWidth - width - this.padding;\n          }\n          if (left < this.padding) {\n            left = this.padding;\n          }\n        }\n        this.frame.style.left = left + \"px\";\n        this.frame.style.top = top + \"px\";\n        this.frame.style.visibility = \"visible\";\n        this.hidden = false;\n      } else {\n        this.hide();\n      }\n    }\n\n    /**\n     * Hide the popup window\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.hidden = true;\n      this.frame.style.left = \"0\";\n      this.frame.style.top = \"0\";\n      this.frame.style.visibility = \"hidden\";\n    }\n\n    /**\n     * Remove the popup window\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.frame.parentNode.removeChild(this.frame); // Remove element from DOM\n    }\n  }]);\n  return Popup;\n}();\n\nvar $ = _export;\nvar $every = arrayIteration.every;\nvar arrayMethodIsStrict = arrayMethodIsStrict$6;\n\nvar STRICT_METHOD = arrayMethodIsStrict('every');\n\n// `Array.prototype.every` method\n// https://tc39.es/ecma262/#sec-array.prototype.every\n$({ target: 'Array', proto: true, forced: !STRICT_METHOD }, {\n  every: function every(callbackfn /* , thisArg */) {\n    return $every(this, callbackfn, arguments.length > 1 ? arguments[1] : undefined);\n  }\n});\n\nvar entryVirtual = entryVirtual$o;\n\nvar every$3 = entryVirtual('Array').every;\n\nvar isPrototypeOf = objectIsPrototypeOf;\nvar method = every$3;\n\nvar ArrayPrototype = Array.prototype;\n\nvar every$2 = function (it) {\n  var own = it.every;\n  return it === ArrayPrototype || (isPrototypeOf(ArrayPrototype, it) && own === ArrayPrototype.every) ? method : own;\n};\n\nvar parent = every$2;\n\nvar every$1 = parent;\n\nvar every = every$1;\n\nvar _everyInstanceProperty = /*@__PURE__*/getDefaultExportFromCjs(every);\n\nfunction _createForOfIteratorHelper$3(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray$3(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray$3(o, minLen) { var _context14; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$3(o, minLen); var n = _sliceInstanceProperty(_context14 = Object.prototype.toString.call(o)).call(_context14, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from$1(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$3(o, minLen); }\nfunction _arrayLikeToArray$3(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _createSuper$3(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$3(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$3() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * ClusterItem\n */\nvar ClusterItem = /*#__PURE__*/function (_Item) {\n  _inherits(ClusterItem, _Item);\n  var _super = _createSuper$3(ClusterItem);\n  /**\n  * @constructor Item\n  * @param {Object} data             Object containing (optional) parameters type,\n  *                                  start, end, content, group, className.\n  * @param {{toScreen: function, toTime: function}} conversion\n  *                                  Conversion functions from time to screen and vice versa\n  * @param {Object} options          Configuration options\n  *                                  // TODO: describe available options\n  */\n  function ClusterItem(data, conversion, options) {\n    var _this;\n    _classCallCheck(this, ClusterItem);\n    var modifiedOptions = _Object$assign({}, {\n      fitOnDoubleClick: true\n    }, options, {\n      editable: false\n    });\n    _this = _super.call(this, data, conversion, modifiedOptions);\n    _this.props = {\n      content: {\n        width: 0,\n        height: 0\n      }\n    };\n    if (!data || data.uiItems == undefined) {\n      throw new Error('Property \"uiItems\" missing in item ' + data.id);\n    }\n    _this.id = v4();\n    _this.group = data.group;\n    _this._setupRange();\n    _this.emitter = _this.data.eventEmitter;\n    _this.range = _this.data.range;\n    _this.attached = false;\n    _this.isCluster = true;\n    _this.data.isCluster = true;\n    return _this;\n  }\n\n  /**\n   * check if there are items\n   * @return {boolean}\n   */\n  _createClass(ClusterItem, [{\n    key: \"hasItems\",\n    value: function hasItems() {\n      return this.data.uiItems && this.data.uiItems.length && this.attached;\n    }\n\n    /**\n     * set UI items\n     * @param {array} items\n     */\n  }, {\n    key: \"setUiItems\",\n    value: function setUiItems(items) {\n      this.detach();\n      this.data.uiItems = items;\n      this._setupRange();\n      this.attach();\n    }\n\n    /**\n     * check is visible\n     * @param {object} range\n     * @return {boolean}\n     */\n  }, {\n    key: \"isVisible\",\n    value: function isVisible(range) {\n      var rangeWidth = this.data.end ? this.data.end - this.data.start : 0;\n      var widthInMs = this.width * range.getMillisecondsPerPixel();\n      var end = Math.max(this.data.start.getTime() + rangeWidth, this.data.start.getTime() + widthInMs);\n      return this.data.start < range.end && end > range.start && this.hasItems();\n    }\n\n    /**\n     * get cluster data\n     * @return {object}\n     */\n  }, {\n    key: \"getData\",\n    value: function getData() {\n      return {\n        isCluster: true,\n        id: this.id,\n        items: this.data.items || [],\n        data: this.data\n      };\n    }\n\n    /**\n     * redraw cluster item\n     * @param {boolean} returnQueue\n     * @return {boolean}\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw(returnQueue) {\n      var _context, _context2, _context3, _context4, _context5, _context7;\n      var sizes;\n      var queue = [\n      // create item DOM\n      _bindInstanceProperty$1(_context = this._createDomElement).call(_context, this),\n      // append DOM to parent DOM\n      _bindInstanceProperty$1(_context2 = this._appendDomElement).call(_context2, this),\n      // update dirty DOM\n      _bindInstanceProperty$1(_context3 = this._updateDirtyDomComponents).call(_context3, this), _bindInstanceProperty$1(_context4 = function _context4() {\n        if (this.dirty) {\n          sizes = this._getDomComponentsSizes();\n        }\n      }).call(_context4, this), _bindInstanceProperty$1(_context5 = function _context5() {\n        if (this.dirty) {\n          var _context6;\n          _bindInstanceProperty$1(_context6 = this._updateDomComponentsSizes).call(_context6, this)(sizes);\n        }\n      }).call(_context5, this),\n      // repaint DOM additionals\n      _bindInstanceProperty$1(_context7 = this._repaintDomAdditionals).call(_context7, this)];\n      if (returnQueue) {\n        return queue;\n      } else {\n        var result;\n        _forEachInstanceProperty(queue).call(queue, function (fn) {\n          result = fn();\n        });\n        return result;\n      }\n    }\n\n    /**\n     * show cluster item\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (!this.displayed) {\n        this.redraw();\n      }\n    }\n\n    /**\n     * Hide the item from the DOM (when visible)\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      if (this.displayed) {\n        var dom = this.dom;\n        if (dom.box.parentNode) {\n          dom.box.parentNode.removeChild(dom.box);\n        }\n        if (this.options.showStipes) {\n          if (dom.line.parentNode) {\n            dom.line.parentNode.removeChild(dom.line);\n          }\n          if (dom.dot.parentNode) {\n            dom.dot.parentNode.removeChild(dom.dot);\n          }\n        }\n        this.displayed = false;\n      }\n    }\n\n    /**\n     * reposition item x axis\n     */\n  }, {\n    key: \"repositionX\",\n    value: function repositionX() {\n      var start = this.conversion.toScreen(this.data.start);\n      var end = this.data.end ? this.conversion.toScreen(this.data.end) : 0;\n      if (end) {\n        this.repositionXWithRanges(start, end);\n      } else {\n        var align = this.data.align === undefined ? this.options.align : this.data.align;\n        this.repositionXWithoutRanges(start, align);\n      }\n      if (this.options.showStipes) {\n        this.dom.line.style.display = this._isStipeVisible() ? 'block' : 'none';\n        this.dom.dot.style.display = this._isStipeVisible() ? 'block' : 'none';\n        if (this._isStipeVisible()) {\n          this.repositionStype(start, end);\n        }\n      }\n    }\n\n    /**\n     * reposition item stype\n     * @param {date} start\n     * @param {date} end\n     */\n  }, {\n    key: \"repositionStype\",\n    value: function repositionStype(start, end) {\n      this.dom.line.style.display = 'block';\n      this.dom.dot.style.display = 'block';\n      var lineOffsetWidth = this.dom.line.offsetWidth;\n      var dotOffsetWidth = this.dom.dot.offsetWidth;\n      if (end) {\n        var lineOffset = lineOffsetWidth + start + (end - start) / 2;\n        var dotOffset = lineOffset - dotOffsetWidth / 2;\n        var lineOffsetDirection = this.options.rtl ? lineOffset * -1 : lineOffset;\n        var dotOffsetDirection = this.options.rtl ? dotOffset * -1 : dotOffset;\n        this.dom.line.style.transform = \"translateX(\".concat(lineOffsetDirection, \"px)\");\n        this.dom.dot.style.transform = \"translateX(\".concat(dotOffsetDirection, \"px)\");\n      } else {\n        var _lineOffsetDirection = this.options.rtl ? start * -1 : start;\n        var _dotOffsetDirection = this.options.rtl ? (start - dotOffsetWidth / 2) * -1 : start - dotOffsetWidth / 2;\n        this.dom.line.style.transform = \"translateX(\".concat(_lineOffsetDirection, \"px)\");\n        this.dom.dot.style.transform = \"translateX(\".concat(_dotOffsetDirection, \"px)\");\n      }\n    }\n\n    /**\n     * reposition x without ranges\n     * @param {date} start\n     * @param {string} align\n     */\n  }, {\n    key: \"repositionXWithoutRanges\",\n    value: function repositionXWithoutRanges(start, align) {\n      // calculate left position of the box\n      if (align == 'right') {\n        if (this.options.rtl) {\n          this.right = start - this.width;\n\n          // reposition box, line, and dot\n          this.dom.box.style.right = this.right + 'px';\n        } else {\n          this.left = start - this.width;\n\n          // reposition box, line, and dot\n          this.dom.box.style.left = this.left + 'px';\n        }\n      } else if (align == 'left') {\n        if (this.options.rtl) {\n          this.right = start;\n\n          // reposition box, line, and dot\n          this.dom.box.style.right = this.right + 'px';\n        } else {\n          this.left = start;\n\n          // reposition box, line, and dot\n          this.dom.box.style.left = this.left + 'px';\n        }\n      } else {\n        // default or 'center'\n        if (this.options.rtl) {\n          this.right = start - this.width / 2;\n\n          // reposition box, line, and dot\n          this.dom.box.style.right = this.right + 'px';\n        } else {\n          this.left = start - this.width / 2;\n\n          // reposition box, line, and dot\n          this.dom.box.style.left = this.left + 'px';\n        }\n      }\n    }\n\n    /**\n     * reposition x with ranges\n     * @param {date} start\n     * @param {date} end\n     */\n  }, {\n    key: \"repositionXWithRanges\",\n    value: function repositionXWithRanges(start, end) {\n      var boxWidth = Math.round(Math.max(end - start + 0.5, 1));\n      if (this.options.rtl) {\n        this.right = start;\n      } else {\n        this.left = start;\n      }\n      this.width = Math.max(boxWidth, this.minWidth || 0);\n      if (this.options.rtl) {\n        this.dom.box.style.right = this.right + 'px';\n      } else {\n        this.dom.box.style.left = this.left + 'px';\n      }\n      this.dom.box.style.width = boxWidth + 'px';\n    }\n\n    /**\n     * reposition item y axis\n     */\n  }, {\n    key: \"repositionY\",\n    value: function repositionY() {\n      var orientation = this.options.orientation.item;\n      var box = this.dom.box;\n      if (orientation == 'top') {\n        box.style.top = (this.top || 0) + 'px';\n      } else {\n        // orientation 'bottom'\n        box.style.top = (this.parent.height - this.top - this.height || 0) + 'px';\n      }\n      if (this.options.showStipes) {\n        if (orientation == 'top') {\n          this.dom.line.style.top = '0';\n          this.dom.line.style.height = this.parent.top + this.top + 1 + 'px';\n          this.dom.line.style.bottom = '';\n        } else {\n          // orientation 'bottom'\n          var itemSetHeight = this.parent.itemSet.props.height;\n          var lineHeight = itemSetHeight - this.parent.top - this.parent.height + this.top;\n          this.dom.line.style.top = itemSetHeight - lineHeight + 'px';\n          this.dom.line.style.bottom = '0';\n        }\n        this.dom.dot.style.top = -this.dom.dot.offsetHeight / 2 + 'px';\n      }\n    }\n\n    /**\n     * get width left\n     * @return {number}\n     */\n  }, {\n    key: \"getWidthLeft\",\n    value: function getWidthLeft() {\n      return this.width / 2;\n    }\n\n    /**\n     * get width right\n     * @return {number}\n     */\n  }, {\n    key: \"getWidthRight\",\n    value: function getWidthRight() {\n      return this.width / 2;\n    }\n\n    /**\n     * move cluster item\n     */\n  }, {\n    key: \"move\",\n    value: function move() {\n      this.repositionX();\n      this.repositionY();\n    }\n\n    /**\n     * attach\n     */\n  }, {\n    key: \"attach\",\n    value: function attach() {\n      var _context8;\n      var _iterator = _createForOfIteratorHelper$3(this.data.uiItems),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var item = _step.value;\n          item.cluster = this;\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.data.items = _mapInstanceProperty(_context8 = this.data.uiItems).call(_context8, function (item) {\n        return item.data;\n      });\n      this.attached = true;\n      this.dirty = true;\n    }\n\n    /**\n     * detach\n     * @param {boolean} detachFromParent\n     * @return {void}\n     */\n  }, {\n    key: \"detach\",\n    value: function detach() {\n      var detachFromParent = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (!this.hasItems()) {\n        return;\n      }\n      var _iterator2 = _createForOfIteratorHelper$3(this.data.uiItems),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var item = _step2.value;\n          delete item.cluster;\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n      this.attached = false;\n      if (detachFromParent && this.group) {\n        this.group.remove(this);\n        this.group = null;\n      }\n      this.data.items = [];\n      this.dirty = true;\n    }\n\n    /**\n     * handle on double click\n     */\n  }, {\n    key: \"_onDoubleClick\",\n    value: function _onDoubleClick() {\n      this._fit();\n    }\n\n    /**\n     * set range\n     */\n  }, {\n    key: \"_setupRange\",\n    value: function _setupRange() {\n      var _context9, _context10, _context11;\n      var stats = _mapInstanceProperty(_context9 = this.data.uiItems).call(_context9, function (item) {\n        return {\n          start: item.data.start.valueOf(),\n          end: item.data.end ? item.data.end.valueOf() : item.data.start.valueOf()\n        };\n      });\n      this.data.min = Math.min.apply(Math, _toConsumableArray(_mapInstanceProperty(stats).call(stats, function (s) {\n        return Math.min(s.start, s.end || s.start);\n      })));\n      this.data.max = Math.max.apply(Math, _toConsumableArray(_mapInstanceProperty(stats).call(stats, function (s) {\n        return Math.max(s.start, s.end || s.start);\n      })));\n      var centers = _mapInstanceProperty(_context10 = this.data.uiItems).call(_context10, function (item) {\n        return item.center;\n      });\n      var avg = _reduceInstanceProperty(centers).call(centers, function (sum, value) {\n        return sum + value;\n      }, 0) / this.data.uiItems.length;\n      if (_someInstanceProperty(_context11 = this.data.uiItems).call(_context11, function (item) {\n        return item.data.end;\n      })) {\n        // contains ranges\n        this.data.start = new Date(this.data.min);\n        this.data.end = new Date(this.data.max);\n      } else {\n        this.data.start = new Date(avg);\n        this.data.end = null;\n      }\n    }\n\n    /**\n     * get UI items\n     * @return {array}\n     */\n  }, {\n    key: \"_getUiItems\",\n    value: function _getUiItems() {\n      var _this2 = this;\n      if (this.data.uiItems && this.data.uiItems.length) {\n        var _context12;\n        return _filterInstanceProperty(_context12 = this.data.uiItems).call(_context12, function (item) {\n          return item.cluster === _this2;\n        });\n      }\n      return [];\n    }\n\n    /**\n     * create DOM element\n     */\n  }, {\n    key: \"_createDomElement\",\n    value: function _createDomElement() {\n      if (!this.dom) {\n        // create DOM\n        this.dom = {};\n\n        // create main box\n        this.dom.box = document.createElement('DIV');\n\n        // contents box (inside the background box). used for making margins\n        this.dom.content = document.createElement('DIV');\n        this.dom.content.className = 'vis-item-content';\n        this.dom.box.appendChild(this.dom.content);\n        if (this.options.showStipes) {\n          // line to axis\n          this.dom.line = document.createElement('DIV');\n          this.dom.line.className = 'vis-cluster-line';\n          this.dom.line.style.display = 'none';\n\n          // dot on axis\n          this.dom.dot = document.createElement('DIV');\n          this.dom.dot.className = 'vis-cluster-dot';\n          this.dom.dot.style.display = 'none';\n        }\n        if (this.options.fitOnDoubleClick) {\n          var _context13;\n          this.dom.box.ondblclick = _bindInstanceProperty$1(_context13 = ClusterItem.prototype._onDoubleClick).call(_context13, this);\n        }\n\n        // attach this item as attribute\n        this.dom.box['vis-item'] = this;\n        this.dirty = true;\n      }\n    }\n\n    /**\n     * append element to DOM\n     */\n  }, {\n    key: \"_appendDomElement\",\n    value: function _appendDomElement() {\n      if (!this.parent) {\n        throw new Error('Cannot redraw item: no parent attached');\n      }\n      if (!this.dom.box.parentNode) {\n        var foreground = this.parent.dom.foreground;\n        if (!foreground) {\n          throw new Error('Cannot redraw item: parent has no foreground container element');\n        }\n        foreground.appendChild(this.dom.box);\n      }\n      var background = this.parent.dom.background;\n      if (this.options.showStipes) {\n        if (!this.dom.line.parentNode) {\n          if (!background) throw new Error('Cannot redraw item: parent has no background container element');\n          background.appendChild(this.dom.line);\n        }\n        if (!this.dom.dot.parentNode) {\n          var axis = this.parent.dom.axis;\n          if (!background) throw new Error('Cannot redraw item: parent has no axis container element');\n          axis.appendChild(this.dom.dot);\n        }\n      }\n      this.displayed = true;\n    }\n\n    /**\n     * update dirty DOM components\n     */\n  }, {\n    key: \"_updateDirtyDomComponents\",\n    value: function _updateDirtyDomComponents() {\n      // An item is marked dirty when:\n      // - the item is not yet rendered\n      // - the item's data is changed\n      // - the item is selected/deselected\n      if (this.dirty) {\n        this._updateContents(this.dom.content);\n        this._updateDataAttributes(this.dom.box);\n        this._updateStyle(this.dom.box);\n\n        // update class\n        var className = this.baseClassName + ' ' + (this.data.className ? ' ' + this.data.className : '') + (this.selected ? ' vis-selected' : '') + ' vis-readonly';\n        this.dom.box.className = 'vis-item ' + className;\n        if (this.options.showStipes) {\n          this.dom.line.className = 'vis-item vis-cluster-line ' + (this.selected ? ' vis-selected' : '');\n          this.dom.dot.className = 'vis-item vis-cluster-dot ' + (this.selected ? ' vis-selected' : '');\n        }\n        if (this.data.end) {\n          // turn off max-width to be able to calculate the real width\n          // this causes an extra browser repaint/reflow, but so be it\n          this.dom.content.style.maxWidth = 'none';\n        }\n      }\n    }\n\n    /**\n     * get DOM components sizes\n     * @return {object}\n     */\n  }, {\n    key: \"_getDomComponentsSizes\",\n    value: function _getDomComponentsSizes() {\n      var sizes = {\n        previous: {\n          right: this.dom.box.style.right,\n          left: this.dom.box.style.left\n        },\n        box: {\n          width: this.dom.box.offsetWidth,\n          height: this.dom.box.offsetHeight\n        }\n      };\n      if (this.options.showStipes) {\n        sizes.dot = {\n          height: this.dom.dot.offsetHeight,\n          width: this.dom.dot.offsetWidth\n        };\n        sizes.line = {\n          width: this.dom.line.offsetWidth\n        };\n      }\n      return sizes;\n    }\n\n    /**\n     * update DOM components sizes\n     * @param {object} sizes\n     */\n  }, {\n    key: \"_updateDomComponentsSizes\",\n    value: function _updateDomComponentsSizes(sizes) {\n      if (this.options.rtl) {\n        this.dom.box.style.right = \"0px\";\n      } else {\n        this.dom.box.style.left = \"0px\";\n      }\n\n      // recalculate size\n      if (!this.data.end) {\n        this.width = sizes.box.width;\n      } else {\n        this.minWidth = sizes.box.width;\n      }\n      this.height = sizes.box.height;\n\n      // restore previous position\n      if (this.options.rtl) {\n        this.dom.box.style.right = sizes.previous.right;\n      } else {\n        this.dom.box.style.left = sizes.previous.left;\n      }\n      this.dirty = false;\n    }\n\n    /**\n     * repaint DOM additional components\n     */\n  }, {\n    key: \"_repaintDomAdditionals\",\n    value: function _repaintDomAdditionals() {\n      this._repaintOnItemUpdateTimeTooltip(this.dom.box);\n    }\n\n    /**\n     * check is stripe visible\n     * @return {number}\n     * @private\n     */\n  }, {\n    key: \"_isStipeVisible\",\n    value: function _isStipeVisible() {\n      return this.minWidth >= this.width || !this.data.end;\n    }\n\n    /**\n     * get fit range\n     * @return {object}\n     * @private\n     */\n  }, {\n    key: \"_getFitRange\",\n    value: function _getFitRange() {\n      var offset = 0.05 * (this.data.max - this.data.min) / 2;\n      return {\n        fitStart: this.data.min - offset,\n        fitEnd: this.data.max + offset\n      };\n    }\n\n    /**\n    * fit\n    * @private\n    */\n  }, {\n    key: \"_fit\",\n    value: function _fit() {\n      if (this.emitter) {\n        var _this$_getFitRange = this._getFitRange(),\n          fitStart = _this$_getFitRange.fitStart,\n          fitEnd = _this$_getFitRange.fitEnd;\n        var fitArgs = {\n          start: new Date(fitStart),\n          end: new Date(fitEnd),\n          animation: true\n        };\n        this.emitter.emit('fit', fitArgs);\n      }\n    }\n\n    /**\n    * get item data\n    * @return {object}\n    * @private\n    */\n  }, {\n    key: \"_getItemData\",\n    value: function _getItemData() {\n      return this.data;\n    }\n  }]);\n  return ClusterItem;\n}(Item);\nClusterItem.prototype.baseClassName = 'vis-item vis-range vis-cluster';\n\nfunction _createForOfIteratorHelper$2(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray$2(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray$2(o, minLen) { var _context4; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$2(o, minLen); var n = _sliceInstanceProperty(_context4 = Object.prototype.toString.call(o)).call(_context4, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from$1(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$2(o, minLen); }\nfunction _arrayLikeToArray$2(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nvar UNGROUPED$2 = '__ungrouped__'; // reserved group id for ungrouped items\nvar BACKGROUND$1 = '__background__'; // reserved group id for background items without group\n\nvar ReservedGroupIds = {\n  UNGROUPED: UNGROUPED$2,\n  BACKGROUND: BACKGROUND$1\n};\n\n/**\n * An Cluster generator generates cluster items\n */\nvar ClusterGenerator = /*#__PURE__*/function () {\n  /**\n   * @param {ItemSet} itemSet itemsSet instance\n   * @constructor ClusterGenerator\n  */\n  function ClusterGenerator(itemSet) {\n    _classCallCheck(this, ClusterGenerator);\n    this.itemSet = itemSet;\n    this.groups = {};\n    this.cache = {};\n    this.cache[-1] = [];\n  }\n\n  /**\n   * @param {Object} itemData             Object containing parameters start content, className.\n   * @param {{toScreen: function, toTime: function}} conversion\n   *                                  Conversion functions from time to screen and vice versa\n   * @param {Object} [options]        Configuration options\n   * @return {Object} newItem\n  */\n  _createClass(ClusterGenerator, [{\n    key: \"createClusterItem\",\n    value: function createClusterItem(itemData, conversion, options) {\n      var newItem = new ClusterItem(itemData, conversion, options);\n      return newItem;\n    }\n\n    /**\n     * Set the items to be clustered.\n     * This will clear cached clusters.\n     * @param {Item[]} items\n     * @param {Object} [options]  Available options:\n     *                            {boolean} applyOnChangedLevel\n     *                                If true (default), the changed data is applied\n     *                                as soon the cluster level changes. If false,\n     *                                The changed data is applied immediately\n     */\n  }, {\n    key: \"setItems\",\n    value: function setItems(items, options) {\n      this.items = items || [];\n      this.dataChanged = true;\n      this.applyOnChangedLevel = false;\n      if (options && options.applyOnChangedLevel) {\n        this.applyOnChangedLevel = options.applyOnChangedLevel;\n      }\n    }\n\n    /**\n     * Update the current data set: clear cache, and recalculate the clustering for\n     * the current level\n     */\n  }, {\n    key: \"updateData\",\n    value: function updateData() {\n      this.dataChanged = true;\n      this.applyOnChangedLevel = false;\n    }\n\n    /**\n     * Cluster the items which are too close together\n     * @param {array} oldClusters \n     * @param {number} scale      The scale of the current window : (windowWidth / (endDate - startDate)) \n     * @param {{maxItems: number, clusterCriteria: function, titleTemplate: string}} options             \n     * @return {array} clusters\n    */\n  }, {\n    key: \"getClusters\",\n    value: function getClusters(oldClusters, scale, options) {\n      var _ref = typeof options === \"boolean\" ? {} : options,\n        maxItems = _ref.maxItems,\n        clusterCriteria = _ref.clusterCriteria;\n      if (!clusterCriteria) {\n        clusterCriteria = function clusterCriteria() {\n          return true;\n        };\n      }\n      maxItems = maxItems || 1;\n      var level = -1;\n      var granularity = 2;\n      var timeWindow = 0;\n      if (scale > 0) {\n        if (scale >= 1) {\n          return [];\n        }\n        level = Math.abs(Math.round(Math.log(100 / scale) / Math.log(granularity)));\n        timeWindow = Math.abs(Math.pow(granularity, level));\n      }\n\n      // clear the cache when and re-generate groups the data when needed.\n      if (this.dataChanged) {\n        var levelChanged = level != this.cacheLevel;\n        var applyDataNow = this.applyOnChangedLevel ? levelChanged : true;\n        if (applyDataNow) {\n          this._dropLevelsCache();\n          this._filterData();\n        }\n      }\n      this.cacheLevel = level;\n      var clusters = this.cache[level];\n      if (!clusters) {\n        clusters = [];\n        for (var groupName in this.groups) {\n          if (this.groups.hasOwnProperty(groupName)) {\n            var items = this.groups[groupName];\n            var iMax = items.length;\n            var i = 0;\n            while (i < iMax) {\n              // find all items around current item, within the timeWindow\n              var item = items[i];\n              var neighbors = 1; // start at 1, to include itself)\n\n              // loop through items left from the current item\n              var j = i - 1;\n              while (j >= 0 && item.center - items[j].center < timeWindow / 2) {\n                if (!items[j].cluster && clusterCriteria(item.data, items[j].data)) {\n                  neighbors++;\n                }\n                j--;\n              }\n\n              // loop through items right from the current item\n              var k = i + 1;\n              while (k < items.length && items[k].center - item.center < timeWindow / 2) {\n                if (clusterCriteria(item.data, items[k].data)) {\n                  neighbors++;\n                }\n                k++;\n              }\n\n              // loop through the created clusters\n              var l = clusters.length - 1;\n              while (l >= 0 && item.center - clusters[l].center < timeWindow) {\n                if (item.group == clusters[l].group && clusterCriteria(item.data, clusters[l].data)) {\n                  neighbors++;\n                }\n                l--;\n              }\n\n              // aggregate until the number of items is within maxItems\n              if (neighbors > maxItems) {\n                // too busy in this window.\n                var num = neighbors - maxItems + 1;\n                var clusterItems = [];\n\n                // append the items to the cluster,\n                // and calculate the average start for the cluster\n                var m = i;\n                while (clusterItems.length < num && m < items.length) {\n                  if (clusterCriteria(items[i].data, items[m].data)) {\n                    clusterItems.push(items[m]);\n                  }\n                  m++;\n                }\n                var groupId = this.itemSet.getGroupId(item.data);\n                var group = this.itemSet.groups[groupId] || this.itemSet.groups[ReservedGroupIds.UNGROUPED];\n                var cluster = this._getClusterForItems(clusterItems, group, oldClusters, options);\n                clusters.push(cluster);\n                i += num;\n              } else {\n                delete item.cluster;\n                i += 1;\n              }\n            }\n          }\n        }\n        this.cache[level] = clusters;\n      }\n      return clusters;\n    }\n\n    /**\n     * Filter the items per group.\n     * @private\n     */\n  }, {\n    key: \"_filterData\",\n    value: function _filterData() {\n      // filter per group\n      var groups = {};\n      this.groups = groups;\n\n      // split the items per group\n      for (var _i = 0, _Object$values = _Object$values2(this.items); _i < _Object$values.length; _i++) {\n        var item = _Object$values[_i];\n        // put the item in the correct group\n        var groupName = item.parent ? item.parent.groupId : '';\n        var group = groups[groupName];\n        if (!group) {\n          group = [];\n          groups[groupName] = group;\n        }\n        group.push(item);\n\n        // calculate the center of the item\n        if (item.data.start) {\n          if (item.data.end) {\n            // range\n            item.center = (item.data.start.valueOf() + item.data.end.valueOf()) / 2;\n          } else {\n            // box, dot\n            item.center = item.data.start.valueOf();\n          }\n        }\n      }\n\n      // sort the items per group\n      for (var currentGroupName in groups) {\n        if (groups.hasOwnProperty(currentGroupName)) {\n          var _context;\n          _sortInstanceProperty(_context = groups[currentGroupName]).call(_context, function (a, b) {\n            return a.center - b.center;\n          });\n        }\n      }\n      this.dataChanged = false;\n    }\n\n    /**\n     * Create new cluster or return existing\n     * @private\n     * @param {array} clusterItems    \n     * @param {object} group \n     * @param {array} oldClusters \n     * @param {object} options \n     * @returns {object} cluster\n     */\n  }, {\n    key: \"_getClusterForItems\",\n    value: function _getClusterForItems(clusterItems, group, oldClusters, options) {\n      var _context2;\n      var oldClustersLookup = _mapInstanceProperty(_context2 = oldClusters || []).call(_context2, function (cluster) {\n        var _context3;\n        return {\n          cluster: cluster,\n          itemsIds: new _Set(_mapInstanceProperty(_context3 = cluster.data.uiItems).call(_context3, function (item) {\n            return item.id;\n          }))\n        };\n      });\n      var cluster;\n      if (oldClustersLookup.length) {\n        var _iterator = _createForOfIteratorHelper$2(oldClustersLookup),\n          _step;\n        try {\n          var _loop = function _loop() {\n            var oldClusterData = _step.value;\n            if (oldClusterData.itemsIds.size === clusterItems.length && _everyInstanceProperty(clusterItems).call(clusterItems, function (clusterItem) {\n              return oldClusterData.itemsIds.has(clusterItem.id);\n            })) {\n              cluster = oldClusterData.cluster;\n              return 1; // break\n            }\n          };\n          for (_iterator.s(); !(_step = _iterator.n()).done;) {\n            if (_loop()) break;\n          }\n        } catch (err) {\n          _iterator.e(err);\n        } finally {\n          _iterator.f();\n        }\n      }\n      if (cluster) {\n        cluster.setUiItems(clusterItems);\n        if (cluster.group !== group) {\n          if (cluster.group) {\n            cluster.group.remove(cluster);\n          }\n          if (group) {\n            group.add(cluster);\n            cluster.group = group;\n          }\n        }\n        return cluster;\n      }\n      var titleTemplate = options.titleTemplate || '';\n      var conversion = {\n        toScreen: this.itemSet.body.util.toScreen,\n        toTime: this.itemSet.body.util.toTime\n      };\n      var title = titleTemplate.replace(/{count}/, clusterItems.length);\n      var clusterContent = '<div title=\"' + title + '\">' + clusterItems.length + '</div>';\n      var clusterOptions = _Object$assign({}, options, this.itemSet.options);\n      var data = {\n        'content': clusterContent,\n        'title': title,\n        'group': group,\n        'uiItems': clusterItems,\n        'eventEmitter': this.itemSet.body.emitter,\n        'range': this.itemSet.body.range\n      };\n      cluster = this.createClusterItem(data, conversion, clusterOptions);\n      if (group) {\n        group.add(cluster);\n        cluster.group = group;\n      }\n      cluster.attach();\n      return cluster;\n    }\n\n    /**\n     * Drop cache\n     * @private\n     */\n  }, {\n    key: \"_dropLevelsCache\",\n    value: function _dropLevelsCache() {\n      this.cache = {};\n      this.cacheLevel = -1;\n      this.cache[this.cacheLevel] = [];\n    }\n  }]);\n  return ClusterGenerator;\n}();\n\nvar css_248z$3 = \"\\n.vis-itemset {\\n  position: relative;\\n  padding: 0;\\n  margin: 0;\\n\\n  box-sizing: border-box;\\n}\\n\\n.vis-itemset .vis-background,\\n.vis-itemset .vis-foreground {\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  overflow: visible;\\n}\\n\\n.vis-axis {\\n  position: absolute;\\n  width: 100%;\\n  height: 0;\\n  left: 0;\\n  z-index: 1;\\n}\\n\\n.vis-foreground .vis-group {\\n  position: relative;\\n  box-sizing: border-box;\\n  border-bottom: 1px solid #bfbfbf;\\n}\\n\\n.vis-foreground .vis-group:last-child {\\n  border-bottom: none;\\n}\\n\\n.vis-nesting-group {\\n  cursor: pointer;\\n}\\n\\n.vis-label.vis-nested-group.vis-group-level-unknown-but-gte1 {\\n  background: #f5f5f5;\\n}\\n.vis-label.vis-nested-group.vis-group-level-0 {\\n  background-color: #ffffff;\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-0 .vis-inner {\\n  padding-left: 0;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-0 .vis-inner {\\n  padding-right: 0;\\n}\\n.vis-label.vis-nested-group.vis-group-level-1 {\\n  background-color: rgba(0, 0, 0, 0.05);\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-1 .vis-inner {\\n  padding-left: 15px;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-1 .vis-inner {\\n  padding-right: 15px;\\n}\\n.vis-label.vis-nested-group.vis-group-level-2 {\\n  background-color: rgba(0, 0, 0, 0.1);\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-2 .vis-inner {\\n  padding-left: 30px;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-2 .vis-inner {\\n  padding-right: 30px;\\n}\\n.vis-label.vis-nested-group.vis-group-level-3 {\\n  background-color: rgba(0, 0, 0, 0.15);\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-3 .vis-inner {\\n  padding-left: 45px;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-3 .vis-inner {\\n  padding-right: 45px;\\n}\\n.vis-label.vis-nested-group.vis-group-level-4 {\\n  background-color: rgba(0, 0, 0, 0.2);\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-4 .vis-inner {\\n  padding-left: 60px;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-4 .vis-inner {\\n  padding-right: 60px;\\n}\\n.vis-label.vis-nested-group.vis-group-level-5 {\\n  background-color: rgba(0, 0, 0, 0.25);\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-5 .vis-inner {\\n  padding-left: 75px;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-5 .vis-inner {\\n  padding-right: 75px;\\n}\\n.vis-label.vis-nested-group.vis-group-level-6 {\\n  background-color: rgba(0, 0, 0, 0.3);\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-6 .vis-inner {\\n  padding-left: 90px;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-6 .vis-inner {\\n  padding-right: 90px;\\n}\\n.vis-label.vis-nested-group.vis-group-level-7 {\\n  background-color: rgba(0, 0, 0, 0.35);\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-7 .vis-inner {\\n  padding-left: 105px;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-7 .vis-inner {\\n  padding-right: 105px;\\n}\\n.vis-label.vis-nested-group.vis-group-level-8 {\\n  background-color: rgba(0, 0, 0, 0.4);\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-8 .vis-inner {\\n  padding-left: 120px;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-8 .vis-inner {\\n  padding-right: 120px;\\n}\\n.vis-label.vis-nested-group.vis-group-level-9 {\\n  background-color: rgba(0, 0, 0, 0.45);\\n}\\n.vis-ltr .vis-label.vis-nested-group.vis-group-level-9 .vis-inner {\\n  padding-left: 135px;\\n}\\n.vis-rtl .vis-label.vis-nested-group.vis-group-level-9 .vis-inner {\\n  padding-right: 135px;\\n}\\n/* default takes over beginning with level-10 (thats why we add .vis-nested-group\\n  to the selectors above, to have higher specifity than these rules for the defaults) */\\n.vis-label.vis-nested-group {\\n  background-color: rgba(0, 0, 0, 0.5);\\n}\\n.vis-ltr .vis-label.vis-nested-group .vis-inner {\\n  padding-left: 150px;\\n}\\n.vis-rtl .vis-label.vis-nested-group .vis-inner {\\n  padding-right: 150px;\\n}\\n\\n.vis-group-level-unknown-but-gte1 {\\n  border: 1px solid red;\\n}\\n\\n/* expanded/collapsed indicators */\\n.vis-label.vis-nesting-group:before,\\n.vis-label.vis-nesting-group:before {\\n  display: inline-block;\\n  width: 15px;\\n}\\n.vis-label.vis-nesting-group.expanded:before {\\n  content: \\\"\\\\25BC\\\";\\n}\\n.vis-label.vis-nesting-group.collapsed:before {\\n  content: \\\"\\\\25B6\\\";\\n}\\n.vis-rtl .vis-label.vis-nesting-group.collapsed:before {\\n  content: \\\"\\\\25C0\\\";\\n}\\n/* compensate missing expanded/collapsed indicator, but only at levels > 0 */\\n.vis-ltr .vis-label:not(.vis-nesting-group):not(.vis-group-level-0) {\\n  padding-left: 15px;\\n}\\n.vis-rtl .vis-label:not(.vis-nesting-group):not(.vis-group-level-0) {\\n  padding-right: 15px;\\n}\\n\\n.vis-overlay {\\n  position: absolute;\\n  top: 0;\\n  left: 0;\\n  width: 100%;\\n  height: 100%;\\n  z-index: 10;\\n}\";\nstyleInject(css_248z$3);\n\nvar css_248z$2 = \"\\n.vis-labelset {\\n  position: relative;\\n\\n  overflow: hidden;\\n\\n  box-sizing: border-box;\\n}\\n\\n.vis-labelset .vis-label {\\n  position: relative;\\n  left: 0;\\n  top: 0;\\n  width: 100%;\\n  color: #4d4d4d;\\n\\n  box-sizing: border-box;\\n}\\n\\n.vis-labelset .vis-label {\\n  border-bottom: 1px solid #bfbfbf;\\n}\\n\\n.vis-labelset .vis-label.draggable {\\n  cursor: pointer;\\n}\\n\\n.vis-group-is-dragging {\\n  background: rgba(0, 0, 0, .1);\\n}\\n\\n.vis-labelset .vis-label:last-child {\\n  border-bottom: none;\\n}\\n\\n.vis-labelset .vis-label .vis-inner {\\n  display: inline-block;\\n  padding: 5px;\\n}\\n\\n.vis-labelset .vis-label .vis-inner.vis-hidden {\\n  padding: 0;\\n}\\n\";\nstyleInject(css_248z$2);\n\nfunction _createForOfIteratorHelper$1(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray$1(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray$1(o, minLen) { var _context34; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray$1(o, minLen); var n = _sliceInstanceProperty(_context34 = Object.prototype.toString.call(o)).call(_context34, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from$1(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray$1(o, minLen); }\nfunction _arrayLikeToArray$1(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _createSuper$2(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$2(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$2() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nvar UNGROUPED$1 = '__ungrouped__'; // reserved group id for ungrouped items\nvar BACKGROUND = '__background__'; // reserved group id for background items without group\n\n/**\n * An ItemSet holds a set of items and ranges which can be displayed in a\n * range. The width is determined by the parent of the ItemSet, and the height\n * is determined by the size of the items.\n */\nvar ItemSet = /*#__PURE__*/function (_Component) {\n  _inherits(ItemSet, _Component);\n  var _super = _createSuper$2(ItemSet);\n  /**\n  * @param {{dom: Object, domProps: Object, emitter: Emitter, range: Range}} body\n  * @param {Object} [options]      See ItemSet.setOptions for the available options.\n  * @constructor ItemSet\n  * @extends Component\n  */\n  function ItemSet(body, options) {\n    var _this;\n    _classCallCheck(this, ItemSet);\n    _this = _super.call(this);\n    _this.body = body;\n    _this.defaultOptions = {\n      type: null,\n      // 'box', 'point', 'range', 'background'\n      orientation: {\n        item: 'bottom' // item orientation: 'top' or 'bottom'\n      },\n\n      align: 'auto',\n      // alignment of box items\n      stack: true,\n      stackSubgroups: true,\n      groupOrderSwap: function groupOrderSwap(fromGroup, toGroup, groups) {\n        // eslint-disable-line no-unused-vars\n        var targetOrder = toGroup.order;\n        toGroup.order = fromGroup.order;\n        fromGroup.order = targetOrder;\n      },\n      groupOrder: 'order',\n      selectable: true,\n      multiselect: false,\n      longSelectPressTime: 251,\n      itemsAlwaysDraggable: {\n        item: false,\n        range: false\n      },\n      editable: {\n        updateTime: false,\n        updateGroup: false,\n        add: false,\n        remove: false,\n        overrideItems: false\n      },\n      groupEditable: {\n        order: false,\n        add: false,\n        remove: false\n      },\n      snap: TimeStep.snap,\n      // Only called when `objectData.target === 'item'.\n      onDropObjectOnItem: function onDropObjectOnItem(objectData, item, callback) {\n        callback(item);\n      },\n      onAdd: function onAdd(item, callback) {\n        callback(item);\n      },\n      onUpdate: function onUpdate(item, callback) {\n        callback(item);\n      },\n      onMove: function onMove(item, callback) {\n        callback(item);\n      },\n      onRemove: function onRemove(item, callback) {\n        callback(item);\n      },\n      onMoving: function onMoving(item, callback) {\n        callback(item);\n      },\n      onAddGroup: function onAddGroup(item, callback) {\n        callback(item);\n      },\n      onMoveGroup: function onMoveGroup(item, callback) {\n        callback(item);\n      },\n      onRemoveGroup: function onRemoveGroup(item, callback) {\n        callback(item);\n      },\n      margin: {\n        item: {\n          horizontal: 10,\n          vertical: 10\n        },\n        axis: 20\n      },\n      showTooltips: true,\n      tooltip: {\n        followMouse: false,\n        overflowMethod: 'flip',\n        delay: 500\n      },\n      tooltipOnItemUpdateTime: false\n    };\n\n    // options is shared by this ItemSet and all its items\n    _this.options = availableUtils.extend({}, _this.defaultOptions);\n    _this.options.rtl = options.rtl;\n    _this.options.onTimeout = options.onTimeout;\n    _this.conversion = {\n      toScreen: body.util.toScreen,\n      toTime: body.util.toTime\n    };\n    _this.dom = {};\n    _this.props = {};\n    _this.hammer = null;\n    var me = _assertThisInitialized(_this);\n    _this.itemsData = null; // DataSet\n    _this.groupsData = null; // DataSet\n    _this.itemsSettingTime = null;\n    _this.initialItemSetDrawn = false;\n    _this.userContinueNotBail = null;\n    _this.sequentialSelection = false;\n\n    // listeners for the DataSet of the items\n    _this.itemListeners = {\n      'add': function add(event, params, senderId) {\n        // eslint-disable-line no-unused-vars\n        me._onAdd(params.items);\n        if (me.options.cluster) {\n          me.clusterGenerator.setItems(me.items, {\n            applyOnChangedLevel: false\n          });\n        }\n        me.redraw();\n      },\n      'update': function update(event, params, senderId) {\n        // eslint-disable-line no-unused-vars\n        me._onUpdate(params.items);\n        if (me.options.cluster) {\n          me.clusterGenerator.setItems(me.items, {\n            applyOnChangedLevel: false\n          });\n        }\n        me.redraw();\n      },\n      'remove': function remove(event, params, senderId) {\n        // eslint-disable-line no-unused-vars\n        me._onRemove(params.items);\n        if (me.options.cluster) {\n          me.clusterGenerator.setItems(me.items, {\n            applyOnChangedLevel: false\n          });\n        }\n        me.redraw();\n      }\n    };\n\n    // listeners for the DataSet of the groups\n    _this.groupListeners = {\n      'add': function add(event, params, senderId) {\n        // eslint-disable-line no-unused-vars\n        me._onAddGroups(params.items);\n        if (me.groupsData && me.groupsData.length > 0) {\n          var _context;\n          var groupsData = me.groupsData.getDataSet();\n          _forEachInstanceProperty(_context = groupsData.get()).call(_context, function (groupData) {\n            if (groupData.nestedGroups) {\n              var _context2;\n              if (groupData.showNested != false) {\n                groupData.showNested = true;\n              }\n              var updatedGroups = [];\n              _forEachInstanceProperty(_context2 = groupData.nestedGroups).call(_context2, function (nestedGroupId) {\n                var updatedNestedGroup = groupsData.get(nestedGroupId);\n                if (!updatedNestedGroup) {\n                  return;\n                }\n                updatedNestedGroup.nestedInGroup = groupData.id;\n                if (groupData.showNested == false) {\n                  updatedNestedGroup.visible = false;\n                }\n                updatedGroups = _concatInstanceProperty(updatedGroups).call(updatedGroups, updatedNestedGroup);\n              });\n              groupsData.update(updatedGroups, senderId);\n            }\n          });\n        }\n      },\n      'update': function update(event, params, senderId) {\n        // eslint-disable-line no-unused-vars\n        me._onUpdateGroups(params.items);\n      },\n      'remove': function remove(event, params, senderId) {\n        // eslint-disable-line no-unused-vars\n        me._onRemoveGroups(params.items);\n      }\n    };\n    _this.items = {}; // object with an Item for every data item\n    _this.groups = {}; // Group object for every group\n    _this.groupIds = [];\n    _this.selection = []; // list with the ids of all selected nodes\n\n    _this.popup = null;\n    _this.popupTimer = null;\n    _this.touchParams = {}; // stores properties while dragging\n    _this.groupTouchParams = {\n      group: null,\n      isDragging: false\n    };\n\n    // create the HTML DOM\n    _this._create();\n    _this.setOptions(options);\n    _this.clusters = [];\n    return _this;\n  }\n\n  /**\n   * Create the HTML DOM for the ItemSet\n   */\n  _createClass(ItemSet, [{\n    key: \"_create\",\n    value: function _create() {\n      var _this2 = this,\n        _context3,\n        _context4,\n        _context5,\n        _context6,\n        _context7,\n        _context8,\n        _context9,\n        _context10,\n        _context11,\n        _context12,\n        _context13,\n        _context14,\n        _context15,\n        _context16,\n        _context17;\n      var frame = document.createElement('div');\n      frame.className = 'vis-itemset';\n      frame['vis-itemset'] = this;\n      this.dom.frame = frame;\n\n      // create background panel\n      var background = document.createElement('div');\n      background.className = 'vis-background';\n      frame.appendChild(background);\n      this.dom.background = background;\n\n      // create foreground panel\n      var foreground = document.createElement('div');\n      foreground.className = 'vis-foreground';\n      frame.appendChild(foreground);\n      this.dom.foreground = foreground;\n\n      // create axis panel\n      var axis = document.createElement('div');\n      axis.className = 'vis-axis';\n      this.dom.axis = axis;\n\n      // create labelset\n      var labelSet = document.createElement('div');\n      labelSet.className = 'vis-labelset';\n      this.dom.labelSet = labelSet;\n\n      // create ungrouped Group\n      this._updateUngrouped();\n\n      // create background Group\n      var backgroundGroup = new BackgroundGroup(BACKGROUND, null, this);\n      backgroundGroup.show();\n      this.groups[BACKGROUND] = backgroundGroup;\n\n      // attach event listeners\n      // Note: we bind to the centerContainer for the case where the height\n      //       of the center container is larger than of the ItemSet, so we\n      //       can click in the empty area to create a new item or deselect an item.\n      this.hammer = new Hammer(this.body.dom.centerContainer);\n\n      // drag items when selected\n      this.hammer.on('hammer.input', function (event) {\n        if (event.isFirst) {\n          _this2._onTouch(event);\n        }\n      });\n      this.hammer.on('panstart', _bindInstanceProperty$1(_context3 = this._onDragStart).call(_context3, this));\n      this.hammer.on('panmove', _bindInstanceProperty$1(_context4 = this._onDrag).call(_context4, this));\n      this.hammer.on('panend', _bindInstanceProperty$1(_context5 = this._onDragEnd).call(_context5, this));\n      this.hammer.get('pan').set({\n        threshold: 5,\n        direction: Hammer.ALL\n      });\n      // delay addition on item click for trackpads...\n      this.hammer.get('press').set({\n        time: 10000\n      });\n\n      // single select (or unselect) when tapping an item\n      this.hammer.on('tap', _bindInstanceProperty$1(_context6 = this._onSelectItem).call(_context6, this));\n\n      // multi select when holding mouse/touch, or on ctrl+click\n      this.hammer.on('press', _bindInstanceProperty$1(_context7 = this._onMultiSelectItem).call(_context7, this));\n      // delay addition on item click for trackpads...\n      this.hammer.get('press').set({\n        time: 10000\n      });\n\n      // add item on doubletap\n      this.hammer.on('doubletap', _bindInstanceProperty$1(_context8 = this._onAddItem).call(_context8, this));\n      if (this.options.rtl) {\n        this.groupHammer = new Hammer(this.body.dom.rightContainer);\n      } else {\n        this.groupHammer = new Hammer(this.body.dom.leftContainer);\n      }\n      this.groupHammer.on('tap', _bindInstanceProperty$1(_context9 = this._onGroupClick).call(_context9, this));\n      this.groupHammer.on('panstart', _bindInstanceProperty$1(_context10 = this._onGroupDragStart).call(_context10, this));\n      this.groupHammer.on('panmove', _bindInstanceProperty$1(_context11 = this._onGroupDrag).call(_context11, this));\n      this.groupHammer.on('panend', _bindInstanceProperty$1(_context12 = this._onGroupDragEnd).call(_context12, this));\n      this.groupHammer.get('pan').set({\n        threshold: 5,\n        direction: Hammer.DIRECTION_VERTICAL\n      });\n      this.body.dom.centerContainer.addEventListener('mouseover', _bindInstanceProperty$1(_context13 = this._onMouseOver).call(_context13, this));\n      this.body.dom.centerContainer.addEventListener('mouseout', _bindInstanceProperty$1(_context14 = this._onMouseOut).call(_context14, this));\n      this.body.dom.centerContainer.addEventListener('mousemove', _bindInstanceProperty$1(_context15 = this._onMouseMove).call(_context15, this));\n      // right-click on timeline \n      this.body.dom.centerContainer.addEventListener('contextmenu', _bindInstanceProperty$1(_context16 = this._onDragEnd).call(_context16, this));\n      this.body.dom.centerContainer.addEventListener('mousewheel', _bindInstanceProperty$1(_context17 = this._onMouseWheel).call(_context17, this));\n\n      // attach to the DOM\n      this.show();\n    }\n\n    /**\n     * Set options for the ItemSet. Existing options will be extended/overwritten.\n     * @param {Object} [options] The following options are available:\n     *                           {string} type\n     *                              Default type for the items. Choose from 'box'\n     *                              (default), 'point', 'range', or 'background'.\n     *                              The default style can be overwritten by\n     *                              individual items.\n     *                           {string} align\n     *                              Alignment for the items, only applicable for\n     *                              BoxItem. Choose 'center' (default), 'left', or\n     *                              'right'.\n     *                           {string} orientation.item\n     *                              Orientation of the item set. Choose 'top' or\n     *                              'bottom' (default).\n     *                           {Function} groupOrder\n     *                              A sorting function for ordering groups\n     *                           {boolean} stack\n     *                              If true (default), items will be stacked on\n     *                              top of each other.\n     *                           {number} margin.axis\n     *                              Margin between the axis and the items in pixels.\n     *                              Default is 20.\n     *                           {number} margin.item.horizontal\n     *                              Horizontal margin between items in pixels.\n     *                              Default is 10.\n     *                           {number} margin.item.vertical\n     *                              Vertical Margin between items in pixels.\n     *                              Default is 10.\n     *                           {number} margin.item\n     *                              Margin between items in pixels in both horizontal\n     *                              and vertical direction. Default is 10.\n     *                           {number} margin\n     *                              Set margin for both axis and items in pixels.\n     *                           {boolean} selectable\n     *                              If true (default), items can be selected.\n     *                           {boolean} multiselect\n     *                              If true, multiple items can be selected.\n     *                              False by default.\n     *                           {boolean} editable\n     *                              Set all editable options to true or false\n     *                           {boolean} editable.updateTime\n     *                              Allow dragging an item to an other moment in time\n     *                           {boolean} editable.updateGroup\n     *                              Allow dragging an item to an other group\n     *                           {boolean} editable.add\n     *                              Allow creating new items on double tap\n     *                           {boolean} editable.remove\n     *                              Allow removing items by clicking the delete button\n     *                              top right of a selected item.\n     *                           {Function(item: Item, callback: Function)} onAdd\n     *                              Callback function triggered when an item is about to be added:\n     *                              when the user double taps an empty space in the Timeline.\n     *                           {Function(item: Item, callback: Function)} onUpdate\n     *                              Callback function fired when an item is about to be updated.\n     *                              This function typically has to show a dialog where the user\n     *                              change the item. If not implemented, nothing happens.\n     *                           {Function(item: Item, callback: Function)} onMove\n     *                              Fired when an item has been moved. If not implemented,\n     *                              the move action will be accepted.\n     *                           {Function(item: Item, callback: Function)} onRemove\n     *                              Fired when an item is about to be deleted.\n     *                              If not implemented, the item will be always removed.\n     */\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      var _this3 = this;\n      if (options) {\n        var _context18, _context20;\n        // copy all options that we know\n        var fields = ['type', 'rtl', 'align', 'order', 'stack', 'stackSubgroups', 'selectable', 'multiselect', 'sequentialSelection', 'multiselectPerGroup', 'longSelectPressTime', 'groupOrder', 'dataAttributes', 'template', 'groupTemplate', 'visibleFrameTemplate', 'hide', 'snap', 'groupOrderSwap', 'showTooltips', 'tooltip', 'tooltipOnItemUpdateTime', 'groupHeightMode', 'onTimeout'];\n        availableUtils.selectiveExtend(fields, this.options, options);\n        if ('itemsAlwaysDraggable' in options) {\n          if (typeof options.itemsAlwaysDraggable === 'boolean') {\n            this.options.itemsAlwaysDraggable.item = options.itemsAlwaysDraggable;\n            this.options.itemsAlwaysDraggable.range = false;\n          } else if (_typeof$1(options.itemsAlwaysDraggable) === 'object') {\n            availableUtils.selectiveExtend(['item', 'range'], this.options.itemsAlwaysDraggable, options.itemsAlwaysDraggable);\n            // only allow range always draggable when item is always draggable as well\n            if (!this.options.itemsAlwaysDraggable.item) {\n              this.options.itemsAlwaysDraggable.range = false;\n            }\n          }\n        }\n        if ('sequentialSelection' in options) {\n          if (typeof options.sequentialSelection === 'boolean') {\n            this.options.sequentialSelection = options.sequentialSelection;\n          }\n        }\n        if ('orientation' in options) {\n          if (typeof options.orientation === 'string') {\n            this.options.orientation.item = options.orientation === 'top' ? 'top' : 'bottom';\n          } else if (_typeof$1(options.orientation) === 'object' && 'item' in options.orientation) {\n            this.options.orientation.item = options.orientation.item;\n          }\n        }\n        if ('margin' in options) {\n          if (typeof options.margin === 'number') {\n            this.options.margin.axis = options.margin;\n            this.options.margin.item.horizontal = options.margin;\n            this.options.margin.item.vertical = options.margin;\n          } else if (_typeof$1(options.margin) === 'object') {\n            availableUtils.selectiveExtend(['axis'], this.options.margin, options.margin);\n            if ('item' in options.margin) {\n              if (typeof options.margin.item === 'number') {\n                this.options.margin.item.horizontal = options.margin.item;\n                this.options.margin.item.vertical = options.margin.item;\n              } else if (_typeof$1(options.margin.item) === 'object') {\n                availableUtils.selectiveExtend(['horizontal', 'vertical'], this.options.margin.item, options.margin.item);\n              }\n            }\n          }\n        }\n        _forEachInstanceProperty(_context18 = ['locale', 'locales']).call(_context18, function (key) {\n          if (key in options) {\n            _this3.options[key] = options[key];\n          }\n        });\n        if ('editable' in options) {\n          if (typeof options.editable === 'boolean') {\n            this.options.editable.updateTime = options.editable;\n            this.options.editable.updateGroup = options.editable;\n            this.options.editable.add = options.editable;\n            this.options.editable.remove = options.editable;\n            this.options.editable.overrideItems = false;\n          } else if (_typeof$1(options.editable) === 'object') {\n            availableUtils.selectiveExtend(['updateTime', 'updateGroup', 'add', 'remove', 'overrideItems'], this.options.editable, options.editable);\n          }\n        }\n        if ('groupEditable' in options) {\n          if (typeof options.groupEditable === 'boolean') {\n            this.options.groupEditable.order = options.groupEditable;\n            this.options.groupEditable.add = options.groupEditable;\n            this.options.groupEditable.remove = options.groupEditable;\n          } else if (_typeof$1(options.groupEditable) === 'object') {\n            availableUtils.selectiveExtend(['order', 'add', 'remove'], this.options.groupEditable, options.groupEditable);\n          }\n        }\n\n        // callback functions\n        var addCallback = function addCallback(name) {\n          var fn = options[name];\n          if (fn) {\n            if (!(typeof fn === 'function')) {\n              var _context19;\n              throw new Error(_concatInstanceProperty(_context19 = \"option \".concat(name, \" must be a function \")).call(_context19, name, \"(item, callback)\"));\n            }\n            _this3.options[name] = fn;\n          }\n        };\n        _forEachInstanceProperty(_context20 = ['onDropObjectOnItem', 'onAdd', 'onUpdate', 'onRemove', 'onMove', 'onMoving', 'onAddGroup', 'onMoveGroup', 'onRemoveGroup']).call(_context20, addCallback);\n        if (options.cluster) {\n          _Object$assign(this.options, {\n            cluster: options.cluster\n          });\n          if (!this.clusterGenerator) {\n            this.clusterGenerator = new ClusterGenerator(this);\n          }\n          this.clusterGenerator.setItems(this.items, {\n            applyOnChangedLevel: false\n          });\n          this.markDirty({\n            refreshItems: true,\n            restackGroups: true\n          });\n          this.redraw();\n        } else if (this.clusterGenerator) {\n          this._detachAllClusters();\n          this.clusters = [];\n          this.clusterGenerator = null;\n          this.options.cluster = undefined;\n          this.markDirty({\n            refreshItems: true,\n            restackGroups: true\n          });\n          this.redraw();\n        } else {\n          // force the itemSet to refresh: options like orientation and margins may be changed\n          this.markDirty();\n        }\n      }\n    }\n\n    /**\n     * Mark the ItemSet dirty so it will refresh everything with next redraw.\n     * Optionally, all items can be marked as dirty and be refreshed.\n     * @param {{refreshItems: boolean}} [options]\n     */\n  }, {\n    key: \"markDirty\",\n    value: function markDirty(options) {\n      this.groupIds = [];\n      if (options) {\n        if (options.refreshItems) {\n          _forEachInstanceProperty(availableUtils).call(availableUtils, this.items, function (item) {\n            item.dirty = true;\n            if (item.displayed) item.redraw();\n          });\n        }\n        if (options.restackGroups) {\n          _forEachInstanceProperty(availableUtils).call(availableUtils, this.groups, function (group, key) {\n            if (key === BACKGROUND) return;\n            group.stackDirty = true;\n          });\n        }\n      }\n    }\n\n    /**\n     * Destroy the ItemSet\n     */\n  }, {\n    key: \"destroy\",\n    value: function destroy() {\n      this.clearPopupTimer();\n      this.hide();\n      this.setItems(null);\n      this.setGroups(null);\n      this.hammer && this.hammer.destroy();\n      this.groupHammer && this.groupHammer.destroy();\n      this.hammer = null;\n      this.body = null;\n      this.conversion = null;\n    }\n\n    /**\n     * Hide the component from the DOM\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      // remove the frame containing the items\n      if (this.dom.frame.parentNode) {\n        this.dom.frame.parentNode.removeChild(this.dom.frame);\n      }\n\n      // remove the axis with dots\n      if (this.dom.axis.parentNode) {\n        this.dom.axis.parentNode.removeChild(this.dom.axis);\n      }\n\n      // remove the labelset containing all group labels\n      if (this.dom.labelSet.parentNode) {\n        this.dom.labelSet.parentNode.removeChild(this.dom.labelSet);\n      }\n    }\n\n    /**\n     * Show the component in the DOM (when not already visible).\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      // show frame containing the items\n      if (!this.dom.frame.parentNode) {\n        this.body.dom.center.appendChild(this.dom.frame);\n      }\n\n      // show axis with dots\n      if (!this.dom.axis.parentNode) {\n        this.body.dom.backgroundVertical.appendChild(this.dom.axis);\n      }\n\n      // show labelset containing labels\n      if (!this.dom.labelSet.parentNode) {\n        if (this.options.rtl) {\n          this.body.dom.right.appendChild(this.dom.labelSet);\n        } else {\n          this.body.dom.left.appendChild(this.dom.labelSet);\n        }\n      }\n    }\n\n    /**\n     * Activates the popup timer to show the given popup after a fixed time.\n     * @param {Popup} popup\n     */\n  }, {\n    key: \"setPopupTimer\",\n    value: function setPopupTimer(popup) {\n      this.clearPopupTimer();\n      if (popup) {\n        var delay = this.options.tooltip.delay || typeof this.options.tooltip.delay === 'number' ? this.options.tooltip.delay : 500;\n        this.popupTimer = _setTimeout(function () {\n          popup.show();\n        }, delay);\n      }\n    }\n\n    /**\n     * Clears the popup timer for the tooltip.\n     */\n  }, {\n    key: \"clearPopupTimer\",\n    value: function clearPopupTimer() {\n      if (this.popupTimer != null) {\n        clearTimeout(this.popupTimer);\n        this.popupTimer = null;\n      }\n    }\n\n    /**\n     * Set selected items by their id. Replaces the current selection\n     * Unknown id's are silently ignored.\n     * @param {string[] | string} [ids] An array with zero or more id's of the items to be\n     *                                  selected, or a single item id. If ids is undefined\n     *                                  or an empty array, all items will be unselected.\n     */\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(ids) {\n      var _context21;\n      if (ids == undefined) {\n        ids = [];\n      }\n      if (!_Array$isArray(ids)) {\n        ids = [ids];\n      }\n      var idsToDeselect = _filterInstanceProperty(_context21 = this.selection).call(_context21, function (id) {\n        return _indexOfInstanceProperty(ids).call(ids, id) === -1;\n      });\n\n      // unselect currently selected items\n      var _iterator = _createForOfIteratorHelper$1(idsToDeselect),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var selectedId = _step.value;\n          var item = this.getItemById(selectedId);\n          if (item) {\n            item.unselect();\n          }\n        }\n\n        // select items\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      this.selection = _toConsumableArray(ids);\n      var _iterator2 = _createForOfIteratorHelper$1(ids),\n        _step2;\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var id = _step2.value;\n          var _item2 = this.getItemById(id);\n          if (_item2) {\n            _item2.select();\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n    }\n\n    /**\n     * Get the selected items by their id\n     * @return {Array} ids  The ids of the selected items\n     */\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      var _context22;\n      return _concatInstanceProperty(_context22 = this.selection).call(_context22, []);\n    }\n\n    /**\n     * Get the id's of the currently visible items.\n     * @returns {Array} The ids of the visible items\n     */\n  }, {\n    key: \"getVisibleItems\",\n    value: function getVisibleItems() {\n      var range = this.body.range.getRange();\n      var right;\n      var left;\n      if (this.options.rtl) {\n        right = this.body.util.toScreen(range.start);\n        left = this.body.util.toScreen(range.end);\n      } else {\n        left = this.body.util.toScreen(range.start);\n        right = this.body.util.toScreen(range.end);\n      }\n      var ids = [];\n      for (var groupId in this.groups) {\n        if (this.groups.hasOwnProperty(groupId)) {\n          var group = this.groups[groupId];\n          var rawVisibleItems = group.isVisible ? group.visibleItems : [];\n\n          // filter the \"raw\" set with visibleItems into a set which is really\n          // visible by pixels\n          var _iterator3 = _createForOfIteratorHelper$1(rawVisibleItems),\n            _step3;\n          try {\n            for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n              var item = _step3.value;\n              // TODO: also check whether visible vertically\n              if (this.options.rtl) {\n                if (item.right < left && item.right + item.width > right) {\n                  ids.push(item.id);\n                }\n              } else {\n                if (item.left < right && item.left + item.width > left) {\n                  ids.push(item.id);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator3.e(err);\n          } finally {\n            _iterator3.f();\n          }\n        }\n      }\n      return ids;\n    }\n\n    /**\n    * Get the id's of the items at specific time, where a click takes place on the timeline.\n    * @returns {Array} The ids of all items in existence at the time of click event on the timeline.\n    */\n  }, {\n    key: \"getItemsAtCurrentTime\",\n    value: function getItemsAtCurrentTime(timeOfEvent) {\n      var right;\n      var left;\n      if (this.options.rtl) {\n        right = this.body.util.toScreen(timeOfEvent);\n        left = this.body.util.toScreen(timeOfEvent);\n      } else {\n        left = this.body.util.toScreen(timeOfEvent);\n        right = this.body.util.toScreen(timeOfEvent);\n      }\n      var ids = [];\n      for (var groupId in this.groups) {\n        if (this.groups.hasOwnProperty(groupId)) {\n          var group = this.groups[groupId];\n          var rawVisibleItems = group.isVisible ? group.visibleItems : [];\n\n          // filter the \"raw\" set with visibleItems into a set which is really\n          // visible by pixels\n          var _iterator4 = _createForOfIteratorHelper$1(rawVisibleItems),\n            _step4;\n          try {\n            for (_iterator4.s(); !(_step4 = _iterator4.n()).done;) {\n              var item = _step4.value;\n              if (this.options.rtl) {\n                if (item.right < left && item.right + item.width > right) {\n                  ids.push(item.id);\n                }\n              } else {\n                if (item.left < right && item.left + item.width > left) {\n                  ids.push(item.id);\n                }\n              }\n            }\n          } catch (err) {\n            _iterator4.e(err);\n          } finally {\n            _iterator4.f();\n          }\n        }\n      }\n      return ids;\n    }\n\n    /**\n     * Get the id's of the currently visible groups.\n     * @returns {Array} The ids of the visible groups\n     */\n  }, {\n    key: \"getVisibleGroups\",\n    value: function getVisibleGroups() {\n      var ids = [];\n      for (var groupId in this.groups) {\n        if (this.groups.hasOwnProperty(groupId)) {\n          var group = this.groups[groupId];\n          if (group.isVisible) {\n            ids.push(groupId);\n          }\n        }\n      }\n      return ids;\n    }\n\n    /**\n     * get item by id\n     * @param {string} id\n     * @return {object} item\n     */\n  }, {\n    key: \"getItemById\",\n    value: function getItemById(id) {\n      var _context23;\n      return this.items[id] || _findInstanceProperty(_context23 = this.clusters).call(_context23, function (cluster) {\n        return cluster.id === id;\n      });\n    }\n\n    /**\n     * Deselect a selected item\n     * @param {string | number} id\n     * @private\n     */\n  }, {\n    key: \"_deselect\",\n    value: function _deselect(id) {\n      var selection = this.selection;\n      for (var i = 0, ii = selection.length; i < ii; i++) {\n        if (selection[i] == id) {\n          // non-strict comparison!\n          _spliceInstanceProperty(selection).call(selection, i, 1);\n          break;\n        }\n      }\n    }\n\n    /**\n     * Repaint the component\n     * @return {boolean} Returns true if the component is resized\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      var margin = this.options.margin;\n      var range = this.body.range;\n      var asSize = availableUtils.option.asSize;\n      var options = this.options;\n      var orientation = options.orientation.item;\n      var resized = false;\n      var frame = this.dom.frame;\n\n      // recalculate absolute position (before redrawing groups)\n      this.props.top = this.body.domProps.top.height + this.body.domProps.border.top;\n      if (this.options.rtl) {\n        this.props.right = this.body.domProps.right.width + this.body.domProps.border.right;\n      } else {\n        this.props.left = this.body.domProps.left.width + this.body.domProps.border.left;\n      }\n\n      // update class name\n      frame.className = 'vis-itemset';\n      if (this.options.cluster) {\n        this._clusterItems();\n      }\n\n      // reorder the groups (if needed)\n      resized = this._orderGroups() || resized;\n\n      // check whether zoomed (in that case we need to re-stack everything)\n      // TODO: would be nicer to get this as a trigger from Range\n      var visibleInterval = range.end - range.start;\n      var zoomed = visibleInterval != this.lastVisibleInterval || this.props.width != this.props.lastWidth;\n      var scrolled = range.start != this.lastRangeStart;\n      var changedStackOption = options.stack != this.lastStack;\n      var changedStackSubgroupsOption = options.stackSubgroups != this.lastStackSubgroups;\n      var forceRestack = zoomed || scrolled || changedStackOption || changedStackSubgroupsOption;\n      this.lastVisibleInterval = visibleInterval;\n      this.lastRangeStart = range.start;\n      this.lastStack = options.stack;\n      this.lastStackSubgroups = options.stackSubgroups;\n      this.props.lastWidth = this.props.width;\n      var firstGroup = this._firstGroup();\n      var firstMargin = {\n        item: margin.item,\n        axis: margin.axis\n      };\n      var nonFirstMargin = {\n        item: margin.item,\n        axis: margin.item.vertical / 2\n      };\n      var height = 0;\n      var minHeight = margin.axis + margin.item.vertical;\n\n      // redraw the background group\n      this.groups[BACKGROUND].redraw(range, nonFirstMargin, forceRestack);\n      var redrawQueue = {};\n      var redrawQueueLength = 0;\n\n      // collect redraw functions\n      _forEachInstanceProperty(availableUtils).call(availableUtils, this.groups, function (group, key) {\n        if (key === BACKGROUND) return;\n        var groupMargin = group == firstGroup ? firstMargin : nonFirstMargin;\n        var returnQueue = true;\n        redrawQueue[key] = group.redraw(range, groupMargin, forceRestack, returnQueue);\n        redrawQueueLength = redrawQueue[key].length;\n      });\n      var needRedraw = redrawQueueLength > 0;\n      if (needRedraw) {\n        var redrawResults = {};\n        var _loop = function _loop(i) {\n          _forEachInstanceProperty(availableUtils).call(availableUtils, redrawQueue, function (fns, key) {\n            redrawResults[key] = fns[i]();\n          });\n        };\n        for (var i = 0; i < redrawQueueLength; i++) {\n          _loop(i);\n        }\n\n        // redraw all regular groups\n        _forEachInstanceProperty(availableUtils).call(availableUtils, this.groups, function (group, key) {\n          if (key === BACKGROUND) return;\n          var groupResized = redrawResults[key];\n          resized = groupResized || resized;\n          height += group.height;\n        });\n        height = Math.max(height, minHeight);\n      }\n      height = Math.max(height, minHeight);\n\n      // update frame height\n      frame.style.height = asSize(height);\n\n      // calculate actual size\n      this.props.width = frame.offsetWidth;\n      this.props.height = height;\n\n      // reposition axis\n      this.dom.axis.style.top = asSize(orientation == 'top' ? this.body.domProps.top.height + this.body.domProps.border.top : this.body.domProps.top.height + this.body.domProps.centerContainer.height);\n      if (this.options.rtl) {\n        this.dom.axis.style.right = '0';\n      } else {\n        this.dom.axis.style.left = '0';\n      }\n      this.hammer.get('press').set({\n        time: this.options.longSelectPressTime\n      });\n      this.initialItemSetDrawn = true;\n      // check if this component is resized\n      resized = this._isResized() || resized;\n      return resized;\n    }\n\n    /**\n     * Get the first group, aligned with the axis\n     * @return {Group | null} firstGroup\n     * @private\n     */\n  }, {\n    key: \"_firstGroup\",\n    value: function _firstGroup() {\n      var firstGroupIndex = this.options.orientation.item == 'top' ? 0 : this.groupIds.length - 1;\n      var firstGroupId = this.groupIds[firstGroupIndex];\n      var firstGroup = this.groups[firstGroupId] || this.groups[UNGROUPED$1];\n      return firstGroup || null;\n    }\n\n    /**\n     * Create or delete the group holding all ungrouped items. This group is used when\n     * there are no groups specified.\n     * @protected\n     */\n  }, {\n    key: \"_updateUngrouped\",\n    value: function _updateUngrouped() {\n      var ungrouped = this.groups[UNGROUPED$1];\n      var item;\n      var itemId;\n      if (this.groupsData) {\n        // remove the group holding all ungrouped items\n        if (ungrouped) {\n          ungrouped.dispose();\n          delete this.groups[UNGROUPED$1];\n          for (itemId in this.items) {\n            if (this.items.hasOwnProperty(itemId)) {\n              item = this.items[itemId];\n              item.parent && item.parent.remove(item);\n              var groupId = this.getGroupId(item.data);\n              var group = this.groups[groupId];\n              group && group.add(item) || item.hide();\n            }\n          }\n        }\n      } else {\n        // create a group holding all (unfiltered) items\n        if (!ungrouped) {\n          var id = null;\n          var data = null;\n          ungrouped = new Group(id, data, this);\n          this.groups[UNGROUPED$1] = ungrouped;\n          for (itemId in this.items) {\n            if (this.items.hasOwnProperty(itemId)) {\n              item = this.items[itemId];\n              ungrouped.add(item);\n            }\n          }\n          ungrouped.show();\n        }\n      }\n    }\n\n    /**\n     * Get the element for the labelset\n     * @return {HTMLElement} labelSet\n     */\n  }, {\n    key: \"getLabelSet\",\n    value: function getLabelSet() {\n      return this.dom.labelSet;\n    }\n\n    /**\n     * Set items\n     * @param {vis.DataSet | null} items\n     */\n  }, {\n    key: \"setItems\",\n    value: function setItems(items) {\n      this.itemsSettingTime = new Date();\n      var me = this;\n      var ids;\n      var oldItemsData = this.itemsData;\n\n      // replace the dataset\n      if (!items) {\n        this.itemsData = null;\n      } else if (isDataViewLike(items)) {\n        this.itemsData = typeCoerceDataSet(items);\n      } else {\n        throw new TypeError('Data must implement the interface of DataSet or DataView');\n      }\n      if (oldItemsData) {\n        // unsubscribe from old dataset\n        _forEachInstanceProperty(availableUtils).call(availableUtils, this.itemListeners, function (callback, event) {\n          oldItemsData.off(event, callback);\n        });\n\n        // stop maintaining a coerced version of the old data set\n        oldItemsData.dispose();\n\n        // remove all drawn items\n        ids = oldItemsData.getIds();\n        this._onRemove(ids);\n      }\n      if (this.itemsData) {\n        // subscribe to new dataset\n        var id = this.id;\n        _forEachInstanceProperty(availableUtils).call(availableUtils, this.itemListeners, function (callback, event) {\n          me.itemsData.on(event, callback, id);\n        });\n\n        // add all new items\n        ids = this.itemsData.getIds();\n        this._onAdd(ids);\n\n        // update the group holding all ungrouped items\n        this._updateUngrouped();\n      }\n      this.body.emitter.emit('_change', {\n        queue: true\n      });\n    }\n\n    /**\n     * Get the current items\n     * @returns {vis.DataSet | null}\n     */\n  }, {\n    key: \"getItems\",\n    value: function getItems() {\n      return this.itemsData != null ? this.itemsData.rawDS : null;\n    }\n\n    /**\n     * Set groups\n     * @param {vis.DataSet} groups\n     */\n  }, {\n    key: \"setGroups\",\n    value: function setGroups(groups) {\n      var me = this;\n      var ids;\n\n      // unsubscribe from current dataset\n      if (this.groupsData) {\n        _forEachInstanceProperty(availableUtils).call(availableUtils, this.groupListeners, function (callback, event) {\n          me.groupsData.off(event, callback);\n        });\n\n        // remove all drawn groups\n        ids = this.groupsData.getIds();\n        this.groupsData = null;\n        this._onRemoveGroups(ids); // note: this will cause a redraw\n      }\n\n      // replace the dataset\n      if (!groups) {\n        this.groupsData = null;\n      } else if (isDataViewLike(groups)) {\n        this.groupsData = groups;\n      } else {\n        throw new TypeError('Data must implement the interface of DataSet or DataView');\n      }\n      if (this.groupsData) {\n        var _context24;\n        // go over all groups nesting\n        var groupsData = this.groupsData.getDataSet();\n        _forEachInstanceProperty(_context24 = groupsData.get()).call(_context24, function (group) {\n          if (group.nestedGroups) {\n            var _context25;\n            _forEachInstanceProperty(_context25 = group.nestedGroups).call(_context25, function (nestedGroupId) {\n              var updatedNestedGroup = groupsData.get(nestedGroupId);\n              updatedNestedGroup.nestedInGroup = group.id;\n              if (group.showNested == false) {\n                updatedNestedGroup.visible = false;\n              }\n              groupsData.update(updatedNestedGroup);\n            });\n          }\n        });\n\n        // subscribe to new dataset\n        var id = this.id;\n        _forEachInstanceProperty(availableUtils).call(availableUtils, this.groupListeners, function (callback, event) {\n          me.groupsData.on(event, callback, id);\n        });\n\n        // draw all ms\n        ids = this.groupsData.getIds();\n        this._onAddGroups(ids);\n      }\n\n      // update the group holding all ungrouped items\n      this._updateUngrouped();\n\n      // update the order of all items in each group\n      this._order();\n      if (this.options.cluster) {\n        this.clusterGenerator.updateData();\n        this._clusterItems();\n        this.markDirty({\n          refreshItems: true,\n          restackGroups: true\n        });\n      }\n      this.body.emitter.emit('_change', {\n        queue: true\n      });\n    }\n\n    /**\n     * Get the current groups\n     * @returns {vis.DataSet | null} groups\n     */\n  }, {\n    key: \"getGroups\",\n    value: function getGroups() {\n      return this.groupsData;\n    }\n\n    /**\n     * Remove an item by its id\n     * @param {string | number} id\n     */\n  }, {\n    key: \"removeItem\",\n    value: function removeItem(id) {\n      var _this4 = this;\n      var item = this.itemsData.get(id);\n      if (item) {\n        // confirm deletion\n        this.options.onRemove(item, function (item) {\n          if (item) {\n            // remove by id here, it is possible that an item has no id defined\n            // itself, so better not delete by the item itself\n            _this4.itemsData.remove(id);\n          }\n        });\n      }\n    }\n\n    /**\n     * Get the time of an item based on it's data and options.type\n     * @param {Object} itemData\n     * @returns {string} Returns the type\n     * @private\n     */\n  }, {\n    key: \"_getType\",\n    value: function _getType(itemData) {\n      return itemData.type || this.options.type || (itemData.end ? 'range' : 'box');\n    }\n\n    /**\n     * Get the group id for an item\n     * @param {Object} itemData\n     * @returns {string} Returns the groupId\n     * @private\n     */\n  }, {\n    key: \"getGroupId\",\n    value: function getGroupId(itemData) {\n      var type = this._getType(itemData);\n      if (type == 'background' && itemData.group == undefined) {\n        return BACKGROUND;\n      } else {\n        return this.groupsData ? itemData.group : UNGROUPED$1;\n      }\n    }\n\n    /**\n     * Handle updated items\n     * @param {number[]} ids\n     * @protected\n     */\n  }, {\n    key: \"_onUpdate\",\n    value: function _onUpdate(ids) {\n      var _this5 = this;\n      var me = this;\n      _forEachInstanceProperty(ids).call(ids, function (id) {\n        var itemData = me.itemsData.get(id);\n        var item = me.items[id];\n        var type = itemData ? me._getType(itemData) : null;\n        var constructor = ItemSet.types[type];\n        var selected;\n        if (item) {\n          // update item   \t\n          if (!constructor || !(item instanceof constructor)) {\n            // item type has changed, delete the item and recreate it\n            selected = item.selected; // preserve selection of this item\n            me._removeItem(item);\n            item = null;\n          } else {\n            me._updateItem(item, itemData);\n          }\n        }\n        if (!item && itemData) {\n          // create item\n          if (constructor) {\n            item = new constructor(itemData, me.conversion, me.options);\n            item.id = id; // TODO: not so nice setting id afterwards\n\n            me._addItem(item);\n            if (selected) {\n              _this5.selection.push(id);\n              item.select();\n            }\n          } else {\n            throw new TypeError(\"Unknown item type \\\"\".concat(type, \"\\\"\"));\n          }\n        }\n      });\n      this._order();\n      if (this.options.cluster) {\n        this.clusterGenerator.setItems(this.items, {\n          applyOnChangedLevel: false\n        });\n        this._clusterItems();\n      }\n      this.body.emitter.emit('_change', {\n        queue: true\n      });\n    }\n\n    /**\n     * Handle removed items\n     * @param {number[]} ids\n     * @protected\n     */\n  }, {\n    key: \"_onRemove\",\n    value: function _onRemove(ids) {\n      var count = 0;\n      var me = this;\n      _forEachInstanceProperty(ids).call(ids, function (id) {\n        var item = me.items[id];\n        if (item) {\n          count++;\n          me._removeItem(item);\n        }\n      });\n      if (count) {\n        // update order\n        this._order();\n        this.body.emitter.emit('_change', {\n          queue: true\n        });\n      }\n    }\n\n    /**\n     * Update the order of item in all groups\n     * @private\n     */\n  }, {\n    key: \"_order\",\n    value: function _order() {\n      // reorder the items in all groups\n      // TODO: optimization: only reorder groups affected by the changed items\n      _forEachInstanceProperty(availableUtils).call(availableUtils, this.groups, function (group) {\n        group.order();\n      });\n    }\n\n    /**\n     * Handle updated groups\n     * @param {number[]} ids\n     * @private\n     */\n  }, {\n    key: \"_onUpdateGroups\",\n    value: function _onUpdateGroups(ids) {\n      this._onAddGroups(ids);\n    }\n\n    /**\n     * Handle changed groups (added or updated)\n     * @param {number[]} ids\n     * @private\n     */\n  }, {\n    key: \"_onAddGroups\",\n    value: function _onAddGroups(ids) {\n      var me = this;\n      _forEachInstanceProperty(ids).call(ids, function (id) {\n        var groupData = me.groupsData.get(id);\n        var group = me.groups[id];\n        if (!group) {\n          // check for reserved ids\n          if (id == UNGROUPED$1 || id == BACKGROUND) {\n            throw new Error(\"Illegal group id. \".concat(id, \" is a reserved id.\"));\n          }\n          var groupOptions = _Object$create$1(me.options);\n          availableUtils.extend(groupOptions, {\n            height: null\n          });\n          group = new Group(id, groupData, me);\n          me.groups[id] = group;\n\n          // add items with this groupId to the new group\n          for (var itemId in me.items) {\n            if (me.items.hasOwnProperty(itemId)) {\n              var item = me.items[itemId];\n              if (item.data.group == id) {\n                group.add(item);\n              }\n            }\n          }\n          group.order();\n          group.show();\n        } else {\n          // update group\n          group.setData(groupData);\n        }\n      });\n      this.body.emitter.emit('_change', {\n        queue: true\n      });\n    }\n\n    /**\n     * Handle removed groups\n     * @param {number[]} ids\n     * @private\n     */\n  }, {\n    key: \"_onRemoveGroups\",\n    value: function _onRemoveGroups(ids) {\n      var _this6 = this;\n      _forEachInstanceProperty(ids).call(ids, function (id) {\n        var group = _this6.groups[id];\n        if (group) {\n          group.dispose();\n          delete _this6.groups[id];\n        }\n      });\n      if (this.options.cluster) {\n        this.clusterGenerator.updateData();\n        this._clusterItems();\n      }\n      this.markDirty({\n        restackGroups: !!this.options.cluster\n      });\n      this.body.emitter.emit('_change', {\n        queue: true\n      });\n    }\n\n    /**\n     * Reorder the groups if needed\n     * @return {boolean} changed\n     * @private\n     */\n  }, {\n    key: \"_orderGroups\",\n    value: function _orderGroups() {\n      if (this.groupsData) {\n        // reorder the groups\n        var groupIds = this.groupsData.getIds({\n          order: this.options.groupOrder\n        });\n        groupIds = this._orderNestedGroups(groupIds);\n        var changed = !availableUtils.equalArray(groupIds, this.groupIds);\n        if (changed) {\n          // hide all groups, removes them from the DOM\n          var groups = this.groups;\n          _forEachInstanceProperty(groupIds).call(groupIds, function (groupId) {\n            groups[groupId].hide();\n          });\n\n          // show the groups again, attach them to the DOM in correct order\n          _forEachInstanceProperty(groupIds).call(groupIds, function (groupId) {\n            groups[groupId].show();\n          });\n          this.groupIds = groupIds;\n        }\n        return changed;\n      } else {\n        return false;\n      }\n    }\n\n    /**\n     * Reorder the nested groups\n     *\n     * @param {Array.<number>} groupIds\n     * @returns {Array.<number>}\n     * @private\n     */\n  }, {\n    key: \"_orderNestedGroups\",\n    value: function _orderNestedGroups(groupIds) {\n      var _this7 = this;\n      /**\n       * Recursively order nested groups\n       *\n       * @param {ItemSet} t\n       * @param {Array.<number>} groupIds\n       * @returns {Array.<number>}\n       * @private\n       */\n      function getOrderedNestedGroups(t, groupIds) {\n        var result = [];\n        _forEachInstanceProperty(groupIds).call(groupIds, function (groupId) {\n          result.push(groupId);\n          var groupData = t.groupsData.get(groupId);\n          if (groupData.nestedGroups) {\n            var _context26;\n            var nestedGroupIds = _mapInstanceProperty(_context26 = t.groupsData.get({\n              filter: function filter(nestedGroup) {\n                return nestedGroup.nestedInGroup == groupId;\n              },\n              order: t.options.groupOrder\n            })).call(_context26, function (nestedGroup) {\n              return nestedGroup.id;\n            });\n            result = _concatInstanceProperty(result).call(result, getOrderedNestedGroups(t, nestedGroupIds));\n          }\n        });\n        return result;\n      }\n      var topGroupIds = _filterInstanceProperty(groupIds).call(groupIds, function (groupId) {\n        return !_this7.groupsData.get(groupId).nestedInGroup;\n      });\n      return getOrderedNestedGroups(this, topGroupIds);\n    }\n\n    /**\n     * Add a new item\n     * @param {Item} item\n     * @private\n     */\n  }, {\n    key: \"_addItem\",\n    value: function _addItem(item) {\n      this.items[item.id] = item;\n\n      // add to group\n      var groupId = this.getGroupId(item.data);\n      var group = this.groups[groupId];\n      if (!group) {\n        item.groupShowing = false;\n      } else if (group && group.data && group.data.showNested) {\n        item.groupShowing = true;\n      }\n      if (group) group.add(item);\n    }\n\n    /**\n     * Update an existing item\n     * @param {Item} item\n     * @param {Object} itemData\n     * @private\n     */\n  }, {\n    key: \"_updateItem\",\n    value: function _updateItem(item, itemData) {\n      // update the items data (will redraw the item when displayed)\n      item.setData(itemData);\n      var groupId = this.getGroupId(item.data);\n      var group = this.groups[groupId];\n      if (!group) {\n        item.groupShowing = false;\n      } else if (group && group.data && group.data.showNested) {\n        item.groupShowing = true;\n      }\n    }\n\n    /**\n     * Delete an item from the ItemSet: remove it from the DOM, from the map\n     * with items, and from the map with visible items, and from the selection\n     * @param {Item} item\n     * @private\n     */\n  }, {\n    key: \"_removeItem\",\n    value: function _removeItem(item) {\n      var _context27, _context28;\n      // remove from DOM\n      item.hide();\n\n      // remove from items\n      delete this.items[item.id];\n\n      // remove from selection\n      var index = _indexOfInstanceProperty(_context27 = this.selection).call(_context27, item.id);\n      if (index != -1) _spliceInstanceProperty(_context28 = this.selection).call(_context28, index, 1);\n\n      // remove from group\n      item.parent && item.parent.remove(item);\n\n      // remove Tooltip from DOM\n      if (this.popup != null) {\n        this.popup.hide();\n      }\n    }\n\n    /**\n     * Create an array containing all items being a range (having an end date)\n     * @param {Array.<Object>} array\n     * @returns {Array}\n     * @private\n     */\n  }, {\n    key: \"_constructByEndArray\",\n    value: function _constructByEndArray(array) {\n      var endArray = [];\n      for (var i = 0; i < array.length; i++) {\n        if (array[i] instanceof RangeItem) {\n          endArray.push(array[i]);\n        }\n      }\n      return endArray;\n    }\n\n    /**\n     * Register the clicked item on touch, before dragStart is initiated.\n     *\n     * dragStart is initiated from a mousemove event, AFTER the mouse/touch is\n     * already moving. Therefore, the mouse/touch can sometimes be above an other\n     * DOM element than the item itself.\n     *\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onTouch\",\n    value: function _onTouch(event) {\n      // store the touched item, used in _onDragStart\n      this.touchParams.item = this.itemFromTarget(event);\n      this.touchParams.dragLeftItem = event.target.dragLeftItem || false;\n      this.touchParams.dragRightItem = event.target.dragRightItem || false;\n      this.touchParams.itemProps = null;\n    }\n\n    /**\n     * Given an group id, returns the index it has.\n     *\n     * @param {number} groupId\n     * @returns {number} index / groupId\n     * @private\n     */\n  }, {\n    key: \"_getGroupIndex\",\n    value: function _getGroupIndex(groupId) {\n      for (var i = 0; i < this.groupIds.length; i++) {\n        if (groupId == this.groupIds[i]) return i;\n      }\n    }\n\n    /**\n     * Start dragging the selected events\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onDragStart\",\n    value: function _onDragStart(event) {\n      var _this8 = this;\n      if (this.touchParams.itemIsDragging) {\n        return;\n      }\n      var item = this.touchParams.item || null;\n      var me = this;\n      var props;\n      if (item && (item.selected || this.options.itemsAlwaysDraggable.item)) {\n        if (this.options.editable.overrideItems && !this.options.editable.updateTime && !this.options.editable.updateGroup) {\n          return;\n        }\n\n        // override options.editable\n        if (item.editable != null && !item.editable.updateTime && !item.editable.updateGroup && !this.options.editable.overrideItems) {\n          return;\n        }\n        var dragLeftItem = this.touchParams.dragLeftItem;\n        var dragRightItem = this.touchParams.dragRightItem;\n        this.touchParams.itemIsDragging = true;\n        this.touchParams.selectedItem = item;\n        if (dragLeftItem) {\n          props = {\n            item: dragLeftItem,\n            initialX: event.center.x,\n            dragLeft: true,\n            data: this._cloneItemData(item.data)\n          };\n          this.touchParams.itemProps = [props];\n        } else if (dragRightItem) {\n          props = {\n            item: dragRightItem,\n            initialX: event.center.x,\n            dragRight: true,\n            data: this._cloneItemData(item.data)\n          };\n          this.touchParams.itemProps = [props];\n        } else if (this.options.editable.add && (event.srcEvent.ctrlKey || event.srcEvent.metaKey)) {\n          // create a new range item when dragging with ctrl key down\n          this._onDragStartAddItem(event);\n        } else {\n          if (this.groupIds.length < 1) {\n            // Mitigates a race condition if _onDragStart() is\n            // called after markDirty() without redraw() being called between.\n            this.redraw();\n          }\n          var baseGroupIndex = this._getGroupIndex(item.data.group);\n          var itemsToDrag = this.options.itemsAlwaysDraggable.item && !item.selected ? [item.id] : this.getSelection();\n          this.touchParams.itemProps = _mapInstanceProperty(itemsToDrag).call(itemsToDrag, function (id) {\n            var item = me.items[id];\n            var groupIndex = me._getGroupIndex(item.data.group);\n            return {\n              item: item,\n              initialX: event.center.x,\n              groupOffset: baseGroupIndex - groupIndex,\n              data: _this8._cloneItemData(item.data)\n            };\n          });\n        }\n        event.stopPropagation();\n      } else if (this.options.editable.add && (event.srcEvent.ctrlKey || event.srcEvent.metaKey)) {\n        // create a new range item when dragging with ctrl key down\n        this._onDragStartAddItem(event);\n      }\n    }\n\n    /**\n     * Start creating a new range item by dragging.\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onDragStartAddItem\",\n    value: function _onDragStartAddItem(event) {\n      var snap = this.options.snap || null;\n      var frameRect = this.dom.frame.getBoundingClientRect();\n\n      // plus (if rtl) 10 to compensate for the drag starting as soon as you've moved 10px\n      var x = this.options.rtl ? frameRect.right - event.center.x + 10 : event.center.x - frameRect.left - 10;\n      var time = this.body.util.toTime(x);\n      var scale = this.body.util.getScale();\n      var step = this.body.util.getStep();\n      var start = snap ? snap(time, scale, step) : time;\n      var end = start;\n      var itemData = {\n        type: 'range',\n        start: start,\n        end: end,\n        content: 'new item'\n      };\n      var id = v4();\n      itemData[this.itemsData.idProp] = id;\n      var group = this.groupFromTarget(event);\n      if (group) {\n        itemData.group = group.groupId;\n      }\n      var newItem = new RangeItem(itemData, this.conversion, this.options);\n      newItem.id = id; // TODO: not so nice setting id afterwards\n      newItem.data = this._cloneItemData(itemData);\n      this._addItem(newItem);\n      this.touchParams.selectedItem = newItem;\n      var props = {\n        item: newItem,\n        initialX: event.center.x,\n        data: newItem.data\n      };\n      if (this.options.rtl) {\n        props.dragLeft = true;\n      } else {\n        props.dragRight = true;\n      }\n      this.touchParams.itemProps = [props];\n      event.stopPropagation();\n    }\n\n    /**\n     * Drag selected items\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onDrag\",\n    value: function _onDrag(event) {\n      var _this9 = this;\n      if (this.popup != null && this.options.showTooltips && !this.popup.hidden) {\n        // this.popup.hide();\n        var container = this.body.dom.centerContainer;\n        var containerRect = container.getBoundingClientRect();\n        this.popup.setPosition(event.center.x - containerRect.left + container.offsetLeft, event.center.y - containerRect.top + container.offsetTop);\n        this.popup.show(); // redraw\n      }\n\n      if (this.touchParams.itemProps) {\n        var _context29;\n        event.stopPropagation();\n        var me = this;\n        var snap = this.options.snap || null;\n        var domRootOffsetLeft = this.body.dom.root.offsetLeft;\n        var xOffset = this.options.rtl ? domRootOffsetLeft + this.body.domProps.right.width : domRootOffsetLeft + this.body.domProps.left.width;\n        var scale = this.body.util.getScale();\n        var step = this.body.util.getStep();\n\n        //only calculate the new group for the item that's actually dragged\n        var selectedItem = this.touchParams.selectedItem;\n        var updateGroupAllowed = (this.options.editable.overrideItems || selectedItem.editable == null) && this.options.editable.updateGroup || !this.options.editable.overrideItems && selectedItem.editable != null && selectedItem.editable.updateGroup;\n        var newGroupBase = null;\n        if (updateGroupAllowed && selectedItem) {\n          if (selectedItem.data.group != undefined) {\n            // drag from one group to another\n            var group = me.groupFromTarget(event);\n            if (group) {\n              //we know the offset for all items, so the new group for all items\n              //will be relative to this one.\n              newGroupBase = this._getGroupIndex(group.groupId);\n            }\n          }\n        }\n\n        // move\n        _forEachInstanceProperty(_context29 = this.touchParams.itemProps).call(_context29, function (props) {\n          var current = me.body.util.toTime(event.center.x - xOffset);\n          var initial = me.body.util.toTime(props.initialX - xOffset);\n          var offset;\n          var initialStart;\n          var initialEnd;\n          var start;\n          var end;\n          if (_this9.options.rtl) {\n            offset = -(current - initial); // ms\n          } else {\n            offset = current - initial; // ms\n          }\n\n          var itemData = _this9._cloneItemData(props.item.data); // clone the data\n          if (props.item.editable != null && !props.item.editable.updateTime && !props.item.editable.updateGroup && !me.options.editable.overrideItems) {\n            return;\n          }\n          var updateTimeAllowed = (_this9.options.editable.overrideItems || selectedItem.editable == null) && _this9.options.editable.updateTime || !_this9.options.editable.overrideItems && selectedItem.editable != null && selectedItem.editable.updateTime;\n          if (updateTimeAllowed) {\n            if (props.dragLeft) {\n              // drag left side of a range item\n              if (_this9.options.rtl) {\n                if (itemData.end != undefined) {\n                  initialEnd = availableUtils.convert(props.data.end, 'Date');\n                  end = new Date(initialEnd.valueOf() + offset);\n                  // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                  itemData.end = snap ? snap(end, scale, step) : end;\n                }\n              } else {\n                if (itemData.start != undefined) {\n                  initialStart = availableUtils.convert(props.data.start, 'Date');\n                  start = new Date(initialStart.valueOf() + offset);\n                  // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                  itemData.start = snap ? snap(start, scale, step) : start;\n                }\n              }\n            } else if (props.dragRight) {\n              // drag right side of a range item\n              if (_this9.options.rtl) {\n                if (itemData.start != undefined) {\n                  initialStart = availableUtils.convert(props.data.start, 'Date');\n                  start = new Date(initialStart.valueOf() + offset);\n                  // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                  itemData.start = snap ? snap(start, scale, step) : start;\n                }\n              } else {\n                if (itemData.end != undefined) {\n                  initialEnd = availableUtils.convert(props.data.end, 'Date');\n                  end = new Date(initialEnd.valueOf() + offset);\n                  // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                  itemData.end = snap ? snap(end, scale, step) : end;\n                }\n              }\n            } else {\n              // drag both start and end\n              if (itemData.start != undefined) {\n                initialStart = availableUtils.convert(props.data.start, 'Date').valueOf();\n                start = new Date(initialStart + offset);\n                if (itemData.end != undefined) {\n                  initialEnd = availableUtils.convert(props.data.end, 'Date');\n                  var duration = initialEnd.valueOf() - initialStart.valueOf();\n\n                  // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                  itemData.start = snap ? snap(start, scale, step) : start;\n                  itemData.end = new Date(itemData.start.valueOf() + duration);\n                } else {\n                  // TODO: pass a Moment instead of a Date to snap(). (Breaking change)\n                  itemData.start = snap ? snap(start, scale, step) : start;\n                }\n              }\n            }\n          }\n          if (updateGroupAllowed && !props.dragLeft && !props.dragRight && newGroupBase != null) {\n            if (itemData.group != undefined) {\n              var newOffset = newGroupBase - props.groupOffset;\n\n              //make sure we stay in bounds\n              newOffset = Math.max(0, newOffset);\n              newOffset = Math.min(me.groupIds.length - 1, newOffset);\n              itemData.group = me.groupIds[newOffset];\n            }\n          }\n\n          // confirm moving the item\n          itemData = _this9._cloneItemData(itemData); // convert start and end to the correct type\n          me.options.onMoving(itemData, function (itemData) {\n            if (itemData) {\n              props.item.setData(_this9._cloneItemData(itemData, 'Date'));\n            }\n          });\n        });\n        this.body.emitter.emit('_change');\n      }\n    }\n\n    /**\n     * Move an item to another group\n     * @param {Item} item\n     * @param {string | number} groupId\n     * @private\n     */\n  }, {\n    key: \"_moveToGroup\",\n    value: function _moveToGroup(item, groupId) {\n      var group = this.groups[groupId];\n      if (group && group.groupId != item.data.group) {\n        var oldGroup = item.parent;\n        oldGroup.remove(item);\n        oldGroup.order();\n        item.data.group = group.groupId;\n        group.add(item);\n        group.order();\n      }\n    }\n\n    /**\n     * End of dragging selected items\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onDragEnd\",\n    value: function _onDragEnd(event) {\n      var _this10 = this;\n      this.touchParams.itemIsDragging = false;\n      if (this.touchParams.itemProps) {\n        event.stopPropagation();\n        var me = this;\n        var itemProps = this.touchParams.itemProps;\n        this.touchParams.itemProps = null;\n        _forEachInstanceProperty(itemProps).call(itemProps, function (props) {\n          var id = props.item.id;\n          var exists = me.itemsData.get(id) != null;\n          if (!exists) {\n            // add a new item\n            me.options.onAdd(props.item.data, function (itemData) {\n              me._removeItem(props.item); // remove temporary item\n              if (itemData) {\n                me.itemsData.add(itemData);\n              }\n\n              // force re-stacking of all items next redraw\n              me.body.emitter.emit('_change');\n            });\n          } else {\n            // update existing item\n            var itemData = _this10._cloneItemData(props.item.data); // convert start and end to the correct type\n            me.options.onMove(itemData, function (itemData) {\n              if (itemData) {\n                // apply changes\n                itemData[_this10.itemsData.idProp] = id; // ensure the item contains its id (can be undefined)\n                _this10.itemsData.update(itemData);\n              } else {\n                // restore original values\n                props.item.setData(props.data);\n                me.body.emitter.emit('_change');\n              }\n            });\n          }\n        });\n      }\n    }\n\n    /**\n     * On group click\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onGroupClick\",\n    value: function _onGroupClick(event) {\n      var _this11 = this;\n      var group = this.groupFromTarget(event);\n      _setTimeout(function () {\n        _this11.toggleGroupShowNested(group);\n      }, 1);\n    }\n\n    /**\n     * Toggle show nested\n     * @param {object} group\n     * @param {boolean} force\n     */\n  }, {\n    key: \"toggleGroupShowNested\",\n    value: function toggleGroupShowNested(group) {\n      var force = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : undefined;\n      if (!group || !group.nestedGroups) return;\n      var groupsData = this.groupsData.getDataSet();\n      if (force != undefined) {\n        group.showNested = !!force;\n      } else {\n        group.showNested = !group.showNested;\n      }\n      var nestingGroup = groupsData.get(group.groupId);\n      nestingGroup.showNested = group.showNested;\n      var fullNestedGroups = group.nestedGroups;\n      var nextLevel = fullNestedGroups;\n      while (nextLevel.length > 0) {\n        var current = nextLevel;\n        nextLevel = [];\n        for (var i = 0; i < current.length; i++) {\n          var node = groupsData.get(current[i]);\n          if (node.nestedGroups) {\n            nextLevel = _concatInstanceProperty(nextLevel).call(nextLevel, node.nestedGroups);\n          }\n        }\n        if (nextLevel.length > 0) {\n          fullNestedGroups = _concatInstanceProperty(fullNestedGroups).call(fullNestedGroups, nextLevel);\n        }\n      }\n      var nestedGroups;\n      if (nestingGroup.showNested) {\n        var showNestedGroups = groupsData.get(nestingGroup.nestedGroups);\n        for (var _i = 0; _i < showNestedGroups.length; _i++) {\n          var _group = showNestedGroups[_i];\n          if (_group.nestedGroups && _group.nestedGroups.length > 0 && (_group.showNested == undefined || _group.showNested == true)) {\n            showNestedGroups.push.apply(showNestedGroups, _toConsumableArray(groupsData.get(_group.nestedGroups)));\n          }\n        }\n        nestedGroups = _mapInstanceProperty(showNestedGroups).call(showNestedGroups, function (nestedGroup) {\n          if (nestedGroup.visible == undefined) {\n            nestedGroup.visible = true;\n          }\n          nestedGroup.visible = !!nestingGroup.showNested;\n          return nestedGroup;\n        });\n      } else {\n        var _context30;\n        nestedGroups = _mapInstanceProperty(_context30 = groupsData.get(fullNestedGroups)).call(_context30, function (nestedGroup) {\n          if (nestedGroup.visible == undefined) {\n            nestedGroup.visible = true;\n          }\n          nestedGroup.visible = !!nestingGroup.showNested;\n          return nestedGroup;\n        });\n      }\n      groupsData.update(_concatInstanceProperty(nestedGroups).call(nestedGroups, nestingGroup));\n      if (nestingGroup.showNested) {\n        availableUtils.removeClassName(group.dom.label, 'collapsed');\n        availableUtils.addClassName(group.dom.label, 'expanded');\n      } else {\n        availableUtils.removeClassName(group.dom.label, 'expanded');\n        availableUtils.addClassName(group.dom.label, 'collapsed');\n      }\n    }\n\n    /**\n     * Toggle group drag classname\n     * @param {object} group\n     */\n  }, {\n    key: \"toggleGroupDragClassName\",\n    value: function toggleGroupDragClassName(group) {\n      group.dom.label.classList.toggle('vis-group-is-dragging');\n      group.dom.foreground.classList.toggle('vis-group-is-dragging');\n    }\n\n    /**\n     * on drag start\n     * @param {Event} event\n     * @return {void}   \n     * @private\n     */\n  }, {\n    key: \"_onGroupDragStart\",\n    value: function _onGroupDragStart(event) {\n      if (this.groupTouchParams.isDragging) return;\n      if (this.options.groupEditable.order) {\n        this.groupTouchParams.group = this.groupFromTarget(event);\n        if (this.groupTouchParams.group) {\n          event.stopPropagation();\n          this.groupTouchParams.isDragging = true;\n          this.toggleGroupDragClassName(this.groupTouchParams.group);\n          this.groupTouchParams.originalOrder = this.groupsData.getIds({\n            order: this.options.groupOrder\n          });\n        }\n      }\n    }\n\n    /**\n     * on drag\n     * @param {Event} event\n     * @return {void}\n     * @private\n     */\n  }, {\n    key: \"_onGroupDrag\",\n    value: function _onGroupDrag(event) {\n      if (this.options.groupEditable.order && this.groupTouchParams.group) {\n        event.stopPropagation();\n        var groupsData = this.groupsData.getDataSet();\n        // drag from one group to another\n        var group = this.groupFromTarget(event);\n\n        // try to avoid toggling when groups differ in height\n        if (group && group.height != this.groupTouchParams.group.height) {\n          var movingUp = group.top < this.groupTouchParams.group.top;\n          var clientY = event.center ? event.center.y : event.clientY;\n          var targetGroup = group.dom.foreground.getBoundingClientRect();\n          var draggedGroupHeight = this.groupTouchParams.group.height;\n          if (movingUp) {\n            // skip swapping the groups when the dragged group is not below clientY afterwards\n            if (targetGroup.top + draggedGroupHeight < clientY) {\n              return;\n            }\n          } else {\n            var targetGroupHeight = group.height;\n            // skip swapping the groups when the dragged group is not below clientY afterwards\n            if (targetGroup.top + targetGroupHeight - draggedGroupHeight > clientY) {\n              return;\n            }\n          }\n        }\n        if (group && group != this.groupTouchParams.group) {\n          var _targetGroup = groupsData.get(group.groupId);\n          var draggedGroup = groupsData.get(this.groupTouchParams.group.groupId);\n\n          // switch groups\n          if (draggedGroup && _targetGroup) {\n            this.options.groupOrderSwap(draggedGroup, _targetGroup, groupsData);\n            groupsData.update(draggedGroup);\n            groupsData.update(_targetGroup);\n          }\n\n          // fetch current order of groups\n          var newOrder = groupsData.getIds({\n            order: this.options.groupOrder\n          });\n\n          // in case of changes since _onGroupDragStart\n          if (!availableUtils.equalArray(newOrder, this.groupTouchParams.originalOrder)) {\n            var origOrder = this.groupTouchParams.originalOrder;\n            var draggedId = this.groupTouchParams.group.groupId;\n            var numGroups = Math.min(origOrder.length, newOrder.length);\n            var curPos = 0;\n            var newOffset = 0;\n            var orgOffset = 0;\n            while (curPos < numGroups) {\n              // as long as the groups are where they should be step down along the groups order\n              while (curPos + newOffset < numGroups && curPos + orgOffset < numGroups && newOrder[curPos + newOffset] == origOrder[curPos + orgOffset]) {\n                curPos++;\n              }\n\n              // all ok\n              if (curPos + newOffset >= numGroups) {\n                break;\n              }\n\n              // not all ok\n              // if dragged group was move upwards everything below should have an offset\n              if (newOrder[curPos + newOffset] == draggedId) {\n                newOffset = 1;\n              }\n              // if dragged group was move downwards everything above should have an offset\n              else if (origOrder[curPos + orgOffset] == draggedId) {\n                orgOffset = 1;\n              }\n              // found a group (apart from dragged group) that has the wrong position -> switch with the \n              // group at the position where other one should be, fix index arrays and continue\n              else {\n                var slippedPosition = _indexOfInstanceProperty(newOrder).call(newOrder, origOrder[curPos + orgOffset]);\n                var switchGroup = groupsData.get(newOrder[curPos + newOffset]);\n                var shouldBeGroup = groupsData.get(origOrder[curPos + orgOffset]);\n                this.options.groupOrderSwap(switchGroup, shouldBeGroup, groupsData);\n                groupsData.update(switchGroup);\n                groupsData.update(shouldBeGroup);\n                var switchGroupId = newOrder[curPos + newOffset];\n                newOrder[curPos + newOffset] = origOrder[curPos + orgOffset];\n                newOrder[slippedPosition] = switchGroupId;\n                curPos++;\n              }\n            }\n          }\n        }\n      }\n    }\n\n    /**\n     * on drag end\n     * @param {Event} event\n     * @return {void}\n     * @private\n     */\n  }, {\n    key: \"_onGroupDragEnd\",\n    value: function _onGroupDragEnd(event) {\n      this.groupTouchParams.isDragging = false;\n      if (this.options.groupEditable.order && this.groupTouchParams.group) {\n        event.stopPropagation();\n\n        // update existing group\n        var me = this;\n        var id = me.groupTouchParams.group.groupId;\n        var dataset = me.groupsData.getDataSet();\n        var groupData = availableUtils.extend({}, dataset.get(id)); // clone the data\n        me.options.onMoveGroup(groupData, function (groupData) {\n          if (groupData) {\n            // apply changes\n            groupData[dataset._idProp] = id; // ensure the group contains its id (can be undefined)\n            dataset.update(groupData);\n          } else {\n            // fetch current order of groups\n            var newOrder = dataset.getIds({\n              order: me.options.groupOrder\n            });\n\n            // restore original order\n            if (!availableUtils.equalArray(newOrder, me.groupTouchParams.originalOrder)) {\n              var origOrder = me.groupTouchParams.originalOrder;\n              var numGroups = Math.min(origOrder.length, newOrder.length);\n              var curPos = 0;\n              while (curPos < numGroups) {\n                // as long as the groups are where they should be step down along the groups order\n                while (curPos < numGroups && newOrder[curPos] == origOrder[curPos]) {\n                  curPos++;\n                }\n\n                // all ok\n                if (curPos >= numGroups) {\n                  break;\n                }\n\n                // found a group that has the wrong position -> switch with the\n                // group at the position where other one should be, fix index arrays and continue\n                var slippedPosition = _indexOfInstanceProperty(newOrder).call(newOrder, origOrder[curPos]);\n                var switchGroup = dataset.get(newOrder[curPos]);\n                var shouldBeGroup = dataset.get(origOrder[curPos]);\n                me.options.groupOrderSwap(switchGroup, shouldBeGroup, dataset);\n                dataset.update(switchGroup);\n                dataset.update(shouldBeGroup);\n                var switchGroupId = newOrder[curPos];\n                newOrder[curPos] = origOrder[curPos];\n                newOrder[slippedPosition] = switchGroupId;\n                curPos++;\n              }\n            }\n          }\n        });\n        me.body.emitter.emit('groupDragged', {\n          groupId: id\n        });\n        this.toggleGroupDragClassName(this.groupTouchParams.group);\n        this.groupTouchParams.group = null;\n      }\n    }\n\n    /**\n     * Handle selecting/deselecting an item when tapping it\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onSelectItem\",\n    value: function _onSelectItem(event) {\n      if (!this.options.selectable) return;\n      var ctrlKey = event.srcEvent && (event.srcEvent.ctrlKey || event.srcEvent.metaKey);\n      var shiftKey = event.srcEvent && event.srcEvent.shiftKey;\n      if (ctrlKey || shiftKey) {\n        this._onMultiSelectItem(event);\n        return;\n      }\n      var oldSelection = this.getSelection();\n      var item = this.itemFromTarget(event);\n      var selection = item && item.selectable ? [item.id] : [];\n      this.setSelection(selection);\n      var newSelection = this.getSelection();\n\n      // emit a select event,\n      // except when old selection is empty and new selection is still empty\n      if (newSelection.length > 0 || oldSelection.length > 0) {\n        this.body.emitter.emit('select', {\n          items: newSelection,\n          event: event\n        });\n      }\n    }\n\n    /**\n     * Handle hovering an item\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onMouseOver\",\n    value: function _onMouseOver(event) {\n      var item = this.itemFromTarget(event);\n      if (!item) return;\n\n      // Item we just left\n      var related = this.itemFromRelatedTarget(event);\n      if (item === related) {\n        // We haven't changed item, just element in the item\n        return;\n      }\n      var title = item.getTitle();\n      if (this.options.showTooltips && title) {\n        if (this.popup == null) {\n          this.popup = new Popup(this.body.dom.root, this.options.tooltip.overflowMethod || 'flip');\n        }\n        this.popup.setText(title);\n        var container = this.body.dom.centerContainer;\n        var containerRect = container.getBoundingClientRect();\n        this.popup.setPosition(event.clientX - containerRect.left + container.offsetLeft, event.clientY - containerRect.top + container.offsetTop);\n        this.setPopupTimer(this.popup);\n      } else {\n        // Hovering over item without a title, hide popup\n        // Needed instead of _just_ in _onMouseOut due to #2572\n        this.clearPopupTimer();\n        if (this.popup != null) {\n          this.popup.hide();\n        }\n      }\n      this.body.emitter.emit('itemover', {\n        item: item.id,\n        event: event\n      });\n    }\n\n    /**\n     * on mouse start\n     * @param {Event} event\n     * @return {void}   \n     * @private\n     */\n  }, {\n    key: \"_onMouseOut\",\n    value: function _onMouseOut(event) {\n      var item = this.itemFromTarget(event);\n      if (!item) return;\n\n      // Item we are going to\n      var related = this.itemFromRelatedTarget(event);\n      if (item === related) {\n        // We aren't changing item, just element in the item\n        return;\n      }\n      this.clearPopupTimer();\n      if (this.popup != null) {\n        this.popup.hide();\n      }\n      this.body.emitter.emit('itemout', {\n        item: item.id,\n        event: event\n      });\n    }\n\n    /**\n     * on mouse move\n     * @param {Event} event\n     * @return {void}   \n     * @private\n     */\n  }, {\n    key: \"_onMouseMove\",\n    value: function _onMouseMove(event) {\n      var item = this.itemFromTarget(event);\n      if (!item) return;\n      if (this.popupTimer != null) {\n        // restart timer\n        this.setPopupTimer(this.popup);\n      }\n      if (this.options.showTooltips && this.options.tooltip.followMouse && this.popup && !this.popup.hidden) {\n        var container = this.body.dom.centerContainer;\n        var containerRect = container.getBoundingClientRect();\n        this.popup.setPosition(event.clientX - containerRect.left + container.offsetLeft, event.clientY - containerRect.top + container.offsetTop);\n        this.popup.show(); // Redraw\n      }\n    }\n\n    /**\n     * Handle mousewheel\n     * @param {Event}  event   The event\n     * @private\n     */\n  }, {\n    key: \"_onMouseWheel\",\n    value: function _onMouseWheel(event) {\n      if (this.touchParams.itemIsDragging) {\n        this._onDragEnd(event);\n      }\n    }\n\n    /**\n     * Handle updates of an item on double tap\n     * @param {timeline.Item}  item   The item\n     * @private\n     */\n  }, {\n    key: \"_onUpdateItem\",\n    value: function _onUpdateItem(item) {\n      if (!this.options.selectable) return;\n      if (!this.options.editable.updateTime && !this.options.editable.updateGroup) return;\n      var me = this;\n      if (item) {\n        // execute async handler to update the item (or cancel it)\n        var itemData = me.itemsData.get(item.id); // get a clone of the data from the dataset\n        this.options.onUpdate(itemData, function (itemData) {\n          if (itemData) {\n            me.itemsData.update(itemData);\n          }\n        });\n      }\n    }\n\n    /**\n     * Handle drop event of data on item\n     * Only called when `objectData.target === 'item'.\n     * @param {Event} event The event \n     * @private\n     */\n  }, {\n    key: \"_onDropObjectOnItem\",\n    value: function _onDropObjectOnItem(event) {\n      var item = this.itemFromTarget(event);\n      var objectData = JSON.parse(event.dataTransfer.getData(\"text\"));\n      this.options.onDropObjectOnItem(objectData, item);\n    }\n\n    /**\n     * Handle creation of an item on double tap or drop of a drag event\n     * @param {Event} event   The event\n     * @private\n     */\n  }, {\n    key: \"_onAddItem\",\n    value: function _onAddItem(event) {\n      if (!this.options.selectable) return;\n      if (!this.options.editable.add) return;\n      var me = this;\n      var snap = this.options.snap || null;\n\n      // add item\n      var frameRect = this.dom.frame.getBoundingClientRect();\n      var x = this.options.rtl ? frameRect.right - event.center.x : event.center.x - frameRect.left;\n      var start = this.body.util.toTime(x);\n      var scale = this.body.util.getScale();\n      var step = this.body.util.getStep();\n      var end;\n      var newItemData;\n      if (event.type == 'drop') {\n        newItemData = JSON.parse(event.dataTransfer.getData(\"text\"));\n        newItemData.content = newItemData.content ? newItemData.content : 'new item';\n        newItemData.start = newItemData.start ? newItemData.start : snap ? snap(start, scale, step) : start;\n        newItemData.type = newItemData.type || 'box';\n        newItemData[this.itemsData.idProp] = newItemData.id || v4();\n        if (newItemData.type == 'range' && !newItemData.end) {\n          end = this.body.util.toTime(x + this.props.width / 5);\n          newItemData.end = snap ? snap(end, scale, step) : end;\n        }\n      } else {\n        newItemData = {\n          start: snap ? snap(start, scale, step) : start,\n          content: 'new item'\n        };\n        newItemData[this.itemsData.idProp] = v4();\n\n        // when default type is a range, add a default end date to the new item\n        if (this.options.type === 'range') {\n          end = this.body.util.toTime(x + this.props.width / 5);\n          newItemData.end = snap ? snap(end, scale, step) : end;\n        }\n      }\n      var group = this.groupFromTarget(event);\n      if (group) {\n        newItemData.group = group.groupId;\n      }\n\n      // execute async handler to customize (or cancel) adding an item\n      newItemData = this._cloneItemData(newItemData); // convert start and end to the correct type\n      this.options.onAdd(newItemData, function (item) {\n        if (item) {\n          me.itemsData.add(item);\n          if (event.type == 'drop') {\n            me.setSelection([item.id]);\n          }\n          // TODO: need to trigger a redraw?\n        }\n      });\n    }\n\n    /**\n     * Handle selecting/deselecting multiple items when holding an item\n     * @param {Event} event\n     * @private\n     */\n  }, {\n    key: \"_onMultiSelectItem\",\n    value: function _onMultiSelectItem(event) {\n      var _this12 = this;\n      if (!this.options.selectable) return;\n      var item = this.itemFromTarget(event);\n      if (item) {\n        // multi select items (if allowed)\n\n        var selection = this.options.multiselect ? this.getSelection() // take current selection\n        : []; // deselect current selection\n\n        var shiftKey = event.srcEvent && event.srcEvent.shiftKey || false;\n        if ((shiftKey || this.options.sequentialSelection) && this.options.multiselect) {\n          // select all items between the old selection and the tapped item\n          var itemGroup = this.itemsData.get(item.id).group;\n\n          // when filtering get the group of the last selected item\n          var lastSelectedGroup = undefined;\n          if (this.options.multiselectPerGroup) {\n            if (selection.length > 0) {\n              lastSelectedGroup = this.itemsData.get(selection[0]).group;\n            }\n          }\n\n          // determine the selection range\n          if (!this.options.multiselectPerGroup || lastSelectedGroup == undefined || lastSelectedGroup == itemGroup) {\n            selection.push(item.id);\n          }\n          var range = ItemSet._getItemRange(this.itemsData.get(selection));\n          if (!this.options.multiselectPerGroup || lastSelectedGroup == itemGroup) {\n            // select all items within the selection range\n            selection = [];\n            for (var id in this.items) {\n              if (this.items.hasOwnProperty(id)) {\n                var _item = this.items[id];\n                var start = _item.data.start;\n                var end = _item.data.end !== undefined ? _item.data.end : start;\n                if (start >= range.min && end <= range.max && (!this.options.multiselectPerGroup || lastSelectedGroup == this.itemsData.get(_item.id).group) && !(_item instanceof BackgroundItem)) {\n                  selection.push(_item.id); // do not use id but item.id, id itself is stringified\n                }\n              }\n            }\n          }\n        } else {\n          // add/remove this item from the current selection\n          var index = _indexOfInstanceProperty(selection).call(selection, item.id);\n          if (index == -1) {\n            // item is not yet selected -> select it\n            selection.push(item.id);\n          } else {\n            // item is already selected -> deselect it\n            _spliceInstanceProperty(selection).call(selection, index, 1);\n          }\n        }\n        var filteredSelection = _filterInstanceProperty(selection).call(selection, function (item) {\n          return _this12.getItemById(item).selectable;\n        });\n        this.setSelection(filteredSelection);\n        this.body.emitter.emit('select', {\n          items: this.getSelection(),\n          event: event\n        });\n      }\n    }\n\n    /**\n     * Calculate the time range of a list of items\n     * @param {Array.<Object>} itemsData\n     * @return {{min: Date, max: Date}} Returns the range of the provided items\n     * @private\n     */\n  }, {\n    key: \"itemFromElement\",\n    value:\n    /**\n     * Find an item from an element:\n     * searches for the attribute 'vis-item' in the element's tree\n     * @param {HTMLElement} element\n     * @return {Item | null} item\n     */\n    function itemFromElement(element) {\n      var cur = element;\n      while (cur) {\n        if (cur.hasOwnProperty('vis-item')) {\n          return cur['vis-item'];\n        }\n        cur = cur.parentNode;\n      }\n      return null;\n    }\n\n    /**\n     * Find an item from an event target:\n     * searches for the attribute 'vis-item' in the event target's element tree\n     * @param {Event} event\n     * @return {Item | null} item\n     */\n  }, {\n    key: \"itemFromTarget\",\n    value: function itemFromTarget(event) {\n      return this.itemFromElement(event.target);\n    }\n\n    /**\n     * Find an item from an event's related target:\n     * searches for the attribute 'vis-item' in the related target's element tree\n     * @param {Event} event\n     * @return {Item | null} item\n     */\n  }, {\n    key: \"itemFromRelatedTarget\",\n    value: function itemFromRelatedTarget(event) {\n      return this.itemFromElement(event.relatedTarget);\n    }\n\n    /**\n     * Find the Group from an event target:\n     * searches for the attribute 'vis-group' in the event target's element tree\n     * @param {Event} event\n     * @return {Group | null} group\n     */\n  }, {\n    key: \"groupFromTarget\",\n    value: function groupFromTarget(event) {\n      var clientY = event.center ? event.center.y : event.clientY;\n      var groupIds = this.groupIds;\n      if (groupIds.length <= 0 && this.groupsData) {\n        groupIds = this.groupsData.getIds({\n          order: this.options.groupOrder\n        });\n      }\n      for (var i = 0; i < groupIds.length; i++) {\n        var groupId = groupIds[i];\n        var group = this.groups[groupId];\n        var foreground = group.dom.foreground;\n        var foregroundRect = foreground.getBoundingClientRect();\n        if (clientY >= foregroundRect.top && clientY < foregroundRect.top + foreground.offsetHeight) {\n          return group;\n        }\n        if (this.options.orientation.item === 'top') {\n          if (i === this.groupIds.length - 1 && clientY > foregroundRect.top) {\n            return group;\n          }\n        } else {\n          if (i === 0 && clientY < foregroundRect.top + foreground.offset) {\n            return group;\n          }\n        }\n      }\n      return null;\n    }\n\n    /**\n     * Find the ItemSet from an event target:\n     * searches for the attribute 'vis-itemset' in the event target's element tree\n     * @param {Event} event\n     * @return {ItemSet | null} item\n     */\n  }, {\n    key: \"_cloneItemData\",\n    value:\n    /**\n     * Clone the data of an item, and \"normalize\" it: convert the start and end date\n     * to the type (Date, Moment, ...) configured in the DataSet. If not configured,\n     * start and end are converted to Date.\n     * @param {Object} itemData, typically `item.data`\n     * @param {string} [type]  Optional Date type. If not provided, the type from the DataSet is taken\n     * @return {Object} The cloned object\n     * @private\n     */\n    function _cloneItemData(itemData, type) {\n      var clone = availableUtils.extend({}, itemData);\n      if (!type) {\n        // convert start and end date to the type (Date, Moment, ...) configured in the DataSet\n        type = this.itemsData.type;\n      }\n      if (clone.start != undefined) {\n        clone.start = availableUtils.convert(clone.start, type && type.start || 'Date');\n      }\n      if (clone.end != undefined) {\n        clone.end = availableUtils.convert(clone.end, type && type.end || 'Date');\n      }\n      return clone;\n    }\n\n    /**\n     * cluster items\n     * @return {void}   \n     * @private\n     */\n  }, {\n    key: \"_clusterItems\",\n    value: function _clusterItems() {\n      if (!this.options.cluster) {\n        return;\n      }\n      var _this$body$range$conv = this.body.range.conversion(this.body.domProps.center.width),\n        scale = _this$body$range$conv.scale;\n      var clusters = this.clusterGenerator.getClusters(this.clusters, scale, this.options.cluster);\n      if (this.clusters != clusters) {\n        this._detachAllClusters();\n        if (clusters) {\n          var _iterator5 = _createForOfIteratorHelper$1(clusters),\n            _step5;\n          try {\n            for (_iterator5.s(); !(_step5 = _iterator5.n()).done;) {\n              var cluster = _step5.value;\n              cluster.attach();\n            }\n          } catch (err) {\n            _iterator5.e(err);\n          } finally {\n            _iterator5.f();\n          }\n          this.clusters = clusters;\n        }\n        this._updateClusters(clusters);\n      }\n    }\n\n    /**\n     * detach all cluster items\n     * @private\n     */\n  }, {\n    key: \"_detachAllClusters\",\n    value: function _detachAllClusters() {\n      if (this.options.cluster) {\n        if (this.clusters && this.clusters.length) {\n          var _iterator6 = _createForOfIteratorHelper$1(this.clusters),\n            _step6;\n          try {\n            for (_iterator6.s(); !(_step6 = _iterator6.n()).done;) {\n              var cluster = _step6.value;\n              cluster.detach();\n            }\n          } catch (err) {\n            _iterator6.e(err);\n          } finally {\n            _iterator6.f();\n          }\n        }\n      }\n    }\n\n    /**\n     * update clusters\n     * @param {array} clusters\n     * @private\n     */\n  }, {\n    key: \"_updateClusters\",\n    value: function _updateClusters(clusters) {\n      if (this.clusters && this.clusters.length) {\n        var _context31;\n        var newClustersIds = new _Set(_mapInstanceProperty(clusters).call(clusters, function (cluster) {\n          return cluster.id;\n        }));\n        var clustersToUnselect = _filterInstanceProperty(_context31 = this.clusters).call(_context31, function (cluster) {\n          return !newClustersIds.has(cluster.id);\n        });\n        var selectionChanged = false;\n        var _iterator7 = _createForOfIteratorHelper$1(clustersToUnselect),\n          _step7;\n        try {\n          for (_iterator7.s(); !(_step7 = _iterator7.n()).done;) {\n            var _context32;\n            var cluster = _step7.value;\n            var selectedIdx = _indexOfInstanceProperty(_context32 = this.selection).call(_context32, cluster.id);\n            if (selectedIdx !== -1) {\n              var _context33;\n              cluster.unselect();\n              _spliceInstanceProperty(_context33 = this.selection).call(_context33, selectedIdx, 1);\n              selectionChanged = true;\n            }\n          }\n        } catch (err) {\n          _iterator7.e(err);\n        } finally {\n          _iterator7.f();\n        }\n        if (selectionChanged) {\n          var newSelection = this.getSelection();\n          this.body.emitter.emit('select', {\n            items: newSelection,\n            event: event\n          });\n        }\n      }\n      this.clusters = clusters || [];\n    }\n  }], [{\n    key: \"_getItemRange\",\n    value: function _getItemRange(itemsData) {\n      var max = null;\n      var min = null;\n      _forEachInstanceProperty(itemsData).call(itemsData, function (data) {\n        if (min == null || data.start < min) {\n          min = data.start;\n        }\n        if (data.end != undefined) {\n          if (max == null || data.end > max) {\n            max = data.end;\n          }\n        } else {\n          if (max == null || data.start > max) {\n            max = data.start;\n          }\n        }\n      });\n      return {\n        min: min,\n        max: max\n      };\n    }\n  }, {\n    key: \"itemSetFromTarget\",\n    value: function itemSetFromTarget(event) {\n      var target = event.target;\n      while (target) {\n        if (target.hasOwnProperty('vis-itemset')) {\n          return target['vis-itemset'];\n        }\n        target = target.parentNode;\n      }\n      return null;\n    }\n  }]);\n  return ItemSet;\n}(Component); // available item types will be registered here\nItemSet.types = {\n  background: BackgroundItem,\n  box: BoxItem,\n  range: RangeItem,\n  point: PointItem\n};\n\n/**\n * Handle added items\n * @param {number[]} ids\n * @protected\n */\nItemSet.prototype._onAdd = ItemSet.prototype._onUpdate;\n\nvar errorFound = false;\nvar allOptions$2;\nvar printStyle = 'background: #FFeeee; color: #dd0000';\n/**\n *  Used to validate options.\n */\nvar Validator = /*#__PURE__*/function () {\n  /**\n   * @ignore\n   */\n  function Validator() {\n    _classCallCheck(this, Validator);\n  }\n\n  /**\n   * Main function to be called\n   * @param {Object} options\n   * @param {Object} referenceOptions\n   * @param {Object} subObject\n   * @returns {boolean}\n   * @static\n   */\n  _createClass(Validator, null, [{\n    key: \"validate\",\n    value: function validate(options, referenceOptions, subObject) {\n      errorFound = false;\n      allOptions$2 = referenceOptions;\n      var usedOptions = referenceOptions;\n      if (subObject !== undefined) {\n        usedOptions = referenceOptions[subObject];\n      }\n      Validator.parse(options, usedOptions, []);\n      return errorFound;\n    }\n\n    /**\n     * Will traverse an object recursively and check every value\n     * @param {Object} options\n     * @param {Object} referenceOptions\n     * @param {array} path    | where to look for the actual option\n     * @static\n     */\n  }, {\n    key: \"parse\",\n    value: function parse(options, referenceOptions, path) {\n      for (var option in options) {\n        if (options.hasOwnProperty(option)) {\n          Validator.check(option, options, referenceOptions, path);\n        }\n      }\n    }\n\n    /**\n     * Check every value. If the value is an object, call the parse function on that object.\n     * @param {string} option\n     * @param {Object} options\n     * @param {Object} referenceOptions\n     * @param {array} path    | where to look for the actual option\n     * @static\n     */\n  }, {\n    key: \"check\",\n    value: function check(option, options, referenceOptions, path) {\n      if (referenceOptions[option] === undefined && referenceOptions.__any__ === undefined) {\n        Validator.getSuggestion(option, referenceOptions, path);\n        return;\n      }\n      var referenceOption = option;\n      var is_object = true;\n      if (referenceOptions[option] === undefined && referenceOptions.__any__ !== undefined) {\n        // NOTE: This only triggers if the __any__ is in the top level of the options object.\n        //       THAT'S A REALLY BAD PLACE TO ALLOW IT!!!!\n        // TODO: Examine if needed, remove if possible\n\n        // __any__ is a wildcard. Any value is accepted and will be further analysed by reference.\n        referenceOption = '__any__';\n\n        // if the any-subgroup is not a predefined object in the configurator,\n        // we do not look deeper into the object.\n        is_object = Validator.getType(options[option]) === 'object';\n      }\n      var refOptionObj = referenceOptions[referenceOption];\n      if (is_object && refOptionObj.__type__ !== undefined) {\n        refOptionObj = refOptionObj.__type__;\n      }\n      Validator.checkFields(option, options, referenceOptions, referenceOption, refOptionObj, path);\n    }\n\n    /**\n     *\n     * @param {string}  option           | the option property\n     * @param {Object}  options          | The supplied options object\n     * @param {Object}  referenceOptions | The reference options containing all options and their allowed formats\n     * @param {string}  referenceOption  | Usually this is the same as option, except when handling an __any__ tag.\n     * @param {string}  refOptionObj     | This is the type object from the reference options\n     * @param {Array}   path             | where in the object is the option\n     * @static\n     */\n  }, {\n    key: \"checkFields\",\n    value: function checkFields(option, options, referenceOptions, referenceOption, refOptionObj, path) {\n      var log = function log(message) {\n        console.log('%c' + message + Validator.printLocation(path, option), printStyle);\n      };\n      var optionType = Validator.getType(options[option]);\n      var refOptionType = refOptionObj[optionType];\n      if (refOptionType !== undefined) {\n        // if the type is correct, we check if it is supposed to be one of a few select values\n        if (Validator.getType(refOptionType) === 'array' && _indexOfInstanceProperty(refOptionType).call(refOptionType, options[option]) === -1) {\n          log('Invalid option detected in \"' + option + '\".' + ' Allowed values are:' + Validator.print(refOptionType) + ' not \"' + options[option] + '\". ');\n          errorFound = true;\n        } else if (optionType === 'object' && referenceOption !== \"__any__\") {\n          path = availableUtils.copyAndExtendArray(path, option);\n          Validator.parse(options[option], referenceOptions[referenceOption], path);\n        }\n      } else if (refOptionObj['any'] === undefined) {\n        // type of the field is incorrect and the field cannot be any\n        log('Invalid type received for \"' + option + '\". Expected: ' + Validator.print(_Object$keys(refOptionObj)) + '. Received [' + optionType + '] \"' + options[option] + '\"');\n        errorFound = true;\n      }\n    }\n\n    /**\n     *\n     * @param {Object|boolean|number|string|Array.<number>|Date|Node|Moment|undefined|null} object\n     * @returns {string}\n     * @static\n     */\n  }, {\n    key: \"getType\",\n    value: function getType(object) {\n      var type = _typeof$1(object);\n      if (type === 'object') {\n        if (object === null) {\n          return 'null';\n        }\n        if (object instanceof Boolean) {\n          return 'boolean';\n        }\n        if (object instanceof Number) {\n          return 'number';\n        }\n        if (object instanceof String) {\n          return 'string';\n        }\n        if (_Array$isArray(object)) {\n          return 'array';\n        }\n        if (object instanceof Date) {\n          return 'date';\n        }\n        if (object.nodeType !== undefined) {\n          return 'dom';\n        }\n        if (object._isAMomentObject === true) {\n          return 'moment';\n        }\n        return 'object';\n      } else if (type === 'number') {\n        return 'number';\n      } else if (type === 'boolean') {\n        return 'boolean';\n      } else if (type === 'string') {\n        return 'string';\n      } else if (type === undefined) {\n        return 'undefined';\n      }\n      return type;\n    }\n\n    /**\n     * @param {string} option\n     * @param {Object} options\n     * @param {Array.<string>} path\n     * @static\n     */\n  }, {\n    key: \"getSuggestion\",\n    value: function getSuggestion(option, options, path) {\n      var localSearch = Validator.findInOptions(option, options, path, false);\n      var globalSearch = Validator.findInOptions(option, allOptions$2, [], true);\n      var localSearchThreshold = 8;\n      var globalSearchThreshold = 4;\n      var msg;\n      if (localSearch.indexMatch !== undefined) {\n        msg = ' in ' + Validator.printLocation(localSearch.path, option, '') + 'Perhaps it was incomplete? Did you mean: \"' + localSearch.indexMatch + '\"?\\n\\n';\n      } else if (globalSearch.distance <= globalSearchThreshold && localSearch.distance > globalSearch.distance) {\n        msg = ' in ' + Validator.printLocation(localSearch.path, option, '') + 'Perhaps it was misplaced? Matching option found at: ' + Validator.printLocation(globalSearch.path, globalSearch.closestMatch, '');\n      } else if (localSearch.distance <= localSearchThreshold) {\n        msg = '. Did you mean \"' + localSearch.closestMatch + '\"?' + Validator.printLocation(localSearch.path, option);\n      } else {\n        msg = '. Did you mean one of these: ' + Validator.print(_Object$keys(options)) + Validator.printLocation(path, option);\n      }\n      console.log('%cUnknown option detected: \"' + option + '\"' + msg, printStyle);\n      errorFound = true;\n    }\n\n    /**\n     * traverse the options in search for a match.\n     * @param {string} option\n     * @param {Object} options\n     * @param {Array} path    | where to look for the actual option\n     * @param {boolean} [recursive=false]\n     * @returns {{closestMatch: string, path: Array, distance: number}}\n     * @static\n     */\n  }, {\n    key: \"findInOptions\",\n    value: function findInOptions(option, options, path) {\n      var recursive = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n      var min = 1e9;\n      var closestMatch = '';\n      var closestMatchPath = [];\n      var lowerCaseOption = option.toLowerCase();\n      var indexMatch = undefined;\n      for (var op in options) {\n        // eslint-disable-line guard-for-in\n        var distance = void 0;\n        if (options[op].__type__ !== undefined && recursive === true) {\n          var result = Validator.findInOptions(option, options[op], availableUtils.copyAndExtendArray(path, op));\n          if (min > result.distance) {\n            closestMatch = result.closestMatch;\n            closestMatchPath = result.path;\n            min = result.distance;\n            indexMatch = result.indexMatch;\n          }\n        } else {\n          var _context;\n          if (_indexOfInstanceProperty(_context = op.toLowerCase()).call(_context, lowerCaseOption) !== -1) {\n            indexMatch = op;\n          }\n          distance = Validator.levenshteinDistance(option, op);\n          if (min > distance) {\n            closestMatch = op;\n            closestMatchPath = availableUtils.copyArray(path);\n            min = distance;\n          }\n        }\n      }\n      return {\n        closestMatch: closestMatch,\n        path: closestMatchPath,\n        distance: min,\n        indexMatch: indexMatch\n      };\n    }\n\n    /**\n     * @param {Array.<string>} path\n     * @param {Object} option\n     * @param {string} prefix\n     * @returns {String}\n     * @static\n     */\n  }, {\n    key: \"printLocation\",\n    value: function printLocation(path, option) {\n      var prefix = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'Problem value found at: \\n';\n      var str = '\\n\\n' + prefix + 'options = {\\n';\n      for (var i = 0; i < path.length; i++) {\n        for (var j = 0; j < i + 1; j++) {\n          str += '  ';\n        }\n        str += path[i] + ': {\\n';\n      }\n      for (var _j = 0; _j < path.length + 1; _j++) {\n        str += '  ';\n      }\n      str += option + '\\n';\n      for (var _i = 0; _i < path.length + 1; _i++) {\n        for (var _j2 = 0; _j2 < path.length - _i; _j2++) {\n          str += '  ';\n        }\n        str += '}\\n';\n      }\n      return str + '\\n\\n';\n    }\n\n    /**\n     * @param {Object} options\n     * @returns {String}\n     * @static\n     */\n  }, {\n    key: \"print\",\n    value: function print(options) {\n      return _JSON$stringify(options).replace(/(\\\")|(\\[)|(\\])|(,\"__type__\")/g, \"\").replace(/(\\,)/g, ', ');\n    }\n\n    /**\n     *  Compute the edit distance between the two given strings\n     * http://en.wikibooks.org/wiki/Algorithm_Implementation/Strings/Levenshtein_distance#JavaScript\n     *\n     * Copyright (c) 2011 Andrei Mackenzie\n     *\n     * Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\n     *\n     * The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\n     *\n     * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n     *\n     * @param {string} a\n     * @param {string} b\n     * @returns {Array.<Array.<number>>}}\n     * @static\n     */\n  }, {\n    key: \"levenshteinDistance\",\n    value: function levenshteinDistance(a, b) {\n      if (a.length === 0) return b.length;\n      if (b.length === 0) return a.length;\n      var matrix = [];\n\n      // increment along the first column of each row\n      var i;\n      for (i = 0; i <= b.length; i++) {\n        matrix[i] = [i];\n      }\n\n      // increment each column in the first row\n      var j;\n      for (j = 0; j <= a.length; j++) {\n        matrix[0][j] = j;\n      }\n\n      // Fill in the rest of the matrix\n      for (i = 1; i <= b.length; i++) {\n        for (j = 1; j <= a.length; j++) {\n          if (b.charAt(i - 1) == a.charAt(j - 1)) {\n            matrix[i][j] = matrix[i - 1][j - 1];\n          } else {\n            matrix[i][j] = Math.min(matrix[i - 1][j - 1] + 1,\n            // substitution\n            Math.min(matrix[i][j - 1] + 1,\n            // insertion\n            matrix[i - 1][j] + 1)); // deletion\n          }\n        }\n      }\n\n      return matrix[b.length][a.length];\n    }\n  }]);\n  return Validator;\n}();\n\n/**\n * This object contains all possible options. It will check if the types are correct, if required if the option is one\n * of the allowed values.\n *\n * __any__ means that the name of the property does not matter.\n * __type__ is a required field for all objects and contains the allowed types of all objects\n */\nvar string$1 = 'string';\nvar bool$1 = 'boolean';\nvar number$1 = 'number';\nvar array$1 = 'array';\nvar date$1 = 'date';\nvar object$1 = 'object'; // should only be in a __type__ property\nvar dom$1 = 'dom';\nvar moment$1 = 'moment';\nvar any$1 = 'any';\nvar allOptions$1 = {\n  configure: {\n    enabled: {\n      'boolean': bool$1\n    },\n    filter: {\n      'boolean': bool$1,\n      'function': 'function'\n    },\n    container: {\n      dom: dom$1\n    },\n    __type__: {\n      object: object$1,\n      'boolean': bool$1,\n      'function': 'function'\n    }\n  },\n  //globals :\n  align: {\n    string: string$1\n  },\n  alignCurrentTime: {\n    string: string$1,\n    'undefined': 'undefined'\n  },\n  rtl: {\n    'boolean': bool$1,\n    'undefined': 'undefined'\n  },\n  rollingMode: {\n    follow: {\n      'boolean': bool$1\n    },\n    offset: {\n      number: number$1,\n      'undefined': 'undefined'\n    },\n    __type__: {\n      object: object$1\n    }\n  },\n  onTimeout: {\n    timeoutMs: {\n      number: number$1\n    },\n    callback: {\n      'function': 'function'\n    },\n    __type__: {\n      object: object$1\n    }\n  },\n  verticalScroll: {\n    'boolean': bool$1,\n    'undefined': 'undefined'\n  },\n  horizontalScroll: {\n    'boolean': bool$1,\n    'undefined': 'undefined'\n  },\n  autoResize: {\n    'boolean': bool$1\n  },\n  throttleRedraw: {\n    number: number$1\n  },\n  // TODO: DEPRICATED see https://github.com/almende/vis/issues/2511\n  clickToUse: {\n    'boolean': bool$1\n  },\n  dataAttributes: {\n    string: string$1,\n    array: array$1\n  },\n  editable: {\n    add: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    remove: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    updateGroup: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    updateTime: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    overrideItems: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    __type__: {\n      'boolean': bool$1,\n      object: object$1\n    }\n  },\n  end: {\n    number: number$1,\n    date: date$1,\n    string: string$1,\n    moment: moment$1\n  },\n  format: {\n    minorLabels: {\n      millisecond: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      second: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      minute: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      hour: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      weekday: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      day: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      week: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      month: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      year: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      __type__: {\n        object: object$1,\n        'function': 'function'\n      }\n    },\n    majorLabels: {\n      millisecond: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      second: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      minute: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      hour: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      weekday: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      day: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      week: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      month: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      year: {\n        string: string$1,\n        'undefined': 'undefined'\n      },\n      __type__: {\n        object: object$1,\n        'function': 'function'\n      }\n    },\n    __type__: {\n      object: object$1\n    }\n  },\n  moment: {\n    'function': 'function'\n  },\n  groupHeightMode: {\n    string: string$1\n  },\n  groupOrder: {\n    string: string$1,\n    'function': 'function'\n  },\n  groupEditable: {\n    add: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    remove: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    order: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    __type__: {\n      'boolean': bool$1,\n      object: object$1\n    }\n  },\n  groupOrderSwap: {\n    'function': 'function'\n  },\n  height: {\n    string: string$1,\n    number: number$1\n  },\n  hiddenDates: {\n    start: {\n      date: date$1,\n      number: number$1,\n      string: string$1,\n      moment: moment$1\n    },\n    end: {\n      date: date$1,\n      number: number$1,\n      string: string$1,\n      moment: moment$1\n    },\n    repeat: {\n      string: string$1\n    },\n    __type__: {\n      object: object$1,\n      array: array$1\n    }\n  },\n  itemsAlwaysDraggable: {\n    item: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    range: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    __type__: {\n      'boolean': bool$1,\n      object: object$1\n    }\n  },\n  limitSize: {\n    'boolean': bool$1\n  },\n  locale: {\n    string: string$1\n  },\n  locales: {\n    __any__: {\n      any: any$1\n    },\n    __type__: {\n      object: object$1\n    }\n  },\n  longSelectPressTime: {\n    number: number$1\n  },\n  margin: {\n    axis: {\n      number: number$1\n    },\n    item: {\n      horizontal: {\n        number: number$1,\n        'undefined': 'undefined'\n      },\n      vertical: {\n        number: number$1,\n        'undefined': 'undefined'\n      },\n      __type__: {\n        object: object$1,\n        number: number$1\n      }\n    },\n    __type__: {\n      object: object$1,\n      number: number$1\n    }\n  },\n  max: {\n    date: date$1,\n    number: number$1,\n    string: string$1,\n    moment: moment$1\n  },\n  maxHeight: {\n    number: number$1,\n    string: string$1\n  },\n  maxMinorChars: {\n    number: number$1\n  },\n  min: {\n    date: date$1,\n    number: number$1,\n    string: string$1,\n    moment: moment$1\n  },\n  minHeight: {\n    number: number$1,\n    string: string$1\n  },\n  moveable: {\n    'boolean': bool$1\n  },\n  multiselect: {\n    'boolean': bool$1\n  },\n  multiselectPerGroup: {\n    'boolean': bool$1\n  },\n  onAdd: {\n    'function': 'function'\n  },\n  onDropObjectOnItem: {\n    'function': 'function'\n  },\n  onUpdate: {\n    'function': 'function'\n  },\n  onMove: {\n    'function': 'function'\n  },\n  onMoving: {\n    'function': 'function'\n  },\n  onRemove: {\n    'function': 'function'\n  },\n  onAddGroup: {\n    'function': 'function'\n  },\n  onMoveGroup: {\n    'function': 'function'\n  },\n  onRemoveGroup: {\n    'function': 'function'\n  },\n  onInitialDrawComplete: {\n    'function': 'function'\n  },\n  order: {\n    'function': 'function'\n  },\n  orientation: {\n    axis: {\n      string: string$1,\n      'undefined': 'undefined'\n    },\n    item: {\n      string: string$1,\n      'undefined': 'undefined'\n    },\n    __type__: {\n      string: string$1,\n      object: object$1\n    }\n  },\n  selectable: {\n    'boolean': bool$1\n  },\n  sequentialSelection: {\n    'boolean': bool$1\n  },\n  showCurrentTime: {\n    'boolean': bool$1\n  },\n  showMajorLabels: {\n    'boolean': bool$1\n  },\n  showMinorLabels: {\n    'boolean': bool$1\n  },\n  showWeekScale: {\n    'boolean': bool$1\n  },\n  stack: {\n    'boolean': bool$1\n  },\n  stackSubgroups: {\n    'boolean': bool$1\n  },\n  cluster: {\n    maxItems: {\n      'number': number$1,\n      'undefined': 'undefined'\n    },\n    titleTemplate: {\n      'string': string$1,\n      'undefined': 'undefined'\n    },\n    clusterCriteria: {\n      'function': 'function',\n      'undefined': 'undefined'\n    },\n    showStipes: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    fitOnDoubleClick: {\n      'boolean': bool$1,\n      'undefined': 'undefined'\n    },\n    __type__: {\n      'boolean': bool$1,\n      object: object$1\n    }\n  },\n  snap: {\n    'function': 'function',\n    'null': 'null'\n  },\n  start: {\n    date: date$1,\n    number: number$1,\n    string: string$1,\n    moment: moment$1\n  },\n  template: {\n    'function': 'function'\n  },\n  loadingScreenTemplate: {\n    'function': 'function'\n  },\n  groupTemplate: {\n    'function': 'function'\n  },\n  visibleFrameTemplate: {\n    string: string$1,\n    'function': 'function'\n  },\n  showTooltips: {\n    'boolean': bool$1\n  },\n  tooltip: {\n    followMouse: {\n      'boolean': bool$1\n    },\n    overflowMethod: {\n      'string': ['cap', 'flip', 'none']\n    },\n    delay: {\n      number: number$1\n    },\n    template: {\n      'function': 'function'\n    },\n    __type__: {\n      object: object$1\n    }\n  },\n  tooltipOnItemUpdateTime: {\n    template: {\n      'function': 'function'\n    },\n    __type__: {\n      'boolean': bool$1,\n      object: object$1\n    }\n  },\n  timeAxis: {\n    scale: {\n      string: string$1,\n      'undefined': 'undefined'\n    },\n    step: {\n      number: number$1,\n      'undefined': 'undefined'\n    },\n    __type__: {\n      object: object$1\n    }\n  },\n  type: {\n    string: string$1\n  },\n  width: {\n    string: string$1,\n    number: number$1\n  },\n  preferZoom: {\n    'boolean': bool$1\n  },\n  zoomable: {\n    'boolean': bool$1\n  },\n  zoomKey: {\n    string: ['ctrlKey', 'altKey', 'shiftKey', 'metaKey', '']\n  },\n  zoomFriction: {\n    number: number$1\n  },\n  zoomMax: {\n    number: number$1\n  },\n  zoomMin: {\n    number: number$1\n  },\n  xss: {\n    disabled: {\n      boolean: bool$1\n    },\n    filterOptions: {\n      __any__: {\n        any: any$1\n      },\n      __type__: {\n        object: object$1\n      }\n    },\n    __type__: {\n      object: object$1\n    }\n  },\n  __type__: {\n    object: object$1\n  }\n};\nvar configureOptions$1 = {\n  global: {\n    align: ['center', 'left', 'right'],\n    alignCurrentTime: ['none', 'year', 'month', 'quarter', 'week', 'isoWeek', 'day', 'date', 'hour', 'minute', 'second'],\n    direction: false,\n    autoResize: true,\n    clickToUse: false,\n    // dataAttributes: ['all'], // FIXME: can be 'all' or string[]\n    editable: {\n      add: false,\n      remove: false,\n      updateGroup: false,\n      updateTime: false\n    },\n    end: '',\n    format: {\n      minorLabels: {\n        millisecond: 'SSS',\n        second: 's',\n        minute: 'HH:mm',\n        hour: 'HH:mm',\n        weekday: 'ddd D',\n        day: 'D',\n        week: 'w',\n        month: 'MMM',\n        year: 'YYYY'\n      },\n      majorLabels: {\n        millisecond: 'HH:mm:ss',\n        second: 'D MMMM HH:mm',\n        minute: 'ddd D MMMM',\n        hour: 'ddd D MMMM',\n        weekday: 'MMMM YYYY',\n        day: 'MMMM YYYY',\n        week: 'MMMM YYYY',\n        month: 'YYYY',\n        year: ''\n      }\n    },\n    groupHeightMode: ['auto', 'fixed', 'fitItems'],\n    //groupOrder: {string, 'function': 'function'},\n    groupsDraggable: false,\n    height: '',\n    //hiddenDates: {object, array},\n    locale: '',\n    longSelectPressTime: 251,\n    margin: {\n      axis: [20, 0, 100, 1],\n      item: {\n        horizontal: [10, 0, 100, 1],\n        vertical: [10, 0, 100, 1]\n      }\n    },\n    max: '',\n    maxHeight: '',\n    maxMinorChars: [7, 0, 20, 1],\n    min: '',\n    minHeight: '',\n    moveable: false,\n    multiselect: false,\n    multiselectPerGroup: false,\n    //onAdd: {'function': 'function'},\n    //onUpdate: {'function': 'function'},\n    //onMove: {'function': 'function'},\n    //onMoving: {'function': 'function'},\n    //onRename: {'function': 'function'},\n    //order: {'function': 'function'},\n    orientation: {\n      axis: ['both', 'bottom', 'top'],\n      item: ['bottom', 'top']\n    },\n    preferZoom: false,\n    selectable: true,\n    showCurrentTime: false,\n    showMajorLabels: true,\n    showMinorLabels: true,\n    stack: true,\n    stackSubgroups: true,\n    cluster: false,\n    //snap: {'function': 'function', nada},\n    start: '',\n    //template: {'function': 'function'},\n    //timeAxis: {\n    //  scale: ['millisecond', 'second', 'minute', 'hour', 'weekday', 'day', 'week', 'month', 'year'],\n    //  step: [1, 1, 10, 1]\n    //},\n    showTooltips: true,\n    tooltip: {\n      followMouse: false,\n      overflowMethod: 'flip',\n      delay: [500, 0, 99999, 100]\n    },\n    tooltipOnItemUpdateTime: false,\n    type: ['box', 'point', 'range', 'background'],\n    width: '100%',\n    zoomable: true,\n    zoomKey: ['ctrlKey', 'altKey', 'shiftKey', 'metaKey', ''],\n    zoomMax: [315360000000000, 10, 315360000000000, 1],\n    zoomMin: [10, 10, 315360000000000, 1],\n    xss: {\n      disabled: false\n    }\n  }\n};\n\nvar htmlColors = {\n  black: '#000000',\n  navy: '#000080',\n  darkblue: '#00008B',\n  mediumblue: '#0000CD',\n  blue: '#0000FF',\n  darkgreen: '#006400',\n  green: '#008000',\n  teal: '#008080',\n  darkcyan: '#008B8B',\n  deepskyblue: '#00BFFF',\n  darkturquoise: '#00CED1',\n  mediumspringgreen: '#00FA9A',\n  lime: '#00FF00',\n  springgreen: '#00FF7F',\n  aqua: '#00FFFF',\n  cyan: '#00FFFF',\n  midnightblue: '#191970',\n  dodgerblue: '#1E90FF',\n  lightseagreen: '#20B2AA',\n  forestgreen: '#228B22',\n  seagreen: '#2E8B57',\n  darkslategray: '#2F4F4F',\n  limegreen: '#32CD32',\n  mediumseagreen: '#3CB371',\n  turquoise: '#40E0D0',\n  royalblue: '#4169E1',\n  steelblue: '#4682B4',\n  darkslateblue: '#483D8B',\n  mediumturquoise: '#48D1CC',\n  indigo: '#4B0082',\n  darkolivegreen: '#556B2F',\n  cadetblue: '#5F9EA0',\n  cornflowerblue: '#6495ED',\n  mediumaquamarine: '#66CDAA',\n  dimgray: '#696969',\n  slateblue: '#6A5ACD',\n  olivedrab: '#6B8E23',\n  slategray: '#708090',\n  lightslategray: '#778899',\n  mediumslateblue: '#7B68EE',\n  lawngreen: '#7CFC00',\n  chartreuse: '#7FFF00',\n  aquamarine: '#7FFFD4',\n  maroon: '#800000',\n  purple: '#800080',\n  olive: '#808000',\n  gray: '#808080',\n  skyblue: '#87CEEB',\n  lightskyblue: '#87CEFA',\n  blueviolet: '#8A2BE2',\n  darkred: '#8B0000',\n  darkmagenta: '#8B008B',\n  saddlebrown: '#8B4513',\n  darkseagreen: '#8FBC8F',\n  lightgreen: '#90EE90',\n  mediumpurple: '#9370D8',\n  darkviolet: '#9400D3',\n  palegreen: '#98FB98',\n  darkorchid: '#9932CC',\n  yellowgreen: '#9ACD32',\n  sienna: '#A0522D',\n  brown: '#A52A2A',\n  darkgray: '#A9A9A9',\n  lightblue: '#ADD8E6',\n  greenyellow: '#ADFF2F',\n  paleturquoise: '#AFEEEE',\n  lightsteelblue: '#B0C4DE',\n  powderblue: '#B0E0E6',\n  firebrick: '#B22222',\n  darkgoldenrod: '#B8860B',\n  mediumorchid: '#BA55D3',\n  rosybrown: '#BC8F8F',\n  darkkhaki: '#BDB76B',\n  silver: '#C0C0C0',\n  mediumvioletred: '#C71585',\n  indianred: '#CD5C5C',\n  peru: '#CD853F',\n  chocolate: '#D2691E',\n  tan: '#D2B48C',\n  lightgrey: '#D3D3D3',\n  palevioletred: '#D87093',\n  thistle: '#D8BFD8',\n  orchid: '#DA70D6',\n  goldenrod: '#DAA520',\n  crimson: '#DC143C',\n  gainsboro: '#DCDCDC',\n  plum: '#DDA0DD',\n  burlywood: '#DEB887',\n  lightcyan: '#E0FFFF',\n  lavender: '#E6E6FA',\n  darksalmon: '#E9967A',\n  violet: '#EE82EE',\n  palegoldenrod: '#EEE8AA',\n  lightcoral: '#F08080',\n  khaki: '#F0E68C',\n  aliceblue: '#F0F8FF',\n  honeydew: '#F0FFF0',\n  azure: '#F0FFFF',\n  sandybrown: '#F4A460',\n  wheat: '#F5DEB3',\n  beige: '#F5F5DC',\n  whitesmoke: '#F5F5F5',\n  mintcream: '#F5FFFA',\n  ghostwhite: '#F8F8FF',\n  salmon: '#FA8072',\n  antiquewhite: '#FAEBD7',\n  linen: '#FAF0E6',\n  lightgoldenrodyellow: '#FAFAD2',\n  oldlace: '#FDF5E6',\n  red: '#FF0000',\n  fuchsia: '#FF00FF',\n  magenta: '#FF00FF',\n  deeppink: '#FF1493',\n  orangered: '#FF4500',\n  tomato: '#FF6347',\n  hotpink: '#FF69B4',\n  coral: '#FF7F50',\n  darkorange: '#FF8C00',\n  lightsalmon: '#FFA07A',\n  orange: '#FFA500',\n  lightpink: '#FFB6C1',\n  pink: '#FFC0CB',\n  gold: '#FFD700',\n  peachpuff: '#FFDAB9',\n  navajowhite: '#FFDEAD',\n  moccasin: '#FFE4B5',\n  bisque: '#FFE4C4',\n  mistyrose: '#FFE4E1',\n  blanchedalmond: '#FFEBCD',\n  papayawhip: '#FFEFD5',\n  lavenderblush: '#FFF0F5',\n  seashell: '#FFF5EE',\n  cornsilk: '#FFF8DC',\n  lemonchiffon: '#FFFACD',\n  floralwhite: '#FFFAF0',\n  snow: '#FFFAFA',\n  yellow: '#FFFF00',\n  lightyellow: '#FFFFE0',\n  ivory: '#FFFFF0',\n  white: '#FFFFFF'\n};\n\n/**\n * @param {number} [pixelRatio=1]\n */\nvar ColorPicker = /*#__PURE__*/function () {\n  /**\n   * @param {number} [pixelRatio=1]\n   */\n  function ColorPicker() {\n    var pixelRatio = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 1;\n    _classCallCheck(this, ColorPicker);\n    this.pixelRatio = pixelRatio;\n    this.generated = false;\n    this.centerCoordinates = {\n      x: 289 / 2,\n      y: 289 / 2\n    };\n    this.r = 289 * 0.49;\n    this.color = {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1.0\n    };\n    this.hueCircle = undefined;\n    this.initialColor = {\n      r: 255,\n      g: 255,\n      b: 255,\n      a: 1.0\n    };\n    this.previousColor = undefined;\n    this.applied = false;\n\n    // bound by\n    this.updateCallback = function () {};\n    this.closeCallback = function () {};\n\n    // create all DOM elements\n    this._create();\n  }\n\n  /**\n   * this inserts the colorPicker into a div from the DOM\n   * @param {Element} container\n   */\n  _createClass(ColorPicker, [{\n    key: \"insertTo\",\n    value: function insertTo(container) {\n      if (this.hammer !== undefined) {\n        this.hammer.destroy();\n        this.hammer = undefined;\n      }\n      this.container = container;\n      this.container.appendChild(this.frame);\n      this._bindHammer();\n      this._setSize();\n    }\n\n    /**\n     * the callback is executed on apply and save. Bind it to the application\n     * @param {function} callback\n     */\n  }, {\n    key: \"setUpdateCallback\",\n    value: function setUpdateCallback(callback) {\n      if (typeof callback === 'function') {\n        this.updateCallback = callback;\n      } else {\n        throw new Error(\"Function attempted to set as colorPicker update callback is not a function.\");\n      }\n    }\n\n    /**\n     * the callback is executed on apply and save. Bind it to the application\n     * @param {function} callback\n     */\n  }, {\n    key: \"setCloseCallback\",\n    value: function setCloseCallback(callback) {\n      if (typeof callback === 'function') {\n        this.closeCallback = callback;\n      } else {\n        throw new Error(\"Function attempted to set as colorPicker closing callback is not a function.\");\n      }\n    }\n\n    /**\n     *\n     * @param {string} color\n     * @returns {String}\n     * @private\n     */\n  }, {\n    key: \"_isColorString\",\n    value: function _isColorString(color) {\n      if (typeof color === 'string') {\n        return htmlColors[color];\n      }\n    }\n\n    /**\n     * Set the color of the colorPicker\n     * Supported formats:\n     * 'red'                   --> HTML color string\n     * '#ffffff'               --> hex string\n     * 'rgb(255,255,255)'      --> rgb string\n     * 'rgba(255,255,255,1.0)' --> rgba string\n     * {r:255,g:255,b:255}     --> rgb object\n     * {r:255,g:255,b:255,a:1.0} --> rgba object\n     * @param {string|Object} color\n     * @param {boolean} [setInitial=true]\n     */\n  }, {\n    key: \"setColor\",\n    value: function setColor(color) {\n      var setInitial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      if (color === 'none') {\n        return;\n      }\n      var rgba;\n\n      // if a html color shorthand is used, convert to hex\n      var htmlColor = this._isColorString(color);\n      if (htmlColor !== undefined) {\n        color = htmlColor;\n      }\n\n      // check format\n      if (availableUtils.isString(color) === true) {\n        if (availableUtils.isValidRGB(color) === true) {\n          var rgbaArray = color.substr(4).substr(0, color.length - 5).split(',');\n          rgba = {\n            r: rgbaArray[0],\n            g: rgbaArray[1],\n            b: rgbaArray[2],\n            a: 1.0\n          };\n        } else if (availableUtils.isValidRGBA(color) === true) {\n          var _rgbaArray = color.substr(5).substr(0, color.length - 6).split(',');\n          rgba = {\n            r: _rgbaArray[0],\n            g: _rgbaArray[1],\n            b: _rgbaArray[2],\n            a: _rgbaArray[3]\n          };\n        } else if (availableUtils.isValidHex(color) === true) {\n          var rgbObj = availableUtils.hexToRGB(color);\n          rgba = {\n            r: rgbObj.r,\n            g: rgbObj.g,\n            b: rgbObj.b,\n            a: 1.0\n          };\n        }\n      } else {\n        if (color instanceof Object) {\n          if (color.r !== undefined && color.g !== undefined && color.b !== undefined) {\n            var alpha = color.a !== undefined ? color.a : '1.0';\n            rgba = {\n              r: color.r,\n              g: color.g,\n              b: color.b,\n              a: alpha\n            };\n          }\n        }\n      }\n\n      // set color\n      if (rgba === undefined) {\n        throw new Error(\"Unknown color passed to the colorPicker. Supported are strings: rgb, hex, rgba. Object: rgb ({r:r,g:g,b:b,[a:a]}). Supplied: \" + _JSON$stringify(color));\n      } else {\n        this._setColor(rgba, setInitial);\n      }\n    }\n\n    /**\n     * this shows the color picker.\n     * The hue circle is constructed once and stored.\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      if (this.closeCallback !== undefined) {\n        this.closeCallback();\n        this.closeCallback = undefined;\n      }\n      this.applied = false;\n      this.frame.style.display = 'block';\n      this._generateHueCircle();\n    }\n\n    // ------------------------------------------ PRIVATE ----------------------------- //\n\n    /**\n     * Hide the picker. Is called by the cancel button.\n     * Optional boolean to store the previous color for easy access later on.\n     * @param {boolean} [storePrevious=true]\n     * @private\n     */\n  }, {\n    key: \"_hide\",\n    value: function _hide() {\n      var _this = this;\n      var storePrevious = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n      // store the previous color for next time;\n      if (storePrevious === true) {\n        this.previousColor = availableUtils.extend({}, this.color);\n      }\n      if (this.applied === true) {\n        this.updateCallback(this.initialColor);\n      }\n      this.frame.style.display = 'none';\n\n      // call the closing callback, restoring the onclick method.\n      // this is in a setTimeout because it will trigger the show again before the click is done.\n      _setTimeout(function () {\n        if (_this.closeCallback !== undefined) {\n          _this.closeCallback();\n          _this.closeCallback = undefined;\n        }\n      }, 0);\n    }\n\n    /**\n     * bound to the save button. Saves and hides.\n     * @private\n     */\n  }, {\n    key: \"_save\",\n    value: function _save() {\n      this.updateCallback(this.color);\n      this.applied = false;\n      this._hide();\n    }\n\n    /**\n     * Bound to apply button. Saves but does not close. Is undone by the cancel button.\n     * @private\n     */\n  }, {\n    key: \"_apply\",\n    value: function _apply() {\n      this.applied = true;\n      this.updateCallback(this.color);\n      this._updatePicker(this.color);\n    }\n\n    /**\n     * load the color from the previous session.\n     * @private\n     */\n  }, {\n    key: \"_loadLast\",\n    value: function _loadLast() {\n      if (this.previousColor !== undefined) {\n        this.setColor(this.previousColor, false);\n      } else {\n        alert(\"There is no last color to load...\");\n      }\n    }\n\n    /**\n     * set the color, place the picker\n     * @param {Object} rgba\n     * @param {boolean} [setInitial=true]\n     * @private\n     */\n  }, {\n    key: \"_setColor\",\n    value: function _setColor(rgba) {\n      var setInitial = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      // store the initial color\n      if (setInitial === true) {\n        this.initialColor = availableUtils.extend({}, rgba);\n      }\n      this.color = rgba;\n      var hsv = availableUtils.RGBToHSV(rgba.r, rgba.g, rgba.b);\n      var angleConvert = 2 * Math.PI;\n      var radius = this.r * hsv.s;\n      var x = this.centerCoordinates.x + radius * Math.sin(angleConvert * hsv.h);\n      var y = this.centerCoordinates.y + radius * Math.cos(angleConvert * hsv.h);\n      this.colorPickerSelector.style.left = x - 0.5 * this.colorPickerSelector.clientWidth + 'px';\n      this.colorPickerSelector.style.top = y - 0.5 * this.colorPickerSelector.clientHeight + 'px';\n      this._updatePicker(rgba);\n    }\n\n    /**\n     * bound to opacity control\n     * @param {number} value\n     * @private\n     */\n  }, {\n    key: \"_setOpacity\",\n    value: function _setOpacity(value) {\n      this.color.a = value / 100;\n      this._updatePicker(this.color);\n    }\n\n    /**\n     * bound to brightness control\n     * @param {number} value\n     * @private\n     */\n  }, {\n    key: \"_setBrightness\",\n    value: function _setBrightness(value) {\n      var hsv = availableUtils.RGBToHSV(this.color.r, this.color.g, this.color.b);\n      hsv.v = value / 100;\n      var rgba = availableUtils.HSVToRGB(hsv.h, hsv.s, hsv.v);\n      rgba['a'] = this.color.a;\n      this.color = rgba;\n      this._updatePicker();\n    }\n\n    /**\n     * update the color picker. A black circle overlays the hue circle to mimic the brightness decreasing.\n     * @param {Object} rgba\n     * @private\n     */\n  }, {\n    key: \"_updatePicker\",\n    value: function _updatePicker() {\n      var rgba = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.color;\n      var hsv = availableUtils.RGBToHSV(rgba.r, rgba.g, rgba.b);\n      var ctx = this.colorPickerCanvas.getContext('2d');\n      if (this.pixelRation === undefined) {\n        this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n      }\n      ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n\n      // clear the canvas\n      var w = this.colorPickerCanvas.clientWidth;\n      var h = this.colorPickerCanvas.clientHeight;\n      ctx.clearRect(0, 0, w, h);\n      ctx.putImageData(this.hueCircle, 0, 0);\n      ctx.fillStyle = 'rgba(0,0,0,' + (1 - hsv.v) + ')';\n      ctx.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r);\n      _fillInstanceProperty(ctx).call(ctx);\n      this.brightnessRange.value = 100 * hsv.v;\n      this.opacityRange.value = 100 * rgba.a;\n      this.initialColorDiv.style.backgroundColor = 'rgba(' + this.initialColor.r + ',' + this.initialColor.g + ',' + this.initialColor.b + ',' + this.initialColor.a + ')';\n      this.newColorDiv.style.backgroundColor = 'rgba(' + this.color.r + ',' + this.color.g + ',' + this.color.b + ',' + this.color.a + ')';\n    }\n\n    /**\n     * used by create to set the size of the canvas.\n     * @private\n     */\n  }, {\n    key: \"_setSize\",\n    value: function _setSize() {\n      this.colorPickerCanvas.style.width = '100%';\n      this.colorPickerCanvas.style.height = '100%';\n      this.colorPickerCanvas.width = 289 * this.pixelRatio;\n      this.colorPickerCanvas.height = 289 * this.pixelRatio;\n    }\n\n    /**\n     * create all dom elements\n     * TODO: cleanup, lots of similar dom elements\n     * @private\n     */\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      var _context, _context2, _context3, _context4;\n      this.frame = document.createElement('div');\n      this.frame.className = 'vis-color-picker';\n      this.colorPickerDiv = document.createElement('div');\n      this.colorPickerSelector = document.createElement('div');\n      this.colorPickerSelector.className = 'vis-selector';\n      this.colorPickerDiv.appendChild(this.colorPickerSelector);\n      this.colorPickerCanvas = document.createElement('canvas');\n      this.colorPickerDiv.appendChild(this.colorPickerCanvas);\n      if (!this.colorPickerCanvas.getContext) {\n        var noCanvas = document.createElement('DIV');\n        noCanvas.style.color = 'red';\n        noCanvas.style.fontWeight = 'bold';\n        noCanvas.style.padding = '10px';\n        noCanvas.innerHTML = 'Error: your browser does not support HTML canvas';\n        this.colorPickerCanvas.appendChild(noCanvas);\n      } else {\n        var ctx = this.colorPickerCanvas.getContext(\"2d\");\n        this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n        this.colorPickerCanvas.getContext(\"2d\").setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n      }\n      this.colorPickerDiv.className = 'vis-color';\n      this.opacityDiv = document.createElement('div');\n      this.opacityDiv.className = 'vis-opacity';\n      this.brightnessDiv = document.createElement('div');\n      this.brightnessDiv.className = 'vis-brightness';\n      this.arrowDiv = document.createElement('div');\n      this.arrowDiv.className = 'vis-arrow';\n      this.opacityRange = document.createElement('input');\n      try {\n        this.opacityRange.type = 'range'; // Not supported on IE9\n        this.opacityRange.min = '0';\n        this.opacityRange.max = '100';\n      }\n      // TODO: Add some error handling and remove this lint exception\n      catch (err) {} // eslint-disable-line no-empty\n      this.opacityRange.value = '100';\n      this.opacityRange.className = 'vis-range';\n      this.brightnessRange = document.createElement('input');\n      try {\n        this.brightnessRange.type = 'range'; // Not supported on IE9\n        this.brightnessRange.min = '0';\n        this.brightnessRange.max = '100';\n      }\n      // TODO: Add some error handling and remove this lint exception\n      catch (err) {} // eslint-disable-line no-empty\n      this.brightnessRange.value = '100';\n      this.brightnessRange.className = 'vis-range';\n      this.opacityDiv.appendChild(this.opacityRange);\n      this.brightnessDiv.appendChild(this.brightnessRange);\n      var me = this;\n      this.opacityRange.onchange = function () {\n        me._setOpacity(this.value);\n      };\n      this.opacityRange.oninput = function () {\n        me._setOpacity(this.value);\n      };\n      this.brightnessRange.onchange = function () {\n        me._setBrightness(this.value);\n      };\n      this.brightnessRange.oninput = function () {\n        me._setBrightness(this.value);\n      };\n      this.brightnessLabel = document.createElement(\"div\");\n      this.brightnessLabel.className = \"vis-label vis-brightness\";\n      this.brightnessLabel.innerHTML = 'brightness:';\n      this.opacityLabel = document.createElement(\"div\");\n      this.opacityLabel.className = \"vis-label vis-opacity\";\n      this.opacityLabel.innerHTML = 'opacity:';\n      this.newColorDiv = document.createElement(\"div\");\n      this.newColorDiv.className = \"vis-new-color\";\n      this.newColorDiv.innerHTML = 'new';\n      this.initialColorDiv = document.createElement(\"div\");\n      this.initialColorDiv.className = \"vis-initial-color\";\n      this.initialColorDiv.innerHTML = 'initial';\n      this.cancelButton = document.createElement(\"div\");\n      this.cancelButton.className = \"vis-button vis-cancel\";\n      this.cancelButton.innerHTML = 'cancel';\n      this.cancelButton.onclick = _bindInstanceProperty$1(_context = this._hide).call(_context, this, false);\n      this.applyButton = document.createElement(\"div\");\n      this.applyButton.className = \"vis-button vis-apply\";\n      this.applyButton.innerHTML = 'apply';\n      this.applyButton.onclick = _bindInstanceProperty$1(_context2 = this._apply).call(_context2, this);\n      this.saveButton = document.createElement(\"div\");\n      this.saveButton.className = \"vis-button vis-save\";\n      this.saveButton.innerHTML = 'save';\n      this.saveButton.onclick = _bindInstanceProperty$1(_context3 = this._save).call(_context3, this);\n      this.loadButton = document.createElement(\"div\");\n      this.loadButton.className = \"vis-button vis-load\";\n      this.loadButton.innerHTML = 'load last';\n      this.loadButton.onclick = _bindInstanceProperty$1(_context4 = this._loadLast).call(_context4, this);\n      this.frame.appendChild(this.colorPickerDiv);\n      this.frame.appendChild(this.arrowDiv);\n      this.frame.appendChild(this.brightnessLabel);\n      this.frame.appendChild(this.brightnessDiv);\n      this.frame.appendChild(this.opacityLabel);\n      this.frame.appendChild(this.opacityDiv);\n      this.frame.appendChild(this.newColorDiv);\n      this.frame.appendChild(this.initialColorDiv);\n      this.frame.appendChild(this.cancelButton);\n      this.frame.appendChild(this.applyButton);\n      this.frame.appendChild(this.saveButton);\n      this.frame.appendChild(this.loadButton);\n    }\n\n    /**\n     * bind hammer to the color picker\n     * @private\n     */\n  }, {\n    key: \"_bindHammer\",\n    value: function _bindHammer() {\n      var _this2 = this;\n      this.drag = {};\n      this.pinch = {};\n      this.hammer = new Hammer(this.colorPickerCanvas);\n      this.hammer.get('pinch').set({\n        enable: true\n      });\n      onTouch(this.hammer, function (event) {\n        _this2._moveSelector(event);\n      });\n      this.hammer.on('tap', function (event) {\n        _this2._moveSelector(event);\n      });\n      this.hammer.on('panstart', function (event) {\n        _this2._moveSelector(event);\n      });\n      this.hammer.on('panmove', function (event) {\n        _this2._moveSelector(event);\n      });\n      this.hammer.on('panend', function (event) {\n        _this2._moveSelector(event);\n      });\n    }\n\n    /**\n     * generate the hue circle. This is relatively heavy (200ms) and is done only once on the first time it is shown.\n     * @private\n     */\n  }, {\n    key: \"_generateHueCircle\",\n    value: function _generateHueCircle() {\n      if (this.generated === false) {\n        var ctx = this.colorPickerCanvas.getContext('2d');\n        if (this.pixelRation === undefined) {\n          this.pixelRatio = (window.devicePixelRatio || 1) / (ctx.webkitBackingStorePixelRatio || ctx.mozBackingStorePixelRatio || ctx.msBackingStorePixelRatio || ctx.oBackingStorePixelRatio || ctx.backingStorePixelRatio || 1);\n        }\n        ctx.setTransform(this.pixelRatio, 0, 0, this.pixelRatio, 0, 0);\n\n        // clear the canvas\n        var w = this.colorPickerCanvas.clientWidth;\n        var h = this.colorPickerCanvas.clientHeight;\n        ctx.clearRect(0, 0, w, h);\n\n        // draw hue circle\n        var x, y, hue, sat;\n        this.centerCoordinates = {\n          x: w * 0.5,\n          y: h * 0.5\n        };\n        this.r = 0.49 * w;\n        var angleConvert = 2 * Math.PI / 360;\n        var hfac = 1 / 360;\n        var sfac = 1 / this.r;\n        var rgb;\n        for (hue = 0; hue < 360; hue++) {\n          for (sat = 0; sat < this.r; sat++) {\n            x = this.centerCoordinates.x + sat * Math.sin(angleConvert * hue);\n            y = this.centerCoordinates.y + sat * Math.cos(angleConvert * hue);\n            rgb = availableUtils.HSVToRGB(hue * hfac, sat * sfac, 1);\n            ctx.fillStyle = 'rgb(' + rgb.r + ',' + rgb.g + ',' + rgb.b + ')';\n            ctx.fillRect(x - 0.5, y - 0.5, 2, 2);\n          }\n        }\n        ctx.strokeStyle = 'rgba(0,0,0,1)';\n        ctx.circle(this.centerCoordinates.x, this.centerCoordinates.y, this.r);\n        ctx.stroke();\n        this.hueCircle = ctx.getImageData(0, 0, w, h);\n      }\n      this.generated = true;\n    }\n\n    /**\n     * move the selector. This is called by hammer functions.\n     *\n     * @param {Event}  event   The event\n     * @private\n     */\n  }, {\n    key: \"_moveSelector\",\n    value: function _moveSelector(event) {\n      var rect = this.colorPickerDiv.getBoundingClientRect();\n      var left = event.center.x - rect.left;\n      var top = event.center.y - rect.top;\n      var centerY = 0.5 * this.colorPickerDiv.clientHeight;\n      var centerX = 0.5 * this.colorPickerDiv.clientWidth;\n      var x = left - centerX;\n      var y = top - centerY;\n      var angle = Math.atan2(x, y);\n      var radius = 0.98 * Math.min(Math.sqrt(x * x + y * y), centerX);\n      var newTop = Math.cos(angle) * radius + centerY;\n      var newLeft = Math.sin(angle) * radius + centerX;\n      this.colorPickerSelector.style.top = newTop - 0.5 * this.colorPickerSelector.clientHeight + 'px';\n      this.colorPickerSelector.style.left = newLeft - 0.5 * this.colorPickerSelector.clientWidth + 'px';\n\n      // set color\n      var h = angle / (2 * Math.PI);\n      h = h < 0 ? h + 1 : h;\n      var s = radius / this.r;\n      var hsv = availableUtils.RGBToHSV(this.color.r, this.color.g, this.color.b);\n      hsv.h = h;\n      hsv.s = s;\n      var rgba = availableUtils.HSVToRGB(hsv.h, hsv.s, hsv.v);\n      rgba['a'] = this.color.a;\n      this.color = rgba;\n\n      // update previews\n      this.initialColorDiv.style.backgroundColor = 'rgba(' + this.initialColor.r + ',' + this.initialColor.g + ',' + this.initialColor.b + ',' + this.initialColor.a + ')';\n      this.newColorDiv.style.backgroundColor = 'rgba(' + this.color.r + ',' + this.color.g + ',' + this.color.b + ',' + this.color.a + ')';\n    }\n  }]);\n  return ColorPicker;\n}();\n\nvar css_248z$1 = \"div.vis-configuration {\\n    position:relative;\\n    display:block;\\n    float:left;\\n    font-size:12px;\\n}\\n\\ndiv.vis-configuration-wrapper {\\n    display:block;\\n    width:700px;\\n}\\n\\ndiv.vis-configuration-wrapper::after {\\n  clear: both;\\n  content: \\\"\\\";\\n  display: block;\\n}\\n\\ndiv.vis-configuration.vis-config-option-container{\\n    display:block;\\n    width:495px;\\n    background-color: #ffffff;\\n    border:2px solid #f7f8fa;\\n    border-radius:4px;\\n    margin-top:20px;\\n    left:10px;\\n    padding-left:5px;\\n}\\n\\ndiv.vis-configuration.vis-config-button{\\n    display:block;\\n    width:495px;\\n    height:25px;\\n    vertical-align: middle;\\n    line-height:25px;\\n    background-color: #f7f8fa;\\n    border:2px solid #ceced0;\\n    border-radius:4px;\\n    margin-top:20px;\\n    left:10px;\\n    padding-left:5px;\\n    cursor: pointer;\\n    margin-bottom:30px;\\n}\\n\\ndiv.vis-configuration.vis-config-button.hover{\\n    background-color: #4588e6;\\n    border:2px solid #214373;\\n    color:#ffffff;\\n}\\n\\ndiv.vis-configuration.vis-config-item{\\n    display:block;\\n    float:left;\\n    width:495px;\\n    height:25px;\\n    vertical-align: middle;\\n    line-height:25px;\\n}\\n\\n\\ndiv.vis-configuration.vis-config-item.vis-config-s2{\\n    left:10px;\\n    background-color: #f7f8fa;\\n    padding-left:5px;\\n    border-radius:3px;\\n}\\ndiv.vis-configuration.vis-config-item.vis-config-s3{\\n    left:20px;\\n    background-color: #e4e9f0;\\n    padding-left:5px;\\n    border-radius:3px;\\n}\\ndiv.vis-configuration.vis-config-item.vis-config-s4{\\n    left:30px;\\n    background-color: #cfd8e6;\\n    padding-left:5px;\\n    border-radius:3px;\\n}\\n\\ndiv.vis-configuration.vis-config-header{\\n    font-size:18px;\\n    font-weight: bold;\\n}\\n\\ndiv.vis-configuration.vis-config-label{\\n    width:120px;\\n    height:25px;\\n    line-height: 25px;\\n}\\n\\ndiv.vis-configuration.vis-config-label.vis-config-s3{\\n    width:110px;\\n}\\ndiv.vis-configuration.vis-config-label.vis-config-s4{\\n    width:100px;\\n}\\n\\ndiv.vis-configuration.vis-config-colorBlock{\\n    top:1px;\\n    width:30px;\\n    height:19px;\\n    border:1px solid #444444;\\n    border-radius:2px;\\n    padding:0px;\\n    margin:0px;\\n    cursor:pointer;\\n}\\n\\ninput.vis-configuration.vis-config-checkbox {\\n    left:-5px;\\n}\\n\\n\\ninput.vis-configuration.vis-config-rangeinput{\\n    position:relative;\\n    top:-5px;\\n    width:60px;\\n    /*height:13px;*/\\n    padding:1px;\\n    margin:0;\\n    pointer-events:none;\\n}\\n\\ninput.vis-configuration.vis-config-range{\\n    /*removes default webkit styles*/\\n    -webkit-appearance: none;\\n\\n    /*fix for FF unable to apply focus style bug */\\n    border: 0px solid white;\\n    background-color:rgba(0,0,0,0);\\n\\n    /*required for proper track sizing in FF*/\\n    width: 300px;\\n    height:20px;\\n}\\ninput.vis-configuration.vis-config-range::-webkit-slider-runnable-track {\\n    width: 300px;\\n    height: 5px;\\n    background: #dedede; /* Old browsers */\\n    background: -moz-linear-gradient(top,  #dedede 0%, #c8c8c8 99%); /* FF3.6+ */\\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#dedede), color-stop(99%,#c8c8c8)); /* Chrome,Safari4+ */\\n    background: -webkit-linear-gradient(top,  #dedede 0%,#c8c8c8 99%); /* Chrome10+,Safari5.1+ */\\n    background: -o-linear-gradient(top, #dedede 0%, #c8c8c8 99%); /* Opera 11.10+ */\\n    background: -ms-linear-gradient(top,  #dedede 0%,#c8c8c8 99%); /* IE10+ */\\n    background: linear-gradient(to bottom,  #dedede 0%,#c8c8c8 99%); /* W3C */\\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#dedede', endColorstr='#c8c8c8',GradientType=0 ); /* IE6-9 */\\n\\n    border: 1px solid #999999;\\n    box-shadow: #aaaaaa 0px 0px 3px 0px;\\n    border-radius: 3px;\\n}\\ninput.vis-configuration.vis-config-range::-webkit-slider-thumb {\\n    -webkit-appearance: none;\\n    border: 1px solid #14334b;\\n    height: 17px;\\n    width: 17px;\\n    border-radius: 50%;\\n    background: #3876c2; /* Old browsers */\\n    background: -moz-linear-gradient(top,  #3876c2 0%, #385380 100%); /* FF3.6+ */\\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#3876c2), color-stop(100%,#385380)); /* Chrome,Safari4+ */\\n    background: -webkit-linear-gradient(top,  #3876c2 0%,#385380 100%); /* Chrome10+,Safari5.1+ */\\n    background: -o-linear-gradient(top,  #3876c2 0%,#385380 100%); /* Opera 11.10+ */\\n    background: -ms-linear-gradient(top,  #3876c2 0%,#385380 100%); /* IE10+ */\\n    background: linear-gradient(to bottom,  #3876c2 0%,#385380 100%); /* W3C */\\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#3876c2', endColorstr='#385380',GradientType=0 ); /* IE6-9 */\\n    box-shadow: #111927 0px 0px 1px 0px;\\n    margin-top: -7px;\\n}\\ninput.vis-configuration.vis-config-range:focus {\\n    outline: none;\\n}\\ninput.vis-configuration.vis-config-range:focus::-webkit-slider-runnable-track {\\n    background: #9d9d9d; /* Old browsers */\\n    background: -moz-linear-gradient(top, #9d9d9d 0%, #c8c8c8 99%); /* FF3.6+ */\\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#9d9d9d), color-stop(99%,#c8c8c8)); /* Chrome,Safari4+ */\\n    background: -webkit-linear-gradient(top,  #9d9d9d 0%,#c8c8c8 99%); /* Chrome10+,Safari5.1+ */\\n    background: -o-linear-gradient(top,  #9d9d9d 0%,#c8c8c8 99%); /* Opera 11.10+ */\\n    background: -ms-linear-gradient(top,  #9d9d9d 0%,#c8c8c8 99%); /* IE10+ */\\n    background: linear-gradient(to bottom,  #9d9d9d 0%,#c8c8c8 99%); /* W3C */\\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#9d9d9d', endColorstr='#c8c8c8',GradientType=0 ); /* IE6-9 */\\n}\\n\\ninput.vis-configuration.vis-config-range::-moz-range-track {\\n    width: 300px;\\n    height: 10px;\\n    background: #dedede; /* Old browsers */\\n    background: -moz-linear-gradient(top,  #dedede 0%, #c8c8c8 99%); /* FF3.6+ */\\n    background: -webkit-gradient(linear, left top, left bottom, color-stop(0%,#dedede), color-stop(99%,#c8c8c8)); /* Chrome,Safari4+ */\\n    background: -webkit-linear-gradient(top,  #dedede 0%,#c8c8c8 99%); /* Chrome10+,Safari5.1+ */\\n    background: -o-linear-gradient(top, #dedede 0%, #c8c8c8 99%); /* Opera 11.10+ */\\n    background: -ms-linear-gradient(top,  #dedede 0%,#c8c8c8 99%); /* IE10+ */\\n    background: linear-gradient(to bottom,  #dedede 0%,#c8c8c8 99%); /* W3C */\\n    filter: progid:DXImageTransform.Microsoft.gradient( startColorstr='#dedede', endColorstr='#c8c8c8',GradientType=0 ); /* IE6-9 */\\n\\n    border: 1px solid #999999;\\n    box-shadow: #aaaaaa 0px 0px 3px 0px;\\n    border-radius: 3px;\\n}\\ninput.vis-configuration.vis-config-range::-moz-range-thumb {\\n    border: none;\\n    height: 16px;\\n    width: 16px;\\n\\n    border-radius: 50%;\\n    background:  #385380;\\n}\\n\\n/*hide the outline behind the border*/\\ninput.vis-configuration.vis-config-range:-moz-focusring{\\n    outline: 1px solid white;\\n    outline-offset: -1px;\\n}\\n\\ninput.vis-configuration.vis-config-range::-ms-track {\\n    width: 300px;\\n    height: 5px;\\n\\n    /*remove bg colour from the track, we'll use ms-fill-lower and ms-fill-upper instead */\\n    background: transparent;\\n\\n    /*leave room for the larger thumb to overflow with a transparent border */\\n    border-color: transparent;\\n    border-width: 6px 0;\\n\\n    /*remove default tick marks*/\\n    color: transparent;\\n}\\ninput.vis-configuration.vis-config-range::-ms-fill-lower {\\n    background: #777;\\n    border-radius: 10px;\\n}\\ninput.vis-configuration.vis-config-range::-ms-fill-upper {\\n    background: #ddd;\\n    border-radius: 10px;\\n}\\ninput.vis-configuration.vis-config-range::-ms-thumb {\\n    border: none;\\n    height: 16px;\\n    width: 16px;\\n    border-radius: 50%;\\n    background:  #385380;\\n}\\ninput.vis-configuration.vis-config-range:focus::-ms-fill-lower {\\n    background: #888;\\n}\\ninput.vis-configuration.vis-config-range:focus::-ms-fill-upper {\\n    background: #ccc;\\n}\\n\\n.vis-configuration-popup {\\n    position: absolute;\\n    background: rgba(57, 76, 89, 0.85);\\n    border: 2px solid #f2faff;\\n    line-height:30px;\\n    height:30px;\\n    width:150px;\\n    text-align:center;\\n    color: #ffffff;\\n    font-size:14px;\\n    border-radius:4px;\\n    -webkit-transition: opacity 0.3s ease-in-out;\\n    -moz-transition: opacity 0.3s ease-in-out;\\n    transition: opacity 0.3s ease-in-out;\\n}\\n.vis-configuration-popup:after, .vis-configuration-popup:before {\\n    left: 100%;\\n    top: 50%;\\n    border: solid transparent;\\n    content: \\\" \\\";\\n    height: 0;\\n    width: 0;\\n    position: absolute;\\n    pointer-events: none;\\n}\\n\\n.vis-configuration-popup:after {\\n    border-color: rgba(136, 183, 213, 0);\\n    border-left-color: rgba(57, 76, 89, 0.85);\\n    border-width: 8px;\\n    margin-top: -8px;\\n}\\n.vis-configuration-popup:before {\\n    border-color: rgba(194, 225, 245, 0);\\n    border-left-color: #f2faff;\\n    border-width: 12px;\\n    margin-top: -12px;\\n}\";\nstyleInject(css_248z$1);\n\n/**\n * The way this works is for all properties of this.possible options, you can supply the property name in any form to list the options.\n * Boolean options are recognised as Boolean\n * Number options should be written as array: [default value, min value, max value, stepsize]\n * Colors should be written as array: ['color', '#ffffff']\n * Strings with should be written as array: [option1, option2, option3, ..]\n *\n * The options are matched with their counterparts in each of the modules and the values used in the configuration are\n */\nvar Configurator = /*#__PURE__*/function () {\n  /**\n   * @param {Object} parentModule        | the location where parentModule.setOptions() can be called\n   * @param {Object} defaultContainer    | the default container of the module\n   * @param {Object} configureOptions    | the fully configured and predefined options set found in allOptions.js\n   * @param {number} pixelRatio          | canvas pixel ratio\n   */\n  function Configurator(parentModule, defaultContainer, configureOptions) {\n    var pixelRatio = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 1;\n    _classCallCheck(this, Configurator);\n    this.parent = parentModule;\n    this.changedOptions = [];\n    this.container = defaultContainer;\n    this.allowCreation = false;\n    this.options = {};\n    this.initialized = false;\n    this.popupCounter = 0;\n    this.defaultOptions = {\n      enabled: false,\n      filter: true,\n      container: undefined,\n      showButton: true\n    };\n    availableUtils.extend(this.options, this.defaultOptions);\n    this.configureOptions = configureOptions;\n    this.moduleOptions = {};\n    this.domElements = [];\n    this.popupDiv = {};\n    this.popupLimit = 5;\n    this.popupHistory = {};\n    this.colorPicker = new ColorPicker(pixelRatio);\n    this.wrapper = undefined;\n  }\n\n  /**\n   * refresh all options.\n   * Because all modules parse their options by themselves, we just use their options. We copy them here.\n   *\n   * @param {Object} options\n   */\n  _createClass(Configurator, [{\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options !== undefined) {\n        // reset the popup history because the indices may have been changed.\n        this.popupHistory = {};\n        this._removePopup();\n        var enabled = true;\n        if (typeof options === 'string') {\n          this.options.filter = options;\n        } else if (_Array$isArray(options)) {\n          this.options.filter = options.join();\n        } else if (_typeof$1(options) === 'object') {\n          if (options == null) {\n            throw new TypeError('options cannot be null');\n          }\n          if (options.container !== undefined) {\n            this.options.container = options.container;\n          }\n          if (_filterInstanceProperty(options) !== undefined) {\n            this.options.filter = _filterInstanceProperty(options);\n          }\n          if (options.showButton !== undefined) {\n            this.options.showButton = options.showButton;\n          }\n          if (options.enabled !== undefined) {\n            enabled = options.enabled;\n          }\n        } else if (typeof options === 'boolean') {\n          this.options.filter = true;\n          enabled = options;\n        } else if (typeof options === 'function') {\n          this.options.filter = options;\n          enabled = true;\n        }\n        if (_filterInstanceProperty(this.options) === false) {\n          enabled = false;\n        }\n        this.options.enabled = enabled;\n      }\n      this._clean();\n    }\n\n    /**\n     *\n     * @param {Object} moduleOptions\n     */\n  }, {\n    key: \"setModuleOptions\",\n    value: function setModuleOptions(moduleOptions) {\n      this.moduleOptions = moduleOptions;\n      if (this.options.enabled === true) {\n        this._clean();\n        if (this.options.container !== undefined) {\n          this.container = this.options.container;\n        }\n        this._create();\n      }\n    }\n\n    /**\n     * Create all DOM elements\n     * @private\n     */\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      this._clean();\n      this.changedOptions = [];\n      var filter = _filterInstanceProperty(this.options);\n      var counter = 0;\n      var show = false;\n      for (var option in this.configureOptions) {\n        if (this.configureOptions.hasOwnProperty(option)) {\n          this.allowCreation = false;\n          show = false;\n          if (typeof filter === 'function') {\n            show = filter(option, []);\n            show = show || this._handleObject(this.configureOptions[option], [option], true);\n          } else if (filter === true || _indexOfInstanceProperty(filter).call(filter, option) !== -1) {\n            show = true;\n          }\n          if (show !== false) {\n            this.allowCreation = true;\n\n            // linebreak between categories\n            if (counter > 0) {\n              this._makeItem([]);\n            }\n            // a header for the category\n            this._makeHeader(option);\n\n            // get the sub options\n            this._handleObject(this.configureOptions[option], [option]);\n          }\n          counter++;\n        }\n      }\n      this._makeButton();\n      this._push();\n      //~ this.colorPicker.insertTo(this.container);\n    }\n\n    /**\n     * draw all DOM elements on the screen\n     * @private\n     */\n  }, {\n    key: \"_push\",\n    value: function _push() {\n      this.wrapper = document.createElement('div');\n      this.wrapper.className = 'vis-configuration-wrapper';\n      this.container.appendChild(this.wrapper);\n      for (var i = 0; i < this.domElements.length; i++) {\n        this.wrapper.appendChild(this.domElements[i]);\n      }\n      this._showPopupIfNeeded();\n    }\n\n    /**\n     * delete all DOM elements\n     * @private\n     */\n  }, {\n    key: \"_clean\",\n    value: function _clean() {\n      for (var i = 0; i < this.domElements.length; i++) {\n        this.wrapper.removeChild(this.domElements[i]);\n      }\n      if (this.wrapper !== undefined) {\n        this.container.removeChild(this.wrapper);\n        this.wrapper = undefined;\n      }\n      this.domElements = [];\n      this._removePopup();\n    }\n\n    /**\n     * get the value from the actualOptions if it exists\n     * @param {array} path    | where to look for the actual option\n     * @returns {*}\n     * @private\n     */\n  }, {\n    key: \"_getValue\",\n    value: function _getValue(path) {\n      var base = this.moduleOptions;\n      for (var i = 0; i < path.length; i++) {\n        if (base[path[i]] !== undefined) {\n          base = base[path[i]];\n        } else {\n          base = undefined;\n          break;\n        }\n      }\n      return base;\n    }\n\n    /**\n     * all option elements are wrapped in an item\n     * @param {Array} path    | where to look for the actual option\n     * @param {Array.<Element>} domElements\n     * @returns {number}\n     * @private\n     */\n  }, {\n    key: \"_makeItem\",\n    value: function _makeItem(path) {\n      if (this.allowCreation === true) {\n        var item = document.createElement('div');\n        item.className = 'vis-configuration vis-config-item vis-config-s' + path.length;\n        for (var _len = arguments.length, domElements = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n          domElements[_key - 1] = arguments[_key];\n        }\n        _forEachInstanceProperty(domElements).call(domElements, function (element) {\n          item.appendChild(element);\n        });\n        this.domElements.push(item);\n        return this.domElements.length;\n      }\n      return 0;\n    }\n\n    /**\n     * header for major subjects\n     * @param {string} name\n     * @private\n     */\n  }, {\n    key: \"_makeHeader\",\n    value: function _makeHeader(name) {\n      var div = document.createElement('div');\n      div.className = 'vis-configuration vis-config-header';\n      div.innerHTML = availableUtils.xss(name);\n      this._makeItem([], div);\n    }\n\n    /**\n     * make a label, if it is an object label, it gets different styling.\n     * @param {string} name\n     * @param {array} path    | where to look for the actual option\n     * @param {string} objectLabel\n     * @returns {HTMLElement}\n     * @private\n     */\n  }, {\n    key: \"_makeLabel\",\n    value: function _makeLabel(name, path) {\n      var objectLabel = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var div = document.createElement('div');\n      div.className = 'vis-configuration vis-config-label vis-config-s' + path.length;\n      if (objectLabel === true) {\n        div.innerHTML = availableUtils.xss('<i><b>' + name + ':</b></i>');\n      } else {\n        div.innerHTML = availableUtils.xss(name + ':');\n      }\n      return div;\n    }\n\n    /**\n     * make a dropdown list for multiple possible string optoins\n     * @param {Array.<number>} arr\n     * @param {number} value\n     * @param {array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeDropdown\",\n    value: function _makeDropdown(arr, value, path) {\n      var select = document.createElement('select');\n      select.className = 'vis-configuration vis-config-select';\n      var selectedValue = 0;\n      if (value !== undefined) {\n        if (_indexOfInstanceProperty(arr).call(arr, value) !== -1) {\n          selectedValue = _indexOfInstanceProperty(arr).call(arr, value);\n        }\n      }\n      for (var i = 0; i < arr.length; i++) {\n        var option = document.createElement('option');\n        option.value = arr[i];\n        if (i === selectedValue) {\n          option.selected = 'selected';\n        }\n        option.innerHTML = arr[i];\n        select.appendChild(option);\n      }\n      var me = this;\n      select.onchange = function () {\n        me._update(this.value, path);\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      this._makeItem(path, label, select);\n    }\n\n    /**\n     * make a range object for numeric options\n     * @param {Array.<number>} arr\n     * @param {number} value\n     * @param {array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeRange\",\n    value: function _makeRange(arr, value, path) {\n      var defaultValue = arr[0];\n      var min = arr[1];\n      var max = arr[2];\n      var step = arr[3];\n      var range = document.createElement('input');\n      range.className = 'vis-configuration vis-config-range';\n      try {\n        range.type = 'range'; // not supported on IE9\n        range.min = min;\n        range.max = max;\n      }\n      // TODO: Add some error handling and remove this lint exception\n      catch (err) {} // eslint-disable-line no-empty\n      range.step = step;\n\n      // set up the popup settings in case they are needed.\n      var popupString = '';\n      var popupValue = 0;\n      if (value !== undefined) {\n        var factor = 1.20;\n        if (value < 0 && value * factor < min) {\n          range.min = Math.ceil(value * factor);\n          popupValue = range.min;\n          popupString = 'range increased';\n        } else if (value / factor < min) {\n          range.min = Math.ceil(value / factor);\n          popupValue = range.min;\n          popupString = 'range increased';\n        }\n        if (value * factor > max && max !== 1) {\n          range.max = Math.ceil(value * factor);\n          popupValue = range.max;\n          popupString = 'range increased';\n        }\n        range.value = value;\n      } else {\n        range.value = defaultValue;\n      }\n      var input = document.createElement('input');\n      input.className = 'vis-configuration vis-config-rangeinput';\n      input.value = Number(range.value);\n      var me = this;\n      range.onchange = function () {\n        input.value = this.value;\n        me._update(Number(this.value), path);\n      };\n      range.oninput = function () {\n        input.value = this.value;\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      var itemIndex = this._makeItem(path, label, range, input);\n\n      // if a popup is needed AND it has not been shown for this value, show it.\n      if (popupString !== '' && this.popupHistory[itemIndex] !== popupValue) {\n        this.popupHistory[itemIndex] = popupValue;\n        this._setupPopup(popupString, itemIndex);\n      }\n    }\n\n    /**\n     * make a button object\n     * @private\n     */\n  }, {\n    key: \"_makeButton\",\n    value: function _makeButton() {\n      var _this = this;\n      if (this.options.showButton === true) {\n        var generateButton = document.createElement('div');\n        generateButton.className = 'vis-configuration vis-config-button';\n        generateButton.innerHTML = 'generate options';\n        generateButton.onclick = function () {\n          _this._printOptions();\n        };\n        generateButton.onmouseover = function () {\n          generateButton.className = 'vis-configuration vis-config-button hover';\n        };\n        generateButton.onmouseout = function () {\n          generateButton.className = 'vis-configuration vis-config-button';\n        };\n        this.optionsContainer = document.createElement('div');\n        this.optionsContainer.className = 'vis-configuration vis-config-option-container';\n        this.domElements.push(this.optionsContainer);\n        this.domElements.push(generateButton);\n      }\n    }\n\n    /**\n     * prepare the popup\n     * @param {string} string\n     * @param {number} index\n     * @private\n     */\n  }, {\n    key: \"_setupPopup\",\n    value: function _setupPopup(string, index) {\n      var _this2 = this;\n      if (this.initialized === true && this.allowCreation === true && this.popupCounter < this.popupLimit) {\n        var div = document.createElement(\"div\");\n        div.id = \"vis-configuration-popup\";\n        div.className = \"vis-configuration-popup\";\n        div.innerHTML = availableUtils.xss(string);\n        div.onclick = function () {\n          _this2._removePopup();\n        };\n        this.popupCounter += 1;\n        this.popupDiv = {\n          html: div,\n          index: index\n        };\n      }\n    }\n\n    /**\n     * remove the popup from the dom\n     * @private\n     */\n  }, {\n    key: \"_removePopup\",\n    value: function _removePopup() {\n      if (this.popupDiv.html !== undefined) {\n        this.popupDiv.html.parentNode.removeChild(this.popupDiv.html);\n        clearTimeout(this.popupDiv.hideTimeout);\n        clearTimeout(this.popupDiv.deleteTimeout);\n        this.popupDiv = {};\n      }\n    }\n\n    /**\n     * Show the popup if it is needed.\n     * @private\n     */\n  }, {\n    key: \"_showPopupIfNeeded\",\n    value: function _showPopupIfNeeded() {\n      var _this3 = this;\n      if (this.popupDiv.html !== undefined) {\n        var correspondingElement = this.domElements[this.popupDiv.index];\n        var rect = correspondingElement.getBoundingClientRect();\n        this.popupDiv.html.style.left = rect.left + \"px\";\n        this.popupDiv.html.style.top = rect.top - 30 + \"px\"; // 30 is the height;\n        document.body.appendChild(this.popupDiv.html);\n        this.popupDiv.hideTimeout = _setTimeout(function () {\n          _this3.popupDiv.html.style.opacity = 0;\n        }, 1500);\n        this.popupDiv.deleteTimeout = _setTimeout(function () {\n          _this3._removePopup();\n        }, 1800);\n      }\n    }\n\n    /**\n     * make a checkbox for boolean options.\n     * @param {number} defaultValue\n     * @param {number} value\n     * @param {array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeCheckbox\",\n    value: function _makeCheckbox(defaultValue, value, path) {\n      var checkbox = document.createElement('input');\n      checkbox.type = 'checkbox';\n      checkbox.className = 'vis-configuration vis-config-checkbox';\n      checkbox.checked = defaultValue;\n      if (value !== undefined) {\n        checkbox.checked = value;\n        if (value !== defaultValue) {\n          if (_typeof$1(defaultValue) === 'object') {\n            if (value !== defaultValue.enabled) {\n              this.changedOptions.push({\n                path: path,\n                value: value\n              });\n            }\n          } else {\n            this.changedOptions.push({\n              path: path,\n              value: value\n            });\n          }\n        }\n      }\n      var me = this;\n      checkbox.onchange = function () {\n        me._update(this.checked, path);\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      this._makeItem(path, label, checkbox);\n    }\n\n    /**\n     * make a text input field for string options.\n     * @param {number} defaultValue\n     * @param {number} value\n     * @param {array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeTextInput\",\n    value: function _makeTextInput(defaultValue, value, path) {\n      var checkbox = document.createElement('input');\n      checkbox.type = 'text';\n      checkbox.className = 'vis-configuration vis-config-text';\n      checkbox.value = value;\n      if (value !== defaultValue) {\n        this.changedOptions.push({\n          path: path,\n          value: value\n        });\n      }\n      var me = this;\n      checkbox.onchange = function () {\n        me._update(this.value, path);\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      this._makeItem(path, label, checkbox);\n    }\n\n    /**\n     * make a color field with a color picker for color fields\n     * @param {Array.<number>} arr\n     * @param {number} value\n     * @param {array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_makeColorField\",\n    value: function _makeColorField(arr, value, path) {\n      var _this4 = this;\n      var defaultColor = arr[1];\n      var div = document.createElement('div');\n      value = value === undefined ? defaultColor : value;\n      if (value !== 'none') {\n        div.className = 'vis-configuration vis-config-colorBlock';\n        div.style.backgroundColor = value;\n      } else {\n        div.className = 'vis-configuration vis-config-colorBlock none';\n      }\n      value = value === undefined ? defaultColor : value;\n      div.onclick = function () {\n        _this4._showColorPicker(value, div, path);\n      };\n      var label = this._makeLabel(path[path.length - 1], path);\n      this._makeItem(path, label, div);\n    }\n\n    /**\n     * used by the color buttons to call the color picker.\n     * @param {number} value\n     * @param {HTMLElement} div\n     * @param {array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_showColorPicker\",\n    value: function _showColorPicker(value, div, path) {\n      var _this5 = this;\n      // clear the callback from this div\n      div.onclick = function () {};\n      this.colorPicker.insertTo(div);\n      this.colorPicker.show();\n      this.colorPicker.setColor(value);\n      this.colorPicker.setUpdateCallback(function (color) {\n        var colorString = 'rgba(' + color.r + ',' + color.g + ',' + color.b + ',' + color.a + ')';\n        div.style.backgroundColor = colorString;\n        _this5._update(colorString, path);\n      });\n\n      // on close of the colorpicker, restore the callback.\n      this.colorPicker.setCloseCallback(function () {\n        div.onclick = function () {\n          _this5._showColorPicker(value, div, path);\n        };\n      });\n    }\n\n    /**\n     * parse an object and draw the correct items\n     * @param {Object} obj\n     * @param {array} [path=[]]    | where to look for the actual option\n     * @param {boolean} [checkOnly=false]\n     * @returns {boolean}\n     * @private\n     */\n  }, {\n    key: \"_handleObject\",\n    value: function _handleObject(obj) {\n      var path = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var checkOnly = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n      var show = false;\n      var filter = _filterInstanceProperty(this.options);\n      var visibleInSet = false;\n      for (var subObj in obj) {\n        if (obj.hasOwnProperty(subObj)) {\n          show = true;\n          var item = obj[subObj];\n          var newPath = availableUtils.copyAndExtendArray(path, subObj);\n          if (typeof filter === 'function') {\n            show = filter(subObj, path);\n\n            // if needed we must go deeper into the object.\n            if (show === false) {\n              if (!_Array$isArray(item) && typeof item !== 'string' && typeof item !== 'boolean' && item instanceof Object) {\n                this.allowCreation = false;\n                show = this._handleObject(item, newPath, true);\n                this.allowCreation = checkOnly === false;\n              }\n            }\n          }\n          if (show !== false) {\n            visibleInSet = true;\n            var value = this._getValue(newPath);\n            if (_Array$isArray(item)) {\n              this._handleArray(item, value, newPath);\n            } else if (typeof item === 'string') {\n              this._makeTextInput(item, value, newPath);\n            } else if (typeof item === 'boolean') {\n              this._makeCheckbox(item, value, newPath);\n            } else if (item instanceof Object) {\n              // collapse the physics options that are not enabled\n              var draw = true;\n              if (_indexOfInstanceProperty(path).call(path, 'physics') !== -1) {\n                if (this.moduleOptions.physics.solver !== subObj) {\n                  draw = false;\n                }\n              }\n              if (draw === true) {\n                // initially collapse options with an disabled enabled option.\n                if (item.enabled !== undefined) {\n                  var enabledPath = availableUtils.copyAndExtendArray(newPath, 'enabled');\n                  var enabledValue = this._getValue(enabledPath);\n                  if (enabledValue === true) {\n                    var label = this._makeLabel(subObj, newPath, true);\n                    this._makeItem(newPath, label);\n                    visibleInSet = this._handleObject(item, newPath) || visibleInSet;\n                  } else {\n                    this._makeCheckbox(item, enabledValue, newPath);\n                  }\n                } else {\n                  var _label = this._makeLabel(subObj, newPath, true);\n                  this._makeItem(newPath, _label);\n                  visibleInSet = this._handleObject(item, newPath) || visibleInSet;\n                }\n              }\n            } else {\n              console.error('dont know how to handle', item, subObj, newPath);\n            }\n          }\n        }\n      }\n      return visibleInSet;\n    }\n\n    /**\n     * handle the array type of option\n     * @param {Array.<number>} arr\n     * @param {number} value\n     * @param {array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_handleArray\",\n    value: function _handleArray(arr, value, path) {\n      if (typeof arr[0] === 'string' && arr[0] === 'color') {\n        this._makeColorField(arr, value, path);\n        if (arr[1] !== value) {\n          this.changedOptions.push({\n            path: path,\n            value: value\n          });\n        }\n      } else if (typeof arr[0] === 'string') {\n        this._makeDropdown(arr, value, path);\n        if (arr[0] !== value) {\n          this.changedOptions.push({\n            path: path,\n            value: value\n          });\n        }\n      } else if (typeof arr[0] === 'number') {\n        this._makeRange(arr, value, path);\n        if (arr[0] !== value) {\n          this.changedOptions.push({\n            path: path,\n            value: Number(value)\n          });\n        }\n      }\n    }\n\n    /**\n     * called to update the network with the new settings.\n     * @param {number} value\n     * @param {array} path    | where to look for the actual option\n     * @private\n     */\n  }, {\n    key: \"_update\",\n    value: function _update(value, path) {\n      var options = this._constructOptions(value, path);\n      if (this.parent.body && this.parent.body.emitter && this.parent.body.emitter.emit) {\n        this.parent.body.emitter.emit(\"configChange\", options);\n      }\n      this.initialized = true;\n      this.parent.setOptions(options);\n    }\n\n    /**\n     *\n     * @param {string|Boolean} value\n     * @param {Array.<string>} path\n     * @param {{}} optionsObj\n     * @returns {{}}\n     * @private\n     */\n  }, {\n    key: \"_constructOptions\",\n    value: function _constructOptions(value, path) {\n      var optionsObj = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n      var pointer = optionsObj;\n\n      // when dropdown boxes can be string or boolean, we typecast it into correct types\n      value = value === 'true' ? true : value;\n      value = value === 'false' ? false : value;\n      for (var i = 0; i < path.length; i++) {\n        if (path[i] !== 'global') {\n          if (pointer[path[i]] === undefined) {\n            pointer[path[i]] = {};\n          }\n          if (i !== path.length - 1) {\n            pointer = pointer[path[i]];\n          } else {\n            pointer[path[i]] = value;\n          }\n        }\n      }\n      return optionsObj;\n    }\n\n    /**\n     * @private\n     */\n  }, {\n    key: \"_printOptions\",\n    value: function _printOptions() {\n      var options = this.getOptions();\n      this.optionsContainer.innerHTML = '<pre>var options = ' + _JSON$stringify(options, null, 2) + '</pre>';\n    }\n\n    /**\n     *\n     * @returns {{}} options\n     */\n  }, {\n    key: \"getOptions\",\n    value: function getOptions() {\n      var options = {};\n      for (var i = 0; i < this.changedOptions.length; i++) {\n        this._constructOptions(this.changedOptions[i].value, this.changedOptions[i].path, options);\n      }\n      return options;\n    }\n  }]);\n  return Configurator;\n}();\n\nfunction _createSuper$1(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct$1(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct$1() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/**\n * Create a timeline visualization\n * @extends Core\n */\nvar Timeline = /*#__PURE__*/function (_Core) {\n  _inherits(Timeline, _Core);\n  var _super = _createSuper$1(Timeline);\n  /**\n  * @param {HTMLElement} container\n  * @param {vis.DataSet | vis.DataView | Array} [items]\n  * @param {vis.DataSet | vis.DataView | Array} [groups]\n  * @param {Object} [options]  See Timeline.setOptions for the available options.\n  * @constructor Timeline\n  */\n  function Timeline(container, items, groups, options) {\n    var _context2, _context3, _context4, _context5, _context6, _context7, _context8;\n    var _this;\n    _classCallCheck(this, Timeline);\n    _this = _super.call(this);\n    _this.initTime = new Date();\n    _this.itemsDone = false;\n    if (!(_assertThisInitialized(_this) instanceof Timeline)) {\n      throw new SyntaxError('Constructor must be called with the new operator');\n    }\n\n    // if the third element is options, the forth is groups (optionally);\n    if (!(_Array$isArray(groups) || isDataViewLike(groups)) && groups instanceof Object) {\n      var forthArgument = options;\n      options = groups;\n      groups = forthArgument;\n    }\n\n    // TODO: REMOVE THIS in the next MAJOR release\n    // see https://github.com/almende/vis/issues/2511\n    if (options && options.throttleRedraw) {\n      console.warn(\"Timeline option \\\"throttleRedraw\\\" is DEPRICATED and no longer supported. It will be removed in the next MAJOR release.\");\n    }\n    var me = _assertThisInitialized(_this);\n    _this.defaultOptions = {\n      autoResize: true,\n      longSelectPressTime: 251,\n      orientation: {\n        axis: 'bottom',\n        // axis orientation: 'bottom', 'top', or 'both'\n        item: 'bottom' // not relevant\n      },\n\n      moment: moment$4\n    };\n    _this.options = availableUtils.deepExtend({}, _this.defaultOptions);\n    options && availableUtils.setupXSSProtection(options.xss);\n\n    // Create the DOM, props, and emitter\n    _this._create(container);\n    if (!options || options && typeof options.rtl == \"undefined\") {\n      _this.dom.root.style.visibility = 'hidden';\n      var directionFromDom;\n      var domNode = _this.dom.root;\n      while (!directionFromDom && domNode) {\n        directionFromDom = window.getComputedStyle(domNode, null).direction;\n        domNode = domNode.parentElement;\n      }\n      _this.options.rtl = directionFromDom && directionFromDom.toLowerCase() == \"rtl\";\n    } else {\n      _this.options.rtl = options.rtl;\n    }\n    if (options) {\n      if (options.rollingMode) {\n        _this.options.rollingMode = options.rollingMode;\n      }\n      if (options.onInitialDrawComplete) {\n        _this.options.onInitialDrawComplete = options.onInitialDrawComplete;\n      }\n      if (options.onTimeout) {\n        _this.options.onTimeout = options.onTimeout;\n      }\n      if (options.loadingScreenTemplate) {\n        _this.options.loadingScreenTemplate = options.loadingScreenTemplate;\n      }\n    }\n\n    // Prepare loading screen\n    var loadingScreenFragment = document.createElement('div');\n    if (_this.options.loadingScreenTemplate) {\n      var _context;\n      var templateFunction = _bindInstanceProperty$1(_context = _this.options.loadingScreenTemplate).call(_context, _assertThisInitialized(_this));\n      var loadingScreen = templateFunction(_this.dom.loadingScreen);\n      if (loadingScreen instanceof Object && !(loadingScreen instanceof Element)) {\n        templateFunction(loadingScreenFragment);\n      } else {\n        if (loadingScreen instanceof Element) {\n          loadingScreenFragment.innerHTML = '';\n          loadingScreenFragment.appendChild(loadingScreen);\n        } else if (loadingScreen != undefined) {\n          loadingScreenFragment.innerHTML = availableUtils.xss(loadingScreen);\n        }\n      }\n    }\n    _this.dom.loadingScreen.appendChild(loadingScreenFragment);\n\n    // all components listed here will be repainted automatically\n    _this.components = [];\n    _this.body = {\n      dom: _this.dom,\n      domProps: _this.props,\n      emitter: {\n        on: _bindInstanceProperty$1(_context2 = _this.on).call(_context2, _assertThisInitialized(_this)),\n        off: _bindInstanceProperty$1(_context3 = _this.off).call(_context3, _assertThisInitialized(_this)),\n        emit: _bindInstanceProperty$1(_context4 = _this.emit).call(_context4, _assertThisInitialized(_this))\n      },\n      hiddenDates: [],\n      util: {\n        getScale: function getScale() {\n          return me.timeAxis.step.scale;\n        },\n        getStep: function getStep() {\n          return me.timeAxis.step.step;\n        },\n        toScreen: _bindInstanceProperty$1(_context5 = me._toScreen).call(_context5, me),\n        toGlobalScreen: _bindInstanceProperty$1(_context6 = me._toGlobalScreen).call(_context6, me),\n        // this refers to the root.width\n        toTime: _bindInstanceProperty$1(_context7 = me._toTime).call(_context7, me),\n        toGlobalTime: _bindInstanceProperty$1(_context8 = me._toGlobalTime).call(_context8, me)\n      }\n    };\n\n    // range\n    _this.range = new Range(_this.body, _this.options);\n    _this.components.push(_this.range);\n    _this.body.range = _this.range;\n\n    // time axis\n    _this.timeAxis = new TimeAxis(_this.body, _this.options);\n    _this.timeAxis2 = null; // used in case of orientation option 'both'\n    _this.components.push(_this.timeAxis);\n\n    // current time bar\n    _this.currentTime = new CurrentTime(_this.body, _this.options);\n    _this.components.push(_this.currentTime);\n\n    // item set\n    _this.itemSet = new ItemSet(_this.body, _this.options);\n    _this.components.push(_this.itemSet);\n    _this.itemsData = null; // DataSet\n    _this.groupsData = null; // DataSet\n\n    function emit(eventName, event) {\n      if (!me.hasListeners(eventName)) {\n        return;\n      }\n      me.emit(eventName, me.getEventProperties(event));\n    }\n    _this.dom.root.onclick = function (event) {\n      emit('click', event);\n    };\n    _this.dom.root.ondblclick = function (event) {\n      emit('doubleClick', event);\n    };\n    _this.dom.root.oncontextmenu = function (event) {\n      emit('contextmenu', event);\n    };\n    _this.dom.root.onmouseover = function (event) {\n      emit('mouseOver', event);\n    };\n    if (window.PointerEvent) {\n      _this.dom.root.onpointerdown = function (event) {\n        emit('mouseDown', event);\n      };\n      _this.dom.root.onpointermove = function (event) {\n        emit('mouseMove', event);\n      };\n      _this.dom.root.onpointerup = function (event) {\n        emit('mouseUp', event);\n      };\n    } else {\n      _this.dom.root.onmousemove = function (event) {\n        emit('mouseMove', event);\n      };\n      _this.dom.root.onmousedown = function (event) {\n        emit('mouseDown', event);\n      };\n      _this.dom.root.onmouseup = function (event) {\n        emit('mouseUp', event);\n      };\n    }\n\n    //Single time autoscale/fit\n    _this.initialFitDone = false;\n    _this.on('changed', function () {\n      if (me.itemsData == null) return;\n      if (!me.initialFitDone && !me.options.rollingMode) {\n        me.initialFitDone = true;\n        if (me.options.start != undefined || me.options.end != undefined) {\n          if (me.options.start == undefined || me.options.end == undefined) {\n            var range = me.getItemRange();\n          }\n          var start = me.options.start != undefined ? me.options.start : range.min;\n          var end = me.options.end != undefined ? me.options.end : range.max;\n          me.setWindow(start, end, {\n            animation: false\n          });\n        } else {\n          me.fit({\n            animation: false\n          });\n        }\n      }\n      if (!me.initialDrawDone && (me.initialRangeChangeDone || !me.options.start && !me.options.end || me.options.rollingMode)) {\n        me.initialDrawDone = true;\n        me.itemSet.initialDrawDone = true;\n        me.dom.root.style.visibility = 'visible';\n        me.dom.loadingScreen.parentNode.removeChild(me.dom.loadingScreen);\n        if (me.options.onInitialDrawComplete) {\n          _setTimeout(function () {\n            return me.options.onInitialDrawComplete();\n          }, 0);\n        }\n      }\n    });\n    _this.on('destroyTimeline', function () {\n      me.destroy();\n    });\n\n    // apply options\n    if (options) {\n      _this.setOptions(options);\n    }\n    _this.body.emitter.on('fit', function (args) {\n      _this._onFit(args);\n      _this.redraw();\n    });\n\n    // IMPORTANT: THIS HAPPENS BEFORE SET ITEMS!\n    if (groups) {\n      _this.setGroups(groups);\n    }\n\n    // create itemset\n    if (items) {\n      _this.setItems(items);\n    }\n\n    // draw for the first time\n    _this._redraw();\n    return _this;\n  }\n\n  /**\n   * Load a configurator\n   * @return {Object}\n   * @private\n   */\n  _createClass(Timeline, [{\n    key: \"_createConfigurator\",\n    value: function _createConfigurator() {\n      return new Configurator(this, this.dom.container, configureOptions$1);\n    }\n\n    /**\n     * Force a redraw. The size of all items will be recalculated.\n     * Can be useful to manually redraw when option autoResize=false and the window\n     * has been resized, or when the items CSS has been changed.\n     *\n     * Note: this function will be overridden on construction with a trottled version\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      this.itemSet && this.itemSet.markDirty({\n        refreshItems: true\n      });\n      this._redraw();\n    }\n\n    /**\n     * Remove an item from the group\n     * @param {object} options\n     */\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      // validate options\n      var errorFound = Validator.validate(options, allOptions$1);\n      if (errorFound === true) {\n        console.log('%cErrors have been found in the supplied options object.', printStyle);\n      }\n      Core.prototype.setOptions.call(this, options);\n      if ('type' in options) {\n        if (options.type !== this.options.type) {\n          this.options.type = options.type;\n\n          // force recreation of all items\n          var itemsData = this.itemsData;\n          if (itemsData) {\n            var selection = this.getSelection();\n            this.setItems(null); // remove all\n            this.setItems(itemsData.rawDS); // add all\n            this.setSelection(selection); // restore selection\n          }\n        }\n      }\n    }\n\n    /**\n     * Set items\n     * @param {vis.DataSet | Array | null} items\n     */\n  }, {\n    key: \"setItems\",\n    value: function setItems(items) {\n      this.itemsDone = false;\n\n      // convert to type DataSet when needed\n      var newDataSet;\n      if (!items) {\n        newDataSet = null;\n      } else if (isDataViewLike(items)) {\n        newDataSet = typeCoerceDataSet(items);\n      } else {\n        // turn an array into a dataset\n        newDataSet = typeCoerceDataSet(new DataSet(items));\n      }\n\n      // set items\n      if (this.itemsData) {\n        // stop maintaining a coerced version of the old data set\n        this.itemsData.dispose();\n      }\n      this.itemsData = newDataSet;\n      this.itemSet && this.itemSet.setItems(newDataSet != null ? newDataSet.rawDS : null);\n    }\n\n    /**\n     * Set groups\n     * @param {vis.DataSet | Array} groups\n     */\n  }, {\n    key: \"setGroups\",\n    value: function setGroups(groups) {\n      // convert to type DataSet when needed\n      var newDataSet;\n      var filter = function filter(group) {\n        return group.visible !== false;\n      };\n      if (!groups) {\n        newDataSet = null;\n      } else {\n        // If groups is array, turn to DataSet & build dataview from that\n        if (_Array$isArray(groups)) groups = new DataSet(groups);\n        newDataSet = new DataView(groups, {\n          filter: filter\n        });\n      }\n\n      // This looks weird but it's necessary to prevent memory leaks.\n      //\n      // The problem is that the DataView will exist as long as the DataSet it's\n      // connected to. This will force it to swap the groups DataSet for it's own\n      // DataSet. In this arrangement it will become unreferenced from the outside\n      // and garbage collected.\n      //\n      // IMPORTANT NOTE: If `this.groupsData` is a DataView was created in this\n      // method. Even if the original is a DataView already a new one has been\n      // created and assigned to `this.groupsData`. In case this changes in the\n      // future it will be necessary to rework this!!!!\n      if (this.groupsData != null && typeof this.groupsData.setData === \"function\") {\n        this.groupsData.setData(null);\n      }\n      this.groupsData = newDataSet;\n      this.itemSet.setGroups(newDataSet);\n    }\n\n    /**\n     * Set both items and groups in one go\n     * @param {{items: (Array | vis.DataSet), groups: (Array | vis.DataSet)}} data\n     */\n  }, {\n    key: \"setData\",\n    value: function setData(data) {\n      if (data && data.groups) {\n        this.setGroups(data.groups);\n      }\n      if (data && data.items) {\n        this.setItems(data.items);\n      }\n    }\n\n    /**\n     * Set selected items by their id. Replaces the current selection\n     * Unknown id's are silently ignored.\n     * @param {string[] | string} [ids]  An array with zero or more id's of the items to be\n     *                                selected. If ids is an empty array, all items will be\n     *                                unselected.\n     * @param {Object} [options]      Available options:\n     *                                `focus: boolean`\n     *                                    If true, focus will be set to the selected item(s)\n     *                                `animation: boolean | {duration: number, easingFunction: string}`\n     *                                    If true (default), the range is animated\n     *                                    smoothly to the new window. An object can be\n     *                                    provided to specify duration and easing function.\n     *                                    Default duration is 500 ms, and default easing\n     *                                    function is 'easeInOutQuad'.\n     *                                    Only applicable when option focus is true.\n     */\n  }, {\n    key: \"setSelection\",\n    value: function setSelection(ids, options) {\n      this.itemSet && this.itemSet.setSelection(ids);\n      if (options && options.focus) {\n        this.focus(ids, options);\n      }\n    }\n\n    /**\n     * Get the selected items by their id\n     * @return {Array} ids  The ids of the selected items\n     */\n  }, {\n    key: \"getSelection\",\n    value: function getSelection() {\n      return this.itemSet && this.itemSet.getSelection() || [];\n    }\n\n    /**\n     * Adjust the visible window such that the selected item (or multiple items)\n     * are centered on screen.\n     * @param {string | String[]} id     An item id or array with item ids\n     * @param {Object} [options]      Available options:\n     *                                `animation: boolean | {duration: number, easingFunction: string}`\n     *                                    If true (default), the range is animated\n     *                                    smoothly to the new window. An object can be\n     *                                    provided to specify duration and easing function.\n     *                                    Default duration is 500 ms, and default easing\n     *                                    function is 'easeInOutQuad'.\n     *                                `zoom: boolean`\n     *                                    If true (default), the timeline will\n     *                                    zoom on the element after focus it.\n     */\n  }, {\n    key: \"focus\",\n    value: function focus(id, options) {\n      if (!this.itemsData || id == undefined) return;\n      var ids = _Array$isArray(id) ? id : [id];\n\n      // get the specified item(s)\n      var itemsData = this.itemsData.get(ids);\n\n      // calculate minimum start and maximum end of specified items\n      var start = null;\n      var end = null;\n      _forEachInstanceProperty(itemsData).call(itemsData, function (itemData) {\n        var s = itemData.start.valueOf();\n        var e = 'end' in itemData ? itemData.end.valueOf() : itemData.start.valueOf();\n        if (start === null || s < start) {\n          start = s;\n        }\n        if (end === null || e > end) {\n          end = e;\n        }\n      });\n      if (start !== null && end !== null) {\n        var me = this;\n        // Use the first item for the vertical focus\n        var item = this.itemSet.items[ids[0]];\n        var startPos = this._getScrollTop() * -1;\n        var initialVerticalScroll = null;\n\n        // Setup a handler for each frame of the vertical scroll\n        var verticalAnimationFrame = function verticalAnimationFrame(ease, willDraw, done) {\n          var verticalScroll = getItemVerticalScroll(me, item);\n          if (verticalScroll === false) {\n            return; // We don't need to scroll, so do nothing\n          }\n\n          if (!initialVerticalScroll) {\n            initialVerticalScroll = verticalScroll;\n          }\n          if (initialVerticalScroll.itemTop == verticalScroll.itemTop && !initialVerticalScroll.shouldScroll) {\n            return; // We don't need to scroll, so do nothing\n          } else if (initialVerticalScroll.itemTop != verticalScroll.itemTop && verticalScroll.shouldScroll) {\n            // The redraw shifted elements, so reset the animation to correct\n            initialVerticalScroll = verticalScroll;\n            startPos = me._getScrollTop() * -1;\n          }\n          var from = startPos;\n          var to = initialVerticalScroll.scrollOffset;\n          var scrollTop = done ? to : from + (to - from) * ease;\n          me._setScrollTop(-scrollTop);\n          if (!willDraw) {\n            me._redraw();\n          }\n        };\n\n        // Enforces the final vertical scroll position\n        var setFinalVerticalPosition = function setFinalVerticalPosition() {\n          var finalVerticalScroll = getItemVerticalScroll(me, item);\n          if (finalVerticalScroll.shouldScroll && finalVerticalScroll.itemTop != initialVerticalScroll.itemTop) {\n            me._setScrollTop(-finalVerticalScroll.scrollOffset);\n            me._redraw();\n          }\n        };\n\n        // Perform one last check at the end to make sure the final vertical\n        // position is correct\n        var finalVerticalCallback = function finalVerticalCallback() {\n          // Double check we ended at the proper scroll position\n          setFinalVerticalPosition();\n\n          // Let the redraw settle and finalize the position.\n          _setTimeout(setFinalVerticalPosition, 100);\n        };\n\n        // calculate the new middle and interval for the window\n        var zoom = options && options.zoom !== undefined ? options.zoom : true;\n        var middle = (start + end) / 2;\n        var interval = zoom ? (end - start) * 1.1 : Math.max(this.range.end - this.range.start, (end - start) * 1.1);\n        var animation = options && options.animation !== undefined ? options.animation : true;\n        if (!animation) {\n          // We aren't animating so set a default so that the final callback forces the vertical location\n          initialVerticalScroll = {\n            shouldScroll: false,\n            scrollOffset: -1,\n            itemTop: -1\n          };\n        }\n        this.range.setRange(middle - interval / 2, middle + interval / 2, {\n          animation: animation\n        }, finalVerticalCallback, verticalAnimationFrame);\n      }\n    }\n\n    /**\n     * Set Timeline window such that it fits all items\n     * @param {Object} [options]  Available options:\n     *                                `animation: boolean | {duration: number, easingFunction: string}`\n     *                                    If true (default), the range is animated\n     *                                    smoothly to the new window. An object can be\n     *                                    provided to specify duration and easing function.\n     *                                    Default duration is 500 ms, and default easing\n     *                                    function is 'easeInOutQuad'.\n     * @param {function} [callback]\n     */\n  }, {\n    key: \"fit\",\n    value: function fit(options, callback) {\n      var animation = options && options.animation !== undefined ? options.animation : true;\n      var range;\n      if (this.itemsData.length === 1 && this.itemsData.get()[0].end === undefined) {\n        // a single item -> don't fit, just show a range around the item from -4 to +3 days\n        range = this.getDataRange();\n        this.moveTo(range.min.valueOf(), {\n          animation: animation\n        }, callback);\n      } else {\n        // exactly fit the items (plus a small margin)\n        range = this.getItemRange();\n        this.range.setRange(range.min, range.max, {\n          animation: animation\n        }, callback);\n      }\n    }\n\n    /**\n     * Determine the range of the items, taking into account their actual width\n     * and a margin of 10 pixels on both sides.\n     *\n     * @returns {{min: Date, max: Date}}\n     */\n  }, {\n    key: \"getItemRange\",\n    value: function getItemRange() {\n      var _this2 = this;\n      // get a rough approximation for the range based on the items start and end dates\n      var range = this.getDataRange();\n      var min = range.min !== null ? range.min.valueOf() : null;\n      var max = range.max !== null ? range.max.valueOf() : null;\n      var minItem = null;\n      var maxItem = null;\n      if (min != null && max != null) {\n        var interval = max - min; // ms\n        if (interval <= 0) {\n          interval = 10;\n        }\n        var factor = interval / this.props.center.width;\n        var redrawQueue = {};\n        var redrawQueueLength = 0;\n\n        // collect redraw functions\n        _forEachInstanceProperty(availableUtils).call(availableUtils, this.itemSet.items, function (item, key) {\n          if (item.groupShowing) {\n            var returnQueue = true;\n            redrawQueue[key] = item.redraw(returnQueue);\n            redrawQueueLength = redrawQueue[key].length;\n          }\n        });\n        var needRedraw = redrawQueueLength > 0;\n        if (needRedraw) {\n          var _loop = function _loop(i) {\n            _forEachInstanceProperty(availableUtils).call(availableUtils, redrawQueue, function (fns) {\n              fns[i]();\n            });\n          };\n          // redraw all regular items\n          for (var i = 0; i < redrawQueueLength; i++) {\n            _loop(i);\n          }\n        }\n\n        // calculate the date of the left side and right side of the items given\n        _forEachInstanceProperty(availableUtils).call(availableUtils, this.itemSet.items, function (item) {\n          var start = getStart(item);\n          var end = getEnd(item);\n          var startSide;\n          var endSide;\n          if (_this2.options.rtl) {\n            startSide = start - (item.getWidthRight() + 10) * factor;\n            endSide = end + (item.getWidthLeft() + 10) * factor;\n          } else {\n            startSide = start - (item.getWidthLeft() + 10) * factor;\n            endSide = end + (item.getWidthRight() + 10) * factor;\n          }\n          if (startSide < min) {\n            min = startSide;\n            minItem = item;\n          }\n          if (endSide > max) {\n            max = endSide;\n            maxItem = item;\n          }\n        });\n        if (minItem && maxItem) {\n          var lhs = minItem.getWidthLeft() + 10;\n          var rhs = maxItem.getWidthRight() + 10;\n          var delta = this.props.center.width - lhs - rhs; // px\n\n          if (delta > 0) {\n            if (this.options.rtl) {\n              min = getStart(minItem) - rhs * interval / delta; // ms\n              max = getEnd(maxItem) + lhs * interval / delta; // ms\n            } else {\n              min = getStart(minItem) - lhs * interval / delta; // ms\n              max = getEnd(maxItem) + rhs * interval / delta; // ms\n            }\n          }\n        }\n      }\n\n      return {\n        min: min != null ? new Date(min) : null,\n        max: max != null ? new Date(max) : null\n      };\n    }\n\n    /**\n     * Calculate the data range of the items start and end dates\n     * @returns {{min: Date, max: Date}}\n     */\n  }, {\n    key: \"getDataRange\",\n    value: function getDataRange() {\n      var min = null;\n      var max = null;\n      if (this.itemsData) {\n        var _context9;\n        _forEachInstanceProperty(_context9 = this.itemsData).call(_context9, function (item) {\n          var start = availableUtils.convert(item.start, 'Date').valueOf();\n          var end = availableUtils.convert(item.end != undefined ? item.end : item.start, 'Date').valueOf();\n          if (min === null || start < min) {\n            min = start;\n          }\n          if (max === null || end > max) {\n            max = end;\n          }\n        });\n      }\n      return {\n        min: min != null ? new Date(min) : null,\n        max: max != null ? new Date(max) : null\n      };\n    }\n\n    /**\n     * Generate Timeline related information from an event\n     * @param {Event} event\n     * @return {Object} An object with related information, like on which area\n     *                  The event happened, whether clicked on an item, etc.\n     */\n  }, {\n    key: \"getEventProperties\",\n    value: function getEventProperties(event) {\n      var clientX = event.center ? event.center.x : event.clientX;\n      var clientY = event.center ? event.center.y : event.clientY;\n      var centerContainerRect = this.dom.centerContainer.getBoundingClientRect();\n      var x = this.options.rtl ? centerContainerRect.right - clientX : clientX - centerContainerRect.left;\n      var y = clientY - centerContainerRect.top;\n      var item = this.itemSet.itemFromTarget(event);\n      var group = this.itemSet.groupFromTarget(event);\n      var customTime = CustomTime.customTimeFromTarget(event);\n      var snap = this.itemSet.options.snap || null;\n      var scale = this.body.util.getScale();\n      var step = this.body.util.getStep();\n      var time = this._toTime(x);\n      var snappedTime = snap ? snap(time, scale, step) : time;\n      var element = availableUtils.getTarget(event);\n      var what = null;\n      if (item != null) {\n        what = 'item';\n      } else if (customTime != null) {\n        what = 'custom-time';\n      } else if (availableUtils.hasParent(element, this.timeAxis.dom.foreground)) {\n        what = 'axis';\n      } else if (this.timeAxis2 && availableUtils.hasParent(element, this.timeAxis2.dom.foreground)) {\n        what = 'axis';\n      } else if (availableUtils.hasParent(element, this.itemSet.dom.labelSet)) {\n        what = 'group-label';\n      } else if (availableUtils.hasParent(element, this.currentTime.bar)) {\n        what = 'current-time';\n      } else if (availableUtils.hasParent(element, this.dom.center)) {\n        what = 'background';\n      }\n      return {\n        event: event,\n        item: item ? item.id : null,\n        isCluster: item ? !!item.isCluster : false,\n        items: item ? item.items || [] : null,\n        group: group ? group.groupId : null,\n        customTime: customTime ? customTime.options.id : null,\n        what: what,\n        pageX: event.srcEvent ? event.srcEvent.pageX : event.pageX,\n        pageY: event.srcEvent ? event.srcEvent.pageY : event.pageY,\n        x: x,\n        y: y,\n        time: time,\n        snappedTime: snappedTime\n      };\n    }\n\n    /**\n     * Toggle Timeline rolling mode\n     */\n  }, {\n    key: \"toggleRollingMode\",\n    value: function toggleRollingMode() {\n      if (this.range.rolling) {\n        this.range.stopRolling();\n      } else {\n        if (this.options.rollingMode == undefined) {\n          this.setOptions(this.options);\n        }\n        this.range.startRolling();\n      }\n    }\n\n    /**\n     * redraw\n     * @private\n     */\n  }, {\n    key: \"_redraw\",\n    value: function _redraw() {\n      Core.prototype._redraw.call(this);\n    }\n\n    /**\n     * on fit callback\n     * @param {object} args\n     * @private\n     */\n  }, {\n    key: \"_onFit\",\n    value: function _onFit(args) {\n      var start = args.start,\n        end = args.end,\n        animation = args.animation;\n      if (!end) {\n        this.moveTo(start.valueOf(), {\n          animation: animation\n        });\n      } else {\n        this.range.setRange(start, end, {\n          animation: animation\n        });\n      }\n    }\n  }]);\n  return Timeline;\n}(Core);\nfunction getStart(item) {\n  return availableUtils.convert(item.data.start, 'Date').valueOf();\n}\n\n/**\n *\n * @param {timeline.Item} item\n * @returns {number}\n */\nfunction getEnd(item) {\n  var end = item.data.end != undefined ? item.data.end : item.data.start;\n  return availableUtils.convert(end, 'Date').valueOf();\n}\n\n/**\n * @param {vis.Timeline} timeline\n * @param {timeline.Item} item\n * @return {{shouldScroll: bool, scrollOffset: number, itemTop: number}}\n */\nfunction getItemVerticalScroll(timeline, item) {\n  if (!item.parent) {\n    // The item no longer exists, so ignore this focus.\n    return false;\n  }\n  var itemsetHeight = timeline.options.rtl ? timeline.props.rightContainer.height : timeline.props.leftContainer.height;\n  var contentHeight = timeline.props.center.height;\n  var group = item.parent;\n  var offset = group.top;\n  var shouldScroll = true;\n  var orientation = timeline.timeAxis.options.orientation.axis;\n  var itemTop = function itemTop() {\n    if (orientation == \"bottom\") {\n      return group.height - item.top - item.height;\n    } else {\n      return item.top;\n    }\n  };\n  var currentScrollHeight = timeline._getScrollTop() * -1;\n  var targetOffset = offset + itemTop();\n  var height = item.height;\n  if (targetOffset < currentScrollHeight) {\n    if (offset + itemsetHeight <= offset + itemTop() + height) {\n      offset += itemTop() - timeline.itemSet.options.margin.item.vertical;\n    }\n  } else if (targetOffset + height > currentScrollHeight + itemsetHeight) {\n    offset += itemTop() + height - itemsetHeight + timeline.itemSet.options.margin.item.vertical;\n  } else {\n    shouldScroll = false;\n  }\n  offset = Math.min(offset, contentHeight - itemsetHeight);\n  return {\n    shouldScroll: shouldScroll,\n    scrollOffset: offset,\n    itemTop: targetOffset\n  };\n}\n\n/** DataScale */\nvar DataScale = /*#__PURE__*/function () {\n  /**\n   *\n   * @param {number} start\n   * @param {number} end\n   * @param {boolean} autoScaleStart\n   * @param {boolean} autoScaleEnd\n   * @param {number} containerHeight\n   * @param {number} majorCharHeight\n   * @param {boolean} zeroAlign\n   * @param {function} formattingFunction\n   * @constructor DataScale\n   */\n  function DataScale(start, end, autoScaleStart, autoScaleEnd, containerHeight, majorCharHeight) {\n    var zeroAlign = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : false;\n    var formattingFunction = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : false;\n    _classCallCheck(this, DataScale);\n    this.majorSteps = [1, 2, 5, 10];\n    this.minorSteps = [0.25, 0.5, 1, 2];\n    this.customLines = null;\n    this.containerHeight = containerHeight;\n    this.majorCharHeight = majorCharHeight;\n    this._start = start;\n    this._end = end;\n    this.scale = 1;\n    this.minorStepIdx = -1;\n    this.magnitudefactor = 1;\n    this.determineScale();\n    this.zeroAlign = zeroAlign;\n    this.autoScaleStart = autoScaleStart;\n    this.autoScaleEnd = autoScaleEnd;\n    this.formattingFunction = formattingFunction;\n    if (autoScaleStart || autoScaleEnd) {\n      var me = this;\n      var roundToMinor = function roundToMinor(value) {\n        var rounded = value - value % (me.magnitudefactor * me.minorSteps[me.minorStepIdx]);\n        if (value % (me.magnitudefactor * me.minorSteps[me.minorStepIdx]) > 0.5 * (me.magnitudefactor * me.minorSteps[me.minorStepIdx])) {\n          return rounded + me.magnitudefactor * me.minorSteps[me.minorStepIdx];\n        } else {\n          return rounded;\n        }\n      };\n      if (autoScaleStart) {\n        this._start -= this.magnitudefactor * 2 * this.minorSteps[this.minorStepIdx];\n        this._start = roundToMinor(this._start);\n      }\n      if (autoScaleEnd) {\n        this._end += this.magnitudefactor * this.minorSteps[this.minorStepIdx];\n        this._end = roundToMinor(this._end);\n      }\n      this.determineScale();\n    }\n  }\n\n  /**\n   * set chart height\n   * @param {number} majorCharHeight \n   */\n  _createClass(DataScale, [{\n    key: \"setCharHeight\",\n    value: function setCharHeight(majorCharHeight) {\n      this.majorCharHeight = majorCharHeight;\n    }\n\n    /**\n     * set height\n     * @param {number} containerHeight \n     */\n  }, {\n    key: \"setHeight\",\n    value: function setHeight(containerHeight) {\n      this.containerHeight = containerHeight;\n    }\n\n    /**\n     * determine scale\n     */\n  }, {\n    key: \"determineScale\",\n    value: function determineScale() {\n      var range = this._end - this._start;\n      this.scale = this.containerHeight / range;\n      var minimumStepValue = this.majorCharHeight / this.scale;\n      var orderOfMagnitude = range > 0 ? Math.round(Math.log(range) / Math.LN10) : 0;\n      this.minorStepIdx = -1;\n      this.magnitudefactor = Math.pow(10, orderOfMagnitude);\n      var start = 0;\n      if (orderOfMagnitude < 0) {\n        start = orderOfMagnitude;\n      }\n      var solutionFound = false;\n      for (var l = start; Math.abs(l) <= Math.abs(orderOfMagnitude); l++) {\n        this.magnitudefactor = Math.pow(10, l);\n        for (var j = 0; j < this.minorSteps.length; j++) {\n          var stepSize = this.magnitudefactor * this.minorSteps[j];\n          if (stepSize >= minimumStepValue) {\n            solutionFound = true;\n            this.minorStepIdx = j;\n            break;\n          }\n        }\n        if (solutionFound === true) {\n          break;\n        }\n      }\n    }\n\n    /**\n     * returns if value is major\n     * @param {number} value\n     * @returns {boolean} \n     */\n  }, {\n    key: \"is_major\",\n    value: function is_major(value) {\n      return value % (this.magnitudefactor * this.majorSteps[this.minorStepIdx]) === 0;\n    }\n\n    /**\n     * returns step size\n     * @returns {number} \n     */\n  }, {\n    key: \"getStep\",\n    value: function getStep() {\n      return this.magnitudefactor * this.minorSteps[this.minorStepIdx];\n    }\n\n    /**\n     * returns first major\n     * @returns {number} \n     */\n  }, {\n    key: \"getFirstMajor\",\n    value: function getFirstMajor() {\n      var majorStep = this.magnitudefactor * this.majorSteps[this.minorStepIdx];\n      return this.convertValue(this._start + (majorStep - this._start % majorStep) % majorStep);\n    }\n\n    /**\n     * returns first major\n     * @param {date} current\n     * @returns {date} formatted date\n     */\n  }, {\n    key: \"formatValue\",\n    value: function formatValue(current) {\n      var returnValue = current.toPrecision(5);\n      if (typeof this.formattingFunction === 'function') {\n        returnValue = this.formattingFunction(current);\n      }\n      if (typeof returnValue === 'number') {\n        return \"\".concat(returnValue);\n      } else if (typeof returnValue === 'string') {\n        return returnValue;\n      } else {\n        return current.toPrecision(5);\n      }\n    }\n\n    /**\n     * returns lines\n     * @returns {object} lines\n     */\n  }, {\n    key: \"getLines\",\n    value: function getLines() {\n      var lines = [];\n      var step = this.getStep();\n      var bottomOffset = (step - this._start % step) % step;\n      for (var i = this._start + bottomOffset; this._end - i > 0.00001; i += step) {\n        if (i != this._start) {\n          //Skip the bottom line\n          lines.push({\n            major: this.is_major(i),\n            y: this.convertValue(i),\n            val: this.formatValue(i)\n          });\n        }\n      }\n      return lines;\n    }\n\n    /**\n     * follow scale\n     * @param {object} other\n     */\n  }, {\n    key: \"followScale\",\n    value: function followScale(other) {\n      var oldStepIdx = this.minorStepIdx;\n      var oldStart = this._start;\n      var oldEnd = this._end;\n      var me = this;\n      var increaseMagnitude = function increaseMagnitude() {\n        me.magnitudefactor *= 2;\n      };\n      var decreaseMagnitude = function decreaseMagnitude() {\n        me.magnitudefactor /= 2;\n      };\n      if (other.minorStepIdx <= 1 && this.minorStepIdx <= 1 || other.minorStepIdx > 1 && this.minorStepIdx > 1) ; else if (other.minorStepIdx < this.minorStepIdx) {\n        //I'm 5, they are 4 per major.\n        this.minorStepIdx = 1;\n        if (oldStepIdx == 2) {\n          increaseMagnitude();\n        } else {\n          increaseMagnitude();\n          increaseMagnitude();\n        }\n      } else {\n        //I'm 4, they are 5 per major\n        this.minorStepIdx = 2;\n        if (oldStepIdx == 1) {\n          decreaseMagnitude();\n        } else {\n          decreaseMagnitude();\n          decreaseMagnitude();\n        }\n      }\n\n      //Get masters stats:\n      var otherZero = other.convertValue(0);\n      var otherStep = other.getStep() * other.scale;\n      var done = false;\n      var count = 0;\n      //Loop until magnitude is correct for given constrains.\n      while (!done && count++ < 5) {\n        //Get my stats:\n        this.scale = otherStep / (this.minorSteps[this.minorStepIdx] * this.magnitudefactor);\n        var newRange = this.containerHeight / this.scale;\n\n        //For the case the magnitudefactor has changed:\n        this._start = oldStart;\n        this._end = this._start + newRange;\n        var myOriginalZero = this._end * this.scale;\n        var majorStep = this.magnitudefactor * this.majorSteps[this.minorStepIdx];\n        var majorOffset = this.getFirstMajor() - other.getFirstMajor();\n        if (this.zeroAlign) {\n          var zeroOffset = otherZero - myOriginalZero;\n          this._end += zeroOffset / this.scale;\n          this._start = this._end - newRange;\n        } else {\n          if (!this.autoScaleStart) {\n            this._start += majorStep - majorOffset / this.scale;\n            this._end = this._start + newRange;\n          } else {\n            this._start -= majorOffset / this.scale;\n            this._end = this._start + newRange;\n          }\n        }\n        if (!this.autoScaleEnd && this._end > oldEnd + 0.00001) {\n          //Need to decrease magnitude to prevent scale overshoot! (end)\n          decreaseMagnitude();\n          done = false;\n          continue;\n        }\n        if (!this.autoScaleStart && this._start < oldStart - 0.00001) {\n          if (this.zeroAlign && oldStart >= 0) {\n            console.warn(\"Can't adhere to given 'min' range, due to zeroalign\");\n          } else {\n            //Need to decrease magnitude to prevent scale overshoot! (start)\n            decreaseMagnitude();\n            done = false;\n            continue;\n          }\n        }\n        if (this.autoScaleStart && this.autoScaleEnd && newRange < oldEnd - oldStart) {\n          increaseMagnitude();\n          done = false;\n          continue;\n        }\n        done = true;\n      }\n    }\n\n    /**\n     * convert value\n     * @param {number} value\n     * @returns {number} \n     */\n  }, {\n    key: \"convertValue\",\n    value: function convertValue(value) {\n      return this.containerHeight - (value - this._start) * this.scale;\n    }\n\n    /**\n     * returns screen to value\n     * @param {number} pixels\n     * @returns {number} \n     */\n  }, {\n    key: \"screenToValue\",\n    value: function screenToValue(pixels) {\n      return (this.containerHeight - pixels) / this.scale + this._start;\n    }\n  }]);\n  return DataScale;\n}();\n\nvar css_248z = \"\\n.vis-panel.vis-background.vis-horizontal .vis-grid.vis-horizontal {\\n  position: absolute;\\n  width: 100%;\\n  height: 0;\\n  border-bottom: 1px solid;\\n}\\n\\n.vis-panel.vis-background.vis-horizontal .vis-grid.vis-minor {\\n  border-color: #e5e5e5;\\n}\\n\\n.vis-panel.vis-background.vis-horizontal .vis-grid.vis-major {\\n  border-color: #bfbfbf;\\n}\\n\\n\\n.vis-data-axis .vis-y-axis.vis-major {\\n  width: 100%;\\n  position: absolute;\\n  color: #4d4d4d;\\n  white-space: nowrap;\\n}\\n\\n.vis-data-axis .vis-y-axis.vis-major.vis-measure {\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n  visibility: hidden;\\n  width: auto;\\n}\\n\\n\\n.vis-data-axis .vis-y-axis.vis-minor {\\n  position: absolute;\\n  width: 100%;\\n  color: #bebebe;\\n  white-space: nowrap;\\n}\\n\\n.vis-data-axis .vis-y-axis.vis-minor.vis-measure {\\n  padding: 0;\\n  margin: 0;\\n  border: 0;\\n  visibility: hidden;\\n  width: auto;\\n}\\n\\n.vis-data-axis .vis-y-axis.vis-title {\\n  position: absolute;\\n  color: #4d4d4d;\\n  white-space: nowrap;\\n  bottom: 20px;\\n  text-align: center;\\n}\\n\\n.vis-data-axis .vis-y-axis.vis-title.vis-measure {\\n  padding: 0;\\n  margin: 0;\\n  visibility: hidden;\\n  width: auto;\\n}\\n\\n.vis-data-axis .vis-y-axis.vis-title.vis-left {\\n  bottom: 0;\\n  -webkit-transform-origin: left top;\\n  -moz-transform-origin: left top;\\n  -ms-transform-origin: left top;\\n  -o-transform-origin: left top;\\n  transform-origin: left bottom;\\n  -webkit-transform: rotate(-90deg);\\n  -moz-transform: rotate(-90deg);\\n  -ms-transform: rotate(-90deg);\\n  -o-transform: rotate(-90deg);\\n  transform: rotate(-90deg);\\n}\\n\\n.vis-data-axis .vis-y-axis.vis-title.vis-right {\\n  bottom: 0;\\n  -webkit-transform-origin: right bottom;\\n  -moz-transform-origin: right bottom;\\n  -ms-transform-origin: right bottom;\\n  -o-transform-origin: right bottom;\\n  transform-origin: right bottom;\\n  -webkit-transform: rotate(90deg);\\n  -moz-transform: rotate(90deg);\\n  -ms-transform: rotate(90deg);\\n  -o-transform: rotate(90deg);\\n  transform: rotate(90deg);\\n}\\n\\n.vis-legend {\\n  background-color: rgba(247, 252, 255, 0.65);\\n  padding: 5px;\\n  border: 1px solid #b3b3b3;\\n  box-shadow: 2px 2px 10px rgba(154, 154, 154, 0.55);\\n}\\n\\n.vis-legend-text {\\n  /*font-size: 10px;*/\\n  white-space: nowrap;\\n  display: inline-block\\n}\";\nstyleInject(css_248z);\n\nfunction _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof _Symbol !== \"undefined\" && _getIteratorMethod(o) || o[\"@@iterator\"]; if (!it) { if (_Array$isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it.return != null) it.return(); } finally { if (didErr) throw err; } } }; }\nfunction _unsupportedIterableToArray(o, minLen) { var _context; if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = _sliceInstanceProperty(_context = Object.prototype.toString.call(o)).call(_context, 8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return _Array$from$1(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = _Reflect$construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !_Reflect$construct) return false; if (_Reflect$construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(_Reflect$construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\n/** A horizontal time axis */\nvar DataAxis = /*#__PURE__*/function (_Component) {\n  _inherits(DataAxis, _Component);\n  var _super = _createSuper(DataAxis);\n  /**\n  * @param {Object} body\n  * @param {Object} [options]        See DataAxis.setOptions for the available\n  *                                  options.\n  * @param {SVGElement} svg\n  * @param {timeline.LineGraph.options} linegraphOptions\n  * @constructor DataAxis\n  * @extends Component\n  */\n  function DataAxis(body, options, svg, linegraphOptions) {\n    var _this;\n    _classCallCheck(this, DataAxis);\n    _this = _super.call(this);\n    _this.id = v4();\n    _this.body = body;\n    _this.defaultOptions = {\n      orientation: 'left',\n      // supported: 'left', 'right'\n      showMinorLabels: true,\n      showMajorLabels: true,\n      showWeekScale: false,\n      icons: false,\n      majorLinesOffset: 7,\n      minorLinesOffset: 4,\n      labelOffsetX: 10,\n      labelOffsetY: 2,\n      iconWidth: 20,\n      width: '40px',\n      visible: true,\n      alignZeros: true,\n      left: {\n        range: {\n          min: undefined,\n          max: undefined\n        },\n        format: function format(value) {\n          return \"\".concat(_parseFloat$1(value.toPrecision(3)));\n        },\n        title: {\n          text: undefined,\n          style: undefined\n        }\n      },\n      right: {\n        range: {\n          min: undefined,\n          max: undefined\n        },\n        format: function format(value) {\n          return \"\".concat(_parseFloat$1(value.toPrecision(3)));\n        },\n        title: {\n          text: undefined,\n          style: undefined\n        }\n      }\n    };\n    _this.linegraphOptions = linegraphOptions;\n    _this.linegraphSVG = svg;\n    _this.props = {};\n    _this.DOMelements = {\n      // dynamic elements\n      lines: {},\n      labels: {},\n      title: {}\n    };\n    _this.dom = {};\n    _this.scale = undefined;\n    _this.range = {\n      start: 0,\n      end: 0\n    };\n    _this.options = availableUtils.extend({}, _this.defaultOptions);\n    _this.conversionFactor = 1;\n    _this.setOptions(options);\n    _this.width = Number(\"\".concat(_this.options.width).replace(\"px\", \"\"));\n    _this.minWidth = _this.width;\n    _this.height = _this.linegraphSVG.getBoundingClientRect().height;\n    _this.hidden = false;\n    _this.stepPixels = 25;\n    _this.zeroCrossing = -1;\n    _this.amountOfSteps = -1;\n    _this.lineOffset = 0;\n    _this.master = true;\n    _this.masterAxis = null;\n    _this.svgElements = {};\n    _this.iconsRemoved = false;\n    _this.groups = {};\n    _this.amountOfGroups = 0;\n\n    // create the HTML DOM\n    _this._create();\n    if (_this.scale == undefined) {\n      _this._redrawLabels();\n    }\n    _this.framework = {\n      svg: _this.svg,\n      svgElements: _this.svgElements,\n      options: _this.options,\n      groups: _this.groups\n    };\n    var me = _assertThisInitialized(_this);\n    _this.body.emitter.on(\"verticalDrag\", function () {\n      me.dom.lineContainer.style.top = \"\".concat(me.body.domProps.scrollTop, \"px\");\n    });\n    return _this;\n  }\n\n  /**\n   * Adds group to data axis\n   * @param {string} label \n   * @param {object} graphOptions\n   */\n  _createClass(DataAxis, [{\n    key: \"addGroup\",\n    value: function addGroup(label, graphOptions) {\n      if (!this.groups.hasOwnProperty(label)) {\n        this.groups[label] = graphOptions;\n      }\n      this.amountOfGroups += 1;\n    }\n\n    /**\n     * updates group of data axis\n     * @param {string} label \n     * @param {object} graphOptions\n     */\n  }, {\n    key: \"updateGroup\",\n    value: function updateGroup(label, graphOptions) {\n      if (!this.groups.hasOwnProperty(label)) {\n        this.amountOfGroups += 1;\n      }\n      this.groups[label] = graphOptions;\n    }\n\n    /**\n     * removes group of data axis\n     * @param {string} label \n     */\n  }, {\n    key: \"removeGroup\",\n    value: function removeGroup(label) {\n      if (this.groups.hasOwnProperty(label)) {\n        delete this.groups[label];\n        this.amountOfGroups -= 1;\n      }\n    }\n\n    /**\n     * sets options\n     * @param {object} options\n     */\n  }, {\n    key: \"setOptions\",\n    value: function setOptions(options) {\n      if (options) {\n        var redraw = false;\n        if (this.options.orientation != options.orientation && options.orientation !== undefined) {\n          redraw = true;\n        }\n        var fields = ['orientation', 'showMinorLabels', 'showMajorLabels', 'icons', 'majorLinesOffset', 'minorLinesOffset', 'labelOffsetX', 'labelOffsetY', 'iconWidth', 'width', 'visible', 'left', 'right', 'alignZeros'];\n        availableUtils.selectiveDeepExtend(fields, this.options, options);\n        this.minWidth = Number(\"\".concat(this.options.width).replace(\"px\", \"\"));\n        if (redraw === true && this.dom.frame) {\n          this.hide();\n          this.show();\n        }\n      }\n    }\n\n    /**\n     * Create the HTML DOM for the DataAxis\n     */\n  }, {\n    key: \"_create\",\n    value: function _create() {\n      this.dom.frame = document.createElement('div');\n      this.dom.frame.style.width = this.options.width;\n      this.dom.frame.style.height = this.height;\n      this.dom.lineContainer = document.createElement('div');\n      this.dom.lineContainer.style.width = '100%';\n      this.dom.lineContainer.style.height = this.height;\n      this.dom.lineContainer.style.position = 'relative';\n      this.dom.lineContainer.style.visibility = 'visible';\n      this.dom.lineContainer.style.display = 'block';\n\n      // create svg element for graph drawing.\n      this.svg = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\n      this.svg.style.position = \"absolute\";\n      this.svg.style.top = '0px';\n      this.svg.style.height = '100%';\n      this.svg.style.width = '100%';\n      this.svg.style.display = \"block\";\n      this.dom.frame.appendChild(this.svg);\n    }\n\n    /**\n     * redraws groups icons\n     */\n  }, {\n    key: \"_redrawGroupIcons\",\n    value: function _redrawGroupIcons() {\n      prepareElements(this.svgElements);\n      var x;\n      var iconWidth = this.options.iconWidth;\n      var iconHeight = 15;\n      var iconOffset = 4;\n      var y = iconOffset + 0.5 * iconHeight;\n      if (this.options.orientation === 'left') {\n        x = iconOffset;\n      } else {\n        x = this.width - iconWidth - iconOffset;\n      }\n      var groupArray = _Object$keys(this.groups);\n      _sortInstanceProperty(groupArray).call(groupArray, function (a, b) {\n        return a < b ? -1 : 1;\n      });\n      var _iterator = _createForOfIteratorHelper(groupArray),\n        _step;\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var groupId = _step.value;\n          if (this.groups[groupId].visible === true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] === true)) {\n            this.groups[groupId].getLegend(iconWidth, iconHeight, this.framework, x, y);\n            y += iconHeight + iconOffset;\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n      cleanupElements(this.svgElements);\n      this.iconsRemoved = false;\n    }\n\n    /**\n     * Cleans up icons\n     */\n  }, {\n    key: \"_cleanupIcons\",\n    value: function _cleanupIcons() {\n      if (this.iconsRemoved === false) {\n        prepareElements(this.svgElements);\n        cleanupElements(this.svgElements);\n        this.iconsRemoved = true;\n      }\n    }\n\n    /**\n     * Create the HTML DOM for the DataAxis\n     */\n  }, {\n    key: \"show\",\n    value: function show() {\n      this.hidden = false;\n      if (!this.dom.frame.parentNode) {\n        if (this.options.orientation === 'left') {\n          this.body.dom.left.appendChild(this.dom.frame);\n        } else {\n          this.body.dom.right.appendChild(this.dom.frame);\n        }\n      }\n      if (!this.dom.lineContainer.parentNode) {\n        this.body.dom.backgroundHorizontal.appendChild(this.dom.lineContainer);\n      }\n      this.dom.lineContainer.style.display = 'block';\n    }\n\n    /**\n     * Create the HTML DOM for the DataAxis\n     */\n  }, {\n    key: \"hide\",\n    value: function hide() {\n      this.hidden = true;\n      if (this.dom.frame.parentNode) {\n        this.dom.frame.parentNode.removeChild(this.dom.frame);\n      }\n      this.dom.lineContainer.style.display = 'none';\n    }\n\n    /**\n     * Set a range (start and end)\n     * @param {number} start\n     * @param {number} end\n     */\n  }, {\n    key: \"setRange\",\n    value: function setRange(start, end) {\n      this.range.start = start;\n      this.range.end = end;\n    }\n\n    /**\n     * Repaint the component\n     * @return {boolean} Returns true if the component is resized\n     */\n  }, {\n    key: \"redraw\",\n    value: function redraw() {\n      var resized = false;\n      var activeGroups = 0;\n\n      // Make sure the line container adheres to the vertical scrolling.\n      this.dom.lineContainer.style.top = \"\".concat(this.body.domProps.scrollTop, \"px\");\n      for (var groupId in this.groups) {\n        if (this.groups.hasOwnProperty(groupId)) {\n          if (this.groups[groupId].visible === true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] === true)) {\n            activeGroups++;\n          }\n        }\n      }\n      if (this.amountOfGroups === 0 || activeGroups === 0) {\n        this.hide();\n      } else {\n        this.show();\n        this.height = Number(this.linegraphSVG.style.height.replace(\"px\", \"\"));\n\n        // svg offsetheight did not work in firefox and explorer...\n        this.dom.lineContainer.style.height = \"\".concat(this.height, \"px\");\n        this.width = this.options.visible === true ? Number(\"\".concat(this.options.width).replace(\"px\", \"\")) : 0;\n        var props = this.props;\n        var frame = this.dom.frame;\n\n        // update classname\n        frame.className = 'vis-data-axis';\n\n        // calculate character width and height\n        this._calculateCharSize();\n        var orientation = this.options.orientation;\n        var showMinorLabels = this.options.showMinorLabels;\n        var showMajorLabels = this.options.showMajorLabels;\n        var backgroundHorizontalOffsetWidth = this.body.dom.backgroundHorizontal.offsetWidth;\n\n        // determine the width and height of the elements for the axis\n        props.minorLabelHeight = showMinorLabels ? props.minorCharHeight : 0;\n        props.majorLabelHeight = showMajorLabels ? props.majorCharHeight : 0;\n        props.minorLineWidth = backgroundHorizontalOffsetWidth - this.lineOffset - this.width + 2 * this.options.minorLinesOffset;\n        props.minorLineHeight = 1;\n        props.majorLineWidth = backgroundHorizontalOffsetWidth - this.lineOffset - this.width + 2 * this.options.majorLinesOffset;\n        props.majorLineHeight = 1;\n\n        //  take frame offline while updating (is almost twice as fast)\n        if (orientation === 'left') {\n          frame.style.top = '0';\n          frame.style.left = '0';\n          frame.style.bottom = '';\n          frame.style.width = \"\".concat(this.width, \"px\");\n          frame.style.height = \"\".concat(this.height, \"px\");\n          this.props.width = this.body.domProps.left.width;\n          this.props.height = this.body.domProps.left.height;\n        } else {\n          // right\n          frame.style.top = '';\n          frame.style.bottom = '0';\n          frame.style.left = '0';\n          frame.style.width = \"\".concat(this.width, \"px\");\n          frame.style.height = \"\".concat(this.height, \"px\");\n          this.props.width = this.body.domProps.right.width;\n          this.props.height = this.body.domProps.right.height;\n        }\n        resized = this._redrawLabels();\n        resized = this._isResized() || resized;\n        if (this.options.icons === true) {\n          this._redrawGroupIcons();\n        } else {\n          this._cleanupIcons();\n        }\n        this._redrawTitle(orientation);\n      }\n      return resized;\n    }\n\n    /**\n     * Repaint major and minor text labels and vertical grid lines\n     *\n     * @returns {boolean}\n     * @private\n     */\n  }, {\n    key: \"_redrawLabels\",\n    value: function _redrawLabels() {\n      var _this2 = this;\n      var resized = false;\n      prepareElements(this.DOMelements.lines);\n      prepareElements(this.DOMelements.labels);\n      var orientation = this.options['orientation'];\n      var customRange = this.options[orientation].range != undefined ? this.options[orientation].range : {};\n\n      //Override range with manual options:\n      var autoScaleEnd = true;\n      if (customRange.max != undefined) {\n        this.range.end = customRange.max;\n        autoScaleEnd = false;\n      }\n      var autoScaleStart = true;\n      if (customRange.min != undefined) {\n        this.range.start = customRange.min;\n        autoScaleStart = false;\n      }\n      this.scale = new DataScale(this.range.start, this.range.end, autoScaleStart, autoScaleEnd, this.dom.frame.offsetHeight, this.props.majorCharHeight, this.options.alignZeros, this.options[orientation].format);\n      if (this.master === false && this.masterAxis != undefined) {\n        this.scale.followScale(this.masterAxis.scale);\n        this.dom.lineContainer.style.display = 'none';\n      } else {\n        this.dom.lineContainer.style.display = 'block';\n      }\n\n      //Is updated in side-effect of _redrawLabel():\n      this.maxLabelSize = 0;\n      var lines = this.scale.getLines();\n      _forEachInstanceProperty(lines).call(lines, function (line) {\n        var y = line.y;\n        var isMajor = line.major;\n        if (_this2.options['showMinorLabels'] && isMajor === false) {\n          _this2._redrawLabel(y - 2, line.val, orientation, 'vis-y-axis vis-minor', _this2.props.minorCharHeight);\n        }\n        if (isMajor) {\n          if (y >= 0) {\n            _this2._redrawLabel(y - 2, line.val, orientation, 'vis-y-axis vis-major', _this2.props.majorCharHeight);\n          }\n        }\n        if (_this2.master === true) {\n          if (isMajor) {\n            _this2._redrawLine(y, orientation, 'vis-grid vis-horizontal vis-major', _this2.options.majorLinesOffset, _this2.props.majorLineWidth);\n          } else {\n            _this2._redrawLine(y, orientation, 'vis-grid vis-horizontal vis-minor', _this2.options.minorLinesOffset, _this2.props.minorLineWidth);\n          }\n        }\n      });\n\n      // Note that title is rotated, so we're using the height, not width!\n      var titleWidth = 0;\n      if (this.options[orientation].title !== undefined && this.options[orientation].title.text !== undefined) {\n        titleWidth = this.props.titleCharHeight;\n      }\n      var offset = this.options.icons === true ? Math.max(this.options.iconWidth, titleWidth) + this.options.labelOffsetX + 15 : titleWidth + this.options.labelOffsetX + 15;\n\n      // this will resize the yAxis to accommodate the labels.\n      if (this.maxLabelSize > this.width - offset && this.options.visible === true) {\n        this.width = this.maxLabelSize + offset;\n        this.options.width = \"\".concat(this.width, \"px\");\n        cleanupElements(this.DOMelements.lines);\n        cleanupElements(this.DOMelements.labels);\n        this.redraw();\n        resized = true;\n      }\n      // this will resize the yAxis if it is too big for the labels.\n      else if (this.maxLabelSize < this.width - offset && this.options.visible === true && this.width > this.minWidth) {\n        this.width = Math.max(this.minWidth, this.maxLabelSize + offset);\n        this.options.width = \"\".concat(this.width, \"px\");\n        cleanupElements(this.DOMelements.lines);\n        cleanupElements(this.DOMelements.labels);\n        this.redraw();\n        resized = true;\n      } else {\n        cleanupElements(this.DOMelements.lines);\n        cleanupElements(this.DOMelements.labels);\n        resized = false;\n      }\n      return resized;\n    }\n\n    /**\n     * converts value\n     * @param {number} value\n     * @returns {number} converted number\n     */\n  }, {\n    key: \"convertValue\",\n    value: function convertValue(value) {\n      return this.scale.convertValue(value);\n    }\n\n    /**\n     * converts value\n     * @param {number} x\n     * @returns {number} screen value\n     */\n  }, {\n    key: \"screenToValue\",\n    value: function screenToValue(x) {\n      return this.scale.screenToValue(x);\n    }\n\n    /**\n     * Create a label for the axis at position x\n     *\n     * @param {number} y\n     * @param {string} text\n     * @param {'top'|'right'|'bottom'|'left'} orientation\n     * @param {string} className\n     * @param {number} characterHeight\n     * @private\n     */\n  }, {\n    key: \"_redrawLabel\",\n    value: function _redrawLabel(y, text, orientation, className, characterHeight) {\n      // reuse redundant label\n      var label = getDOMElement('div', this.DOMelements.labels, this.dom.frame); //this.dom.redundant.labels.shift();\n      label.className = className;\n      label.innerHTML = availableUtils.xss(text);\n      if (orientation === 'left') {\n        label.style.left = \"-\".concat(this.options.labelOffsetX, \"px\");\n        label.style.textAlign = \"right\";\n      } else {\n        label.style.right = \"-\".concat(this.options.labelOffsetX, \"px\");\n        label.style.textAlign = \"left\";\n      }\n      label.style.top = \"\".concat(y - 0.5 * characterHeight + this.options.labelOffsetY, \"px\");\n      text += '';\n      var largestWidth = Math.max(this.props.majorCharWidth, this.props.minorCharWidth);\n      if (this.maxLabelSize < text.length * largestWidth) {\n        this.maxLabelSize = text.length * largestWidth;\n      }\n    }\n\n    /**\n     * Create a minor line for the axis at position y\n     * @param {number} y\n     * @param {'top'|'right'|'bottom'|'left'} orientation\n     * @param {string} className\n     * @param {number} offset\n     * @param {number} width\n     */\n  }, {\n    key: \"_redrawLine\",\n    value: function _redrawLine(y, orientation, className, offset, width) {\n      if (this.master === true) {\n        var line = getDOMElement('div', this.DOMelements.lines, this.dom.lineContainer); //this.dom.redundant.lines.shift();\n        line.className = className;\n        line.innerHTML = '';\n        if (orientation === 'left') {\n          line.style.left = \"\".concat(this.width - offset, \"px\");\n        } else {\n          line.style.right = \"\".concat(this.width - offset, \"px\");\n        }\n        line.style.width = \"\".concat(width, \"px\");\n        line.style.top = \"\".concat(y, \"px\");\n      }\n    }\n\n    /**\n     * Create a title for the axis\n     * @private\n     * @param {'top'|'right'|'bottom'|'left'} orientation\n     */\n  }, {\n    key: \"_redrawTitle\",\n    value: function _redrawTitle(orientation) {\n      prepareElements(this.DOMelements.title);\n\n      // Check if the title is defined for this axes\n      if (this.options[orientation].title !== undefined && this.options[orientation].title.text !== undefined) {\n        var title = getDOMElement('div', this.DOMelements.title, this.dom.frame);\n        title.className = \"vis-y-axis vis-title vis-\".concat(orientation);\n        title.innerHTML = availableUtils.xss(this.options[orientation].title.text);\n\n        // Add style - if provided\n        if (this.options[orientation].title.style !== undefined) {\n          availableUtils.addCssText(title, this.options[orientation].title.style);\n        }\n        if (orientation === 'left') {\n          title.style.left = \"\".concat(this.props.titleCharHeight, \"px\");\n        } else {\n          title.style.right = \"\".concat(this.props.titleCharHeight, \"px\");\n        }\n        title.style.width = \"\".concat(this.height, \"px\");\n      }\n\n      // we need to clean up in case we did not use all elements.\n      cleanupElements(this.DOMelements.title);\n    }\n\n    /**\n     * Determine the size of text on the axis (both major and minor axis).\n     * The size is calculated only once and then cached in this.props.\n     * @private\n     */\n  }, {\n    key: \"_calculateCharSize\",\n    value: function _calculateCharSize() {\n      // determine the char width and height on the minor axis\n      if (!('minorCharHeight' in this.props)) {\n        var textMinor = document.createTextNode('0');\n        var measureCharMinor = document.createElement('div');\n        measureCharMinor.className = 'vis-y-axis vis-minor vis-measure';\n        measureCharMinor.appendChild(textMinor);\n        this.dom.frame.appendChild(measureCharMinor);\n        this.props.minorCharHeight = measureCharMinor.clientHeight;\n        this.props.minorCharWidth = measureCharMinor.clientWidth;\n        this.dom.frame.removeChild(measureCharMinor);\n      }\n      if (!('majorCharHeight' in this.props)) {\n        var textMajor = document.createTextNode('0');\n        var measureCharMajor = document.createElement('div');\n        measureCharMajor.className = 'vis-y-axis vis-major vis-measure';\n        measureCharMajor.appendChild(textMajor);\n        this.dom.frame.appendChild(measureCharMajor);\n        this.props.majorCharHeight = measureCharMajor.clientHeight;\n        this.props.majorCharWidth = measureCharMajor.clientWidth;\n        this.dom.frame.removeChild(measureCharMajor);\n      }\n      if (!('titleCharHeight' in this.props)) {\n        var textTitle = document.createTextNode('0');\n        var measureCharTitle = document.createElement('div');\n        measureCharTitle.className = 'vis-y-axis vis-title vis-measure';\n        measureCharTitle.appendChild(textTitle);\n        this.dom.frame.appendChild(measureCharTitle);\n        this.props.titleCharHeight = measureCharTitle.clientHeight;\n        this.props.titleCharWidth = measureCharTitle.clientWidth;\n        this.dom.frame.removeChild(measureCharTitle);\n      }\n    }\n  }]);\n  return DataAxis;\n}(Component);\n\n/**\n *\n * @param {number | string} groupId\n * @param {Object} options   // TODO: Describe options\n *\n * @constructor Points\n */\nfunction Points(groupId, options) {// eslint-disable-line no-unused-vars\n}\n\n/**\n * draw the data points\n *\n * @param {Array} dataset\n * @param {GraphGroup} group\n * @param {Object} framework            | SVG DOM element\n * @param {number} [offset]\n */\nPoints.draw = function (dataset, group, framework, offset) {\n  offset = offset || 0;\n  var callback = getCallback(framework, group);\n  for (var i = 0; i < dataset.length; i++) {\n    if (!callback) {\n      // draw the point the simple way.\n      drawPoint(dataset[i].screen_x + offset, dataset[i].screen_y, getGroupTemplate(group), framework.svgElements, framework.svg, dataset[i].label);\n    } else {\n      var callbackResult = callback(dataset[i], group); // result might be true, false or an object\n      if (callbackResult === true || _typeof$1(callbackResult) === 'object') {\n        drawPoint(dataset[i].screen_x + offset, dataset[i].screen_y, getGroupTemplate(group, callbackResult), framework.svgElements, framework.svg, dataset[i].label);\n      }\n    }\n  }\n};\nPoints.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n  var fillHeight = iconHeight * 0.5;\n  var outline = getSVGElement(\"rect\", framework.svgElements, framework.svg);\n  outline.setAttributeNS(null, \"x\", x);\n  outline.setAttributeNS(null, \"y\", y - fillHeight);\n  outline.setAttributeNS(null, \"width\", iconWidth);\n  outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n  outline.setAttributeNS(null, \"class\", \"vis-outline\");\n\n  //Don't call callback on icon\n  drawPoint(x + 0.5 * iconWidth, y, getGroupTemplate(group), framework.svgElements, framework.svg);\n};\n\n/**\n *\n * @param {vis.Group} group\n * @param {any} callbackResult\n * @returns {{style: *, styles: (*|string), size: *, className: *}}\n */\nfunction getGroupTemplate(group, callbackResult) {\n  callbackResult = typeof callbackResult === 'undefined' ? {} : callbackResult;\n  return {\n    style: callbackResult.style || group.options.drawPoints.style,\n    styles: callbackResult.styles || group.options.drawPoints.styles,\n    size: callbackResult.size || group.options.drawPoints.size,\n    className: callbackResult.className || group.className\n  };\n}\n\n/**\n *\n * @param {Object} framework            | SVG DOM element\n * @param {vis.Group} group\n * @returns {function}\n */\nfunction getCallback(framework, group) {\n  var callback = undefined;\n  // check for the graph2d onRender\n  if (framework.options && framework.options.drawPoints && framework.options.drawPoints.onRender && typeof framework.options.drawPoints.onRender == 'function') {\n    callback = framework.options.drawPoints.onRender;\n  }\n\n  // override it with the group onRender if defined\n  if (group.group.options && group.group.options.drawPoints && group.group.options.drawPoints.onRender && typeof group.group.options.drawPoints.onRender == 'function') {\n    callback = group.group.options.drawPoints.onRender;\n  }\n  return callback;\n}\n\n/**\n *\n * @param {vis.GraphGroup.id} groupId\n * @param {Object} options   // TODO: Describe options\n * @constructor Bargraph\n */\nfunction Bargraph(groupId, options) {// eslint-disable-line no-unused-vars\n}\nBargraph.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n  var fillHeight = iconHeight * 0.5;\n  var outline = getSVGElement(\"rect\", framework.svgElements, framework.svg);\n  outline.setAttributeNS(null, \"x\", x);\n  outline.setAttributeNS(null, \"y\", y - fillHeight);\n  outline.setAttributeNS(null, \"width\", iconWidth);\n  outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n  outline.setAttributeNS(null, \"class\", \"vis-outline\");\n  var barWidth = Math.round(0.3 * iconWidth);\n  var originalWidth = group.options.barChart.width;\n  var scale = originalWidth / barWidth;\n  var bar1Height = Math.round(0.4 * iconHeight);\n  var bar2Height = Math.round(0.75 * iconHeight);\n  var offset = Math.round((iconWidth - 2 * barWidth) / 3);\n  drawBar(x + 0.5 * barWidth + offset, y + fillHeight - bar1Height - 1, barWidth, bar1Height, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n  drawBar(x + 1.5 * barWidth + offset + 2, y + fillHeight - bar2Height - 1, barWidth, bar2Height, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n  if (group.options.drawPoints.enabled == true) {\n    var groupTemplate = {\n      style: group.options.drawPoints.style,\n      styles: group.options.drawPoints.styles,\n      size: group.options.drawPoints.size / scale,\n      className: group.className\n    };\n    drawPoint(x + 0.5 * barWidth + offset, y + fillHeight - bar1Height - 1, groupTemplate, framework.svgElements, framework.svg);\n    drawPoint(x + 1.5 * barWidth + offset + 2, y + fillHeight - bar2Height - 1, groupTemplate, framework.svgElements, framework.svg);\n  }\n};\n\n/**\n * draw a bar graph\n *\n * @param {Array.<vis.GraphGroup.id>} groupIds\n * @param {Object} processedGroupData\n * @param {{svg: Object, svgElements: Array.<Object>, options: Object, groups: Array.<vis.Group>}} framework\n */\nBargraph.draw = function (groupIds, processedGroupData, framework) {\n  var combinedData = [];\n  var intersections = {};\n  var coreDistance;\n  var key, drawData;\n  var group;\n  var i, j;\n  var barPoints = 0;\n\n  // combine all barchart data\n  for (i = 0; i < groupIds.length; i++) {\n    group = framework.groups[groupIds[i]];\n    if (group.options.style === 'bar') {\n      if (group.visible === true && (framework.options.groups.visibility[groupIds[i]] === undefined || framework.options.groups.visibility[groupIds[i]] === true)) {\n        for (j = 0; j < processedGroupData[groupIds[i]].length; j++) {\n          combinedData.push({\n            screen_x: processedGroupData[groupIds[i]][j].screen_x,\n            screen_end: processedGroupData[groupIds[i]][j].screen_end,\n            screen_y: processedGroupData[groupIds[i]][j].screen_y,\n            x: processedGroupData[groupIds[i]][j].x,\n            end: processedGroupData[groupIds[i]][j].end,\n            y: processedGroupData[groupIds[i]][j].y,\n            groupId: groupIds[i],\n            label: processedGroupData[groupIds[i]][j].label\n          });\n          barPoints += 1;\n        }\n      }\n    }\n  }\n  if (barPoints === 0) {\n    return;\n  }\n\n  // sort by time and by group\n  _sortInstanceProperty(combinedData).call(combinedData, function (a, b) {\n    if (a.screen_x === b.screen_x) {\n      return a.groupId < b.groupId ? -1 : 1;\n    } else {\n      return a.screen_x - b.screen_x;\n    }\n  });\n\n  // get intersections\n  Bargraph._getDataIntersections(intersections, combinedData);\n\n  // plot barchart\n  for (i = 0; i < combinedData.length; i++) {\n    group = framework.groups[combinedData[i].groupId];\n    var minWidth = group.options.barChart.minWidth != undefined ? group.options.barChart.minWidth : 0.1 * group.options.barChart.width;\n    key = combinedData[i].screen_x;\n    var heightOffset = 0;\n    if (intersections[key] === undefined) {\n      if (i + 1 < combinedData.length) {\n        coreDistance = Math.abs(combinedData[i + 1].screen_x - key);\n      }\n      drawData = Bargraph._getSafeDrawData(coreDistance, group, minWidth);\n    } else {\n      var nextKey = i + (intersections[key].amount - intersections[key].resolved);\n      if (nextKey < combinedData.length) {\n        coreDistance = Math.abs(combinedData[nextKey].screen_x - key);\n      }\n      drawData = Bargraph._getSafeDrawData(coreDistance, group, minWidth);\n      intersections[key].resolved += 1;\n      if (group.options.stack === true && group.options.excludeFromStacking !== true) {\n        if (combinedData[i].screen_y < group.zeroPosition) {\n          heightOffset = intersections[key].accumulatedNegative;\n          intersections[key].accumulatedNegative += group.zeroPosition - combinedData[i].screen_y;\n        } else {\n          heightOffset = intersections[key].accumulatedPositive;\n          intersections[key].accumulatedPositive += group.zeroPosition - combinedData[i].screen_y;\n        }\n      } else if (group.options.barChart.sideBySide === true) {\n        drawData.width = drawData.width / intersections[key].amount;\n        drawData.offset += intersections[key].resolved * drawData.width - 0.5 * drawData.width * (intersections[key].amount + 1);\n      }\n    }\n    var dataWidth = drawData.width;\n    var start = combinedData[i].screen_x;\n\n    // are we drawing explicit boxes? (we supplied an end value)\n    if (combinedData[i].screen_end != undefined) {\n      dataWidth = combinedData[i].screen_end - combinedData[i].screen_x;\n      start += dataWidth * 0.5;\n    } else {\n      start += drawData.offset;\n    }\n    drawBar(start, combinedData[i].screen_y - heightOffset, dataWidth, group.zeroPosition - combinedData[i].screen_y, group.className + ' vis-bar', framework.svgElements, framework.svg, group.style);\n\n    // draw points\n    if (group.options.drawPoints.enabled === true) {\n      var pointData = {\n        screen_x: combinedData[i].screen_x,\n        screen_y: combinedData[i].screen_y - heightOffset,\n        x: combinedData[i].x,\n        y: combinedData[i].y,\n        groupId: combinedData[i].groupId,\n        label: combinedData[i].label\n      };\n      Points.draw([pointData], group, framework, drawData.offset);\n      //DOMutil.drawPoint(combinedData[i].x + drawData.offset, combinedData[i].y, group, framework.svgElements, framework.svg);\n    }\n  }\n};\n\n/**\n * Fill the intersections object with counters of how many datapoints share the same x coordinates\n * @param {Object} intersections\n * @param {Array.<Object>} combinedData\n * @private\n */\nBargraph._getDataIntersections = function (intersections, combinedData) {\n  // get intersections\n  var coreDistance;\n  for (var i = 0; i < combinedData.length; i++) {\n    if (i + 1 < combinedData.length) {\n      coreDistance = Math.abs(combinedData[i + 1].screen_x - combinedData[i].screen_x);\n    }\n    if (i > 0) {\n      coreDistance = Math.min(coreDistance, Math.abs(combinedData[i - 1].screen_x - combinedData[i].screen_x));\n    }\n    if (coreDistance === 0) {\n      if (intersections[combinedData[i].screen_x] === undefined) {\n        intersections[combinedData[i].screen_x] = {\n          amount: 0,\n          resolved: 0,\n          accumulatedPositive: 0,\n          accumulatedNegative: 0\n        };\n      }\n      intersections[combinedData[i].screen_x].amount += 1;\n    }\n  }\n};\n\n/**\n * Get the width and offset for bargraphs based on the coredistance between datapoints\n *\n * @param {number} coreDistance\n * @param {vis.Group} group\n * @param {number} minWidth\n * @returns {{width: number, offset: number}}\n * @private\n */\nBargraph._getSafeDrawData = function (coreDistance, group, minWidth) {\n  var width, offset;\n  if (coreDistance < group.options.barChart.width && coreDistance > 0) {\n    width = coreDistance < minWidth ? minWidth : coreDistance;\n    offset = 0; // recalculate offset with the new width;\n    if (group.options.barChart.align === 'left') {\n      offset -= 0.5 * coreDistance;\n    } else if (group.options.barChart.align === 'right') {\n      offset += 0.5 * coreDistance;\n    }\n  } else {\n    // default settings\n    width = group.options.barChart.width;\n    offset = 0;\n    if (group.options.barChart.align === 'left') {\n      offset -= 0.5 * group.options.barChart.width;\n    } else if (group.options.barChart.align === 'right') {\n      offset += 0.5 * group.options.barChart.width;\n    }\n  }\n  return {\n    width: width,\n    offset: offset\n  };\n};\nBargraph.getStackedYRange = function (combinedData, groupRanges, groupIds, groupLabel, orientation) {\n  if (combinedData.length > 0) {\n    // sort by time and by group\n    _sortInstanceProperty(combinedData).call(combinedData, function (a, b) {\n      if (a.screen_x === b.screen_x) {\n        return a.groupId < b.groupId ? -1 : 1;\n      } else {\n        return a.screen_x - b.screen_x;\n      }\n    });\n    var intersections = {};\n    Bargraph._getDataIntersections(intersections, combinedData);\n    groupRanges[groupLabel] = Bargraph._getStackedYRange(intersections, combinedData);\n    groupRanges[groupLabel].yAxisOrientation = orientation;\n    groupIds.push(groupLabel);\n  }\n};\nBargraph._getStackedYRange = function (intersections, combinedData) {\n  var key;\n  var yMin = combinedData[0].screen_y;\n  var yMax = combinedData[0].screen_y;\n  for (var i = 0; i < combinedData.length; i++) {\n    key = combinedData[i].screen_x;\n    if (intersections[key] === undefined) {\n      yMin = yMin > combinedData[i].screen_y ? combinedData[i].screen_y : yMin;\n      yMax = yMax < combinedData[i].screen_y ? combinedData[i].screen_y : yMax;\n    } else {\n      if (combinedData[i].screen_y < 0) {\n        intersections[key].accumulatedNegative += combinedData[i].screen_y;\n      } else {\n        intersections[key].accumulatedPositive += combinedData[i].screen_y;\n      }\n    }\n  }\n  for (var xpos in intersections) {\n    if (intersections.hasOwnProperty(xpos)) {\n      yMin = yMin > intersections[xpos].accumulatedNegative ? intersections[xpos].accumulatedNegative : yMin;\n      yMin = yMin > intersections[xpos].accumulatedPositive ? intersections[xpos].accumulatedPositive : yMin;\n      yMax = yMax < intersections[xpos].accumulatedNegative ? intersections[xpos].accumulatedNegative : yMax;\n      yMax = yMax < intersections[xpos].accumulatedPositive ? intersections[xpos].accumulatedPositive : yMax;\n    }\n  }\n  return {\n    min: yMin,\n    max: yMax\n  };\n};\n\n/**\n *\n * @param {vis.GraphGroup.id} groupId\n * @param {Object} options   // TODO: Describe options\n * @constructor Line\n */\nfunction Line(groupId, options) {// eslint-disable-line no-unused-vars\n}\nLine.calcPath = function (dataset, group) {\n  if (dataset != null) {\n    if (dataset.length > 0) {\n      var d = [];\n\n      // construct path from dataset\n      if (group.options.interpolation.enabled == true) {\n        d = Line._catmullRom(dataset, group);\n      } else {\n        d = Line._linear(dataset);\n      }\n      return d;\n    }\n  }\n};\nLine.drawIcon = function (group, x, y, iconWidth, iconHeight, framework) {\n  var fillHeight = iconHeight * 0.5;\n  var path, fillPath;\n  var outline = getSVGElement(\"rect\", framework.svgElements, framework.svg);\n  outline.setAttributeNS(null, \"x\", x);\n  outline.setAttributeNS(null, \"y\", y - fillHeight);\n  outline.setAttributeNS(null, \"width\", iconWidth);\n  outline.setAttributeNS(null, \"height\", 2 * fillHeight);\n  outline.setAttributeNS(null, \"class\", \"vis-outline\");\n  path = getSVGElement(\"path\", framework.svgElements, framework.svg);\n  path.setAttributeNS(null, \"class\", group.className);\n  if (group.style !== undefined) {\n    path.setAttributeNS(null, \"style\", group.style);\n  }\n  path.setAttributeNS(null, \"d\", \"M\" + x + \",\" + y + \" L\" + (x + iconWidth) + \",\" + y + \"\");\n  if (group.options.shaded.enabled == true) {\n    fillPath = getSVGElement(\"path\", framework.svgElements, framework.svg);\n    if (group.options.shaded.orientation == 'top') {\n      fillPath.setAttributeNS(null, \"d\", \"M\" + x + \", \" + (y - fillHeight) + \"L\" + x + \",\" + y + \" L\" + (x + iconWidth) + \",\" + y + \" L\" + (x + iconWidth) + \",\" + (y - fillHeight));\n    } else {\n      fillPath.setAttributeNS(null, \"d\", \"M\" + x + \",\" + y + \" \" + \"L\" + x + \",\" + (y + fillHeight) + \" \" + \"L\" + (x + iconWidth) + \",\" + (y + fillHeight) + \"L\" + (x + iconWidth) + \",\" + y);\n    }\n    fillPath.setAttributeNS(null, \"class\", group.className + \" vis-icon-fill\");\n    if (group.options.shaded.style !== undefined && group.options.shaded.style !== \"\") {\n      fillPath.setAttributeNS(null, \"style\", group.options.shaded.style);\n    }\n  }\n  if (group.options.drawPoints.enabled == true) {\n    var groupTemplate = {\n      style: group.options.drawPoints.style,\n      styles: group.options.drawPoints.styles,\n      size: group.options.drawPoints.size,\n      className: group.className\n    };\n    drawPoint(x + 0.5 * iconWidth, y, groupTemplate, framework.svgElements, framework.svg);\n  }\n};\nLine.drawShading = function (pathArray, group, subPathArray, framework) {\n  // append shading to the path\n  if (group.options.shaded.enabled == true) {\n    var svgHeight = Number(framework.svg.style.height.replace('px', ''));\n    var fillPath = getSVGElement('path', framework.svgElements, framework.svg);\n    var type = \"L\";\n    if (group.options.interpolation.enabled == true) {\n      type = \"C\";\n    }\n    var dFill;\n    var zero = 0;\n    if (group.options.shaded.orientation == 'top') {\n      zero = 0;\n    } else if (group.options.shaded.orientation == 'bottom') {\n      zero = svgHeight;\n    } else {\n      zero = Math.min(Math.max(0, group.zeroPosition), svgHeight);\n    }\n    if (group.options.shaded.orientation == 'group' && subPathArray != null && subPathArray != undefined) {\n      dFill = 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false) + ' L' + subPathArray[subPathArray.length - 1][0] + \",\" + subPathArray[subPathArray.length - 1][1] + \" \" + this.serializePath(subPathArray, type, true) + subPathArray[0][0] + \",\" + subPathArray[0][1] + \" Z\";\n    } else {\n      dFill = 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false) + ' V' + zero + ' H' + pathArray[0][0] + \" Z\";\n    }\n    fillPath.setAttributeNS(null, 'class', group.className + ' vis-fill');\n    if (group.options.shaded.style !== undefined) {\n      fillPath.setAttributeNS(null, 'style', group.options.shaded.style);\n    }\n    fillPath.setAttributeNS(null, 'd', dFill);\n  }\n};\n\n/**\n * draw a line graph\n *\n * @param {Array.<Object>} pathArray\n * @param {vis.Group} group\n * @param {{svg: Object, svgElements: Array.<Object>, options: Object, groups: Array.<vis.Group>}} framework\n */\nLine.draw = function (pathArray, group, framework) {\n  if (pathArray != null && pathArray != undefined) {\n    var path = getSVGElement('path', framework.svgElements, framework.svg);\n    path.setAttributeNS(null, \"class\", group.className);\n    if (group.style !== undefined) {\n      path.setAttributeNS(null, \"style\", group.style);\n    }\n    var type = \"L\";\n    if (group.options.interpolation.enabled == true) {\n      type = \"C\";\n    }\n    // copy properties to path for drawing.\n    path.setAttributeNS(null, 'd', 'M' + pathArray[0][0] + \",\" + pathArray[0][1] + \" \" + this.serializePath(pathArray, type, false));\n  }\n};\nLine.serializePath = function (pathArray, type, inverse) {\n  if (pathArray.length < 2) {\n    //Too little data to create a path.\n    return \"\";\n  }\n  var d = type;\n  var i;\n  if (inverse) {\n    for (i = pathArray.length - 2; i > 0; i--) {\n      d += pathArray[i][0] + \",\" + pathArray[i][1] + \" \";\n    }\n  } else {\n    for (i = 1; i < pathArray.length; i++) {\n      d += pathArray[i][0] + \",\" + pathArray[i][1] + \" \";\n    }\n  }\n  return d;\n};\n\n/**\n * This uses an uniform parametrization of the interpolation algorithm:\n * 'On the Parameterization of Catmull-Rom Curves' by Cem Yuksel et al.\n * @param {Array.<Object>} data\n * @returns {string}\n * @private\n */\nLine._catmullRomUniform = function (data) {\n  // catmull rom\n  var p0, p1, p2, p3, bp1, bp2;\n  var d = [];\n  d.push([Math.round(data[0].screen_x), Math.round(data[0].screen_y)]);\n  var normalization = 1 / 6;\n  var length = data.length;\n  for (var i = 0; i < length - 1; i++) {\n    p0 = i == 0 ? data[0] : data[i - 1];\n    p1 = data[i];\n    p2 = data[i + 1];\n    p3 = i + 2 < length ? data[i + 2] : p2;\n\n    // Catmull-Rom to Cubic Bezier conversion matrix\n    //    0       1       0       0\n    //  -1/6      1      1/6      0\n    //    0      1/6      1     -1/6\n    //    0       0       1       0\n\n    //    bp0 = { x: p1.x,                               y: p1.y };\n    bp1 = {\n      screen_x: (-p0.screen_x + 6 * p1.screen_x + p2.screen_x) * normalization,\n      screen_y: (-p0.screen_y + 6 * p1.screen_y + p2.screen_y) * normalization\n    };\n    bp2 = {\n      screen_x: (p1.screen_x + 6 * p2.screen_x - p3.screen_x) * normalization,\n      screen_y: (p1.screen_y + 6 * p2.screen_y - p3.screen_y) * normalization\n    };\n    //    bp0 = { x: p2.x,                               y: p2.y };\n\n    d.push([bp1.screen_x, bp1.screen_y]);\n    d.push([bp2.screen_x, bp2.screen_y]);\n    d.push([p2.screen_x, p2.screen_y]);\n  }\n  return d;\n};\n\n/**\n * This uses either the chordal or centripetal parameterization of the catmull-rom algorithm.\n * By default, the centripetal parameterization is used because this gives the nicest results.\n * These parameterizations are relatively heavy because the distance between 4 points have to be calculated.\n *\n * One optimization can be used to reuse distances since this is a sliding window approach.\n * @param {Array.<Object>} data\n * @param {vis.GraphGroup} group\n * @returns {string}\n * @private\n */\nLine._catmullRom = function (data, group) {\n  var alpha = group.options.interpolation.alpha;\n  if (alpha == 0 || alpha === undefined) {\n    return this._catmullRomUniform(data);\n  } else {\n    var p0, p1, p2, p3, bp1, bp2, d1, d2, d3, A, B, N, M;\n    var d3powA, d2powA, d3pow2A, d2pow2A, d1pow2A, d1powA;\n    var d = [];\n    d.push([Math.round(data[0].screen_x), Math.round(data[0].screen_y)]);\n    var length = data.length;\n    for (var i = 0; i < length - 1; i++) {\n      p0 = i == 0 ? data[0] : data[i - 1];\n      p1 = data[i];\n      p2 = data[i + 1];\n      p3 = i + 2 < length ? data[i + 2] : p2;\n      d1 = Math.sqrt(Math.pow(p0.screen_x - p1.screen_x, 2) + Math.pow(p0.screen_y - p1.screen_y, 2));\n      d2 = Math.sqrt(Math.pow(p1.screen_x - p2.screen_x, 2) + Math.pow(p1.screen_y - p2.screen_y, 2));\n      d3 = Math.sqrt(Math.pow(p2.screen_x - p3.screen_x, 2) + Math.pow(p2.screen_y - p3.screen_y, 2));\n\n      // Catmull-Rom to Cubic Bezier conversion matrix\n\n      // A = 2d1^2a + 3d1^a * d2^a + d3^2a\n      // B = 2d3^2a + 3d3^a * d2^a + d2^2a\n\n      // [   0             1            0          0          ]\n      // [   -d2^2a /N     A/N          d1^2a /N   0          ]\n      // [   0             d3^2a /M     B/M        -d2^2a /M  ]\n      // [   0             0            1          0          ]\n\n      d3powA = Math.pow(d3, alpha);\n      d3pow2A = Math.pow(d3, 2 * alpha);\n      d2powA = Math.pow(d2, alpha);\n      d2pow2A = Math.pow(d2, 2 * alpha);\n      d1powA = Math.pow(d1, alpha);\n      d1pow2A = Math.pow(d1, 2 * alpha);\n      A = 2 * d1pow2A + 3 * d1powA * d2powA + d2pow2A;\n      B = 2 * d3pow2A + 3 * d3powA * d2powA + d2pow2A;\n      N = 3 * d1powA * (d1powA + d2powA);\n      if (N > 0) {\n        N = 1 / N;\n      }\n      M = 3 * d3powA * (d3powA + d2powA);\n      if (M > 0) {\n        M = 1 / M;\n      }\n      bp1 = {\n        screen_x: (-d2pow2A * p0.screen_x + A * p1.screen_x + d1pow2A * p2.screen_x) * N,\n        screen_y: (-d2pow2A * p0.screen_y + A * p1.screen_y + d1pow2A * p2.screen_y) * N\n      };\n      bp2 = {\n        screen_x: (d3pow2A * p1.screen_x + B * p2.screen_x - d2pow2A * p3.screen_x) * M,\n        screen_y: (d3pow2A * p1.screen_y + B * p2.screen_y - d2pow2A * p3.screen_y) * M\n      };\n      if (bp1.screen_x == 0 && bp1.screen_y == 0) {\n        bp1 = p1;\n      }\n      if (bp2.screen_x == 0 && bp2.screen_y == 0) {\n        bp2 = p2;\n      }\n      d.push([bp1.screen_x, bp1.screen_y]);\n      d.push([bp2.screen_x, bp2.screen_y]);\n      d.push([p2.screen_x, p2.screen_y]);\n    }\n    return d;\n  }\n};\n\n/**\n * this generates the SVG path for a linear drawing between datapoints.\n * @param {Array.<Object>} data\n * @returns {string}\n * @private\n */\nLine._linear = function (data) {\n  // linear\n  var d = [];\n  for (var i = 0; i < data.length; i++) {\n    d.push([data[i].screen_x, data[i].screen_y]);\n  }\n  return d;\n};\n\n/**\n * /**\n * @param {object} group            | the object of the group from the dataset\n * @param {string} groupId          | ID of the group\n * @param {object} options          | the default options\n * @param {array} groupsUsingDefaultStyles  | this array has one entree.\n *                                            It is passed as an array so it is passed by reference.\n *                                            It enumerates through the default styles\n * @constructor GraphGroup\n */\nfunction GraphGroup(group, groupId, options, groupsUsingDefaultStyles) {\n  this.id = groupId;\n  var fields = ['sampling', 'style', 'sort', 'yAxisOrientation', 'barChart', 'drawPoints', 'shaded', 'interpolation', 'zIndex', 'excludeFromStacking', 'excludeFromLegend'];\n  this.options = availableUtils.selectiveBridgeObject(fields, options);\n  this.usingDefaultStyle = group.className === undefined;\n  this.groupsUsingDefaultStyles = groupsUsingDefaultStyles;\n  this.zeroPosition = 0;\n  this.update(group);\n  if (this.usingDefaultStyle == true) {\n    this.groupsUsingDefaultStyles[0] += 1;\n  }\n  this.itemsData = [];\n  this.visible = group.visible === undefined ? true : group.visible;\n}\n\n/**\n * this loads a reference to all items in this group into this group.\n * @param {array} items\n */\nGraphGroup.prototype.setItems = function (items) {\n  if (items != null) {\n    this.itemsData = items;\n    if (_sortInstanceProperty(this.options) == true) {\n      availableUtils.insertSort(this.itemsData, function (a, b) {\n        return a.x > b.x ? 1 : -1;\n      });\n    }\n  } else {\n    this.itemsData = [];\n  }\n};\nGraphGroup.prototype.getItems = function () {\n  return this.itemsData;\n};\n\n/**\n * this is used for barcharts and shading, this way, we only have to calculate it once.\n * @param {number} pos\n */\nGraphGroup.prototype.setZeroPosition = function (pos) {\n  this.zeroPosition = pos;\n};\n\n/**\n * set the options of the graph group over the default options.\n * @param {Object} options\n */\nGraphGroup.prototype.setOptions = function (options) {\n  if (options !== undefined) {\n    var fields = ['sampling', 'style', 'sort', 'yAxisOrientation', 'barChart', 'zIndex', 'excludeFromStacking', 'excludeFromLegend'];\n    availableUtils.selectiveDeepExtend(fields, this.options, options);\n\n    // if the group's drawPoints is a function delegate the callback to the onRender property\n    if (typeof options.drawPoints == 'function') {\n      options.drawPoints = {\n        onRender: options.drawPoints\n      };\n    }\n    availableUtils.mergeOptions(this.options, options, 'interpolation');\n    availableUtils.mergeOptions(this.options, options, 'drawPoints');\n    availableUtils.mergeOptions(this.options, options, 'shaded');\n    if (options.interpolation) {\n      if (_typeof$1(options.interpolation) == 'object') {\n        if (options.interpolation.parametrization) {\n          if (options.interpolation.parametrization == 'uniform') {\n            this.options.interpolation.alpha = 0;\n          } else if (options.interpolation.parametrization == 'chordal') {\n            this.options.interpolation.alpha = 1.0;\n          } else {\n            this.options.interpolation.parametrization = 'centripetal';\n            this.options.interpolation.alpha = 0.5;\n          }\n        }\n      }\n    }\n  }\n};\n\n/**\n * this updates the current group class with the latest group dataset entree, used in _updateGroup in linegraph\n * @param {vis.Group} group\n */\nGraphGroup.prototype.update = function (group) {\n  this.group = group;\n  this.content = group.content || 'graph';\n  this.className = group.className || this.className || 'vis-graph-group' + this.groupsUsingDefaultStyles[0] % 10;\n  this.visible = group.visible === undefined ? true : group.visible;\n  this.style = group.style;\n  this.setOptions(group.options);\n};\n\n/**\n * return the legend entree for this group.\n *\n * @param {number} iconWidth\n * @param {number} iconHeight\n * @param {{svg: (*|Element), svgElements: Object, options: Object, groups: Array.<Object>}} framework\n * @param {number} x\n * @param {number} y\n * @returns {{icon: (*|Element), label: (*|string), orientation: *}}\n */\nGraphGroup.prototype.getLegend = function (iconWidth, iconHeight, framework, x, y) {\n  if (framework == undefined || framework == null) {\n    var svg = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\n    framework = {\n      svg: svg,\n      svgElements: {},\n      options: this.options,\n      groups: [this]\n    };\n  }\n  if (x == undefined || x == null) {\n    x = 0;\n  }\n  if (y == undefined || y == null) {\n    y = 0.5 * iconHeight;\n  }\n  switch (this.options.style) {\n    case \"line\":\n      Line.drawIcon(this, x, y, iconWidth, iconHeight, framework);\n      break;\n    case \"points\": //explicit no break\n    case \"point\":\n      Points.drawIcon(this, x, y, iconWidth, iconHeight, framework);\n      break;\n    case \"bar\":\n      Bargraph.drawIcon(this, x, y, iconWidth, iconHeight, framework);\n      break;\n  }\n  return {\n    icon: framework.svg,\n    label: this.content,\n    orientation: this.options.yAxisOrientation\n  };\n};\nGraphGroup.prototype.getYRange = function (groupData) {\n  var yMin = groupData[0].y;\n  var yMax = groupData[0].y;\n  for (var j = 0; j < groupData.length; j++) {\n    yMin = yMin > groupData[j].y ? groupData[j].y : yMin;\n    yMax = yMax < groupData[j].y ? groupData[j].y : yMax;\n  }\n  return {\n    min: yMin,\n    max: yMax,\n    yAxisOrientation: this.options.yAxisOrientation\n  };\n};\n\n/**\n * Legend for Graph2d\n *\n * @param {vis.Graph2d.body} body\n * @param {vis.Graph2d.options} options\n * @param {number} side\n * @param {vis.LineGraph.options} linegraphOptions\n * @constructor Legend\n * @extends Component\n */\nfunction Legend(body, options, side, linegraphOptions) {\n  this.body = body;\n  this.defaultOptions = {\n    enabled: false,\n    icons: true,\n    iconSize: 20,\n    iconSpacing: 6,\n    left: {\n      visible: true,\n      position: 'top-left' // top/bottom - left,center,right\n    },\n\n    right: {\n      visible: true,\n      position: 'top-right' // top/bottom - left,center,right\n    }\n  };\n\n  this.side = side;\n  this.options = availableUtils.extend({}, this.defaultOptions);\n  this.linegraphOptions = linegraphOptions;\n  this.svgElements = {};\n  this.dom = {};\n  this.groups = {};\n  this.amountOfGroups = 0;\n  this._create();\n  this.framework = {\n    svg: this.svg,\n    svgElements: this.svgElements,\n    options: this.options,\n    groups: this.groups\n  };\n  this.setOptions(options);\n}\nLegend.prototype = new Component();\nLegend.prototype.clear = function () {\n  this.groups = {};\n  this.amountOfGroups = 0;\n};\nLegend.prototype.addGroup = function (label, graphOptions) {\n  // Include a group only if the group option 'excludeFromLegend: false' is not set.\n  if (graphOptions.options.excludeFromLegend != true) {\n    if (!this.groups.hasOwnProperty(label)) {\n      this.groups[label] = graphOptions;\n    }\n    this.amountOfGroups += 1;\n  }\n};\nLegend.prototype.updateGroup = function (label, graphOptions) {\n  this.groups[label] = graphOptions;\n};\nLegend.prototype.removeGroup = function (label) {\n  if (this.groups.hasOwnProperty(label)) {\n    delete this.groups[label];\n    this.amountOfGroups -= 1;\n  }\n};\nLegend.prototype._create = function () {\n  this.dom.frame = document.createElement('div');\n  this.dom.frame.className = 'vis-legend';\n  this.dom.frame.style.position = \"absolute\";\n  this.dom.frame.style.top = \"10px\";\n  this.dom.frame.style.display = \"block\";\n  this.dom.textArea = document.createElement('div');\n  this.dom.textArea.className = 'vis-legend-text';\n  this.dom.textArea.style.position = \"relative\";\n  this.dom.textArea.style.top = \"0px\";\n  this.svg = document.createElementNS('http://www.w3.org/2000/svg', \"svg\");\n  this.svg.style.position = 'absolute';\n  this.svg.style.top = 0 + 'px';\n  this.svg.style.width = this.options.iconSize + 5 + 'px';\n  this.svg.style.height = '100%';\n  this.dom.frame.appendChild(this.svg);\n  this.dom.frame.appendChild(this.dom.textArea);\n};\n\n/**\n * Hide the component from the DOM\n */\nLegend.prototype.hide = function () {\n  // remove the frame containing the items\n  if (this.dom.frame.parentNode) {\n    this.dom.frame.parentNode.removeChild(this.dom.frame);\n  }\n};\n\n/**\n * Show the component in the DOM (when not already visible).\n */\nLegend.prototype.show = function () {\n  // show frame containing the items\n  if (!this.dom.frame.parentNode) {\n    this.body.dom.center.appendChild(this.dom.frame);\n  }\n};\nLegend.prototype.setOptions = function (options) {\n  var fields = ['enabled', 'orientation', 'icons', 'left', 'right'];\n  availableUtils.selectiveDeepExtend(fields, this.options, options);\n};\nLegend.prototype.redraw = function () {\n  var activeGroups = 0;\n  var groupArray = _Object$keys(this.groups);\n  _sortInstanceProperty(groupArray).call(groupArray, function (a, b) {\n    return a < b ? -1 : 1;\n  });\n  for (var i = 0; i < groupArray.length; i++) {\n    var groupId = groupArray[i];\n    if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {\n      activeGroups++;\n    }\n  }\n  if (this.options[this.side].visible == false || this.amountOfGroups == 0 || this.options.enabled == false || activeGroups == 0) {\n    this.hide();\n  } else {\n    this.show();\n    if (this.options[this.side].position == 'top-left' || this.options[this.side].position == 'bottom-left') {\n      this.dom.frame.style.left = '4px';\n      this.dom.frame.style.textAlign = \"left\";\n      this.dom.textArea.style.textAlign = \"left\";\n      this.dom.textArea.style.left = this.options.iconSize + 15 + 'px';\n      this.dom.textArea.style.right = '';\n      this.svg.style.left = 0 + 'px';\n      this.svg.style.right = '';\n    } else {\n      this.dom.frame.style.right = '4px';\n      this.dom.frame.style.textAlign = \"right\";\n      this.dom.textArea.style.textAlign = \"right\";\n      this.dom.textArea.style.right = this.options.iconSize + 15 + 'px';\n      this.dom.textArea.style.left = '';\n      this.svg.style.right = 0 + 'px';\n      this.svg.style.left = '';\n    }\n    if (this.options[this.side].position == 'top-left' || this.options[this.side].position == 'top-right') {\n      this.dom.frame.style.top = 4 - Number(this.body.dom.center.style.top.replace(\"px\", \"\")) + 'px';\n      this.dom.frame.style.bottom = '';\n    } else {\n      var scrollableHeight = this.body.domProps.center.height - this.body.domProps.centerContainer.height;\n      this.dom.frame.style.bottom = 4 + scrollableHeight + Number(this.body.dom.center.style.top.replace(\"px\", \"\")) + 'px';\n      this.dom.frame.style.top = '';\n    }\n    if (this.options.icons == false) {\n      this.dom.frame.style.width = this.dom.textArea.offsetWidth + 10 + 'px';\n      this.dom.textArea.style.right = '';\n      this.dom.textArea.style.left = '';\n      this.svg.style.width = '0px';\n    } else {\n      this.dom.frame.style.width = this.options.iconSize + 15 + this.dom.textArea.offsetWidth + 10 + 'px';\n      this.drawLegendIcons();\n    }\n    var content = '';\n    for (i = 0; i < groupArray.length; i++) {\n      groupId = groupArray[i];\n      if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {\n        content += this.groups[groupId].content + '<br />';\n      }\n    }\n    this.dom.textArea.innerHTML = availableUtils.xss(content);\n    this.dom.textArea.style.lineHeight = 0.75 * this.options.iconSize + this.options.iconSpacing + 'px';\n  }\n};\nLegend.prototype.drawLegendIcons = function () {\n  if (this.dom.frame.parentNode) {\n    var groupArray = _Object$keys(this.groups);\n    _sortInstanceProperty(groupArray).call(groupArray, function (a, b) {\n      return a < b ? -1 : 1;\n    });\n\n    // this resets the elements so the order is maintained\n    resetElements(this.svgElements);\n    var padding = window.getComputedStyle(this.dom.frame).paddingTop;\n    var iconOffset = Number(padding.replace('px', ''));\n    var x = iconOffset;\n    var iconWidth = this.options.iconSize;\n    var iconHeight = 0.75 * this.options.iconSize;\n    var y = iconOffset + 0.5 * iconHeight + 3;\n    this.svg.style.width = iconWidth + 5 + iconOffset + 'px';\n    for (var i = 0; i < groupArray.length; i++) {\n      var groupId = groupArray[i];\n      if (this.groups[groupId].visible == true && (this.linegraphOptions.visibility[groupId] === undefined || this.linegraphOptions.visibility[groupId] == true)) {\n        this.groups[groupId].getLegend(iconWidth, iconHeight, this.framework, x, y);\n        y += iconHeight + this.options.iconSpacing;\n      }\n    }\n  }\n};\n\nvar UNGROUPED = '__ungrouped__'; // reserved group id for ungrouped items\n\n/**\n * This is the constructor of the LineGraph. It requires a Timeline body and options.\n *\n * @param {vis.Timeline.body} body\n * @param {Object} options\n * @constructor LineGraph\n * @extends Component\n */\nfunction LineGraph(body, options) {\n  this.id = v4();\n  this.body = body;\n  this.defaultOptions = {\n    yAxisOrientation: 'left',\n    defaultGroup: 'default',\n    sort: true,\n    sampling: true,\n    stack: false,\n    graphHeight: '400px',\n    shaded: {\n      enabled: false,\n      orientation: 'bottom' // top, bottom, zero\n    },\n\n    style: 'line',\n    // line, bar\n    barChart: {\n      width: 50,\n      sideBySide: false,\n      align: 'center' // left, center, right\n    },\n\n    interpolation: {\n      enabled: true,\n      parametrization: 'centripetal',\n      // uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)\n      alpha: 0.5\n    },\n    drawPoints: {\n      enabled: true,\n      size: 6,\n      style: 'square' // square, circle\n    },\n\n    dataAxis: {},\n    //Defaults are done on DataAxis level\n    legend: {},\n    //Defaults are done on Legend level\n    groups: {\n      visibility: {}\n    }\n  };\n\n  // options is shared by this lineGraph and all its items\n  this.options = availableUtils.extend({}, this.defaultOptions);\n  this.dom = {};\n  this.props = {};\n  this.hammer = null;\n  this.groups = {};\n  this.abortedGraphUpdate = false;\n  this.updateSVGheight = false;\n  this.updateSVGheightOnResize = false;\n  this.forceGraphUpdate = true;\n  var me = this;\n  this.itemsData = null; // DataSet\n  this.groupsData = null; // DataSet\n\n  // listeners for the DataSet of the items\n  this.itemListeners = {\n    'add': function add(event, params, senderId) {\n      // eslint-disable-line no-unused-vars\n      me._onAdd(params.items);\n    },\n    'update': function update(event, params, senderId) {\n      // eslint-disable-line no-unused-vars\n      me._onUpdate(params.items);\n    },\n    'remove': function remove(event, params, senderId) {\n      // eslint-disable-line no-unused-vars\n      me._onRemove(params.items);\n    }\n  };\n\n  // listeners for the DataSet of the groups\n  this.groupListeners = {\n    'add': function add(event, params, senderId) {\n      // eslint-disable-line no-unused-vars\n      me._onAddGroups(params.items);\n    },\n    'update': function update(event, params, senderId) {\n      // eslint-disable-line no-unused-vars\n      me._onUpdateGroups(params.items);\n    },\n    'remove': function remove(event, params, senderId) {\n      // eslint-disable-line no-unused-vars\n      me._onRemoveGroups(params.items);\n    }\n  };\n  this.items = {}; // object with an Item for every data item\n  this.selection = []; // list with the ids of all selected nodes\n  this.lastStart = this.body.range.start;\n  this.touchParams = {}; // stores properties while dragging\n\n  this.svgElements = {};\n  this.setOptions(options);\n  this.groupsUsingDefaultStyles = [0];\n  this.body.emitter.on('rangechanged', function () {\n    me.svg.style.left = availableUtils.option.asSize(-me.props.width);\n    me.forceGraphUpdate = true;\n    //Is this local redraw necessary? (Core also does a change event!)\n    me.redraw.call(me);\n  });\n\n  // create the HTML DOM\n  this._create();\n  this.framework = {\n    svg: this.svg,\n    svgElements: this.svgElements,\n    options: this.options,\n    groups: this.groups\n  };\n}\nLineGraph.prototype = new Component();\n\n/**\n * Create the HTML DOM for the ItemSet\n */\nLineGraph.prototype._create = function () {\n  var frame = document.createElement('div');\n  frame.className = 'vis-line-graph';\n  this.dom.frame = frame;\n\n  // create svg element for graph drawing.\n  this.svg = document.createElementNS('http://www.w3.org/2000/svg', 'svg');\n  this.svg.style.position = 'relative';\n  this.svg.style.height = ('' + this.options.graphHeight).replace('px', '') + 'px';\n  this.svg.style.display = 'block';\n  frame.appendChild(this.svg);\n\n  // data axis\n  this.options.dataAxis.orientation = 'left';\n  this.yAxisLeft = new DataAxis(this.body, this.options.dataAxis, this.svg, this.options.groups);\n  this.options.dataAxis.orientation = 'right';\n  this.yAxisRight = new DataAxis(this.body, this.options.dataAxis, this.svg, this.options.groups);\n  delete this.options.dataAxis.orientation;\n\n  // legends\n  this.legendLeft = new Legend(this.body, this.options.legend, 'left', this.options.groups);\n  this.legendRight = new Legend(this.body, this.options.legend, 'right', this.options.groups);\n  this.show();\n};\n\n/**\n * set the options of the LineGraph. the mergeOptions is used for subObjects that have an enabled element.\n * @param {object} options\n */\nLineGraph.prototype.setOptions = function (options) {\n  if (options) {\n    var fields = ['sampling', 'defaultGroup', 'stack', 'height', 'graphHeight', 'yAxisOrientation', 'style', 'barChart', 'dataAxis', 'sort', 'groups'];\n    if (options.graphHeight === undefined && options.height !== undefined) {\n      this.updateSVGheight = true;\n      this.updateSVGheightOnResize = true;\n    } else if (this.body.domProps.centerContainer.height !== undefined && options.graphHeight !== undefined) {\n      if (_parseInt$1((options.graphHeight + '').replace(\"px\", '')) < this.body.domProps.centerContainer.height) {\n        this.updateSVGheight = true;\n      }\n    }\n    availableUtils.selectiveDeepExtend(fields, this.options, options);\n    availableUtils.mergeOptions(this.options, options, 'interpolation');\n    availableUtils.mergeOptions(this.options, options, 'drawPoints');\n    availableUtils.mergeOptions(this.options, options, 'shaded');\n    availableUtils.mergeOptions(this.options, options, 'legend');\n    if (options.interpolation) {\n      if (_typeof$1(options.interpolation) == 'object') {\n        if (options.interpolation.parametrization) {\n          if (options.interpolation.parametrization == 'uniform') {\n            this.options.interpolation.alpha = 0;\n          } else if (options.interpolation.parametrization == 'chordal') {\n            this.options.interpolation.alpha = 1.0;\n          } else {\n            this.options.interpolation.parametrization = 'centripetal';\n            this.options.interpolation.alpha = 0.5;\n          }\n        }\n      }\n    }\n    if (this.yAxisLeft) {\n      if (options.dataAxis !== undefined) {\n        this.yAxisLeft.setOptions(this.options.dataAxis);\n        this.yAxisRight.setOptions(this.options.dataAxis);\n      }\n    }\n    if (this.legendLeft) {\n      if (options.legend !== undefined) {\n        this.legendLeft.setOptions(this.options.legend);\n        this.legendRight.setOptions(this.options.legend);\n      }\n    }\n    if (this.groups.hasOwnProperty(UNGROUPED)) {\n      this.groups[UNGROUPED].setOptions(options);\n    }\n  }\n\n  // this is used to redraw the graph if the visibility of the groups is changed.\n  if (this.dom.frame) {\n    //not on initial run?\n    this.forceGraphUpdate = true;\n    this.body.emitter.emit(\"_change\", {\n      queue: true\n    });\n  }\n};\n\n/**\n * Hide the component from the DOM\n */\nLineGraph.prototype.hide = function () {\n  // remove the frame containing the items\n  if (this.dom.frame.parentNode) {\n    this.dom.frame.parentNode.removeChild(this.dom.frame);\n  }\n};\n\n/**\n * Show the component in the DOM (when not already visible).\n */\nLineGraph.prototype.show = function () {\n  // show frame containing the items\n  if (!this.dom.frame.parentNode) {\n    this.body.dom.center.appendChild(this.dom.frame);\n  }\n};\n\n/**\n * Set items\n * @param {vis.DataSet | null} items\n */\nLineGraph.prototype.setItems = function (items) {\n  var me = this,\n    ids,\n    oldItemsData = this.itemsData;\n\n  // replace the dataset\n  if (!items) {\n    this.itemsData = null;\n  } else if (isDataViewLike(items)) {\n    this.itemsData = typeCoerceDataSet(items);\n  } else {\n    throw new TypeError('Data must implement the interface of DataSet or DataView');\n  }\n  if (oldItemsData) {\n    // unsubscribe from old dataset\n    _forEachInstanceProperty(availableUtils).call(availableUtils, this.itemListeners, function (callback, event) {\n      oldItemsData.off(event, callback);\n    });\n\n    // stop maintaining a coerced version of the old data set\n    oldItemsData.dispose();\n\n    // remove all drawn items\n    ids = oldItemsData.getIds();\n    this._onRemove(ids);\n  }\n  if (this.itemsData) {\n    // subscribe to new dataset\n    var id = this.id;\n    _forEachInstanceProperty(availableUtils).call(availableUtils, this.itemListeners, function (callback, event) {\n      me.itemsData.on(event, callback, id);\n    });\n\n    // add all new items\n    ids = this.itemsData.getIds();\n    this._onAdd(ids);\n  }\n};\n\n/**\n * Set groups\n * @param {vis.DataSet} groups\n */\nLineGraph.prototype.setGroups = function (groups) {\n  var me = this;\n  var ids;\n\n  // unsubscribe from current dataset\n  if (this.groupsData) {\n    _forEachInstanceProperty(availableUtils).call(availableUtils, this.groupListeners, function (callback, event) {\n      me.groupsData.off(event, callback);\n    });\n\n    // remove all drawn groups\n    ids = this.groupsData.getIds();\n    this.groupsData = null;\n    for (var i = 0; i < ids.length; i++) {\n      this._removeGroup(ids[i]);\n    }\n  }\n\n  // replace the dataset\n  if (!groups) {\n    this.groupsData = null;\n  } else if (isDataViewLike(groups)) {\n    this.groupsData = groups;\n  } else {\n    throw new TypeError('Data must implement the interface of DataSet or DataView');\n  }\n  if (this.groupsData) {\n    // subscribe to new dataset\n    var id = this.id;\n    _forEachInstanceProperty(availableUtils).call(availableUtils, this.groupListeners, function (callback, event) {\n      me.groupsData.on(event, callback, id);\n    });\n\n    // draw all ms\n    ids = this.groupsData.getIds();\n    this._onAddGroups(ids);\n  }\n};\nLineGraph.prototype._onUpdate = function (ids) {\n  this._updateAllGroupData(ids);\n};\nLineGraph.prototype._onAdd = function (ids) {\n  this._onUpdate(ids);\n};\nLineGraph.prototype._onRemove = function (ids) {\n  this._onUpdate(ids);\n};\nLineGraph.prototype._onUpdateGroups = function (groupIds) {\n  this._updateAllGroupData(null, groupIds);\n};\nLineGraph.prototype._onAddGroups = function (groupIds) {\n  this._onUpdateGroups(groupIds);\n};\n\n/**\n * this cleans the group out off the legends and the dataaxis, updates the ungrouped and updates the graph\n * @param {Array} groupIds\n * @private\n */\nLineGraph.prototype._onRemoveGroups = function (groupIds) {\n  for (var i = 0; i < groupIds.length; i++) {\n    this._removeGroup(groupIds[i]);\n  }\n  this.forceGraphUpdate = true;\n  this.body.emitter.emit(\"_change\", {\n    queue: true\n  });\n};\n\n/**\n * this cleans the group out off the legends and the dataaxis\n * @param {vis.GraphGroup.id} groupId\n * @private\n */\nLineGraph.prototype._removeGroup = function (groupId) {\n  if (this.groups.hasOwnProperty(groupId)) {\n    if (this.groups[groupId].options.yAxisOrientation == 'right') {\n      this.yAxisRight.removeGroup(groupId);\n      this.legendRight.removeGroup(groupId);\n      this.legendRight.redraw();\n    } else {\n      this.yAxisLeft.removeGroup(groupId);\n      this.legendLeft.removeGroup(groupId);\n      this.legendLeft.redraw();\n    }\n    delete this.groups[groupId];\n  }\n};\n\n/**\n * update a group object with the group dataset entree\n *\n * @param {vis.GraphGroup} group\n * @param {vis.GraphGroup.id} groupId\n * @private\n */\nLineGraph.prototype._updateGroup = function (group, groupId) {\n  if (!this.groups.hasOwnProperty(groupId)) {\n    this.groups[groupId] = new GraphGroup(group, groupId, this.options, this.groupsUsingDefaultStyles);\n    if (this.groups[groupId].options.yAxisOrientation == 'right') {\n      this.yAxisRight.addGroup(groupId, this.groups[groupId]);\n      this.legendRight.addGroup(groupId, this.groups[groupId]);\n    } else {\n      this.yAxisLeft.addGroup(groupId, this.groups[groupId]);\n      this.legendLeft.addGroup(groupId, this.groups[groupId]);\n    }\n  } else {\n    this.groups[groupId].update(group);\n    if (this.groups[groupId].options.yAxisOrientation == 'right') {\n      this.yAxisRight.updateGroup(groupId, this.groups[groupId]);\n      this.legendRight.updateGroup(groupId, this.groups[groupId]);\n      //If yAxisOrientation changed, clean out the group from the other axis.\n      this.yAxisLeft.removeGroup(groupId);\n      this.legendLeft.removeGroup(groupId);\n    } else {\n      this.yAxisLeft.updateGroup(groupId, this.groups[groupId]);\n      this.legendLeft.updateGroup(groupId, this.groups[groupId]);\n      //If yAxisOrientation changed, clean out the group from the other axis.\n      this.yAxisRight.removeGroup(groupId);\n      this.legendRight.removeGroup(groupId);\n    }\n  }\n  this.legendLeft.redraw();\n  this.legendRight.redraw();\n};\n\n/**\n * this updates all groups, it is used when there is an update the the itemset.\n *\n * @param  {Array} ids\n * @param  {Array} groupIds\n * @private\n */\nLineGraph.prototype._updateAllGroupData = function (ids, groupIds) {\n  if (this.itemsData != null) {\n    var groupsContent = {};\n    var items = this.itemsData.get();\n    var fieldId = this.itemsData.idProp;\n    var idMap = {};\n    if (ids) {\n      _mapInstanceProperty(ids).call(ids, function (id) {\n        idMap[id] = id;\n      });\n    }\n\n    //pre-Determine array sizes, for more efficient memory claim\n    var groupCounts = {};\n    for (var i = 0; i < items.length; i++) {\n      var item = items[i];\n      var groupId = item.group;\n      if (groupId === null || groupId === undefined) {\n        groupId = UNGROUPED;\n      }\n      groupCounts.hasOwnProperty(groupId) ? groupCounts[groupId]++ : groupCounts[groupId] = 1;\n    }\n\n    //Pre-load arrays from existing groups if items are not changed (not in ids)\n    var existingItemsMap = {};\n    if (!groupIds && ids) {\n      for (groupId in this.groups) {\n        if (this.groups.hasOwnProperty(groupId)) {\n          group = this.groups[groupId];\n          var existing_items = group.getItems();\n          groupsContent[groupId] = _filterInstanceProperty(existing_items).call(existing_items, function (item) {\n            existingItemsMap[item[fieldId]] = item[fieldId];\n            return item[fieldId] !== idMap[item[fieldId]];\n          });\n          var newLength = groupCounts[groupId];\n          groupCounts[groupId] -= groupsContent[groupId].length;\n          if (groupsContent[groupId].length < newLength) {\n            groupsContent[groupId][newLength - 1] = {};\n          }\n        }\n      }\n    }\n\n    //Now insert data into the arrays.\n    for (i = 0; i < items.length; i++) {\n      item = items[i];\n      groupId = item.group;\n      if (groupId === null || groupId === undefined) {\n        groupId = UNGROUPED;\n      }\n      if (!groupIds && ids && item[fieldId] !== idMap[item[fieldId]] && existingItemsMap.hasOwnProperty(item[fieldId])) {\n        continue;\n      }\n      if (!groupsContent.hasOwnProperty(groupId)) {\n        groupsContent[groupId] = new Array(groupCounts[groupId]);\n      }\n      //Copy data (because of unmodifiable DataView input.\n      var extended = availableUtils.bridgeObject(item);\n      extended.x = availableUtils.convert(item.x, 'Date');\n      extended.end = availableUtils.convert(item.end, 'Date');\n      extended.orginalY = item.y; //real Y\n      extended.y = Number(item.y);\n      extended[fieldId] = item[fieldId];\n      var index = groupsContent[groupId].length - groupCounts[groupId]--;\n      groupsContent[groupId][index] = extended;\n    }\n\n    //Make sure all groups are present, to allow removal of old groups\n    for (groupId in this.groups) {\n      if (this.groups.hasOwnProperty(groupId)) {\n        if (!groupsContent.hasOwnProperty(groupId)) {\n          groupsContent[groupId] = new Array(0);\n        }\n      }\n    }\n\n    //Update legendas, style and axis\n    for (groupId in groupsContent) {\n      if (groupsContent.hasOwnProperty(groupId)) {\n        if (groupsContent[groupId].length == 0) {\n          if (this.groups.hasOwnProperty(groupId)) {\n            this._removeGroup(groupId);\n          }\n        } else {\n          var group = undefined;\n          if (this.groupsData != undefined) {\n            group = this.groupsData.get(groupId);\n          }\n          if (group == undefined) {\n            group = {\n              id: groupId,\n              content: this.options.defaultGroup + groupId\n            };\n          }\n          this._updateGroup(group, groupId);\n          this.groups[groupId].setItems(groupsContent[groupId]);\n        }\n      }\n    }\n    this.forceGraphUpdate = true;\n    this.body.emitter.emit(\"_change\", {\n      queue: true\n    });\n  }\n};\n\n/**\n * Redraw the component, mandatory function\n * @return {boolean} Returns true if the component is resized\n */\nLineGraph.prototype.redraw = function () {\n  var resized = false;\n\n  // calculate actual size and position\n  this.props.width = this.dom.frame.offsetWidth;\n  this.props.height = this.body.domProps.centerContainer.height - this.body.domProps.border.top - this.body.domProps.border.bottom;\n\n  // check if this component is resized\n  resized = this._isResized() || resized;\n\n  // check whether zoomed (in that case we need to re-stack everything)\n  var visibleInterval = this.body.range.end - this.body.range.start;\n  var zoomed = visibleInterval != this.lastVisibleInterval;\n  this.lastVisibleInterval = visibleInterval;\n\n  // the svg element is three times as big as the width, this allows for fully dragging left and right\n  // without reloading the graph. the controls for this are bound to events in the constructor\n  if (resized == true) {\n    var _context;\n    this.svg.style.width = availableUtils.option.asSize(3 * this.props.width);\n    this.svg.style.left = availableUtils.option.asSize(-this.props.width);\n\n    // if the height of the graph is set as proportional, change the height of the svg\n    if (_indexOfInstanceProperty(_context = this.options.height + '').call(_context, \"%\") != -1 || this.updateSVGheightOnResize == true) {\n      this.updateSVGheight = true;\n    }\n  }\n\n  // update the height of the graph on each redraw of the graph.\n  if (this.updateSVGheight == true) {\n    if (this.options.graphHeight != this.props.height + 'px') {\n      this.options.graphHeight = this.props.height + 'px';\n      this.svg.style.height = this.props.height + 'px';\n    }\n    this.updateSVGheight = false;\n  } else {\n    this.svg.style.height = ('' + this.options.graphHeight).replace('px', '') + 'px';\n  }\n\n  // zoomed is here to ensure that animations are shown correctly.\n  if (resized == true || zoomed == true || this.abortedGraphUpdate == true || this.forceGraphUpdate == true) {\n    resized = this._updateGraph() || resized;\n    this.forceGraphUpdate = false;\n    this.lastStart = this.body.range.start;\n    this.svg.style.left = -this.props.width + 'px';\n  } else {\n    // move the whole svg while dragging\n    if (this.lastStart != 0) {\n      var offset = this.body.range.start - this.lastStart;\n      var range = this.body.range.end - this.body.range.start;\n      if (this.props.width != 0) {\n        var rangePerPixelInv = this.props.width / range;\n        var xOffset = offset * rangePerPixelInv;\n        this.svg.style.left = -this.props.width - xOffset + 'px';\n      }\n    }\n  }\n  this.legendLeft.redraw();\n  this.legendRight.redraw();\n  return resized;\n};\nLineGraph.prototype._getSortedGroupIds = function () {\n  // getting group Ids\n  var grouplist = [];\n  for (var groupId in this.groups) {\n    if (this.groups.hasOwnProperty(groupId)) {\n      var group = this.groups[groupId];\n      if (group.visible == true && (this.options.groups.visibility[groupId] === undefined || this.options.groups.visibility[groupId] == true)) {\n        grouplist.push({\n          id: groupId,\n          zIndex: group.options.zIndex\n        });\n      }\n    }\n  }\n  availableUtils.insertSort(grouplist, function (a, b) {\n    var az = a.zIndex;\n    var bz = b.zIndex;\n    if (az === undefined) az = 0;\n    if (bz === undefined) bz = 0;\n    return az == bz ? 0 : az < bz ? -1 : 1;\n  });\n  var groupIds = new Array(grouplist.length);\n  for (var i = 0; i < grouplist.length; i++) {\n    groupIds[i] = grouplist[i].id;\n  }\n  return groupIds;\n};\n\n/**\n * Update and redraw the graph.\n *\n * @returns {boolean}\n * @private\n */\nLineGraph.prototype._updateGraph = function () {\n  // reset the svg elements\n  prepareElements(this.svgElements);\n  if (this.props.width != 0 && this.itemsData != null) {\n    var group, i;\n    var groupRanges = {};\n    var changeCalled = false;\n    // this is the range of the SVG canvas\n    var minDate = this.body.util.toGlobalTime(-this.body.domProps.root.width);\n    var maxDate = this.body.util.toGlobalTime(2 * this.body.domProps.root.width);\n\n    // getting group Ids\n    var groupIds = this._getSortedGroupIds();\n    if (groupIds.length > 0) {\n      var groupsData = {};\n\n      // fill groups data, this only loads the data we require based on the timewindow\n      this._getRelevantData(groupIds, groupsData, minDate, maxDate);\n\n      // apply sampling, if disabled, it will pass through this function.\n      this._applySampling(groupIds, groupsData);\n\n      // we transform the X coordinates to detect collisions\n      for (i = 0; i < groupIds.length; i++) {\n        this._convertXcoordinates(groupsData[groupIds[i]]);\n      }\n\n      // now all needed data has been collected we start the processing.\n      this._getYRanges(groupIds, groupsData, groupRanges);\n\n      // update the Y axis first, we use this data to draw at the correct Y points\n      changeCalled = this._updateYAxis(groupIds, groupRanges);\n\n      //  at changeCalled, abort this update cycle as the graph needs another update with new Width input from the Redraw container.\n      //  Cleanup SVG elements on abort.\n      if (changeCalled == true) {\n        cleanupElements(this.svgElements);\n        this.abortedGraphUpdate = true;\n        return true;\n      }\n      this.abortedGraphUpdate = false;\n\n      // With the yAxis scaled correctly, use this to get the Y values of the points.\n      var below = undefined;\n      for (i = 0; i < groupIds.length; i++) {\n        group = this.groups[groupIds[i]];\n        if (this.options.stack === true && this.options.style === 'line') {\n          if (group.options.excludeFromStacking == undefined || !group.options.excludeFromStacking) {\n            if (below != undefined) {\n              this._stack(groupsData[group.id], groupsData[below.id]);\n              if (group.options.shaded.enabled == true && group.options.shaded.orientation !== \"group\") {\n                if (group.options.shaded.orientation == \"top\" && below.options.shaded.orientation !== \"group\") {\n                  below.options.shaded.orientation = \"group\";\n                  below.options.shaded.groupId = group.id;\n                } else {\n                  group.options.shaded.orientation = \"group\";\n                  group.options.shaded.groupId = below.id;\n                }\n              }\n            }\n            below = group;\n          }\n        }\n        this._convertYcoordinates(groupsData[groupIds[i]], group);\n      }\n\n      //Precalculate paths and draw shading if appropriate. This will make sure the shading is always behind any lines.\n      var paths = {};\n      for (i = 0; i < groupIds.length; i++) {\n        group = this.groups[groupIds[i]];\n        if (group.options.style === 'line' && group.options.shaded.enabled == true) {\n          var dataset = groupsData[groupIds[i]];\n          if (dataset == null || dataset.length == 0) {\n            continue;\n          }\n          if (!paths.hasOwnProperty(groupIds[i])) {\n            paths[groupIds[i]] = Line.calcPath(dataset, group);\n          }\n          if (group.options.shaded.orientation === \"group\") {\n            var subGroupId = group.options.shaded.groupId;\n            if (_indexOfInstanceProperty(groupIds).call(groupIds, subGroupId) === -1) {\n              console.log(group.id + \": Unknown shading group target given:\" + subGroupId);\n              continue;\n            }\n            if (!paths.hasOwnProperty(subGroupId)) {\n              paths[subGroupId] = Line.calcPath(groupsData[subGroupId], this.groups[subGroupId]);\n            }\n            Line.drawShading(paths[groupIds[i]], group, paths[subGroupId], this.framework);\n          } else {\n            Line.drawShading(paths[groupIds[i]], group, undefined, this.framework);\n          }\n        }\n      }\n\n      // draw the groups, calculating paths if still necessary.\n      Bargraph.draw(groupIds, groupsData, this.framework);\n      for (i = 0; i < groupIds.length; i++) {\n        group = this.groups[groupIds[i]];\n        if (groupsData[groupIds[i]].length > 0) {\n          switch (group.options.style) {\n            case \"line\":\n              if (!paths.hasOwnProperty(groupIds[i])) {\n                paths[groupIds[i]] = Line.calcPath(groupsData[groupIds[i]], group);\n              }\n              Line.draw(paths[groupIds[i]], group, this.framework);\n            // eslint-disable-line no-fallthrough\n            case \"point\":\n            // eslint-disable-line no-fallthrough\n            case \"points\":\n              if (group.options.style == \"point\" || group.options.style == \"points\" || group.options.drawPoints.enabled == true) {\n                Points.draw(groupsData[groupIds[i]], group, this.framework);\n              }\n              break;\n            //do nothing...\n          }\n        }\n      }\n    }\n  }\n\n  // cleanup unused svg elements\n  cleanupElements(this.svgElements);\n  return false;\n};\nLineGraph.prototype._stack = function (data, subData) {\n  var index, dx, dy, subPrevPoint, subNextPoint;\n  index = 0;\n  // for each data point we look for a matching on in the set below\n  for (var j = 0; j < data.length; j++) {\n    subPrevPoint = undefined;\n    subNextPoint = undefined;\n    // we look for time matches or a before-after point\n    for (var k = index; k < subData.length; k++) {\n      // if times match exactly\n      if (subData[k].x === data[j].x) {\n        subPrevPoint = subData[k];\n        subNextPoint = subData[k];\n        index = k;\n        break;\n      } else if (subData[k].x > data[j].x) {\n        // overshoot\n        subNextPoint = subData[k];\n        if (k == 0) {\n          subPrevPoint = subNextPoint;\n        } else {\n          subPrevPoint = subData[k - 1];\n        }\n        index = k;\n        break;\n      }\n    }\n    // in case the last data point has been used, we assume it stays like this.\n    if (subNextPoint === undefined) {\n      subPrevPoint = subData[subData.length - 1];\n      subNextPoint = subData[subData.length - 1];\n    }\n    // linear interpolation\n    dx = subNextPoint.x - subPrevPoint.x;\n    dy = subNextPoint.y - subPrevPoint.y;\n    if (dx == 0) {\n      data[j].y = data[j].orginalY + subNextPoint.y;\n    } else {\n      data[j].y = data[j].orginalY + dy / dx * (data[j].x - subPrevPoint.x) + subPrevPoint.y; // ax + b where b is data[j].y\n    }\n  }\n};\n\n/**\n * first select and preprocess the data from the datasets.\n * the groups have their preselection of data, we now loop over this data to see\n * what data we need to draw. Sorted data is much faster.\n * more optimization is possible by doing the sampling before and using the binary search\n * to find the end date to determine the increment.\n *\n * @param {array}  groupIds\n * @param {object} groupsData\n * @param {date}   minDate\n * @param {date}   maxDate\n * @private\n */\nLineGraph.prototype._getRelevantData = function (groupIds, groupsData, minDate, maxDate) {\n  var group, i, j, item;\n  if (groupIds.length > 0) {\n    for (i = 0; i < groupIds.length; i++) {\n      group = this.groups[groupIds[i]];\n      var itemsData = group.getItems();\n      // optimization for sorted data\n      if (_sortInstanceProperty(group.options) == true) {\n        var dateComparator = function dateComparator(a, b) {\n          return a.getTime() == b.getTime() ? 0 : a < b ? -1 : 1;\n        };\n        var first = Math.max(0, availableUtils.binarySearchValue(itemsData, minDate, 'x', 'before', dateComparator));\n        var last = Math.min(itemsData.length, availableUtils.binarySearchValue(itemsData, maxDate, 'x', 'after', dateComparator) + 1);\n        if (last <= 0) {\n          last = itemsData.length;\n        }\n        var dataContainer = new Array(last - first);\n        for (j = first; j < last; j++) {\n          item = group.itemsData[j];\n          dataContainer[j - first] = item;\n        }\n        groupsData[groupIds[i]] = dataContainer;\n      } else {\n        // If unsorted data, all data is relevant, just returning entire structure\n        groupsData[groupIds[i]] = group.itemsData;\n      }\n    }\n  }\n};\n\n/**\n *\n * @param {Array.<vis.GraphGroup.id>} groupIds\n * @param {vis.DataSet} groupsData\n * @private\n */\nLineGraph.prototype._applySampling = function (groupIds, groupsData) {\n  var group;\n  if (groupIds.length > 0) {\n    for (var i = 0; i < groupIds.length; i++) {\n      group = this.groups[groupIds[i]];\n      if (group.options.sampling == true) {\n        var dataContainer = groupsData[groupIds[i]];\n        if (dataContainer.length > 0) {\n          var increment = 1;\n          var amountOfPoints = dataContainer.length;\n\n          // the global screen is used because changing the width of the yAxis may affect the increment, resulting in an endless loop\n          // of width changing of the yAxis.\n          //TODO: This assumes sorted data, but that's not guaranteed!\n          var xDistance = this.body.util.toGlobalScreen(dataContainer[dataContainer.length - 1].x) - this.body.util.toGlobalScreen(dataContainer[0].x);\n          var pointsPerPixel = amountOfPoints / xDistance;\n          increment = Math.min(Math.ceil(0.2 * amountOfPoints), Math.max(1, Math.round(pointsPerPixel)));\n          var sampledData = new Array(amountOfPoints);\n          for (var j = 0; j < amountOfPoints; j += increment) {\n            var idx = Math.round(j / increment);\n            sampledData[idx] = dataContainer[j];\n          }\n          groupsData[groupIds[i]] = _spliceInstanceProperty(sampledData).call(sampledData, 0, Math.round(amountOfPoints / increment));\n        }\n      }\n    }\n  }\n};\n\n/**\n *\n * @param {Array.<vis.GraphGroup.id>} groupIds\n * @param {vis.DataSet} groupsData\n * @param {object} groupRanges  | this is being filled here\n * @private\n */\nLineGraph.prototype._getYRanges = function (groupIds, groupsData, groupRanges) {\n  var groupData, group, i;\n  var combinedDataLeft = [];\n  var combinedDataRight = [];\n  var options;\n  if (groupIds.length > 0) {\n    for (i = 0; i < groupIds.length; i++) {\n      groupData = groupsData[groupIds[i]];\n      options = this.groups[groupIds[i]].options;\n      if (groupData.length > 0) {\n        group = this.groups[groupIds[i]];\n        // if bar graphs are stacked, their range need to be handled differently and accumulated over all groups.\n        if (options.stack === true && options.style === 'bar') {\n          if (options.yAxisOrientation === 'left') {\n            combinedDataLeft = _concatInstanceProperty(combinedDataLeft).call(combinedDataLeft, groupData);\n          } else {\n            combinedDataRight = _concatInstanceProperty(combinedDataRight).call(combinedDataRight, groupData);\n          }\n        } else {\n          groupRanges[groupIds[i]] = group.getYRange(groupData, groupIds[i]);\n        }\n      }\n    }\n\n    // if bar graphs are stacked, their range need to be handled differently and accumulated over all groups.\n    Bargraph.getStackedYRange(combinedDataLeft, groupRanges, groupIds, '__barStackLeft', 'left');\n    Bargraph.getStackedYRange(combinedDataRight, groupRanges, groupIds, '__barStackRight', 'right');\n  }\n};\n\n/**\n * this sets the Y ranges for the Y axis. It also determines which of the axis should be shown or hidden.\n * @param {Array.<vis.GraphGroup.id>} groupIds\n * @param {Object} groupRanges\n * @returns {boolean} resized\n * @private\n */\nLineGraph.prototype._updateYAxis = function (groupIds, groupRanges) {\n  var resized = false;\n  var yAxisLeftUsed = false;\n  var yAxisRightUsed = false;\n  var minLeft = 1e9,\n    minRight = 1e9,\n    maxLeft = -1e9,\n    maxRight = -1e9,\n    minVal,\n    maxVal;\n  // if groups are present\n  if (groupIds.length > 0) {\n    // this is here to make sure that if there are no items in the axis but there are groups, that there is no infinite draw/redraw loop.\n    for (var i = 0; i < groupIds.length; i++) {\n      var group = this.groups[groupIds[i]];\n      if (group && group.options.yAxisOrientation != 'right') {\n        yAxisLeftUsed = true;\n        minLeft = 1e9;\n        maxLeft = -1e9;\n      } else if (group && group.options.yAxisOrientation) {\n        yAxisRightUsed = true;\n        minRight = 1e9;\n        maxRight = -1e9;\n      }\n    }\n\n    // if there are items:\n    for (i = 0; i < groupIds.length; i++) {\n      if (groupRanges.hasOwnProperty(groupIds[i])) {\n        if (groupRanges[groupIds[i]].ignore !== true) {\n          minVal = groupRanges[groupIds[i]].min;\n          maxVal = groupRanges[groupIds[i]].max;\n          if (groupRanges[groupIds[i]].yAxisOrientation != 'right') {\n            yAxisLeftUsed = true;\n            minLeft = minLeft > minVal ? minVal : minLeft;\n            maxLeft = maxLeft < maxVal ? maxVal : maxLeft;\n          } else {\n            yAxisRightUsed = true;\n            minRight = minRight > minVal ? minVal : minRight;\n            maxRight = maxRight < maxVal ? maxVal : maxRight;\n          }\n        }\n      }\n    }\n    if (yAxisLeftUsed == true) {\n      this.yAxisLeft.setRange(minLeft, maxLeft);\n    }\n    if (yAxisRightUsed == true) {\n      this.yAxisRight.setRange(minRight, maxRight);\n    }\n  }\n  resized = this._toggleAxisVisiblity(yAxisLeftUsed, this.yAxisLeft) || resized;\n  resized = this._toggleAxisVisiblity(yAxisRightUsed, this.yAxisRight) || resized;\n  if (yAxisRightUsed == true && yAxisLeftUsed == true) {\n    this.yAxisLeft.drawIcons = true;\n    this.yAxisRight.drawIcons = true;\n  } else {\n    this.yAxisLeft.drawIcons = false;\n    this.yAxisRight.drawIcons = false;\n  }\n  this.yAxisRight.master = !yAxisLeftUsed;\n  this.yAxisRight.masterAxis = this.yAxisLeft;\n  if (this.yAxisRight.master == false) {\n    if (yAxisRightUsed == true) {\n      this.yAxisLeft.lineOffset = this.yAxisRight.width;\n    } else {\n      this.yAxisLeft.lineOffset = 0;\n    }\n    resized = this.yAxisLeft.redraw() || resized;\n    resized = this.yAxisRight.redraw() || resized;\n  } else {\n    resized = this.yAxisRight.redraw() || resized;\n  }\n\n  // clean the accumulated lists\n  var tempGroups = ['__barStackLeft', '__barStackRight', '__lineStackLeft', '__lineStackRight'];\n  for (i = 0; i < tempGroups.length; i++) {\n    if (_indexOfInstanceProperty(groupIds).call(groupIds, tempGroups[i]) != -1) {\n      _spliceInstanceProperty(groupIds).call(groupIds, _indexOfInstanceProperty(groupIds).call(groupIds, tempGroups[i]), 1);\n    }\n  }\n  return resized;\n};\n\n/**\n * This shows or hides the Y axis if needed. If there is a change, the changed event is emitted by the updateYAxis function\n *\n * @param {boolean} axisUsed\n * @param {vis.DataAxis}  axis\n * @returns {boolean}\n * @private\n */\nLineGraph.prototype._toggleAxisVisiblity = function (axisUsed, axis) {\n  var changed = false;\n  if (axisUsed == false) {\n    if (axis.dom.frame.parentNode && axis.hidden == false) {\n      axis.hide();\n      changed = true;\n    }\n  } else {\n    if (!axis.dom.frame.parentNode && axis.hidden == true) {\n      axis.show();\n      changed = true;\n    }\n  }\n  return changed;\n};\n\n/**\n * This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the\n * util function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for\n * the yAxis.\n *\n * @param {Array.<Object>} datapoints\n * @private\n */\nLineGraph.prototype._convertXcoordinates = function (datapoints) {\n  var toScreen = this.body.util.toScreen;\n  for (var i = 0; i < datapoints.length; i++) {\n    datapoints[i].screen_x = toScreen(datapoints[i].x) + this.props.width;\n    datapoints[i].screen_y = datapoints[i].y; //starting point for range calculations\n    if (datapoints[i].end != undefined) {\n      datapoints[i].screen_end = toScreen(datapoints[i].end) + this.props.width;\n    } else {\n      datapoints[i].screen_end = undefined;\n    }\n  }\n};\n\n/**\n * This uses the DataAxis object to generate the correct X coordinate on the SVG window. It uses the\n * util function toScreen to get the x coordinate from the timestamp. It also pre-filters the data and get the minMax ranges for\n * the yAxis.\n *\n * @param {Array.<Object>} datapoints\n * @param {vis.GraphGroup} group\n * @private\n */\nLineGraph.prototype._convertYcoordinates = function (datapoints, group) {\n  var axis = this.yAxisLeft;\n  var svgHeight = Number(this.svg.style.height.replace('px', ''));\n  if (group.options.yAxisOrientation == 'right') {\n    axis = this.yAxisRight;\n  }\n  for (var i = 0; i < datapoints.length; i++) {\n    datapoints[i].screen_y = Math.round(axis.convertValue(datapoints[i].y));\n  }\n  group.setZeroPosition(Math.min(svgHeight, axis.convertValue(0)));\n};\n\n/**\n * This object contains all possible options. It will check if the types are correct, if required if the option is one\n * of the allowed values.\n *\n * __any__ means that the name of the property does not matter.\n * __type__ is a required field for all objects and contains the allowed types of all objects\n */\nvar string = 'string';\nvar bool = 'boolean';\nvar number = 'number';\nvar array = 'array';\nvar date = 'date';\nvar object = 'object'; // should only be in a __type__ property\nvar dom = 'dom';\nvar moment = 'moment';\nvar any = 'any';\nvar allOptions = {\n  configure: {\n    enabled: {\n      'boolean': bool\n    },\n    filter: {\n      'boolean': bool,\n      'function': 'function'\n    },\n    container: {\n      dom: dom\n    },\n    __type__: {\n      object: object,\n      'boolean': bool,\n      'function': 'function'\n    }\n  },\n  //globals :\n  alignCurrentTime: {\n    string: string,\n    'undefined': 'undefined'\n  },\n  yAxisOrientation: {\n    string: ['left', 'right']\n  },\n  defaultGroup: {\n    string: string\n  },\n  sort: {\n    'boolean': bool\n  },\n  sampling: {\n    'boolean': bool\n  },\n  stack: {\n    'boolean': bool\n  },\n  graphHeight: {\n    string: string,\n    number: number\n  },\n  shaded: {\n    enabled: {\n      'boolean': bool\n    },\n    orientation: {\n      string: ['bottom', 'top', 'zero', 'group']\n    },\n    // top, bottom, zero, group\n    groupId: {\n      object: object\n    },\n    __type__: {\n      'boolean': bool,\n      object: object\n    }\n  },\n  style: {\n    string: ['line', 'bar', 'points']\n  },\n  // line, bar\n  barChart: {\n    width: {\n      number: number\n    },\n    minWidth: {\n      number: number\n    },\n    sideBySide: {\n      'boolean': bool\n    },\n    align: {\n      string: ['left', 'center', 'right']\n    },\n    __type__: {\n      object: object\n    }\n  },\n  interpolation: {\n    enabled: {\n      'boolean': bool\n    },\n    parametrization: {\n      string: ['centripetal', 'chordal', 'uniform']\n    },\n    // uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)\n    alpha: {\n      number: number\n    },\n    __type__: {\n      object: object,\n      'boolean': bool\n    }\n  },\n  drawPoints: {\n    enabled: {\n      'boolean': bool\n    },\n    onRender: {\n      'function': 'function'\n    },\n    size: {\n      number: number\n    },\n    style: {\n      string: ['square', 'circle']\n    },\n    // square, circle\n    __type__: {\n      object: object,\n      'boolean': bool,\n      'function': 'function'\n    }\n  },\n  dataAxis: {\n    showMinorLabels: {\n      'boolean': bool\n    },\n    showMajorLabels: {\n      'boolean': bool\n    },\n    showWeekScale: {\n      'boolean': bool\n    },\n    icons: {\n      'boolean': bool\n    },\n    width: {\n      string: string,\n      number: number\n    },\n    visible: {\n      'boolean': bool\n    },\n    alignZeros: {\n      'boolean': bool\n    },\n    left: {\n      range: {\n        min: {\n          number: number,\n          'undefined': 'undefined'\n        },\n        max: {\n          number: number,\n          'undefined': 'undefined'\n        },\n        __type__: {\n          object: object\n        }\n      },\n      format: {\n        'function': 'function'\n      },\n      title: {\n        text: {\n          string: string,\n          number: number,\n          'undefined': 'undefined'\n        },\n        style: {\n          string: string,\n          'undefined': 'undefined'\n        },\n        __type__: {\n          object: object\n        }\n      },\n      __type__: {\n        object: object\n      }\n    },\n    right: {\n      range: {\n        min: {\n          number: number,\n          'undefined': 'undefined'\n        },\n        max: {\n          number: number,\n          'undefined': 'undefined'\n        },\n        __type__: {\n          object: object\n        }\n      },\n      format: {\n        'function': 'function'\n      },\n      title: {\n        text: {\n          string: string,\n          number: number,\n          'undefined': 'undefined'\n        },\n        style: {\n          string: string,\n          'undefined': 'undefined'\n        },\n        __type__: {\n          object: object\n        }\n      },\n      __type__: {\n        object: object\n      }\n    },\n    __type__: {\n      object: object\n    }\n  },\n  legend: {\n    enabled: {\n      'boolean': bool\n    },\n    icons: {\n      'boolean': bool\n    },\n    left: {\n      visible: {\n        'boolean': bool\n      },\n      position: {\n        string: ['top-right', 'bottom-right', 'top-left', 'bottom-left']\n      },\n      __type__: {\n        object: object\n      }\n    },\n    right: {\n      visible: {\n        'boolean': bool\n      },\n      position: {\n        string: ['top-right', 'bottom-right', 'top-left', 'bottom-left']\n      },\n      __type__: {\n        object: object\n      }\n    },\n    __type__: {\n      object: object,\n      'boolean': bool\n    }\n  },\n  groups: {\n    visibility: {\n      any: any\n    },\n    __type__: {\n      object: object\n    }\n  },\n  autoResize: {\n    'boolean': bool\n  },\n  throttleRedraw: {\n    number: number\n  },\n  // TODO: DEPRICATED see https://github.com/almende/vis/issues/2511\n  clickToUse: {\n    'boolean': bool\n  },\n  end: {\n    number: number,\n    date: date,\n    string: string,\n    moment: moment\n  },\n  format: {\n    minorLabels: {\n      millisecond: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      second: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      minute: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      hour: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      weekday: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      day: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      week: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      month: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      quarter: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      year: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      __type__: {\n        object: object\n      }\n    },\n    majorLabels: {\n      millisecond: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      second: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      minute: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      hour: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      weekday: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      day: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      week: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      month: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      quarter: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      year: {\n        string: string,\n        'undefined': 'undefined'\n      },\n      __type__: {\n        object: object\n      }\n    },\n    __type__: {\n      object: object\n    }\n  },\n  moment: {\n    'function': 'function'\n  },\n  height: {\n    string: string,\n    number: number\n  },\n  hiddenDates: {\n    start: {\n      date: date,\n      number: number,\n      string: string,\n      moment: moment\n    },\n    end: {\n      date: date,\n      number: number,\n      string: string,\n      moment: moment\n    },\n    repeat: {\n      string: string\n    },\n    __type__: {\n      object: object,\n      array: array\n    }\n  },\n  locale: {\n    string: string\n  },\n  locales: {\n    __any__: {\n      any: any\n    },\n    __type__: {\n      object: object\n    }\n  },\n  max: {\n    date: date,\n    number: number,\n    string: string,\n    moment: moment\n  },\n  maxHeight: {\n    number: number,\n    string: string\n  },\n  maxMinorChars: {\n    number: number\n  },\n  min: {\n    date: date,\n    number: number,\n    string: string,\n    moment: moment\n  },\n  minHeight: {\n    number: number,\n    string: string\n  },\n  moveable: {\n    'boolean': bool\n  },\n  multiselect: {\n    'boolean': bool\n  },\n  orientation: {\n    string: string\n  },\n  showCurrentTime: {\n    'boolean': bool\n  },\n  showMajorLabels: {\n    'boolean': bool\n  },\n  showMinorLabels: {\n    'boolean': bool\n  },\n  showWeekScale: {\n    'boolean': bool\n  },\n  snap: {\n    'function': 'function',\n    'null': 'null'\n  },\n  start: {\n    date: date,\n    number: number,\n    string: string,\n    moment: moment\n  },\n  timeAxis: {\n    scale: {\n      string: string,\n      'undefined': 'undefined'\n    },\n    step: {\n      number: number,\n      'undefined': 'undefined'\n    },\n    __type__: {\n      object: object\n    }\n  },\n  width: {\n    string: string,\n    number: number\n  },\n  zoomable: {\n    'boolean': bool\n  },\n  zoomKey: {\n    string: ['ctrlKey', 'altKey', 'metaKey', '']\n  },\n  zoomMax: {\n    number: number\n  },\n  zoomMin: {\n    number: number\n  },\n  zIndex: {\n    number: number\n  },\n  __type__: {\n    object: object\n  }\n};\nvar configureOptions = {\n  global: {\n    alignCurrentTime: ['none', 'year', 'month', 'quarter', 'week', 'isoWeek', 'day', 'date', 'hour', 'minute', 'second'],\n    //yAxisOrientation: ['left','right'], // TDOO: enable as soon as Grahp2d doesn't crash when changing this on the fly\n    sort: true,\n    sampling: true,\n    stack: false,\n    shaded: {\n      enabled: false,\n      orientation: ['zero', 'top', 'bottom', 'group'] // zero, top, bottom\n    },\n\n    style: ['line', 'bar', 'points'],\n    // line, bar\n    barChart: {\n      width: [50, 5, 100, 5],\n      minWidth: [50, 5, 100, 5],\n      sideBySide: false,\n      align: ['left', 'center', 'right'] // left, center, right\n    },\n\n    interpolation: {\n      enabled: true,\n      parametrization: ['centripetal', 'chordal', 'uniform'] // uniform (alpha = 0.0), chordal (alpha = 1.0), centripetal (alpha = 0.5)\n    },\n\n    drawPoints: {\n      enabled: true,\n      size: [6, 2, 30, 1],\n      style: ['square', 'circle'] // square, circle\n    },\n\n    dataAxis: {\n      showMinorLabels: true,\n      showMajorLabels: true,\n      showWeekScale: false,\n      icons: false,\n      width: [40, 0, 200, 1],\n      visible: true,\n      alignZeros: true,\n      left: {\n        //range: {min:'undefined': 'undefined'ined,max:'undefined': 'undefined'ined},\n        //format: function (value) {return value;},\n        title: {\n          text: '',\n          style: ''\n        }\n      },\n      right: {\n        //range: {min:'undefined': 'undefined'ined,max:'undefined': 'undefined'ined},\n        //format: function (value) {return value;},\n        title: {\n          text: '',\n          style: ''\n        }\n      }\n    },\n    legend: {\n      enabled: false,\n      icons: true,\n      left: {\n        visible: true,\n        position: ['top-right', 'bottom-right', 'top-left', 'bottom-left'] // top/bottom - left,right\n      },\n\n      right: {\n        visible: true,\n        position: ['top-right', 'bottom-right', 'top-left', 'bottom-left'] // top/bottom - left,right\n      }\n    },\n\n    autoResize: true,\n    clickToUse: false,\n    end: '',\n    format: {\n      minorLabels: {\n        millisecond: 'SSS',\n        second: 's',\n        minute: 'HH:mm',\n        hour: 'HH:mm',\n        weekday: 'ddd D',\n        day: 'D',\n        week: 'w',\n        month: 'MMM',\n        quarter: '[Q]Q',\n        year: 'YYYY'\n      },\n      majorLabels: {\n        millisecond: 'HH:mm:ss',\n        second: 'D MMMM HH:mm',\n        minute: 'ddd D MMMM',\n        hour: 'ddd D MMMM',\n        weekday: 'MMMM YYYY',\n        day: 'MMMM YYYY',\n        week: 'MMMM YYYY',\n        month: 'YYYY',\n        quarter: 'YYYY',\n        year: ''\n      }\n    },\n    height: '',\n    locale: '',\n    max: '',\n    maxHeight: '',\n    maxMinorChars: [7, 0, 20, 1],\n    min: '',\n    minHeight: '',\n    moveable: true,\n    orientation: ['both', 'bottom', 'top'],\n    showCurrentTime: false,\n    showMajorLabels: true,\n    showMinorLabels: true,\n    showWeekScale: false,\n    start: '',\n    width: '100%',\n    zoomable: true,\n    zoomKey: ['ctrlKey', 'altKey', 'metaKey', ''],\n    zoomMax: [315360000000000, 10, 315360000000000, 1],\n    zoomMin: [10, 10, 315360000000000, 1],\n    zIndex: 0\n  }\n};\n\n/**\n * Create a timeline visualization\n * @param {HTMLElement} container\n * @param {vis.DataSet | Array} [items]\n * @param {vis.DataSet | Array | vis.DataView | Object} [groups]\n * @param {Object} [options]  See Graph2d.setOptions for the available options.\n * @constructor Graph2d\n * @extends Core\n */\nfunction Graph2d(container, items, groups, options) {\n  var _context, _context2, _context3, _context4, _context5, _context6, _context7;\n  // if the third element is options, the forth is groups (optionally);\n  if (!(_Array$isArray(groups) || isDataViewLike(groups)) && groups instanceof Object) {\n    var forthArgument = options;\n    options = groups;\n    groups = forthArgument;\n  }\n\n  // TODO: REMOVE THIS in the next MAJOR release\n  // see https://github.com/almende/vis/issues/2511\n  if (options && options.throttleRedraw) {\n    console.warn(\"Graph2d option \\\"throttleRedraw\\\" is DEPRICATED and no longer supported. It will be removed in the next MAJOR release.\");\n  }\n  var me = this;\n  this.defaultOptions = {\n    start: null,\n    end: null,\n    autoResize: true,\n    orientation: {\n      axis: 'bottom',\n      // axis orientation: 'bottom', 'top', or 'both'\n      item: 'bottom' // not relevant for Graph2d\n    },\n\n    moment: moment$4,\n    width: null,\n    height: null,\n    maxHeight: null,\n    minHeight: null\n  };\n  this.options = availableUtils.deepExtend({}, this.defaultOptions);\n\n  // Create the DOM, props, and emitter\n  this._create(container);\n\n  // all components listed here will be repainted automatically\n  this.components = [];\n  this.body = {\n    dom: this.dom,\n    domProps: this.props,\n    emitter: {\n      on: _bindInstanceProperty$1(_context = this.on).call(_context, this),\n      off: _bindInstanceProperty$1(_context2 = this.off).call(_context2, this),\n      emit: _bindInstanceProperty$1(_context3 = this.emit).call(_context3, this)\n    },\n    hiddenDates: [],\n    util: {\n      getScale: function getScale() {\n        return me.timeAxis.step.scale;\n      },\n      getStep: function getStep() {\n        return me.timeAxis.step.step;\n      },\n      toScreen: _bindInstanceProperty$1(_context4 = me._toScreen).call(_context4, me),\n      toGlobalScreen: _bindInstanceProperty$1(_context5 = me._toGlobalScreen).call(_context5, me),\n      // this refers to the root.width\n      toTime: _bindInstanceProperty$1(_context6 = me._toTime).call(_context6, me),\n      toGlobalTime: _bindInstanceProperty$1(_context7 = me._toGlobalTime).call(_context7, me)\n    }\n  };\n\n  // range\n  this.range = new Range(this.body);\n  this.components.push(this.range);\n  this.body.range = this.range;\n\n  // time axis\n  this.timeAxis = new TimeAxis(this.body);\n  this.components.push(this.timeAxis);\n  //this.body.util.snap = this.timeAxis.snap.bind(this.timeAxis);\n\n  // current time bar\n  this.currentTime = new CurrentTime(this.body);\n  this.components.push(this.currentTime);\n\n  // item set\n  this.linegraph = new LineGraph(this.body);\n  this.components.push(this.linegraph);\n  this.itemsData = null; // DataSet\n  this.groupsData = null; // DataSet\n\n  this.on('tap', function (event) {\n    me.emit('click', me.getEventProperties(event));\n  });\n  this.on('doubletap', function (event) {\n    me.emit('doubleClick', me.getEventProperties(event));\n  });\n  this.dom.root.oncontextmenu = function (event) {\n    me.emit('contextmenu', me.getEventProperties(event));\n  };\n\n  //Single time autoscale/fit\n  this.initialFitDone = false;\n  this.on('changed', function () {\n    if (me.itemsData == null) return;\n    if (!me.initialFitDone && !me.options.rollingMode) {\n      me.initialFitDone = true;\n      if (me.options.start != undefined || me.options.end != undefined) {\n        if (me.options.start == undefined || me.options.end == undefined) {\n          var range = me.getItemRange();\n        }\n        var start = me.options.start != undefined ? me.options.start : range.min;\n        var end = me.options.end != undefined ? me.options.end : range.max;\n        me.setWindow(start, end, {\n          animation: false\n        });\n      } else {\n        me.fit({\n          animation: false\n        });\n      }\n    }\n    if (!me.initialDrawDone && (me.initialRangeChangeDone || !me.options.start && !me.options.end || me.options.rollingMode)) {\n      me.initialDrawDone = true;\n      me.dom.root.style.visibility = 'visible';\n      me.dom.loadingScreen.parentNode.removeChild(me.dom.loadingScreen);\n      if (me.options.onInitialDrawComplete) {\n        _setTimeout(function () {\n          return me.options.onInitialDrawComplete();\n        }, 0);\n      }\n    }\n  });\n\n  // apply options\n  if (options) {\n    this.setOptions(options);\n  }\n\n  // IMPORTANT: THIS HAPPENS BEFORE SET ITEMS!\n  if (groups) {\n    this.setGroups(groups);\n  }\n\n  // create itemset\n  if (items) {\n    this.setItems(items);\n  }\n\n  // draw for the first time\n  this._redraw();\n}\n\n// Extend the functionality from Core\nGraph2d.prototype = new Core();\nGraph2d.prototype.setOptions = function (options) {\n  // validate options\n  var errorFound = Validator.validate(options, allOptions);\n  if (errorFound === true) {\n    console.log('%cErrors have been found in the supplied options object.', printStyle);\n  }\n  Core.prototype.setOptions.call(this, options);\n};\n\n/**\n * Set items\n * @param {vis.DataSet | Array | null} items\n */\nGraph2d.prototype.setItems = function (items) {\n  var initialLoad = this.itemsData == null;\n\n  // convert to type DataSet when needed\n  var newDataSet;\n  if (!items) {\n    newDataSet = null;\n  } else if (isDataViewLike(items)) {\n    newDataSet = typeCoerceDataSet(items);\n  } else {\n    // turn an array into a dataset\n    newDataSet = typeCoerceDataSet(new DataSet(items));\n  }\n\n  // set items\n  if (this.itemsData) {\n    // stop maintaining a coerced version of the old data set\n    this.itemsData.dispose();\n  }\n  this.itemsData = newDataSet;\n  this.linegraph && this.linegraph.setItems(newDataSet != null ? newDataSet.rawDS : null);\n  if (initialLoad) {\n    if (this.options.start != undefined || this.options.end != undefined) {\n      var start = this.options.start != undefined ? this.options.start : null;\n      var end = this.options.end != undefined ? this.options.end : null;\n      this.setWindow(start, end, {\n        animation: false\n      });\n    } else {\n      this.fit({\n        animation: false\n      });\n    }\n  }\n};\n\n/**\n * Set groups\n * @param {vis.DataSet | Array} groups\n */\nGraph2d.prototype.setGroups = function (groups) {\n  // convert to type DataSet when needed\n  var newDataSet;\n  if (!groups) {\n    newDataSet = null;\n  } else if (isDataViewLike(groups)) {\n    newDataSet = groups;\n  } else {\n    // turn an array into a dataset\n    newDataSet = new DataSet(groups);\n  }\n  this.groupsData = newDataSet;\n  this.linegraph.setGroups(newDataSet);\n};\n\n/**\n * Returns an object containing an SVG element with the icon of the group (size determined by iconWidth and iconHeight), the label of the group (content) and the yAxisOrientation of the group (left or right).\n * @param {vis.GraphGroup.id} groupId\n * @param {number} width\n * @param {number} height\n * @returns {{icon: SVGElement, label: string, orientation: string}|string}\n */\nGraph2d.prototype.getLegend = function (groupId, width, height) {\n  if (width === undefined) {\n    width = 15;\n  }\n  if (height === undefined) {\n    height = 15;\n  }\n  if (this.linegraph.groups[groupId] !== undefined) {\n    return this.linegraph.groups[groupId].getLegend(width, height);\n  } else {\n    return \"cannot find group:'\" + groupId + \"'\";\n  }\n};\n\n/**\n * This checks if the visible option of the supplied group (by ID) is true or false.\n * @param {vis.GraphGroup.id} groupId\n * @returns {boolean}\n */\nGraph2d.prototype.isGroupVisible = function (groupId) {\n  if (this.linegraph.groups[groupId] !== undefined) {\n    return this.linegraph.groups[groupId].visible && (this.linegraph.options.groups.visibility[groupId] === undefined || this.linegraph.options.groups.visibility[groupId] == true);\n  } else {\n    return false;\n  }\n};\n\n/**\n * Get the data range of the item set.\n * @returns {{min: Date, max: Date}} range  A range with a start and end Date.\n *                                          When no minimum is found, min==null\n *                                          When no maximum is found, max==null\n */\nGraph2d.prototype.getDataRange = function () {\n  var min = null;\n  var max = null;\n\n  // calculate min from start filed\n  for (var groupId in this.linegraph.groups) {\n    if (this.linegraph.groups.hasOwnProperty(groupId)) {\n      if (this.linegraph.groups[groupId].visible == true) {\n        for (var i = 0; i < this.linegraph.groups[groupId].itemsData.length; i++) {\n          var item = this.linegraph.groups[groupId].itemsData[i];\n          var value = availableUtils.convert(item.x, 'Date').valueOf();\n          min = min == null ? value : min > value ? value : min;\n          max = max == null ? value : max < value ? value : max;\n        }\n      }\n    }\n  }\n  return {\n    min: min != null ? new Date(min) : null,\n    max: max != null ? new Date(max) : null\n  };\n};\n\n/**\n * Generate Timeline related information from an event\n * @param {Event} event\n * @return {Object} An object with related information, like on which area\n *                  The event happened, whether clicked on an item, etc.\n */\nGraph2d.prototype.getEventProperties = function (event) {\n  var clientX = event.center ? event.center.x : event.clientX;\n  var clientY = event.center ? event.center.y : event.clientY;\n  var x = clientX - availableUtils.getAbsoluteLeft(this.dom.centerContainer);\n  var y = clientY - availableUtils.getAbsoluteTop(this.dom.centerContainer);\n  var time = this._toTime(x);\n  var customTime = CustomTime.customTimeFromTarget(event);\n  var element = availableUtils.getTarget(event);\n  var what = null;\n  if (availableUtils.hasParent(element, this.timeAxis.dom.foreground)) {\n    what = 'axis';\n  } else if (this.timeAxis2 && availableUtils.hasParent(element, this.timeAxis2.dom.foreground)) {\n    what = 'axis';\n  } else if (availableUtils.hasParent(element, this.linegraph.yAxisLeft.dom.frame)) {\n    what = 'data-axis';\n  } else if (availableUtils.hasParent(element, this.linegraph.yAxisRight.dom.frame)) {\n    what = 'data-axis';\n  } else if (availableUtils.hasParent(element, this.linegraph.legendLeft.dom.frame)) {\n    what = 'legend';\n  } else if (availableUtils.hasParent(element, this.linegraph.legendRight.dom.frame)) {\n    what = 'legend';\n  } else if (customTime != null) {\n    what = 'custom-time';\n  } else if (availableUtils.hasParent(element, this.currentTime.bar)) {\n    what = 'current-time';\n  } else if (availableUtils.hasParent(element, this.dom.center)) {\n    what = 'background';\n  }\n  var value = [];\n  var yAxisLeft = this.linegraph.yAxisLeft;\n  var yAxisRight = this.linegraph.yAxisRight;\n  if (!yAxisLeft.hidden && this.itemsData.length > 0) {\n    value.push(yAxisLeft.screenToValue(y));\n  }\n  if (!yAxisRight.hidden && this.itemsData.length > 0) {\n    value.push(yAxisRight.screenToValue(y));\n  }\n  return {\n    event: event,\n    customTime: customTime ? customTime.options.id : null,\n    what: what,\n    pageX: event.srcEvent ? event.srcEvent.pageX : event.pageX,\n    pageY: event.srcEvent ? event.srcEvent.pageY : event.pageY,\n    x: x,\n    y: y,\n    time: time,\n    value: value\n  };\n};\n\n/**\n * Load a configurator\n * @return {Object}\n * @private\n */\nGraph2d.prototype._createConfigurator = function () {\n  return new Configurator(this, this.dom.container, configureOptions);\n};\n\n// locales\n\n// TODO: This should probably be moved somewhere else to ensure that both builds\n// behave the same way.\nvar defaultLanguage = getNavigatorLanguage();\nmoment$4.locale(defaultLanguage);\nvar timeline = {\n  Core: Core,\n  DateUtil: DateUtil,\n  Range: Range,\n  stack: stack$1,\n  TimeStep: TimeStep,\n  components: {\n    items: {\n      Item: Item,\n      BackgroundItem: BackgroundItem,\n      BoxItem: BoxItem,\n      ClusterItem: ClusterItem,\n      PointItem: PointItem,\n      RangeItem: RangeItem\n    },\n    BackgroundGroup: BackgroundGroup,\n    Component: Component,\n    CurrentTime: CurrentTime,\n    CustomTime: CustomTime,\n    DataAxis: DataAxis,\n    DataScale: DataScale,\n    GraphGroup: GraphGroup,\n    Group: Group,\n    ItemSet: ItemSet,\n    Legend: Legend,\n    LineGraph: LineGraph,\n    TimeAxis: TimeAxis\n  }\n};\n\n\n//# sourceMappingURL=vis-timeline-graph2d.js.map\n\n\n//# sourceURL=webpack://keenthemes/./node_modules/vis-timeline/standalone/esm/vis-timeline-graph2d.js?");

/***/ }),

/***/ "./node_modules/vis-timeline/standalone/index.js":
/*!*******************************************************!*\
  !*** ./node_modules/vis-timeline/standalone/index.js ***!
  \*******************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   DOMutil: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.DOMutil),\n/* harmony export */   DataSet: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.DataSet),\n/* harmony export */   DataView: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.DataView),\n/* harmony export */   Graph2d: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.Graph2d),\n/* harmony export */   Hammer: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.Hammer),\n/* harmony export */   Queue: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.Queue),\n/* harmony export */   Timeline: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.Timeline),\n/* harmony export */   keycharm: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.keycharm),\n/* harmony export */   moment: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.moment),\n/* harmony export */   timeline: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.timeline),\n/* harmony export */   util: () => (/* reexport safe */ _esm__WEBPACK_IMPORTED_MODULE_0__.util)\n/* harmony export */ });\n/* harmony import */ var _esm__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./esm */ \"./node_modules/vis-timeline/standalone/esm/index.js\");\n\n\n\n//# sourceURL=webpack://keenthemes/./node_modules/vis-timeline/standalone/index.js?");

/***/ }),

/***/ "./webpack/plugins/custom/vis-timeline/vis-timeline.js":
/*!*************************************************************!*\
  !*** ./webpack/plugins/custom/vis-timeline/vis-timeline.js ***!
  \*************************************************************/
/***/ ((__unused_webpack_module, __unused_webpack_exports, __webpack_require__) => {

eval("// vis-timeline - An interactive visualization chart to visualize data in time: https://github.com/visjs/vis-timeline\n\nwindow.vis = __webpack_require__(/*! vis-timeline/standalone */ \"./node_modules/vis-timeline/standalone/index.js\");\nwindow.Handlebars = __webpack_require__(/*! handlebars */ \"./node_modules/handlebars/dist/handlebars.js\");\n\n__webpack_require__(/*! vis-timeline/dist/vis-timeline-graph2d.css */ \"./node_modules/vis-timeline/dist/vis-timeline-graph2d.css\");\n\n\n//# sourceURL=webpack://keenthemes/./webpack/plugins/custom/vis-timeline/vis-timeline.js?");

/***/ })

/******/ 	});
/************************************************************************/
/******/ 	// The module cache
/******/ 	var __webpack_module_cache__ = {};
/******/ 	
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/ 		// Check if module is in cache
/******/ 		var cachedModule = __webpack_module_cache__[moduleId];
/******/ 		if (cachedModule !== undefined) {
/******/ 			return cachedModule.exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = __webpack_module_cache__[moduleId] = {
/******/ 			// no module.id needed
/******/ 			// no module.loaded needed
/******/ 			exports: {}
/******/ 		};
/******/ 	
/******/ 		// Execute the module function
/******/ 		__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/ 	
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/ 	
/************************************************************************/
/******/ 	/* webpack/runtime/define property getters */
/******/ 	(() => {
/******/ 		// define getter functions for harmony exports
/******/ 		__webpack_require__.d = (exports, definition) => {
/******/ 			for(var key in definition) {
/******/ 				if(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {
/******/ 					Object.defineProperty(exports, key, { enumerable: true, get: definition[key] });
/******/ 				}
/******/ 			}
/******/ 		};
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/global */
/******/ 	(() => {
/******/ 		__webpack_require__.g = (function() {
/******/ 			if (typeof globalThis === 'object') return globalThis;
/******/ 			try {
/******/ 				return this || new Function('return this')();
/******/ 			} catch (e) {
/******/ 				if (typeof window === 'object') return window;
/******/ 			}
/******/ 		})();
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/hasOwnProperty shorthand */
/******/ 	(() => {
/******/ 		__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))
/******/ 	})();
/******/ 	
/******/ 	/* webpack/runtime/make namespace object */
/******/ 	(() => {
/******/ 		// define __esModule on exports
/******/ 		__webpack_require__.r = (exports) => {
/******/ 			if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 				Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 			}
/******/ 			Object.defineProperty(exports, '__esModule', { value: true });
/******/ 		};
/******/ 	})();
/******/ 	
/************************************************************************/
/******/ 	
/******/ 	// startup
/******/ 	// Load entry module and return exports
/******/ 	// This entry module can't be inlined because the eval devtool is used.
/******/ 	var __webpack_exports__ = __webpack_require__("./webpack/plugins/custom/vis-timeline/vis-timeline.js");
/******/ 	
/******/ })()
;